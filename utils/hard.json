[
  {
    "id": 0,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Legend has a distinctive marking.",
    "reasoning": "fact1: Legend does not have an athletic build.\nfact2: Legend is not competitive.\nrule: If Legend either has strong muscles or has an athletic build, then he is competitive.\nconclusion: Legend does not have strong muscles.\n\nfact1: Legend is well-trained.\nrule: Legend is either well-trained or has a racing background, but not both.\nconclusion: Legend does not have a racing background.\n\nfact1: Legend has a good temperament.\nrule: Legend is either fast or has a good temperament, but not both.\nconclusion: Legend is not fast.\n\nfact1: Legend does not have strong muscles.\nrule: All large breed horses have strong muscles.\nconclusion: Legend is not a large breed.\n\nfact1: Legend is not a large breed.\nfact2: Legend does not have a racing background.\nrule: If Legend has a unique color, then he is either a large breed or has a racing background, but not both.\nconclusion: Legend does not have a unique color.\n\nfact1: Legend is not fast.\nrule: Legend is either a champion or fast.\nconclusion: Legend is a champion.\n\nfact1: Legend is a champion.\nfact2: Legend does not have a unique color.\nrule: If Legend is a champion, then he either has a unique color or has a distinctive marking.\nconclusion: Legend has a distinctive marking.\n\nfact1: Legend has a distinctive marking.\nrule: Either Legend has a distinctive marking or he has no distinctive marking, but not both.\nconclusion: Legend has a distinctive marking.\n\nTherefore, it is true that Legend has a distinctive marking. The correct option is: A.",
    "context": "Legend is not competitive. Either Legend has a distinctive marking or he has no distinctive marking, but not both. Loyal is well-trained. Legend is well-trained. If Legend either has strong muscles or has an athletic build, then he is competitive. Either Araya has a distinctive marking or he has no distinctive marking, but not both. If Lucian either has strong muscles or has an athletic build, then he is competitive. If Legend has strong hooves and a powerful gait, then he can be a champion. Legend either eats nutritious food or has strong muscles. All large breed horses have strong muscles. If Legend has powerful strides or is highly energetic, then he has a racing background. Araya has a good temperament. Loyal is either fast or has a good temperament, but not both. Loyal does not have an athletic build. Legend is either well-trained or has a racing background, but not both. If Legend is a champion, then he either has a unique color or has a distinctive marking. Legend has a good temperament. Legend does not have an athletic build. If Legend has a unique color, then he is either a large breed or has a racing background, but not both. Legend is either a champion or fast. Legend either has noble bloodline or a unique color. Legend is either fast or has a good temperament, but not both.",
    "nl2fol": {
      "Legend is not competitive.": "¬is_competitive(Legend)",
      "Either Legend has a distinctive marking or he has no distinctive marking, but not both.": "has_distinctive_marking(Legend) ⊕ has_no_distinctive_marking(Legend)",
      "Loyal is well-trained.": "well_trained(Loyal)",
      "Legend is well-trained.": "is_well_trained(Legend)",
      "If Legend either has strong muscles or has an athletic build, then he is competitive.": "(has_strong_muscles(Legend) ⊕ has_athletic_build(Legend)) → is_competitive(Legend)",
      "Either Araya has a distinctive marking or he has no distinctive marking, but not both.": "has_distinctive_marking(Araya) ⊕ has_no_distinctive_marking(Araya)",
      "If Lucian either has strong muscles or has an athletic build, then he is competitive.": "(has_strong_muscles(Lucian) ⊕ has_athletic_build(Lucian)) → is_competitive(Lucian)",
      "If Legend has strong hooves and a powerful gait, then he can be a champion.": "(has_strong_hooves(Legend) ∧ has_powerful_gait(Legend)) → is_champion(Legend)",
      "Legend either eats nutritious food or has strong muscles.": "eats_nutritious_food(Legend) ∨ has_strong_muscles(Legend)",
      "All large breed horses have strong muscles.": "∀x (is_large_breed(x) → has_strong_muscles(x))",
      "If Legend has powerful strides or is highly energetic, then he has a racing background.": "(has_powerful_strides(Legend) ∨ is_highly_energetic(Legend)) → has_racing_background(Legend)",
      "Araya has a good temperament.": "has_good_temperament(Araya)",
      "Loyal is either fast or has a good temperament, but not both.": "has_good_temperament(Loyal) ⊕ is_fast(Loyal)",
      "Loyal does not have an athletic build.": "¬has_athletic_build(Loyal)",
      "Legend is either well-trained or has a racing background, but not both.": "is_well_trained(Legend) ⊕ has_racing_background(Legend)",
      "If Legend is a champion, then he either has a unique color or has a distinctive marking.": "is_champion(Legend) → (has_unique_color(Legend) ∨ has_distinctive_marking(Legend))",
      "Legend has a good temperament.": "has_good_temperament(Legend)",
      "Legend does not have an athletic build.": "¬has_athletic_build(Legend)",
      "If Legend has a unique color, then he is either a large breed or has a racing background, but not both.": "has_unique_color(Legend) → (is_large_breed(Legend) ⊕ has_racing_background(Legend))",
      "Legend is either a champion or fast.": "is_champion(Legend) ∨ is_fast(Legend)",
      "Legend either has noble bloodline or a unique color.": "has_noble_bloodline(Legend) ∨ has_unique_color(Legend)",
      "Legend is either fast or has a good temperament, but not both.": "has_good_temperament(Legend) ⊕ is_fast(Legend)"
    },
    "conclusion_fol": "¬has_no_distinctive_marking(Legend)"
  },
  {
    "id": 1,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jace enjoys life, then he either inspires others or lives a fulfilling life, but not both.",
    "reasoning": "fact1: Jace is a good listener.\nfact2: Jace asks meaningful questions.\nrule: If Jace shares stories, then he is either a good listener or asks meaningful questions (but not both).\nconclusion: Jace does not share stories.\n\nfact1: Jace does not try new things.\nfact2: Jace does not love learning.\nrule: If Jace appreciates nature, then he tries new things and loves learning.\nconclusion: Jace does not appreciate nature.\n\nfact1: Jace does not have strong opinions.\nrule: If Jace has good vibes, then he does not have strong opinions, and if Jace has strong opinions, then he does not have good vibes.\nconclusion: Jace has good vibes.\n\nfact1: Jace does not value experiences.\nfact2: Jace does not live in the present.\nrule: If someone either enjoys moments or values experiences, then they live in the present.\nconclusion: Jace does not enjoy moments.\n\nfact1: Jace has good vibes.\nfact2: Jace does not attract like-minded people.\nrule: Anyone who has good vibes and spreads positivity will attract like-minded people.\nconclusion: Jace does not spread positivity.\n\nfact1: Jace does not appreciate nature.\nfact2: Jace does not enjoy moments.\nrule: If Jace either appreciates nature or finds inner peace (but not both), then he enjoys moments.\nconclusion: Jace does not find inner peace.\n\nfact1: Jace pursues his passion.\nfact2: Jace grows personally.\nrule: If Jace pursues his passion, then he either grows personally or lives a fulfilling life, but not both.\nconclusion: Jace does not live a fulfilling life.\n\nfact1: Jace does not share stories.\nfact2: Jace does not spread positivity.\nrule: If Jace either shares stories or inspires others (but not both), then he spreads positivity.\nconclusion: Jace does not inspire others.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Jace enjoys life, then he either inspires others or lives a fulfilling life, but not both. The correct option is: C.",
    "context": "Jace asks meaningful questions. If Jace has good vibes, then he does not have strong opinions, and if Jace has strong opinions, then he does not have good vibes. Anyone who values serenity will appreciate nature. Jace grows personally. If Jace either appreciates nature or finds inner peace (but not both), then he enjoys moments. If someone smiles frequently, then they spread positivity. If Adele shares stories, then he is either a good listener or asks meaningful questions (but not both). Jace does not have strong opinions. If Adele either shares stories or inspires others (but not both), then he spreads positivity. Dimples pursues his passion. Adele grows personally. Jace does not value experiences. If someone either enjoys moments or values experiences, then they live in the present. Jace pursues his passion. If Jace shares stories, then he is either a good listener or asks meaningful questions (but not both). If Jace either cultivates friendships or pursues happiness (but not both), then he is likely to live a fulfilling life. If Jace pursues his passion, then he either grows personally or lives a fulfilling life, but not both. If Dimples has good vibes, then he does not have strong opinions, and if Dimples has strong opinions, then he does not have good vibes. Jace does not love learning. Jace does not live in the present. Cherub is a good listener. Cherub makes meaningful connections. Dimples does not live in the present. Jace pursues happiness or finds inner peace. Dimples does not attract like-minded people. If Jace either shares stories or inspires others (but not both), then he spreads positivity. Anyone who captures beauty or documents experiences can share stories. Cherub does not have strong opinions. Dimples does not love learning. Anyone who has good vibes and spreads positivity will attract like-minded people. Jace does not try new things. If Jace appreciates nature, then he tries new things and loves learning. Jace is a good listener. If Cherub either appreciates nature or finds inner peace (but not both), then he enjoys moments. Jace does not attract like-minded people.",
    "nl2fol": {
      "Jace asks meaningful questions.": "asks_meaningful_questions(Jace)",
      "If Jace has good vibes, then he does not have strong opinions, and if Jace has strong opinions, then he does not have good vibes.": "has_good_vibes(Jace) ⊕ has_strong_opinions(Jace)",
      "Anyone who values serenity will appreciate nature.": "∀x (values_serenity(x) → appreciate_nature(x))",
      "Jace grows personally.": "grow_personally(Jace)",
      "If Jace either appreciates nature or finds inner peace (but not both), then he enjoys moments.": "(appreciate_nature(Jace) ⊕ find_inner_peace(Jace)) → enjoy_moments(Jace)",
      "If someone smiles frequently, then they spread positivity.": "∀x (smile_frequently(x) → spread_positivity(x))",
      "If Adele shares stories, then he is either a good listener or asks meaningful questions (but not both).": "share_stories(Adele) → (is_a_good_listener(Adele) ⊕ asks_meaningful_questions(Adele))",
      "Jace does not have strong opinions.": "¬has_strong_opinions(Jace)",
      "If Adele either shares stories or inspires others (but not both), then he spreads positivity.": "(share_stories(Adele) ⊕ inspire_others(Adele)) → spread_positivity(Adele)",
      "Dimples pursues his passion.": "pursue_passion(Dimples)",
      "Adele grows personally.": "grow_personally(Adele)",
      "Jace does not value experiences.": "¬value_experiences(Jace)",
      "If someone either enjoys moments or values experiences, then they live in the present.": "∀x ((enjoy_moments(x) ⊕ value_experiences(x)) → lives_in_the_present(x))",
      "Jace pursues his passion.": "pursue_passion(Jace)",
      "If Jace shares stories, then he is either a good listener or asks meaningful questions (but not both).": "share_stories(Jace) → (is_a_good_listener(Jace) ⊕ asks_meaningful_questions(Jace))",
      "If Jace either cultivates friendships or pursues happiness (but not both), then he is likely to live a fulfilling life.": "(cultivate_friendships(Jace) ⊕ pursue_happiness(Jace)) → live_fulfilling_life(Jace)",
      "If Jace pursues his passion, then he either grows personally or lives a fulfilling life, but not both.": "pursue_passion(Jace) → (grow_personally(Jace) ⊕ live_fulfilling_life(Jace))",
      "If Dimples has good vibes, then he does not have strong opinions, and if Dimples has strong opinions, then he does not have good vibes.": "has_good_vibes(Dimples) ⊕ has_strong_opinions(Dimples)",
      "Jace does not love learning.": "¬love_learning(Jace)",
      "Jace does not live in the present.": "¬lives_in_the_present(Jace)",
      "Cherub is a good listener.": "listens_to_others(Cherub)",
      "Cherub makes meaningful connections.": "make_meaningful_connections(Cherub)",
      "Dimples does not live in the present.": "¬lives_in_the_present(Dimples)",
      "Jace pursues happiness or finds inner peace.": "pursue_happiness(Jace) ∨ find_inner_peace(Jace)",
      "Dimples does not attract like-minded people.": "¬attracts_like_minded_people(Dimples)",
      "If Jace either shares stories or inspires others (but not both), then he spreads positivity.": "(share_stories(Jace) ⊕ inspire_others(Jace)) → spread_positivity(Jace)",
      "Anyone who captures beauty or documents experiences can share stories.": "∀x ((capture_beauty(x) ∨ document_experiences(x)) → share_stories(x))",
      "Cherub does not have strong opinions.": "¬has_strong_opinions(Cherub)",
      "Dimples does not love learning.": "¬love_learning(Dimples)",
      "Anyone who has good vibes and spreads positivity will attract like-minded people.": "∀x ((has_good_vibes(x) ∧ spread_positivity(x)) → attracts_like_minded_people(x))",
      "Jace does not try new things.": "¬try_new_things(Jace)",
      "If Jace appreciates nature, then he tries new things and loves learning.": "appreciate_nature(Jace) → (try_new_things(Jace) ∧ love_learning(Jace))",
      "Jace is a good listener.": "is_a_good_listener(Jace)",
      "If Cherub either appreciates nature or finds inner peace (but not both), then he enjoys moments.": "(appreciate_nature(Cherub) ⊕ find_inner_peace(Cherub)) → enjoy_moments(Cherub)",
      "Jace does not attract like-minded people.": "¬attracts_like_minded_people(Jace)"
    },
    "conclusion_fol": "enjoy_life(Jace) → (inspire_others(Jace) ⊕ live_fulfilling_life(Jace))"
  },
  {
    "id": 2,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Izabella does not study winemaking.",
    "reasoning": "fact1: Izabella does not attend industry events.\nfact2: Izabella does not advance her career.\nrule: Anyone who builds a strong network or attends industry events can advance their career.\nconclusion: Izabella does not build a strong network.\n\nfact1: Izabella does not pursue excellence.\nrule: Izabella either pursues excellence or stays humble.\nconclusion: Izabella stays humble.\n\nfact1: Izabella works in a family business.\nfact2: Izabella does not build a strong network.\nrule: If Izabella works in a family business, then she either builds a strong network or develops unique skills (but not both).\nconclusion: Izabella develops unique skills.\n\nfact1: Izabella stays humble.\nrule: Izabella either earns recognition or stays humble, but not both.\nconclusion: Izabella does not earn recognition.\n\nfact1: Izabella does not earn recognition.\nrule: If Izabella commits to quality, then she will earn recognition.\nconclusion: Izabella does not commit to quality.\n\nfact1: Izabella does not commit to quality.\nfact2: Izabella does not respect tradition.\nrule: Anyone who creates acclaimed wines either commits to quality or respects tradition (or both).\nconclusion: Izabella cannot create acclaimed wines.\n\nfact1: Izabella cannot create acclaimed wines.\nrule: If Izabella studies winemaking or has viticulture experience, then she can create acclaimed wines.\nconclusion: Izabella does not study winemaking.\n\nTherefore, it is true that Izabella does not study winemaking. The correct option is: A.",
    "context": "Anyone who grows up in vineyards or learns from masters can develop unique skills. Anyone who creates acclaimed wines either commits to quality or respects tradition (or both). If Izabella studies winemaking or has viticulture experience, then she can create acclaimed wines. Izabella does not advance her career. If Izabella works in a family business, then she either builds a strong network or develops unique skills (but not both). If Izabella commits to quality, then she will earn recognition. Emilio either pursues excellence or stays humble. If Emilio commits to quality, then she will earn recognition. Izabella does not pursue excellence. If Zayd works in a family business, then she either builds a strong network or develops unique skills (but not both). Izabella does not attend industry events. Emilio either earns recognition or stays humble, but not both. If Izabella is innovative, then she values feedback and earns recognition. Fabian works in a family business. Izabella works in a family business. Izabella either pursues excellence or stays humble. Anyone who builds a strong network or attends industry events can advance their career. Izabella does not respect tradition. Izabella either earns recognition or stays humble, but not both. Emilio does not attend industry events. Zayd does not pursue excellence. Emilio does not respect tradition.",
    "nl2fol": {
      "Anyone who grows up in vineyards or learns from masters can develop unique skills.": "∀x ((grow_up_in_vineyards(x) ∨ learn_from_masters(x)) → develop_unique_skills(x))",
      "Anyone who creates acclaimed wines either commits to quality or respects tradition (or both).": "∀x (create_acclaimed_wines(x) → (commit_to_quality(x) ∨ respect_tradition(x)))",
      "If Izabella studies winemaking or has viticulture experience, then she can create acclaimed wines.": "(study_winemaking(Izabella) ∨ have_viticulture_experience(Izabella)) → create_acclaimed_wines(Izabella)",
      "Izabella does not advance her career.": "¬advance_career(Izabella)",
      "If Izabella works in a family business, then she either builds a strong network or develops unique skills (but not both).": "work_in_family_business(Izabella) → (build_strong_network(Izabella) ⊕ develop_unique_skills(Izabella))",
      "If Izabella commits to quality, then she will earn recognition.": "commit_to_quality(Izabella) → earn_recognition(Izabella)",
      "Emilio either pursues excellence or stays humble.": "pursue_excellence(Emilio) ∨ stay_humble(Emilio)",
      "If Emilio commits to quality, then she will earn recognition.": "commit_to_quality(Emilio) → earn_recognition(Emilio)",
      "Izabella does not pursue excellence.": "¬pursue_excellence(Izabella)",
      "If Zayd works in a family business, then she either builds a strong network or develops unique skills (but not both).": "work_in_family_business(Zayd) → (build_strong_network(Zayd) ⊕ develop_unique_skills(Zayd))",
      "Izabella does not attend industry events.": "¬attend_industry_events(Izabella)",
      "Emilio either earns recognition or stays humble, but not both.": "earn_recognition(Emilio) ⊕ stay_humble(Emilio)",
      "If Izabella is innovative, then she values feedback and earns recognition.": "innovative(Izabella) → (value_feedback(Izabella) ∧ earn_recognition(Izabella))",
      "Fabian works in a family business.": "work_in_family_business(Fabian)",
      "Izabella works in a family business.": "work_in_family_business(Izabella)",
      "Izabella either pursues excellence or stays humble.": "pursue_excellence(Izabella) ∨ stay_humble(Izabella)",
      "Anyone who builds a strong network or attends industry events can advance their career.": "∀x ((build_strong_network(x) ∨ attend_industry_events(x)) → advance_career(x))",
      "Izabella does not respect tradition.": "¬respect_tradition(Izabella)",
      "Izabella either earns recognition or stays humble, but not both.": "earn_recognition(Izabella) ⊕ stay_humble(Izabella)",
      "Emilio does not attend industry events.": "¬attend_industry_events(Emilio)",
      "Zayd does not pursue excellence.": "¬pursue_excellence(Zayd)",
      "Emilio does not respect tradition.": "¬respects_tradition(Emilio)"
    },
    "conclusion_fol": "¬study_winemaking(Izabella)"
  },
  {
    "id": 3,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oaklyn does not win competitions.",
    "reasoning": "fact1: Oaklyn has discipline.\nfact2: Oaklyn is not agile.\nrule: If Oaklyn has discipline, then she is either agile or well-trained, but not both.\nconclusion: Oaklyn is well-trained.\n\nfact1: Oaklyn has a gray coat.\nfact2: Oaklyn does not have refined features.\nrule: If Oaklyn has a gray coat, then she either has refined features or possesses a calm temperament, but not both.\nconclusion: Oaklyn possesses a calm temperament.\n\nfact1: Oaklyn does not grow tall.\nfact2: Oaklyn builds muscle.\nrule: If Oaklyn either grows tall or builds muscle (but not both), then she matures slowly.\nconclusion: Oaklyn matures slowly.\n\nfact1: Oaklyn possesses a calm temperament.\nfact2: Oaklyn does not display grace.\nrule: Every horse that possesses a calm temperament either has elegance or displays grace (or both).\nconclusion: Oaklyn has elegance.\n\nfact1: Oaklyn has elegance.\nrule: If Oaklyn has elegance, then she inspires others and forms strong bonds with her rider.\nconclusion: Oaklyn inspires others.\n\nfact1: Oaklyn matures slowly.\nrule: All horses that mature slowly have endurance and develop strength.\nconclusion: Oaklyn has endurance.\n\nfact1: Oaklyn is well-trained.\nfact2: Oaklyn has endurance.\nrule: All well-trained horses have endurance and are athletic.\nconclusion: Oaklyn is athletic.\n\nfact1: Oaklyn is athletic.\nfact2: Oaklyn inspires others.\nrule: If Oaklyn is athletic, then she can either win competitions or inspire others, but not both.\nconclusion: Oaklyn does not win competitions.\n\nTherefore, it is true that Oaklyn does not win competitions. The correct option is: A.",
    "context": "If Oaklyn has elegance, then she inspires others and forms strong bonds with her rider. All well-trained horses have endurance and are athletic. Oaklyn builds muscle. Oaklyn has a gray coat. Makenna builds muscle. If Oaklyn has a gray coat, then she either has refined features or possesses a calm temperament, but not both. All horses that mature slowly have endurance and develop strength. If Oaklyn is athletic, then she can either win competitions or inspire others, but not both. If Oaklyn either gallops freely or shows elegance (but not both), then she inspires others. All horses with refined movement have elegance. Oaklyn is not agile. If Oaklyn has discipline, then she is either agile or well-trained, but not both. Oaklyn does not have refined features. Oaklyn grows strong or matures slowly. Every horse that possesses a calm temperament either has elegance or displays grace (or both). If Oaklyn either grows tall or builds muscle (but not both), then she matures slowly. Oaklyn does not grow tall. Oaklyn has discipline. Oaklyn does not display grace.",
    "nl2fol": {
      "If Oaklyn has elegance, then she inspires others and forms strong bonds with her rider.": "has_elegance(Oaklyn) → (inspire_others(Oaklyn) ∧ form_bonds(Oaklyn))",
      "All well-trained horses have endurance and are athletic.": "∀x (well_trained(x) → (have_endurance(x) ∧ athletic(x)))",
      "Oaklyn builds muscle.": "build_muscle(Oaklyn)",
      "Oaklyn has a gray coat.": "has_gray_coat(Oaklyn)",
      "Makenna builds muscle.": "build_muscle(Makenna)",
      "If Oaklyn has a gray coat, then she either has refined features or possesses a calm temperament, but not both.": "has_gray_coat(Oaklyn) → (has_refined_features(Oaklyn) ⊕ possess_calm_temper(Oaklyn))",
      "All horses that mature slowly have endurance and develop strength.": "∀x (mature_slowly(x) → (have_endurance(x) ∧ develop_strength(x)))",
      "If Oaklyn is athletic, then she can either win competitions or inspire others, but not both.": "athletic(Oaklyn) → (win_competitions(Oaklyn) ⊕ inspire_others(Oaklyn))",
      "If Oaklyn either gallops freely or shows elegance (but not both), then she inspires others.": "(gallop_freely(Oaklyn) ⊕ show_elegance(Oaklyn)) → inspire_others(Oaklyn)",
      "All horses with refined movement have elegance.": "∀x (has_refined_movement(x) → has_elegance(x))",
      "Oaklyn is not agile.": "¬be_agile(Oaklyn)",
      "If Oaklyn has discipline, then she is either agile or well-trained, but not both.": "have_discipline(Oaklyn) → (be_agile(Oaklyn) ⊕ well_trained(Oaklyn))",
      "Oaklyn does not have refined features.": "¬has_refined_features(Oaklyn)",
      "Oaklyn grows strong or matures slowly.": "grow_strong(Oaklyn) ∨ mature_slowly(Oaklyn)",
      "Every horse that possesses a calm temperament either has elegance or displays grace (or both).": "∀x (possess_calm_temper(x) → (has_elegance(x) ∨ display_grace(x)))",
      "If Oaklyn either grows tall or builds muscle (but not both), then she matures slowly.": "(grow_tall(Oaklyn) ⊕ build_muscle(Oaklyn)) → mature_slowly(Oaklyn)",
      "Oaklyn does not grow tall.": "¬grow_tall(Oaklyn)",
      "Oaklyn has discipline.": "have_discipline(Oaklyn)",
      "Oaklyn does not display grace.": "¬display_grace(Oaklyn)"
    },
    "conclusion_fol": "¬win_competitions(Oaklyn)"
  },
  {
    "id": 4,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Landen contributes to caiman conservation.",
    "reasoning": "fact1: Landen has a PhD in biology.\nfact2: Landen has experience with wildlife rescue.\nrule: If Landen has a PhD in biology, then he either documents animal behavior or has experience with wildlife rescue, but not both.\nconclusion: Landen does not document animal behavior.\n\nfact1: Landen does not document animal behavior.\nrule: Landen, as a wildlife explorer, either documents animal behavior or has a passion for reptiles, but not necessarily both.\nconclusion: Landen has a passion for reptiles.\n\nfact1: Landen does not work with local communities.\nrule: Landen either works with local communities or ventures into remote locations, but not both.\nconclusion: Landen ventures into remote locations.\n\nfact1: Landen ventures into remote locations.\nrule: Landen either ventures into remote locations or earns global recognition, but not both.\nconclusion: Landen does not earn global recognition.\n\nfact1: Landen has a passion for reptiles.\nrule: If Landen has a passion for reptiles, then he will study caimans.\nconclusion: Landen studies caimans.\n\nfact1: Landen protects endangered species.\nfact2: Landen does not earn global recognition.\nrule: If Landen protects endangered species, then he can either gain the respect of the indigenous community or earn global recognition, but not both.\nconclusion: Landen gains the respect of the indigenous community.\n\nfact1: Landen studies caimans.\nfact2: Landen gains the respect of the indigenous community.\nrule: If Landen studies caimans, then he can either gain the respect of the indigenous community or contribute to caiman conservation, but not both.\nconclusion: Landen does not contribute to caiman conservation.\n\nTherefore, it is false that Landen contributes to caiman conservation. The correct option is: B.",
    "context": "Dayana has a PhD in biology. If Landen has a passion for reptiles, then he will study caimans. Landen protects endangered species. Barrett either works with local communities or ventures into remote locations, but not both. Landen does not work with local communities. Vihaan either ventures into remote locations or earns global recognition, but not both. Landen either works with local communities or ventures into remote locations, but not both. Landen has experience with wildlife rescue. If Dayana has a PhD in biology, then he either documents animal behavior or has experience with wildlife rescue, but not both. Landen either ventures into remote locations or earns global recognition, but not both. Landen has a PhD in biology. If Landen has a PhD in biology, then he either documents animal behavior or has experience with wildlife rescue, but not both. Barrett protects endangered species. Anyone who discovers new species and publishes research papers can earn global recognition. If Landen has field experience, then he either ventures into remote locations or specializes in reptile biology, but not both. If Landen studies caimans, then he can either gain the respect of the indigenous community or contribute to caiman conservation, but not both. Landen, as a wildlife explorer, either documents animal behavior or has a passion for reptiles, but not necessarily both. If Landen protects endangered species, then he can either gain the respect of the indigenous community or earn global recognition, but not both. If Landen loves animals, then he has a passion for reptiles.",
    "nl2fol": {
      "Dayana has a PhD in biology.": "has_phd_in_biology(Dayana)",
      "If Landen has a passion for reptiles, then he will study caimans.": "passion_for_reptiles(Landen) → study_caimans(Landen)",
      "Landen protects endangered species.": "protect_endangered_species(Landen)",
      "Barrett either works with local communities or ventures into remote locations, but not both.": "work_with_local_communities(Barrett) ⊕ venture_into_remote_locations(Barrett)",
      "Landen does not work with local communities.": "¬work_with_local_communities(Landen)",
      "Vihaan either ventures into remote locations or earns global recognition, but not both.": "venture_into_remote_locations(Vihaan) ⊕ earn_global_recognition(Vihaan)",
      "Landen either works with local communities or ventures into remote locations, but not both.": "work_with_local_communities(Landen) ⊕ venture_into_remote_locations(Landen)",
      "Landen has experience with wildlife rescue.": "has_experience_with_wildlife_rescue(Landen)",
      "If Dayana has a PhD in biology, then he either documents animal behavior or has experience with wildlife rescue, but not both.": "has_phd_in_biology(Dayana) → (document_animal_behavior(Dayana) ⊕ has_experience_with_wildlife_rescue(Dayana))",
      "Landen either ventures into remote locations or earns global recognition, but not both.": "venture_into_remote_locations(Landen) ⊕ earn_global_recognition(Landen)",
      "Landen has a PhD in biology.": "has_phd_in_biology(Landen)",
      "If Landen has a PhD in biology, then he either documents animal behavior or has experience with wildlife rescue, but not both.": "has_phd_in_biology(Landen) → (document_animal_behavior(Landen) ⊕ has_experience_with_wildlife_rescue(Landen))",
      "Barrett protects endangered species.": "protects_endangered_species(Barrett)",
      "Anyone who discovers new species and publishes research papers can earn global recognition.": "∀x ((discovers_new_species(x) ∧ publishes_research_papers(x)) → earn_global_recognition(x))",
      "If Landen has field experience, then he either ventures into remote locations or specializes in reptile biology, but not both.": "has_field_experience(Landen) → (venture_into_remote_locations(Landen) ⊕ specialize_in_reptile_biology(Landen))",
      "If Landen studies caimans, then he can either gain the respect of the indigenous community or contribute to caiman conservation, but not both.": "study_caimans(Landen) → (gain_indigenous_respect(Landen) ⊕ contribute_to_conservation(Landen))",
      "Landen, as a wildlife explorer, either documents animal behavior or has a passion for reptiles, but not necessarily both.": "document_animal_behavior(Landen) ⊕ passion_for_reptiles(Landen)",
      "If Landen protects endangered species, then he can either gain the respect of the indigenous community or earn global recognition, but not both.": "protect_endangered_species(Landen) → (earn_global_recognition(Landen) ⊕ gain_indigenous_respect(Landen))",
      "If Landen loves animals, then he has a passion for reptiles.": "love_animals(Landen) → passion_for_reptiles(Landen)"
    },
    "conclusion_fol": "contribute_to_conservation(Landen)"
  },
  {
    "id": 5,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lennon does not pollinate flowers.",
    "reasoning": "fact1: Lennon does not avoid predators.\nfact2: Lennon does not locate food.\nrule: Any insect that finds shelter either avoids predators or locates food (or both).\nconclusion: Lennon does not find shelter.\n\nfact1: Lennon does not find shelter.\nrule: Lennon finds shelter or migrates seasonally.\nconclusion: Lennon migrates seasonally.\n\nfact1: Lennon has feathers.\nrule: If Lennon has feathers, then he spreads seeds and flies efficiently.\nconclusion: Lennon spreads seeds.\n\nfact1: Lennon spreads seeds.\nrule: Lennon either collects nectar or spreads seeds, but not both.\nconclusion: Lennon does not collect nectar.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Lennon does not pollinate flowers. The correct option is: C.",
    "context": "Lennon has feathers. If Lennon either eats pollen or sips sap (but not both), then he collects nectar. Lennon does not locate food. Lennon does not avoid predators. Any insect that finds shelter either avoids predators or locates food (or both). If Lennon has feathers, then he spreads seeds and flies efficiently. If Lennon hibernates during winter, then he migrates seasonally. Louisa does not avoid predators. Lennon finds shelter or migrates seasonally. If Karim has feathers, then he spreads seeds and flies efficiently. Lennon either collects nectar or spreads seeds, but not both.",
    "nl2fol": {
      "Lennon has feathers.": "have_feathers(Lennon)",
      "If Lennon either eats pollen or sips sap (but not both), then he collects nectar.": "(eat_pollen(Lennon) ⊕ sip_sap(Lennon)) → collect_nectar(Lennon)",
      "Lennon does not locate food.": "¬locate_food(Lennon)",
      "Lennon does not avoid predators.": "¬avoid_predators(Lennon)",
      "Any insect that finds shelter either avoids predators or locates food (or both).": "∀x (find_shelter(x) → (avoid_predators(x) ∨ locate_food(x)))",
      "If Lennon has feathers, then he spreads seeds and flies efficiently.": "have_feathers(Lennon) → (spread_seeds(Lennon) ∧ fly_efficiently(Lennon))",
      "If Lennon hibernates during winter, then he migrates seasonally.": "hibernate_winter(Lennon) → migrate_seasonally(Lennon)",
      "Louisa does not avoid predators.": "¬avoid_predators(Louisa)",
      "Lennon finds shelter or migrates seasonally.": "find_shelter(Lennon) ∨ migrate_seasonally(Lennon)",
      "If Karim has feathers, then he spreads seeds and flies efficiently.": "have_feathers(Karim) → (spread_seeds(Karim) ∧ fly_efficiently(Karim))",
      "Lennon either collects nectar or spreads seeds, but not both.": "collect_nectar(Lennon) ⊕ spread_seeds(Lennon)"
    },
    "conclusion_fol": "¬pollinate_flowers(Lennon)"
  },
  {
    "id": 6,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jimmy advocates for equality.",
    "reasoning": "fact1: Jimmy does not value tradition.\nfact2: Jimmy is not respected.\nrule: If Jimmy holds conservative beliefs or values tradition, then he is respected.\nconclusion: Jimmy does not hold conservative beliefs.\n\nfact1: Jimmy does not build trust with others.\nrule: If someone listens actively, then they build trust with others.\nconclusion: Jimmy does not listen actively.\n\nfact1: Jimmy values integrity.\nrule: If Jimmy values integrity, then he leads his community and empowers others.\nconclusion: Jimmy leads his community.\n\nfact1: Jimmy organizes rallies.\nfact2: Jimmy does not inspire others.\nrule: If someone supports human rights and organizes rallies, then they inspire others.\nconclusion: Jimmy does not support human rights.\n\nfact1: Jimmy leads his community.\nfact2: Jimmy does not support human rights.\nrule: If Jimmy leads his community, then he either champions environmental causes or supports human rights (or both).\nconclusion: Jimmy champions environmental causes.\n\nfact1: Jimmy champions environmental causes.\nrule: Jimmy either champions environmental causes or fights for social justice, but not necessarily both.\nconclusion: Jimmy does not fight for social justice.\n\nfact1: Jimmy does not hold conservative beliefs.\nrule: Jimmy either holds conservative beliefs or has progressive views, but not both.\nconclusion: Jimmy has progressive views.\n\nfact1: Jimmy has progressive views.\nfact2: Jimmy does not fight for social justice.\nrule: For all humans, if someone has progressive views, then they either fight for social justice or advocate for equality (or both).\nconclusion: Jimmy advocates for equality.\n\nTherefore, it is true that Jimmy advocates for equality. The correct option is: A.",
    "context": "Jimmy does not value tradition. Jimmy values integrity. If Jimmy either values diversity or rejects injustice (but not both), then he has progressive views. If someone listens actively, then they build trust with others. If Jimmy holds conservative beliefs or values tradition, then he is respected. Jimmy either champions environmental causes or fights for social justice, but not necessarily both. If Jimmy values integrity, then he leads his community and empowers others. Mikayla values integrity. Jimmy does not inspire others. Jimmy fights against injustice or supports human rights. For all humans, if someone has progressive views, then they either fight for social justice or advocate for equality (or both). If someone supports human rights and organizes rallies, then they inspire others. If Jimmy is authentic, then he is either approachable or listen actively, but not both. Jimmy organizes rallies. Jimmy does not build trust with others. If Jimmy participates in debates, then he either promotes critical thinking or fights for social justice (or both). Mikayla does not value tradition. Jimmy is not respected. If Jimmy leads his community, then he either champions environmental causes or supports human rights (or both). Jimmy either holds conservative beliefs or has progressive views, but not both. Hadassah either champions environmental causes or fights for social justice, but not necessarily both. Jimmy either promotes education or champions environmental causes. If Leo values integrity, then he leads his community and empowers others.",
    "nl2fol": {
      "Jimmy does not value tradition.": "¬values_tradition(Jimmy)",
      "Jimmy values integrity.": "values_integrity(Jimmy)",
      "If Jimmy either values diversity or rejects injustice (but not both), then he has progressive views.": "(values_diversity(Jimmy) ⊕ rejects_injustice(Jimmy)) → has_progressive_views(Jimmy)",
      "If someone listens actively, then they build trust with others.": "∀x (listens_actively(x) → builds_trust(x))",
      "If Jimmy holds conservative beliefs or values tradition, then he is respected.": "(holds_conservative_beliefs(Jimmy) ∨ values_tradition(Jimmy)) → is_respected(Jimmy)",
      "Jimmy either champions environmental causes or fights for social justice, but not necessarily both.": "champions_environmental_causes(Jimmy) ⊕ fights_for_social_justice(Jimmy)",
      "If Jimmy values integrity, then he leads his community and empowers others.": "values_integrity(Jimmy) → (leads_community(Jimmy) ∧ empowers_others(Jimmy))",
      "Mikayla values integrity.": "values_integrity(Mikayla)",
      "Jimmy does not inspire others.": "¬inspires_others(Jimmy)",
      "Jimmy fights against injustice or supports human rights.": "fights_against_injustice(Jimmy) ∨ supports_human_rights(Jimmy)",
      "For all humans, if someone has progressive views, then they either fight for social justice or advocate for equality (or both).": "∀x (has_progressive_views(x) → (fights_for_social_justice(x) ∨ advocates_for_equality(x)))",
      "If someone supports human rights and organizes rallies, then they inspire others.": "∀x ((supports_human_rights(x) ∧ organizes_rallies(x)) → inspires_others(x))",
      "If Jimmy is authentic, then he is either approachable or listen actively, but not both.": "is_authentic(Jimmy) → (is_approachable(Jimmy) ⊕ listens_actively(Jimmy))",
      "Jimmy organizes rallies.": "organizes_rallies(Jimmy)",
      "Jimmy does not build trust with others.": "¬builds_trust(Jimmy)",
      "If Jimmy participates in debates, then he either promotes critical thinking or fights for social justice (or both).": "participates_in_debates(Jimmy) → (promotes_critical_thinking(Jimmy) ∨ fights_for_social_justice(Jimmy))",
      "Mikayla does not value tradition.": "¬values_tradition(Mikayla)",
      "Jimmy is not respected.": "¬is_respected(Jimmy)",
      "If Jimmy leads his community, then he either champions environmental causes or supports human rights (or both).": "leads_community(Jimmy) → (champions_environmental_causes(Jimmy) ∨ supports_human_rights(Jimmy))",
      "Jimmy either holds conservative beliefs or has progressive views, but not both.": "holds_conservative_beliefs(Jimmy) ⊕ has_progressive_views(Jimmy)",
      "Hadassah either champions environmental causes or fights for social justice, but not necessarily both.": "champions_environmental_causes(Hadassah) ⊕ fights_for_social_justice(Hadassah)",
      "Jimmy either promotes education or champions environmental causes.": "promotes_education(Jimmy) ∨ champions_environmental_causes(Jimmy)",
      "If Leo values integrity, then he leads his community and empowers others.": "values_integrity(Leo) → (leads_community(Leo) ∧ empowers_others(Leo))"
    },
    "conclusion_fol": "advocates_for_equality(Jimmy)"
  },
  {
    "id": 7,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Wyatt is either a perfectionist or careless, but not both.",
    "reasoning": "fact1: Wyatt seeks patterns.\nfact2: Wyatt does not analyze data.\nrule: If Wyatt either seeks patterns or analyzes data (but not both), then he evaluates evidence.\nconclusion: Wyatt evaluates evidence.\n\nfact1: Wyatt strives for precision.\nfact2: Wyatt evaluates evidence.\nrule: If someone strives for precision, then they consider details and evaluate evidence.\nconclusion: Wyatt considers details.\n\nfact1: Wyatt does not attack problems.\nfact2: Wyatt considers details.\nrule: Anyone who attacks problems or considers details thinks carefully.\nconclusion: Wyatt thinks carefully.\n\nfact1: Wyatt does not follow rules.\nrule: Wyatt either follows rules or is spontaneous.\nconclusion: Wyatt is spontaneous.\n\nfact1: Wyatt is spontaneous.\nfact2: Wyatt thinks carefully.\nrule: If Wyatt is spontaneous, then he is either impulsive or thinks carefully (but not both).\nconclusion: Wyatt does not act impulsively.\n\nfact1: Wyatt does not value accuracy.\nrule: Wyatt values accuracy or is a perfectionist.\nconclusion: Wyatt is a perfectionist.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Wyatt is either a perfectionist or careless, but not both. The correct option is: C.",
    "context": "Wyatt values accuracy or is a perfectionist. Wyatt strives for precision. Anyone who examines data or seeks truth can evaluate evidence. Anyone who concentrates hard or evaluates thoroughly thinks carefully. If Wyatt either seeks patterns or analyzes data (but not both), then he evaluates evidence. If Wyatt acts on instinct, then he is careless. Wyatt does not value accuracy. Chloe values accuracy or is a perfectionist. Wyatt does not attack problems. If Queen either seeks patterns or analyzes data (but not both), then he evaluates evidence. Wyatt does not follow rules. Anyone who attacks problems or considers details thinks carefully. Queen does not attack problems. Wyatt does not analyze data. Wyatt either follows rules or is spontaneous. If someone strives for precision, then they consider details and evaluate evidence. Wyatt seeks patterns. If Wyatt is spontaneous, then he is either impulsive or thinks carefully (but not both).",
    "nl2fol": {
      "Wyatt values accuracy or is a perfectionist.": "values_accuracy(Wyatt) ∨ perfectionist(Wyatt)",
      "Wyatt strives for precision.": "strives_for_precision(Wyatt)",
      "Anyone who examines data or seeks truth can evaluate evidence.": "∀x ((examines_data(x) ∨ seeks_truth(x)) → evaluates_evidence(x))",
      "Anyone who concentrates hard or evaluates thoroughly thinks carefully.": "∀x ((concentrates_hard(x) ∨ evaluates_thoroughly(x)) → thinks_carefully(x))",
      "If Wyatt either seeks patterns or analyzes data (but not both), then he evaluates evidence.": "(seeks_patterns(Wyatt) ⊕ analyzes_data(Wyatt)) → evaluates_evidence(Wyatt)",
      "If Wyatt acts on instinct, then he is careless.": "acts_on_instinct(Wyatt) → careless(Wyatt)",
      "Wyatt does not value accuracy.": "¬values_accuracy(Wyatt)",
      "Chloe values accuracy or is a perfectionist.": "values_accuracy(Chloe) ∨ perfectionist(Chloe)",
      "Wyatt does not attack problems.": "¬attacks_problems(Wyatt)",
      "If Queen either seeks patterns or analyzes data (but not both), then he evaluates evidence.": "(seeks_patterns(Queen) ⊕ analyzes_data(Queen)) → evaluates_evidence(Queen)",
      "Wyatt does not follow rules.": "¬follows_rules(Wyatt)",
      "Anyone who attacks problems or considers details thinks carefully.": "∀x ((attacks_problems(x) ∨ considers_details(x)) → thinks_carefully(x))",
      "Queen does not attack problems.": "¬attacks_problems(Queen)",
      "Wyatt does not analyze data.": "¬analyzes_data(Wyatt)",
      "Wyatt either follows rules or is spontaneous.": "follows_rules(Wyatt) ∨ is_spontaneous(Wyatt)",
      "If someone strives for precision, then they consider details and evaluate evidence.": "∀x (strives_for_precision(x) → (considers_details(x) ∧ evaluates_evidence(x)))",
      "Wyatt seeks patterns.": "seeks_patterns(Wyatt)",
      "If Wyatt is spontaneous, then he is either impulsive or thinks carefully (but not both).": "is_spontaneous(Wyatt) → (thinks_carefully(Wyatt) ⊕ acts_impulsively(Wyatt))"
    },
    "conclusion_fol": "perfectionist(Wyatt) ⊕ careless(Wyatt)"
  },
  {
    "id": 8,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Vincent is not skilled.",
    "reasoning": "fact1: Vincent has keen insight.\nrule: If someone has keen insight, then they analyze data and understand motives.\nconclusion: Vincent analyzes data.\n\nfact1: Vincent investigates crime.\nfact2: Vincent analyzes data.\nrule: If Vincent investigates crime, then he either examines evidence or analyzes data (but not both).\nconclusion: Vincent does not examine evidence.\n\nfact1: Vincent does not examine evidence.\nrule: Vincent examines evidence or thinks critically (or both).\nconclusion: Vincent thinks critically.\n\nfact1: Vincent did not find justice.\nrule: If someone uncovers the truth, then they can find justice.\nconclusion: Vincent cannot uncover the truth.\n\nfact1: Vincent thinks critically.\nfact2: Vincent cannot uncover the truth.\nrule: If someone solves complex cases and thinks critically, then they can uncover the truth.\nconclusion: Vincent does not solve complex cases.\n\nfact1: Vincent does not solve complex cases.\nrule: If Vincent has expertise, then he works diligently and solves complex cases.\nconclusion: Vincent does not have expertise.\n\nfact1: Vincent does not have expertise.\nrule: Vincent is trustworthy or has expertise.\nconclusion: Vincent is trustworthy.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Vincent is not skilled. The correct option is: C.",
    "context": "Vincent is trustworthy or has expertise. Vincent examines evidence or thinks critically (or both). Hugh examines evidence or thinks critically (or both). If Vincent has expertise, then he works diligently and solves complex cases. Vincent has keen insight. Anyone who evaluates clues or makes connections can think critically. If someone has keen insight, then they analyze data and understand motives. If Vincent follows clues, then he will uncover the truth. If Vincent investigates crime, then he either examines evidence or analyzes data (but not both). Vincent investigates crime. If someone solves complex cases and thinks critically, then they can uncover the truth. If Vincent either identifies patterns or connects clues (but not both), then he is able to analyze data. Vincent did not find justice. If someone uncovers the truth, then they can find justice. Vincent values integrity or is trustworthy. If Vincent is reliable, then he either has expertise or has experience, but not both.",
    "nl2fol": {
      "Vincent is trustworthy or has expertise.": "trustworthy(Vincent) ∨ has_expertise(Vincent)",
      "Vincent examines evidence or thinks critically (or both).": "examines_evidence(Vincent) ∨ thinks_critically(Vincent)",
      "Hugh examines evidence or thinks critically (or both).": "examines_evidence(Hugh) ∨ thinks_critically(Hugh)",
      "If Vincent has expertise, then he works diligently and solves complex cases.": "has_expertise(Vincent) → (work_diligently(Vincent) ∧ solve_complex_cases(Vincent))",
      "Vincent has keen insight.": "has_keen_insight(Vincent)",
      "Anyone who evaluates clues or makes connections can think critically.": "∀x ((evaluates_clues(x) ∨ makes_connections(x)) → thinks_critically(x))",
      "If someone has keen insight, then they analyze data and understand motives.": "∀x (has_keen_insight(x) → (analyzes_data(x) ∧ understands_motives(x)))",
      "If Vincent follows clues, then he will uncover the truth.": "follows_clues(Vincent) → uncover_truth(Vincent)",
      "If Vincent investigates crime, then he either examines evidence or analyzes data (but not both).": "investigates_crime(Vincent) → (examines_evidence(Vincent) ⊕ analyzes_data(Vincent))",
      "Vincent investigates crime.": "investigates_crime(Vincent)",
      "If someone solves complex cases and thinks critically, then they can uncover the truth.": "∀x ((solve_complex_cases(x) ∧ thinks_critically(x)) → uncover_truth(x))",
      "If Vincent either identifies patterns or connects clues (but not both), then he is able to analyze data.": "(identifies_patterns(Vincent) ⊕ connects_clues(Vincent)) → analyzes_data(Vincent)",
      "Vincent did not find justice.": "¬find_justice(Vincent)",
      "If someone uncovers the truth, then they can find justice.": "∀x (uncover_truth(x) → find_justice(x))",
      "Vincent values integrity or is trustworthy.": "values_integrity(Vincent) ∨ trustworthy(Vincent)",
      "If Vincent is reliable, then he either has expertise or has experience, but not both.": "is_reliable(Vincent) → (has_expertise(Vincent) ⊕ has_experience(Vincent))"
    },
    "conclusion_fol": "¬skilled(Vincent)"
  },
  {
    "id": 9,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? David either remains calm or acts quickly in emergencies (or both).",
    "reasoning": "fact1: David works behind the scene.\nrule: David either assists people or works behind the scene, but does not do both.\nconclusion: David does not assist people.\n\nfact1: David is reliable.\nrule: If David is reliable, then he works well under pressure and has good judgment.\nconclusion: David works well under pressure.\n\nfact1: David does not assist people.\nrule: David assists people or provides quality care.\nconclusion: David provides quality care.\n\nfact1: David works well under pressure.\nrule: David either works well under pressure or thinks critically, but not both.\nconclusion: David is not able to think critically.\n\nfact1: David provides quality care.\nrule: David either provides quality care or handles emergencies, but not necessarily both.\nconclusion: David does not handle emergencies.\n\nfact1: David has experience.\nfact2: David is not able to think critically.\nrule: If David has experience, then he is either able to think critically or respond effectively (but not both) in high-pressure situations.\nconclusion: David responds effectively.\n\nfact1: David does not handle emergencies.\nrule: Everyone either stays focused or handles emergencies (or both).\nconclusion: David stays focused.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that David either remains calm or acts quickly in emergencies (or both). The correct option is: C.",
    "context": "David assists people or provides quality care. Dearie either assists people or works behind the scene, but does not do both. If Musa has experience, then he is either able to think critically or respond effectively (but not both) in high-pressure situations. If David either assesses situations or coordinates teams (but not both) in emergencies, then he responds effectively. Anyone who prioritizes tasks stays focused. Everyone who faces challenges either solves problems or thinks critically (or both). David is reliable. David either provides quality care or handles emergencies, but not necessarily both. David either assists people or works behind the scene, but does not do both. If David has experience, then he is either able to think critically or respond effectively (but not both) in high-pressure situations. Dearie is reliable. If Grady either acts quickly or stays focused (but not both) in emergencies, then he responds effectively. Grady does not analyze situations. If someone has empathy and has medical skills, then they can assist people. David either works well under pressure or thinks critically, but not both. Musa either provides quality care or handles emergencies, but not necessarily both. If Musa is reliable, then he works well under pressure and has good judgment. David has experience. If Musa either analyzes situations or makes informed decisions (but not both), then he has good judgment. Dearie assists people or provides quality care. Dearie either works well under pressure or thinks critically, but not both. Everyone either stays focused or handles emergencies (or both). If David is reliable, then he works well under pressure and has good judgment. David works behind the scene. Musa does not remain calm. Grady works behind the scene. If someone evaluates evidence and weighs options, then they have good judgment.",
    "nl2fol": {
      "David assists people or provides quality care.": "assists_people(David) ∨ provide_quality_care(David)",
      "Dearie either assists people or works behind the scene, but does not do both.": "assists_people(Dearie) ⊕ works_behind_scene(Dearie)",
      "If Musa has experience, then he is either able to think critically or respond effectively (but not both) in high-pressure situations.": "has_experience(Musa) → (think_critically(Musa) ⊕ respond_effectively(Musa))",
      "If David either assesses situations or coordinates teams (but not both) in emergencies, then he responds effectively.": "(assesses_situations(David) ⊕ coordinates_teams(David)) → respond_effectively(David)",
      "Anyone who prioritizes tasks stays focused.": "∀x (prioritizes_tasks(x) → stay_focused(x))",
      "Everyone who faces challenges either solves problems or thinks critically (or both).": "∀x (face_challenges(x) → (solve_problems(x) ∨ think_critically(x)))",
      "David is reliable.": "is_reliable(David)",
      "David either provides quality care or handles emergencies, but not necessarily both.": "provide_quality_care(David) ⊕ handle_emergencies(David)",
      "David either assists people or works behind the scene, but does not do both.": "assists_people(David) ⊕ works_behind_scene(David)",
      "If David has experience, then he is either able to think critically or respond effectively (but not both) in high-pressure situations.": "has_experience(David) → (think_critically(David) ⊕ respond_effectively(David))",
      "Dearie is reliable.": "is_reliable(Dearie)",
      "If Grady either acts quickly or stays focused (but not both) in emergencies, then he responds effectively.": "(act_quickly(Grady) ⊕ stay_focused(Grady)) → respond_effectively(Grady)",
      "Grady does not analyze situations.": "¬analyzes_situations(Grady)",
      "If someone has empathy and has medical skills, then they can assist people.": "∀x ((has_empathy(x) ∧ has_medical_skills(x)) → assists_people(x))",
      "David either works well under pressure or thinks critically, but not both.": "work_well_under_pressure(David) ⊕ think_critically(David)",
      "Musa either provides quality care or handles emergencies, but not necessarily both.": "provide_quality_care(Musa) ⊕ handle_emergencies(Musa)",
      "If Musa is reliable, then he works well under pressure and has good judgment.": "is_reliable(Musa) → (work_well_under_pressure(Musa) ∧ has_good_judgment(Musa))",
      "David has experience.": "has_experience(David)",
      "If Musa either analyzes situations or makes informed decisions (but not both), then he has good judgment.": "(analyzes_situations(Musa) ⊕ makes_informed_decisions(Musa)) → has_good_judgment(Musa)",
      "Dearie assists people or provides quality care.": "assists_people(Dearie) ∨ provide_quality_care(Dearie)",
      "Dearie either works well under pressure or thinks critically, but not both.": "work_well_under_pressure(Dearie) ⊕ think_critically(Dearie)",
      "Everyone either stays focused or handles emergencies (or both).": "∀x (stay_focused(x) ∨ handle_emergencies(x))",
      "If David is reliable, then he works well under pressure and has good judgment.": "is_reliable(David) → (work_well_under_pressure(David) ∧ has_good_judgment(David))",
      "David works behind the scene.": "works_behind_scene(David)",
      "Musa does not remain calm.": "¬remains_calm(Musa)",
      "Grady works behind the scene.": "works_behind_scene(Grady)",
      "If someone evaluates evidence and weighs options, then they have good judgment.": "∀x ((evaluates_evidence(x) ∧ weighs_options(x)) → has_good_judgment(x))"
    },
    "conclusion_fol": "remain_calm(David) ∨ act_quickly(David)"
  },
  {
    "id": 10,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Muffin is nocturnal.",
    "reasoning": "fact1: Muffin does not have a good memory.\nrule: Muffin either has a good memory or is curious.\nconclusion: Muffin is curious.\n\nfact1: Muffin has territory.\nfact2: Muffin does not have family bonds.\nrule: All possums that either live in groups or have territory have family bonds.\nconclusion: Muffin lives in groups.\n\nfact1: Muffin does not love climbing.\nfact2: Muffin enjoys exploring.\nrule: Any possum that loves climbing or enjoys exploring is playful.\nconclusion: Muffin is playful.\n\nfact1: Muffin lives in groups.\nfact2: Muffin is not reserved.\nrule: If Muffin lives in groups, then she is either social or reserved, but not both.\nconclusion: Muffin is social.\n\nfact1: Muffin is curious.\nfact2: Muffin is adventurous.\nrule: If Muffin is happy, then she is either curious or adventurous.\nconclusion: Muffin is not happy.\n\nfact1: Muffin is playful.\nfact2: Muffin is not happy.\nrule: For any possum, if it has friends and is playful, then it is happy.\nconclusion: Muffin is solitary.\n\nfact1: Muffin is solitary.\nrule: Every possum either has friends or is solitary.\nconclusion: Muffin is solitary.\n\nfact1: Muffin is social.\nfact2: Muffin is solitary.\nrule: If Muffin is nocturnal, then she is either social or solitary, but not both.\nconclusion: Muffin is nocturnal.\n\nTherefore, it is false that Muffin is nocturnal. The correct option is: B.",
    "context": "Muffin is not reserved. For any possum, if it has friends and is playful, then it is happy. Every possum either has friends or is solitary. If Muffin lives in groups, then she is either social or reserved, but not both. Isla is not reserved. Any possum that loves climbing or enjoys exploring is playful. Any possum that likes alone time and habits night roaming is solitary. Muffin has territory. Muffin is adventurous. If Isla lives in groups, then she is either social or reserved, but not both. Muffin either has a good memory or is curious. If Muffin is happy, then she is either curious or adventurous. Muffin enjoys exploring. If Muffin is active, then she is either inquisitive or curious, but not both. If Muffin is nocturnal, then she is either social or solitary, but not both. All possums that either live in groups or have territory have family bonds. If Muffin has a gentle nature, then she has friends and lives in harmony. Muffin does not have a good memory. Muffin is happy if she feels secure. Muffin does not have family bonds. Louisa either has a good memory or is curious. Muffin does not love climbing. All possums that live in the forest are playful and have soft fur.",
    "nl2fol": {
      "Muffin is not reserved.": "¬is_reserved(Muffin)",
      "For any possum, if it has friends and is playful, then it is happy.": "∀x ((has_friends(x) ∧ is_playful(x)) → is_happy(x))",
      "Every possum either has friends or is solitary.": "∀x (has_friends(x) ∨ solitary(x))",
      "If Muffin lives in groups, then she is either social or reserved, but not both.": "lives_in_groups(Muffin) → (social(Muffin) ⊕ is_reserved(Muffin))",
      "Isla is not reserved.": "¬is_reserved(Isla)",
      "Any possum that loves climbing or enjoys exploring is playful.": "∀x ((loves_climbing(x) ∨ enjoys_exploring(x)) → is_playful(x))",
      "Any possum that likes alone time and habits night roaming is solitary.": "∀x ((likes_alone_time(x) ∧ habits_night_roaming(x)) → solitary(x))",
      "Muffin has territory.": "has_territory(Muffin)",
      "Muffin is adventurous.": "is_adventurous(Muffin)",
      "If Isla lives in groups, then she is either social or reserved, but not both.": "lives_in_groups(Isla) → (social(Isla) ⊕ is_reserved(Isla))",
      "Muffin either has a good memory or is curious.": "has_good_memory(Muffin) ∨ is_curious(Muffin)",
      "If Muffin is happy, then she is either curious or adventurous.": "is_happy(Muffin) → (is_curious(Muffin) ⊕ is_adventurous(Muffin))",
      "Muffin enjoys exploring.": "enjoys_exploring(Muffin)",
      "If Muffin is active, then she is either inquisitive or curious, but not both.": "is_active(Muffin) → (is_inquisitive(Muffin) ⊕ is_curious(Muffin))",
      "If Muffin is nocturnal, then she is either social or solitary, but not both.": "nocturnal(Muffin) → (social(Muffin) ⊕ solitary(Muffin))",
      "All possums that either live in groups or have territory have family bonds.": "∀x ((lives_in_groups(x) ⊕ has_territory(x)) → has_family_bonds(x))",
      "If Muffin has a gentle nature, then she has friends and lives in harmony.": "gentle_nature(Muffin) → (has_friends(Muffin) ∧ lives_in_harmony(Muffin))",
      "Muffin does not have a good memory.": "¬has_good_memory(Muffin)",
      "Muffin is happy if she feels secure.": "feels_secure(Muffin) → is_happy(Muffin)",
      "Muffin does not have family bonds.": "¬has_family_bonds(Muffin)",
      "Louisa either has a good memory or is curious.": "has_good_memory(Louisa) ∨ is_curious(Louisa)",
      "Muffin does not love climbing.": "¬loves_climbing(Muffin)",
      "All possums that live in the forest are playful and have soft fur.": "∀x (lives_in_forest(x) → (is_playful(x) ∧ has_soft_fur(x)))"
    },
    "conclusion_fol": "nocturnal(Muffin)"
  },
  {
    "id": 11,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dr. Marlon's patients are emotional.",
    "reasoning": "fact1: Dr. Marlon reads often.\nrule: Dr. Marlon learns quickly if he reads often.\nconclusion: Marlon learns quickly.\n\nfact1: Dr. Marlon does not follow his experience.\nrule: Dr. Marlon follows his experience or trusts his instinct.\nconclusion: Dr. Marlon trusts his instinct.\n\nfact1: Marlon learns quickly.\nfact2: Dr. Marlon is not analytical.\nrule: If Dr. Marlon either learns quickly or has good memory, then he is analytical.\nconclusion: Dr. Marlon has good memory.\n\nfact1: Dr. Marlon trusts his instinct.\nrule: Anyone who trusts their instinct is intuitive.\nconclusion: Dr. Marlon is intuitive.\n\nfact1: Dr. Marlon has good memory.\nfact2: Dr. Marlon is intuitive.\nrule: If Dr. Marlon has good memory, then he is either rational or intuitive, but not both.\nconclusion: Dr. Marlon's patients are not rational.\n\nfact1: Dr. Marlon's patients are not rational.\nrule: Everyone is rational or emotional (or both).\nconclusion: Dr. Marlon's patients are emotional.\n\nTherefore, it is true that Dr. Marlon's patients are emotional. The correct option is: A.",
    "context": "Dr. Marlon reads often. Dr. Marlon follows his experience or trusts his instinct. Dr. Marlon does not follow his experience. Dr. Marlon is not analytical. If Dr. Marlon either learns quickly or has good memory, then he is analytical. If Dr. Marlon has good memory, then he is either rational or intuitive, but not both. Dr. Marlon learns quickly if he reads often. If Dr. Marlon values insight, then he both listens carefully and trusts his instinct. Anyone who trusts their instinct is intuitive. Everyone is rational or emotional (or both).",
    "nl2fol": {
      "Dr. Marlon reads often.": "reads_often(Marlon)",
      "Dr. Marlon follows his experience or trusts his instinct.": "follows_experience(Marlon) ∨ trusts_instinct(Marlon)",
      "Dr. Marlon does not follow his experience.": "¬follows_experience(Marlon)",
      "Dr. Marlon is not analytical.": "¬analytical(Marlon)",
      "If Dr. Marlon either learns quickly or has good memory, then he is analytical.": "(learns_quickly(Marlon) ⊕ has_good_memory(Marlon)) → analytical(Marlon)",
      "If Dr. Marlon has good memory, then he is either rational or intuitive, but not both.": "has_good_memory(Marlon) → (rational(Marlon) ⊕ intuitive(Marlon))",
      "Dr. Marlon learns quickly if he reads often.": "reads_often(Marlon) → learns_quickly(Marlon)",
      "If Dr. Marlon values insight, then he both listens carefully and trusts his instinct.": "values_insight(Marlon) → (listens_carefully(Marlon) ∧ trusts_instinct(Marlon))",
      "Anyone who trusts their instinct is intuitive.": "∀x (trusts_instinct(x) → intuitive(x))",
      "Everyone is rational or emotional (or both).": "∀x (rational(x) ∨ emotional(x))"
    },
    "conclusion_fol": "emotional(Marlon)"
  },
  {
    "id": 12,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Estrella is a respected local.",
    "reasoning": "fact1: Estrella has leadership skills.\nfact2: Estrella is not outgoing.\nrule: If Estrella has leadership skills, then she is either charismatic or outgoing, but not both.\nconclusion: Estrella is charismatic.\n\nfact1: Estrella speaks confidently.\nfact2: Estrella does not connect with her audience.\nrule: If Estrella either speaks confidently or connects with her audience (but not both), then she loves public speaking.\nconclusion: Estrella loves public speaking.\n\nfact1: Estrella is charismatic.\nfact2: Estrella loves public speaking.\nrule: If Estrella is charismatic, then she either enjoys storytelling or loves public speaking (but not both).\nconclusion: Estrella does not enjoy storytelling.\n\nfact1: Estrella has local expertise.\nfact2: Estrella does not enjoy storytelling.\nrule: If Estrella has local expertise, then she either shares her knowledge or enjoys storytelling (but not both).\nconclusion: Estrella shares her knowledge.\n\nfact1: Estrella shares her knowledge.\nrule: If Estrella shares her knowledge, then she is a knowledgeable guide.\nconclusion: Estrella is a knowledgeable guide.\n\nfact1: Estrella is not an experienced sailor.\nfact2: Estrella is a knowledgeable guide.\nrule: If Estrella is either an experienced sailor or a knowledgeable guide (but not both), then she is a respected local.\nconclusion: Estrella is a respected local.\n\nTherefore, it is true that Estrella is a respected local. The correct option is: A.",
    "context": "If Ayan has local expertise, then she either shares her knowledge or enjoys storytelling (but not both). If Estrella has local expertise, then she either shares her knowledge or enjoys storytelling (but not both). If Estrella is either an experienced sailor or a knowledgeable guide (but not both), then she is a respected local. Estrella is not outgoing. Estrella is not an experienced sailor. If Messiah is either an experienced sailor or a knowledgeable guide (but not both), then she is a respected local. Cuddlebug has leadership skills. Estrella speaks confidently. Estrella does not connect with her audience. If Estrella is charismatic, then she either enjoys storytelling or loves public speaking (but not both). Estrella adores history or is a knowledgeable guide. If Estrella shares her knowledge, then she is a knowledgeable guide. If Estrella either speaks confidently or connects with her audience (but not both), then she loves public speaking. Estrella has leadership skills. Ayan is not outgoing. If Estrella has leadership skills, then she is either charismatic or outgoing, but not both. Ayan speaks confidently. Estrella has local expertise. If Estrella is passionate about history, then she either shares her knowledge or has extensive experience (or both).",
    "nl2fol": {
      "If Ayan has local expertise, then she either shares her knowledge or enjoys storytelling (but not both).": "has_local_expertise(Ayan) → (shares_knowledge(Ayan) ⊕ enjoys_storytelling(Ayan))",
      "If Estrella has local expertise, then she either shares her knowledge or enjoys storytelling (but not both).": "has_local_expertise(Estrella) → (shares_knowledge(Estrella) ⊕ enjoys_storytelling(Estrella))",
      "If Estrella is either an experienced sailor or a knowledgeable guide (but not both), then she is a respected local.": "(experienced_sailor(Estrella) ⊕ knowledgeable_guide(Estrella)) → respected_local(Estrella)",
      "Estrella is not outgoing.": "¬is_outgoing(Estrella)",
      "Estrella is not an experienced sailor.": "¬experienced_sailor(Estrella)",
      "If Messiah is either an experienced sailor or a knowledgeable guide (but not both), then she is a respected local.": "(experienced_sailor(Messiah) ⊕ knowledgeable_guide(Messiah)) → respected_local(Messiah)",
      "Cuddlebug has leadership skills.": "has_leadership_skills(Cuddlebug)",
      "Estrella speaks confidently.": "speaks_confidently(Estrella)",
      "Estrella does not connect with her audience.": "¬connects_with_audience(Estrella)",
      "If Estrella is charismatic, then she either enjoys storytelling or loves public speaking (but not both).": "is_charismatic(Estrella) → (enjoys_storytelling(Estrella) ⊕ loves_public_speaking(Estrella))",
      "Estrella adores history or is a knowledgeable guide.": "adores_history(Estrella) ∨ knowledgeable_guide(Estrella)",
      "If Estrella shares her knowledge, then she is a knowledgeable guide.": "shares_knowledge(Estrella) → knowledgeable_guide(Estrella)",
      "If Estrella either speaks confidently or connects with her audience (but not both), then she loves public speaking.": "(speaks_confidently(Estrella) ⊕ connects_with_audience(Estrella)) → loves_public_speaking(Estrella)",
      "Estrella has leadership skills.": "has_leadership_skills(Estrella)",
      "Ayan is not outgoing.": "¬is_outgoing(Ayan)",
      "If Estrella has leadership skills, then she is either charismatic or outgoing, but not both.": "has_leadership_skills(Estrella) → (is_charismatic(Estrella) ⊕ is_outgoing(Estrella))",
      "Ayan speaks confidently.": "speaks_confidently(Ayan)",
      "Estrella has local expertise.": "has_local_expertise(Estrella)",
      "If Estrella is passionate about history, then she either shares her knowledge or has extensive experience (or both).": "passionate_about_history(Estrella) → (shares_knowledge(Estrella) ∨ has_extensive_experience(Estrella))"
    },
    "conclusion_fol": "respected_local(Estrella)"
  },
  {
    "id": 13,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aubree is innovative.",
    "reasoning": "fact1: Aubree follows established rules.\nrule: Aubree either follows established rules or is an unconventional thinker, but not both.\nconclusion: Aubree is not an unconventional thinker.\n\nfact1: Aubree explores questions.\nfact2: Aubree seeks answers.\nrule: Anyone who explores questions and seeks answers has curiosity.\nconclusion: Aubree is curious.\n\nfact1: Aubree is curious.\nfact2: Aubree has a pragmatic approach.\nrule: If Aubree is curious, then she is either a philosophical thinker or has a pragmatic approach, but not both.\nconclusion: Aubree is not a philosophical thinker.\n\nfact1: Aubree is not a philosophical thinker.\nrule: Aubree is either a philosophical thinker or an astrophysicist, but not both.\nconclusion: Aubree is an astrophysicist.\n\nfact1: Aubree is an astrophysicist.\nfact2: Aubree is a logical analyzer.\nrule: If Aubree is an astrophysicist, then she is either a logical analyzer or an outside-the-box thinker, but not both.\nconclusion: Aubree is not an outside-the-box thinker.\n\nfact1: Aubree is not an outside-the-box thinker.\nrule: Aubree is either an outside-the-box thinker or a conventional thinker.\nconclusion: Aubree is a conventional thinker.\n\nfact1: Aubree is a conventional thinker.\nfact2: Aubree is not an unconventional thinker.\nrule: If Aubree is either a conventional thinker or an unconventional thinker (but not both), then she is innovative.\nconclusion: Aubree is innovative.\n\nTherefore, it is true that Aubree is innovative. The correct option is: A.",
    "context": "If Aubree is curious, then she is either a philosophical thinker or has a pragmatic approach, but not both. Aubree explores questions. If Aubree is an astrophysicist, then she is either a logical analyzer or an outside-the-box thinker, but not both. Joseph is either an outside-the-box thinker or a conventional thinker. Steven explores questions. If Aubree is open-minded, then she is an unconventional thinker. If Aubree is either a conventional thinker or an unconventional thinker (but not both), then she is innovative. Joseph is a logical analyzer. Aubree seeks answers. Aubree follows established rules. If Joseph is either a conventional thinker or an unconventional thinker (but not both), then she is innovative. Aubree has a pragmatic approach. Aubree is either an outside-the-box thinker or a conventional thinker. Tyler either follows established rules or is an unconventional thinker, but not both. Steven is either a philosophical thinker or an astrophysicist, but not both. Joseph follows established rules. Aubree is a logical analyzer. Anyone who explores questions and seeks answers has curiosity. Aubree is either a philosophical thinker or an astrophysicist, but not both. Aubree either follows established rules or is an unconventional thinker, but not both. If Tyler is an astrophysicist, then she is either a logical analyzer or an outside-the-box thinker, but not both.",
    "nl2fol": {
      "If Aubree is curious, then she is either a philosophical thinker or has a pragmatic approach, but not both.": "has_curiosity(Aubree) → (pragmatic_approach(Aubree) ⊕ philosophical_mind(Aubree))",
      "Aubree explores questions.": "explores_questions(Aubree)",
      "If Aubree is an astrophysicist, then she is either a logical analyzer or an outside-the-box thinker, but not both.": "astrophysicist(Aubree) → (logical_analyzer(Aubree) ⊕ outside_box_thinker(Aubree))",
      "Joseph is either an outside-the-box thinker or a conventional thinker.": "outside_box_thinker(Joseph) ∨ conventional_thinker(Joseph)",
      "Steven explores questions.": "explores_questions(Steven)",
      "If Aubree is open-minded, then she is an unconventional thinker.": "open_minded(Aubree) → unconventional_thinker(Aubree)",
      "If Aubree is either a conventional thinker or an unconventional thinker (but not both), then she is innovative.": "(conventional_thinker(Aubree) ⊕ unconventional_thinker(Aubree)) → innovative(Aubree)",
      "Joseph is a logical analyzer.": "logical_analyzer(Joseph)",
      "Aubree seeks answers.": "seeks_answers(Aubree)",
      "Aubree follows established rules.": "follows_established_rules(Aubree)",
      "If Joseph is either a conventional thinker or an unconventional thinker (but not both), then she is innovative.": "(conventional_thinker(Joseph) ⊕ unconventional_thinker(Joseph)) → innovative(Joseph)",
      "Aubree has a pragmatic approach.": "pragmatic_approach(Aubree)",
      "Aubree is either an outside-the-box thinker or a conventional thinker.": "outside_box_thinker(Aubree) ∨ conventional_thinker(Aubree)",
      "Tyler either follows established rules or is an unconventional thinker, but not both.": "follows_established_rules(Tyler) ⊕ unconventional_thinker(Tyler)",
      "Steven is either a philosophical thinker or an astrophysicist, but not both.": "philosophical_mind(Steven) ⊕ astrophysicist(Steven)",
      "Joseph follows established rules.": "follow_established_rules(Joseph)",
      "Aubree is a logical analyzer.": "logical_analyzer(Aubree)",
      "Anyone who explores questions and seeks answers has curiosity.": "∀x ((explores_questions(x) ∧ seeks_answers(x)) → has_curiosity(x))",
      "Aubree is either a philosophical thinker or an astrophysicist, but not both.": "philosophical_mind(Aubree) ⊕ astrophysicist(Aubree)",
      "Aubree either follows established rules or is an unconventional thinker, but not both.": "follows_established_rules(Aubree) ⊕ unconventional_thinker(Aubree)",
      "If Tyler is an astrophysicist, then she is either a logical analyzer or an outside-the-box thinker, but not both.": "astrophysicist(Tyler) → (logical_analyzer(Tyler) ⊕ outside_box_thinker(Tyler))"
    },
    "conclusion_fol": "innovative(Aubree)"
  },
  {
    "id": 14,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Makai can regulate sleep patterns.",
    "reasoning": "fact1: Makai does not read scientific papers.\nfact2: Makai explores new theories.\nrule: If Makai either reads scientific papers or explores new theories (but not both), then he pursues innovative research.\nconclusion: Makai pursues innovative research.\n\nfact1: Makai does not collect data.\nrule: Makai either collects data or conducts laboratory tests.\nconclusion: Makai conducts laboratory tests.\n\nfact1: Makai analyzes molecules.\nfact2: Makai conducts laboratory tests.\nrule: If Makai analyzes molecules or conducts laboratory tests, then he is a biochemist.\nconclusion: Makai is a biochemist.\n\nfact1: Makai can solve complex problems.\nfact2: Makai pursues innovative research.\nrule: If Makai can solve complex problems, then he will pursue innovative research and study brain function.\nconclusion: Makai studies brain function.\n\nfact1: Makai is a biochemist.\nfact2: Makai studies brain function.\nrule: If Makai is a biochemist, then he either modulates adenosine receptors or studies brain function, but not both.\nconclusion: Makai cannot modulate adenosine receptors.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Makai can regulate sleep patterns. The correct option is: C.",
    "context": "Makai either collects data or conducts laboratory tests. Soldier can solve complex problems. If Makai can solve complex problems, then he will pursue innovative research and study brain function. Makai does not read scientific papers. If Makai either reads scientific papers or explores new theories (but not both), then he pursues innovative research. If someone works in a lab, then they conduct laboratory tests. If Matias analyzes molecules or conducts laboratory tests, then he is a biochemist. If Makai is a biochemist, then he either modulates adenosine receptors or studies brain function, but not both. Makai does not collect data. If Makai analyzes molecules or conducts laboratory tests, then he is a biochemist. Matias does not read scientific papers. Makai analyzes molecules. Makai can solve complex problems. If Soldier either reads scientific papers or explores new theories (but not both), then he pursues innovative research. Lilly analyzes molecules. Makai explores new theories. If Makai pursues medical breakthroughs, then he either modulates adenosine receptors or develops new treatments (or both).",
    "nl2fol": {
      "Makai either collects data or conducts laboratory tests.": "collect_data(Makai) ∨ conduct_laboratory_tests(Makai)",
      "Soldier can solve complex problems.": "solve_complex_problems(Soldier)",
      "If Makai can solve complex problems, then he will pursue innovative research and study brain function.": "solve_complex_problems(Makai) → (pursue_innovative_research(Makai) ∧ study_brain_function(Makai))",
      "Makai does not read scientific papers.": "¬read_scientific_papers(Makai)",
      "If Makai either reads scientific papers or explores new theories (but not both), then he pursues innovative research.": "(read_scientific_papers(Makai) ⊕ explore_new_theories(Makai)) → pursue_innovative_research(Makai)",
      "If someone works in a lab, then they conduct laboratory tests.": "∀x (work_in_lab(x) → conduct_laboratory_tests(x))",
      "If Matias analyzes molecules or conducts laboratory tests, then he is a biochemist.": "(analyze_molecules(Matias) ∨ conduct_laboratory_tests(Matias)) → is_biochemist(Matias)",
      "If Makai is a biochemist, then he either modulates adenosine receptors or studies brain function, but not both.": "is_biochemist(Makai) → (modulate_adenosine_receptors(Makai) ⊕ study_brain_function(Makai))",
      "Makai does not collect data.": "¬collect_data(Makai)",
      "If Makai analyzes molecules or conducts laboratory tests, then he is a biochemist.": "(analyze_molecules(Makai) ∨ conduct_laboratory_tests(Makai)) → is_biochemist(Makai)",
      "Matias does not read scientific papers.": "¬read_scientific_papers(Matias)",
      "Makai analyzes molecules.": "analyze_molecules(Makai)",
      "Makai can solve complex problems.": "solve_complex_problems(Makai)",
      "If Soldier either reads scientific papers or explores new theories (but not both), then he pursues innovative research.": "(read_scientific_papers(Soldier) ⊕ explore_new_theories(Soldier)) → pursue_innovative_research(Soldier)",
      "Lilly analyzes molecules.": "analyze_molecules(Lilly)",
      "Makai explores new theories.": "explore_new_theories(Makai)",
      "If Makai pursues medical breakthroughs, then he either modulates adenosine receptors or develops new treatments (or both).": "pursue_medical_breakthroughs(Makai) → (modulate_adenosine_receptors(Makai) ∨ develop_new_treatments(Makai))"
    },
    "conclusion_fol": "regulate_sleep_patterns(Makai)"
  },
  {
    "id": 15,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Marlowe does not have a PhD.",
    "reasoning": "fact1: Marlowe thinks creatively.\nrule: Marlowe is either disciplined or thinks creatively, but not both.\nconclusion: Marlowe is not disciplined.\n\nfact1: Marlowe has momentum.\nfact2: Marlowe is not disciplined.\nrule: If Marlowe has momentum, then he is either disciplined or sets high goals, but not both.\nconclusion: Marlowe sets high goals.\n\nfact1: Marlowe sets high goals.\nfact2: Marlowe works hard.\nrule: Anyone who sets high goals or works hard is ambitious.\nconclusion: Marlowe is ambitious.\n\nfact1: Marlowe is ambitious.\nfact2: Marlowe does not earn recognition.\nrule: If Marlowe is ambitious and pursues alternate credentials, then he will earn recognition.\nconclusion: Marlowe does not pursue alternate credentials.\n\nfact1: Marlowe does not pursue alternate credentials.\nrule: If Marlowe does not have a PhD, then he will pursue alternate credentials.\nconclusion: Marlowe has a PhD.\n\nfact1: Marlowe has a PhD.\nrule: For every human, either they have a PhD or they do not have a PhD.\nconclusion: Marlowe does not have a PhD.\n\nTherefore, it is false that Marlowe does not have a PhD. The correct option is: B.",
    "context": "Marlowe does not earn recognition. Vanessa has momentum. If Marlowe is ambitious and pursues alternate credentials, then he will earn recognition. If Vanessa does not have a PhD, then he will pursue alternate credentials. For every human, either they have a PhD or they do not have a PhD. If Marlowe does not have a PhD, then he will pursue alternate credentials. Marlowe is either disciplined or thinks creatively, but not both. If Guy has momentum, then he is either disciplined or sets high goals, but not both. Anyone who has a clear vision or strives for excellence sets high goals. Guy is either disciplined or thinks creatively, but not both. If someone either seeks specialized certification or applies for fellowships (but not both), then they pursue alternate credentials. If Marlowe has momentum, then he is either disciplined or sets high goals, but not both. Marlowe works hard. Vanessa does not earn recognition. Marlowe has momentum. If Guy is ambitious and pursues alternate credentials, then he will earn recognition. Marlowe thinks creatively. Anyone who sets high goals or works hard is ambitious.",
    "nl2fol": {
      "Marlowe does not earn recognition.": "¬earns_recognition(Marlowe)",
      "Vanessa has momentum.": "has_momentum(Vanessa)",
      "If Marlowe is ambitious and pursues alternate credentials, then he will earn recognition.": "(is_ambitious(Marlowe) ∧ pursues_alternate_credentials(Marlowe)) → earns_recognition(Marlowe)",
      "If Vanessa does not have a PhD, then he will pursue alternate credentials.": "does_not_have_a_phd(Vanessa) → pursues_alternate_credentials(Vanessa)",
      "For every human, either they have a PhD or they do not have a PhD.": "∀x (has_a_phd(x) ⊕ does_not_have_a_phd(x))",
      "If Marlowe does not have a PhD, then he will pursue alternate credentials.": "does_not_have_a_phd(Marlowe) → pursues_alternate_credentials(Marlowe)",
      "Marlowe is either disciplined or thinks creatively, but not both.": "is_disciplined(Marlowe) ⊕ thinks_creatively(Marlowe)",
      "If Guy has momentum, then he is either disciplined or sets high goals, but not both.": "has_momentum(Guy) → (is_disciplined(Guy) ⊕ sets_high_goals(Guy))",
      "Anyone who has a clear vision or strives for excellence sets high goals.": "∀x ((has_clear_vision(x) ∨ strives_for_excellence(x)) → sets_high_goals(x))",
      "Guy is either disciplined or thinks creatively, but not both.": "is_disciplined(Guy) ⊕ thinks_creatively(Guy)",
      "If someone either seeks specialized certification or applies for fellowships (but not both), then they pursue alternate credentials.": "∀x ((seeks_specialized_certification(x) ⊕ applies_for_fellowships(x)) → pursues_alternate_credentials(x))",
      "If Marlowe has momentum, then he is either disciplined or sets high goals, but not both.": "has_momentum(Marlowe) → (is_disciplined(Marlowe) ⊕ sets_high_goals(Marlowe))",
      "Marlowe works hard.": "works_hard(Marlowe)",
      "Vanessa does not earn recognition.": "¬earns_recognition(Vanessa)",
      "Marlowe has momentum.": "has_momentum(Marlowe)",
      "If Guy is ambitious and pursues alternate credentials, then he will earn recognition.": "(is_ambitious(Guy) ∧ pursues_alternate_credentials(Guy)) → earns_recognition(Guy)",
      "Marlowe thinks creatively.": "thinks_creatively(Marlowe)",
      "Anyone who sets high goals or works hard is ambitious.": "∀x ((sets_high_goals(x) ∨ works_hard(x)) → is_ambitious(x))"
    },
    "conclusion_fol": "¬has_a_phd(Marlowe)"
  },
  {
    "id": 16,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Anne gains a deeper understanding of the subject.",
    "reasoning": "fact1: Anne is an expert.\nfact2: Anne does not lead a project.\nrule: If Anne is an expert, then she either has a PhD or leads a project, but not both.\nconclusion: Anne has a PhD.\n\nfact1: Anne has a PhD.\nfact2: Anne does not teach at a university.\nrule: If Anne has a PhD, then she is either an archaeologist or teaches at a university, but not both.\nconclusion: Anne is an archaeologist.\n\nfact1: Anne does not contribute to her field.\nrule: Anyone who explores lost civilizations or uncovers hidden artifacts contributes to their field.\nconclusion: Anne does not explore lost civilizations.\n\nfact1: Anne is an archaeologist.\nfact2: Anne does not explore lost civilizations.\nrule: If Anne is an archaeologist, then she either pursues historical research or explores lost civilizations, but not both.\nconclusion: Anne pursues historical research.\n\nfact1: Anne pursues historical research.\nrule: If Anne pursues historical research, then she will study ancient mythology.\nconclusion: Anne studies ancient mythology.\n\nfact1: Anne studies ancient mythology.\nrule: Everyone who studies ancient mythology gains a deeper understanding of the subject.\nconclusion: Anne gains a deeper understanding of the subject.\n\nTherefore, it is true that Anne gains a deeper understanding of the subject. The correct option is: A.",
    "context": "If Anne is an expert, then she either has a PhD or leads a project, but not both. Anne is an expert. Everyone who investigates cultural remains either pursues historical research or deciphers ancient texts (or both). If Anne has a PhD, then she is either an archaeologist or teaches at a university, but not both. Anne does not contribute to her field. Anyone who explores lost civilizations or uncovers hidden artifacts contributes to their field. If Anne is an archaeologist, then she either pursues historical research or explores lost civilizations, but not both. Anne does not teach at a university. Anne does not lead a project. Everyone who studies ancient mythology gains a deeper understanding of the subject. If Anne pursues historical research, then she will study ancient mythology. Anne holds an advanced degree or has a PhD.",
    "nl2fol": {
      "If Anne is an expert, then she either has a PhD or leads a project, but not both.": "is_expert(Anne) → (has_phd(Anne) ⊕ lead_project(Anne))",
      "Anne is an expert.": "is_expert(Anne)",
      "Everyone who investigates cultural remains either pursues historical research or deciphers ancient texts (or both).": "∀x (investigate_cultural_remains(x) → (pursue_historical_research(x) ∨ decipher_ancient_texts(x)))",
      "If Anne has a PhD, then she is either an archaeologist or teaches at a university, but not both.": "has_phd(Anne) → (teach_at_university(Anne) ⊕ is_archaeologist(Anne))",
      "Anne does not contribute to her field.": "¬contribute_to_field(Anne)",
      "Anyone who explores lost civilizations or uncovers hidden artifacts contributes to their field.": "∀x ((explore_lost_civilizations(x) ∨ uncover_hidden_artifacts(x)) → contribute_to_field(x))",
      "If Anne is an archaeologist, then she either pursues historical research or explores lost civilizations, but not both.": "is_archaeologist(Anne) → (pursue_historical_research(Anne) ⊕ explore_lost_civilizations(Anne))",
      "Anne does not teach at a university.": "¬teach_at_university(Anne)",
      "Anne does not lead a project.": "¬lead_project(Anne)",
      "Everyone who studies ancient mythology gains a deeper understanding of the subject.": "∀x (study_ancient_mythology(x) → gain_deeper_understanding(x))",
      "If Anne pursues historical research, then she will study ancient mythology.": "pursue_historical_research(Anne) → study_ancient_mythology(Anne)",
      "Anne holds an advanced degree or has a PhD.": "hold_advanced_degree(Anne) ∨ has_phd(Anne)"
    },
    "conclusion_fol": "gain_deeper_understanding(Anne)"
  },
  {
    "id": 17,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Selah is not a formidable predator.",
    "reasoning": "fact1: Selah respects nature.\nrule: For Selah, if she respects nature, then she does not necessarily possess ancient magic, and if she possesses ancient magic, then she does not necessarily respect nature.\nconclusion: Selah does not possess ancient magic.\n\nfact1: Selah maintains ecological balance.\nfact2: Selah does not possess ancient magic.\nrule: If Selah maintains ecological balance, then she either is a mythical guardian or possesses ancient magic (or both).\nconclusion: Selah is a mythical guardian.\n\nfact1: Selah is a mythical guardian.\nfact2: Selah has a powerful tail.\nrule: If Selah is a mythical guardian, then she either has sharp claws or a powerful tail, but not both.\nconclusion: Selah does not have sharp claws.\n\nfact1: Selah has wings.\nfact2: Selah has a serpent body.\nrule: If Selah has wings and a serpent body, then she can rule the ocean.\nconclusion: Selah rules the ocean.\n\nfact1: Selah rules the ocean.\nfact2: Selah does not have sharp claws.\nrule: If Selah rules the ocean, then she either has sharp claws or thecodont teeth, but not both.\nconclusion: Selah has thecodont teeth.\n\nfact1: Selah has thecodont teeth.\nrule: If Selah has thecodont teeth, then she is a formidable predator.\nconclusion: Selah is a formidable predator.\n\nTherefore, it is false that Selah is not a formidable predator. The correct option is: B.",
    "context": "If Selah has thecodont teeth, then she is a formidable predator. Selah has a serpent body. If Selah has wings and a serpent body, then she can rule the ocean. If Selah rules the ocean, then she either has sharp claws or thecodont teeth, but not both. For Selah, if she respects nature, then she does not necessarily possess ancient magic, and if she possesses ancient magic, then she does not necessarily respect nature. Selah has a powerful tail. Selah respects nature. Emelia respects nature. Kelly has a serpent body. Kali maintains ecological balance. Selah maintains ecological balance. Any mythical creature that protects the environment is a mythical guardian. If Emelia is a mythical guardian, then she either has sharp claws or a powerful tail, but not both. If Selah maintains ecological balance, then she either is a mythical guardian or possesses ancient magic (or both). Selah has wings. If Selah is a mythical guardian, then she either has sharp claws or a powerful tail, but not both.",
    "nl2fol": {
      "If Selah has thecodont teeth, then she is a formidable predator.": "has_thecodont_teeth(Selah) → is_a_formidable_predator(Selah)",
      "Selah has a serpent body.": "has_serpent_body(Selah)",
      "If Selah has wings and a serpent body, then she can rule the ocean.": "(has_wings(Selah) ∧ has_serpent_body(Selah)) → rules_the_ocean(Selah)",
      "If Selah rules the ocean, then she either has sharp claws or thecodont teeth, but not both.": "rules_the_ocean(Selah) → (has_sharp_claws(Selah) ⊕ has_thecodont_teeth(Selah))",
      "For Selah, if she respects nature, then she does not necessarily possess ancient magic, and if she possesses ancient magic, then she does not necessarily respect nature.": "respects_nature(Selah) ⊕ possesses_ancient_magic(Selah)",
      "Selah has a powerful tail.": "has_powerful_tail(Selah)",
      "Selah respects nature.": "respects_nature(Selah)",
      "Emelia respects nature.": "respects_nature(Emelia)",
      "Kelly has a serpent body.": "has_serpent_body(Kelly)",
      "Kali maintains ecological balance.": "maintains_ecological_balance(Kali)",
      "Selah maintains ecological balance.": "maintains_ecological_balance(Selah)",
      "Any mythical creature that protects the environment is a mythical guardian.": "∀x (protects_environment(x) → is_a_mythical_guardian(x))",
      "If Emelia is a mythical guardian, then she either has sharp claws or a powerful tail, but not both.": "is_a_mythical_guardian(Emelia) → (has_sharp_claws(Emelia) ⊕ has_powerful_tail(Emelia))",
      "If Selah maintains ecological balance, then she either is a mythical guardian or possesses ancient magic (or both).": "maintains_ecological_balance(Selah) → (is_a_mythical_guardian(Selah) ∨ possesses_ancient_magic(Selah))",
      "Selah has wings.": "has_wings(Selah)",
      "If Selah is a mythical guardian, then she either has sharp claws or a powerful tail, but not both.": "is_a_mythical_guardian(Selah) → (has_sharp_claws(Selah) ⊕ has_powerful_tail(Selah))"
    },
    "conclusion_fol": "¬is_a_formidable_predator(Selah)"
  },
  {
    "id": 18,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cairo thrives in his ecosystem.",
    "reasoning": "fact1: Cairo basks in sunlight.\nrule: Cairo either basks in sunlight or survives in water, but not both.\nconclusion: Cairo does not survive in water.\n\nfact1: Cairo rests during the day.\nrule: Every frog either rests during the day or hunts at night, but not necessarily both.\nconclusion: Cairo does not hunt at night.\n\nfact1: Cairo does not hunt at night.\nrule: For all frogs, they either hunt at night or need high humidity, but not necessarily both.\nconclusion: Cairo needs high humidity.\n\nfact1: Cairo does not survive in water.\nrule: Every frog either survives in water or has adapted to its environment.\nconclusion: Cairo has adapted to his environment.\n\nfact1: Cairo needs high humidity.\nfact2: Cairo does not live among plants.\nrule: Any frog that needs high humidity or lives among plants can live in a rainforest.\nconclusion: Cairo lives in a rainforest.\n\nfact1: Cairo lives in a rainforest.\nfact2: Cairo has adapted to his environment.\nrule: If Cairo lives in a rainforest, then he either has adapted to his environment or thrives in his ecosystem, but not both.\nconclusion: Cairo does not thrive in his ecosystem.\n\nTherefore, it is false that Cairo thrives in his ecosystem. The correct option is: B.",
    "context": "For all frogs, they either hunt at night or need high humidity, but not necessarily both. Every frog either survives in water or has adapted to its environment. If Cairo lives in a rainforest, then he either has adapted to his environment or thrives in his ecosystem, but not both. Cairo basks in sunlight. Any frog that needs high humidity or lives among plants can live in a rainforest. Cairo either basks in sunlight or survives in water, but not both. Cairo rests during the day. Every frog either rests during the day or hunts at night, but not necessarily both. Cairo does not live among plants. If Cairo either breathes moist air or has permeable skin (but not both), then he needs high humidity.",
    "nl2fol": {
      "For all frogs, they either hunt at night or need high humidity, but not necessarily both.": "∀x (hunts_at_night(x) ⊕ needs_high_humidity(x))",
      "Every frog either survives in water or has adapted to its environment.": "∀x (survives_in_water(x) ∨ has_adapted_to_environment(x))",
      "If Cairo lives in a rainforest, then he either has adapted to his environment or thrives in his ecosystem, but not both.": "lives_in_rainforest(Cairo) → (has_adapted_to_environment(Cairo) ⊕ thrives_in_ecosystem(Cairo))",
      "Cairo basks in sunlight.": "basks_in_sunlight(Cairo)",
      "Any frog that needs high humidity or lives among plants can live in a rainforest.": "∀x ((needs_high_humidity(x) ∨ lives_among_plants(x)) → lives_in_rainforest(x))",
      "Cairo either basks in sunlight or survives in water, but not both.": "basks_in_sunlight(Cairo) ⊕ survives_in_water(Cairo)",
      "Cairo rests during the day.": "rests_during_day(Cairo)",
      "Every frog either rests during the day or hunts at night, but not necessarily both.": "∀x (rests_during_day(x) ⊕ hunts_at_night(x))",
      "Cairo does not live among plants.": "¬lives_among_plants(Cairo)",
      "If Cairo either breathes moist air or has permeable skin (but not both), then he needs high humidity.": "(breathes_moist_air(Cairo) ⊕ has_permeable_skin(Cairo)) → needs_high_humidity(Cairo)"
    },
    "conclusion_fol": "thrives_in_ecosystem(Cairo)"
  },
  {
    "id": 19,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stone is not adventurous.",
    "reasoning": "fact1: Stone does not understand the world.\nrule: If Stone pursues knowledge, then he understands the world.\nconclusion: Stone does not pursue knowledge.\n\nfact1: Stone does not pursue knowledge.\nrule: For Stone, valuing serenity and pursuing knowledge are mutually exclusive.\nconclusion: Stone values serenity.\n\nfact1: Stone advances technology.\nrule: Stone either conserves resources or advances technology, but not both.\nconclusion: Stone does not conserve resources.\n\nfact1: Stone does not conserve resources.\nfact2: Stone does not protect wildlife.\nrule: Everyone who respects the environment either conserves resources or protects wildlife (or both).\nconclusion: Stone does not respect his environment.\n\nfact1: Stone does not appreciate beauty.\nfact2: Stone does not respect his environment.\nrule: Everyone who either lives in harmony or appreciates beauty is someone who respects their environment.\nconclusion: Stone does not live in harmony.\n\nfact1: Stone values serenity.\nfact2: Stone does not live in harmony.\nrule: If someone values serenity and finds inner peace, then they can live in harmony.\nconclusion: Stone does not find inner peace.\n\nfact1: Stone loves nature.\nfact2: Stone does not find inner peace.\nrule: Anyone who loves nature and is spiritual can find inner peace.\nconclusion: Stone is not spiritual.\n\nfact1: Stone is not spiritual.\nrule: Stone is spiritual or adventurous (or both).\nconclusion: Stone is not adventurous.\n\nTherefore, it is false that Stone is not adventurous. The correct option is: B.",
    "context": "Anyone who explores the world either seeks wisdom or pursues knowledge (or both). Stone does not understand the world. If someone values serenity and finds inner peace, then they can live in harmony. If Stone pursues knowledge, then he understands the world. Stone is spiritual or adventurous (or both). Stone either conserves resources or advances technology, but not both. Stone does not appreciate beauty. If Stone practices mindfulness, then he either seeks balance or values serenity, but not both. Stone seeks balance or lives in harmony. Everyone who respects the environment either conserves resources or protects wildlife (or both). For Stone, valuing serenity and pursuing knowledge are mutually exclusive. Anyone who loves nature and is spiritual can find inner peace. Everyone who either lives in harmony or appreciates beauty is someone who respects their environment. Stone loves nature. Stone does not protect wildlife. Stone advances technology.",
    "nl2fol": {
      "Anyone who explores the world either seeks wisdom or pursues knowledge (or both).": "∀x (explores_world(x) → (seeks_wisdom(x) ∨ pursues_knowledge(x)))",
      "Stone does not understand the world.": "¬understands_world(Stone)",
      "If someone values serenity and finds inner peace, then they can live in harmony.": "∀x ((values_serenity(x) ∧ finds_inner_peace(x)) → lives_in_harmony(x))",
      "If Stone pursues knowledge, then he understands the world.": "pursues_knowledge(Stone) → understands_world(Stone)",
      "Stone is spiritual or adventurous (or both).": "spiritual(Stone) ∨ adventurous(Stone)",
      "Stone either conserves resources or advances technology, but not both.": "conserves_resources(Stone) ⊕ advances_technology(Stone)",
      "Stone does not appreciate beauty.": "¬appreciates_beauty(Stone)",
      "If Stone practices mindfulness, then he either seeks balance or values serenity, but not both.": "practices_mindfulness(Stone) → (seeks_balance(Stone) ⊕ values_serenity(Stone))",
      "Stone seeks balance or lives in harmony.": "seeks_balance(Stone) ∨ lives_in_harmony(Stone)",
      "Everyone who respects the environment either conserves resources or protects wildlife (or both).": "∀x (respects_environment(x) → (conserves_resources(x) ∨ protects_wildlife(x)))",
      "For Stone, valuing serenity and pursuing knowledge are mutually exclusive.": "values_serenity(Stone) ⊕ pursues_knowledge(Stone)",
      "Anyone who loves nature and is spiritual can find inner peace.": "∀x ((loves_nature(x) ∧ spiritual(x)) → finds_inner_peace(x))",
      "Everyone who either lives in harmony or appreciates beauty is someone who respects their environment.": "∀x ((lives_in_harmony(x) ⊕ appreciates_beauty(x)) → respects_environment(x))",
      "Stone loves nature.": "loves_nature(Stone)",
      "Stone does not protect wildlife.": "¬protects_wildlife(Stone)",
      "Stone advances technology.": "advances_technology(Stone)"
    },
    "conclusion_fol": "¬adventurous(Stone)"
  },
  {
    "id": 20,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Siena does not have a beautiful song.",
    "reasoning": "fact1: Siena has wings.\nfact2: Siena stays nested.\nrule: If Siena has wings, then she either flies freely or stays nested, but not both.\nconclusion: Siena does not fly freely.\n\nfact1: Siena does not fly freely.\nrule: Siena either flies freely or thrives in the forest.\nconclusion: Siena thrives in the forest.\n\nfact1: Siena has camouflage plumage.\nrule: If a bird has camouflage plumage, then it blends into its environment.\nconclusion: Siena blends into her environment.\n\nfact1: Siena blends into her environment.\nrule: Siena either attracts attention or blends into her environment, but not both.\nconclusion: Siena does not attract attention.\n\nfact1: Siena has a distinct call.\nfact2: Siena does not attract attention.\nrule: Every bird that has a distinct call either attracts attention or stands out (or both).\nconclusion: Siena stands out.\n\nfact1: Siena stands out.\nfact2: Siena does not bring joy.\nrule: Any bird that stands out either inspires artists or brings joy.\nconclusion: Siena inspires artists.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Siena does not have a beautiful song. The correct option is: C.",
    "context": "Siena has wings. Siena stays nested. If Siena has wings, then she either flies freely or stays nested, but not both. If Siena has a loud song, then she either has bright plumage or attracts attention (but not both). Any bird that stands out either inspires artists or brings joy. Siena has camouflage plumage. Siena either flies freely or thrives in the forest. Siena has a distinct call. Siena either attracts attention or blends into her environment, but not both. If Siena has bright plumage, then she stands out and sings sweetly. Millie has wings. All basically wild birds fly freely and are adaptable. If Millie has wings, then she either flies freely or stays nested, but not both. If a bird has camouflage plumage, then it blends into its environment. If Angelo has either vibrant feathers or a beautiful song (but not both), then she inspires artists. Every bird that has a distinct call either attracts attention or stands out (or both). Siena does not bring joy.",
    "nl2fol": {
      "Siena has wings.": "has_wings(Siena)",
      "Siena stays nested.": "stays_nested(Siena)",
      "If Siena has wings, then she either flies freely or stays nested, but not both.": "has_wings(Siena) → (flies_freely(Siena) ⊕ stays_nested(Siena))",
      "If Siena has a loud song, then she either has bright plumage or attracts attention (but not both).": "has_loud_song(Siena) → (has_bright_plumage(Siena) ⊕ attracts_attention(Siena))",
      "Any bird that stands out either inspires artists or brings joy.": "∀x (stands_out(x) → (inspires_artists(x) ∨ brings_joy(x)))",
      "Siena has camouflage plumage.": "has_camo_plumage(Siena)",
      "Siena either flies freely or thrives in the forest.": "flies_freely(Siena) ∨ thrives_forest(Siena)",
      "Siena has a distinct call.": "has_distinct_call(Siena)",
      "Siena either attracts attention or blends into her environment, but not both.": "attracts_attention(Siena) ⊕ blends_into_environment(Siena)",
      "If Siena has bright plumage, then she stands out and sings sweetly.": "has_bright_plumage(Siena) → (stands_out(Siena) ∧ sings_sweetly(Siena))",
      "Millie has wings.": "has_wings(Millie)",
      "All basically wild birds fly freely and are adaptable.": "∀x (basically_wild(x) → (flies_freely(x) ∧ is_adaptable(x)))",
      "If Millie has wings, then she either flies freely or stays nested, but not both.": "has_wings(Millie) → (flies_freely(Millie) ⊕ stays_nested(Millie))",
      "If a bird has camouflage plumage, then it blends into its environment.": "∀x (has_camo_plumage(x) → blends_into_environment(x))",
      "If Angelo has either vibrant feathers or a beautiful song (but not both), then she inspires artists.": "(vibrant_feathers(Angelo) ⊕ beautiful_song(Angelo)) → inspires_artists(Angelo)",
      "Every bird that has a distinct call either attracts attention or stands out (or both).": "∀x (has_distinct_call(x) → (attracts_attention(x) ∨ stands_out(x)))",
      "Siena does not bring joy.": "¬brings_joy(Siena)"
    },
    "conclusion_fol": "¬beautiful_song(Siena)"
  },
  {
    "id": 21,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adeline is intelligent.",
    "reasoning": "fact1: Adeline does not shape the opinions of others.\nrule: Those who have influence in their field will shape the opinions of others.\nconclusion: Adeline does not have influence in her field.\n\nfact1: Adeline sets goals.\nrule: If Adeline sets goals, then she will work hard.\nconclusion: Adeline works hard.\n\nfact1: Adeline does not have influence in her field.\nrule: If someone gains recognition, then they will have influence in their field.\nconclusion: Adeline does not gain recognition.\n\nfact1: Adeline does not gain recognition.\nrule: If Adeline achieves success, then she will gain recognition.\nconclusion: Adeline does not achieve success.\n\nfact1: Adeline does not achieve success.\nrule: Adeline achieves success or has expertise.\nconclusion: Adeline has expertise.\n\nfact1: Adeline has expertise.\nfact2: Adeline works hard.\nrule: If Adeline is dedicated, then she either has expertise or works hard (but not both).\nconclusion: Adeline is not dedicated.\n\nfact1: Adeline is not dedicated.\nrule: Adeline is intelligent or dedicated.\nconclusion: Adeline is intelligent.\n\nTherefore, it is true that Adeline is intelligent. The correct option is: A.",
    "context": "If Adeline pursues her passion, then she will achieve success. Adeline is intelligent or dedicated. If Adeline sets goals, then she will work hard. If Adeline is dedicated, then she either has expertise or works hard (but not both). Adeline achieves success or has expertise. Adeline does not shape the opinions of others. Adeline sets goals. If Adeline achieves success, then she will gain recognition. If someone makes discoveries and publishes research, then they will have influence in their field. If Adeline is passionate, then she is dedicated and cares about others. Those who have influence in their field will shape the opinions of others. Briella sets goals. If someone gains recognition, then they will have influence in their field.",
    "nl2fol": {
      "If Adeline pursues her passion, then she will achieve success.": "pursues_passion(Adeline) → achieves_success(Adeline)",
      "Adeline is intelligent or dedicated.": "intelligent(Adeline) ∨ dedicated(Adeline)",
      "If Adeline sets goals, then she will work hard.": "sets_goals(Adeline) → works_hard(Adeline)",
      "If Adeline is dedicated, then she either has expertise or works hard (but not both).": "dedicated(Adeline) → (has_expertise(Adeline) ⊕ works_hard(Adeline))",
      "Adeline achieves success or has expertise.": "achieves_success(Adeline) ∨ has_expertise(Adeline)",
      "Adeline does not shape the opinions of others.": "¬shapes_opinions(Adeline)",
      "Adeline sets goals.": "sets_goals(Adeline)",
      "If Adeline achieves success, then she will gain recognition.": "achieves_success(Adeline) → gains_recognition(Adeline)",
      "If someone makes discoveries and publishes research, then they will have influence in their field.": "∀x ((makes_discoveries(x) ∧ publishes_research(x)) → has_influence(x))",
      "If Adeline is passionate, then she is dedicated and cares about others.": "passionate(Adeline) → (dedicated(Adeline) ∧ care_about_others(Adeline))",
      "Those who have influence in their field will shape the opinions of others.": "∀x (has_influence(x) → shapes_opinions(x))",
      "Briella sets goals.": "sets_goals(Briella)",
      "If someone gains recognition, then they will have influence in their field.": "∀x (gains_recognition(x) → has_influence(x))"
    },
    "conclusion_fol": "intelligent(Adeline)"
  },
  {
    "id": 22,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Micah grew up in the wilderness or experienced frontier life (or both), then he developed survival skills.",
    "reasoning": "fact1: Micah follows his instincts.\nrule: Micah either follows his instincts or thinks critically, but not both.\nconclusion: Micah does not think critically.\n\nfact1: Micah survives harsh conditions.\nfact2: Micah does not think critically.\nrule: If Micah survives harsh conditions, then he is either able to adapt quickly or think critically (but not both).\nconclusion: Micah adapts quickly.\n\nfact1: Micah does not learn from experience.\nfact2: Micah adapts quickly.\nrule: If Micah learns from experience or adapts quickly, then he is self-taught.\nconclusion: Micah is self-taught.\n\nfact1: Micah values independence.\nfact2: Micah is resourceful.\nrule: If Micah values independence, then he lives off the grid and is resourceful.\nconclusion: Micah lives off the grid.\n\nfact1: Micah lives off the grid.\nfact2: Micah is self-taught.\nrule: If Micah lives off the grid, then he either has formal education or is self-taught, but not both.\nconclusion: Micah does not have formal education.\n\nfact1: Micah does not have formal education.\nrule: Micah either has formal education or experiences frontier life, but not both.\nconclusion: Micah experienced frontier life.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Micah grew up in the wilderness or experienced frontier life (or both), then he developed survival skills. The correct option is: C.",
    "context": "Micah either follows his instincts or thinks critically, but not both. Micah survives harsh conditions. Micah values independence. Micah either has formal education or experiences frontier life, but not both. If Micah survives harsh conditions, then he is either able to adapt quickly or think critically (but not both). Micah is resourceful. If Micah learns from experience or adapts quickly, then he is self-taught. Micah does not learn from experience. If Micah values independence, then he lives off the grid and is resourceful. Micah follows his instincts. If Micah lives off the grid, then he either has formal education or is self-taught, but not both.",
    "nl2fol": {
      "Micah either follows his instincts or thinks critically, but not both.": "follows_instincts(Micah) ⊕ thinks_critically(Micah)",
      "Micah survives harsh conditions.": "survives_harsh_conditions(Micah)",
      "Micah values independence.": "values_independence(Micah)",
      "Micah either has formal education or experiences frontier life, but not both.": "has_formal_education(Micah) ⊕ experienced_frontier_life(Micah)",
      "If Micah survives harsh conditions, then he is either able to adapt quickly or think critically (but not both).": "survives_harsh_conditions(Micah) → (adapts_quickly(Micah) ⊕ thinks_critically(Micah))",
      "Micah is resourceful.": "resourceful(Micah)",
      "If Micah learns from experience or adapts quickly, then he is self-taught.": "(learns_from_experience(Micah) ∨ adapts_quickly(Micah)) → self_taught(Micah)",
      "Micah does not learn from experience.": "¬learns_from_experience(Micah)",
      "If Micah values independence, then he lives off the grid and is resourceful.": "values_independence(Micah) → (lives_off_grid(Micah) ∧ resourceful(Micah))",
      "Micah follows his instincts.": "follows_instincts(Micah)",
      "If Micah lives off the grid, then he either has formal education or is self-taught, but not both.": "lives_off_grid(Micah) → (self_taught(Micah) ⊕ has_formal_education(Micah))"
    },
    "conclusion_fol": "(grew_up_in_the_wilderness(Micah) ∨ experienced_frontier_life(Micah)) → developed_survival_skills(Micah)"
  },
  {
    "id": 23,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hallie is not creative.",
    "reasoning": "fact1: Hallie does not record top tracks.\nfact2: Hallie does not become mainstream.\nrule: If Hallie either creates hit singles or records top tracks (but not both), then she becomes mainstream.\nconclusion: Hallie does not create hit singles.\n\nfact1: Hallie does not experiment with genres.\nfact2: Hallie does not release popular music.\nrule: If Hallie either experiments with genres or collaborates with other artists (but not both), then she releases popular music.\nconclusion: Hallie does not collaborate with other artists.\n\nfact1: Hallie does not create hit singles.\nfact2: Hallie does not collaborate with other artists.\nrule: Every musician who gains a following either creates hit singles or collaborates with other artists (or both).\nconclusion: Hallie does not gain a following.\n\nfact1: Hallie does not write songs.\nfact2: Hallie does not perform live.\nrule: Every musician who is part of a band either writes songs or performs live (or both).\nconclusion: Hallie is not part of a band.\n\nfact1: Hallie has vocal range.\nfact2: Hallie does not gain a following.\nrule: If Hallie has vocal range and produces albums, then she gains a following.\nconclusion: Hallie does not produce albums.\n\nfact1: Hallie does not produce albums.\nrule: Hallie is either a solo artist or produces albums, but not both.\nconclusion: Hallie is a solo artist.\n\nfact1: Hallie is not part of a band.\nfact2: Hallie is a solo artist.\nrule: For every musician, if they are either part of a band or a solo artist (but not both), then they are creative.\nconclusion: Hallie is not creative.\n\nTherefore, it is false that Hallie is not creative. The correct option is: B.",
    "context": "Hallie does not become mainstream. If Hallie either experiments with genres or collaborates with other artists (but not both), then she releases popular music. If Hallie is charismatic, then she creates hit singles. Every musician who is part of a band either writes songs or performs live (or both). Hallie does not experiment with genres. Hallie does not release popular music. If Hallie either plays an instrument or composes music (but not both), then she is part of a band. For every musician, if they are either part of a band or a solo artist (but not both), then they are creative. Hallie has vocal range. If Hallie either creates hit singles or records top tracks (but not both), then she becomes mainstream. Hallie is either a solo artist or produces albums, but not both. Every musician who gains a following either creates hit singles or collaborates with other artists (or both). If Hallie has vocal range and produces albums, then she gains a following. Hallie does not record top tracks. Hallie does not write songs. If Hallie either sells tickets or wins awards (but not both), then she gains a following. Hallie does not perform live.",
    "nl2fol": {
      "Hallie does not become mainstream.": "¬become_mainstream(Hallie)",
      "If Hallie either experiments with genres or collaborates with other artists (but not both), then she releases popular music.": "(experiment_with_genres(Hallie) ⊕ collaborate_with_artists(Hallie)) → release_popular_music(Hallie)",
      "If Hallie is charismatic, then she creates hit singles.": "is_charismatic(Hallie) → create_hit_singles(Hallie)",
      "Every musician who is part of a band either writes songs or performs live (or both).": "∀x (part_of_band(x) → (write_songs(x) ∨ perform_live(x)))",
      "Hallie does not experiment with genres.": "¬experiment_with_genres(Hallie)",
      "Hallie does not release popular music.": "¬release_popular_music(Hallie)",
      "If Hallie either plays an instrument or composes music (but not both), then she is part of a band.": "(play_instrument(Hallie) ⊕ compose_music(Hallie)) → part_of_band(Hallie)",
      "For every musician, if they are either part of a band or a solo artist (but not both), then they are creative.": "∀x ((part_of_band(x) ⊕ solo_artist(x)) → creative(x))",
      "Hallie has vocal range.": "has_vocal_range(Hallie)",
      "If Hallie either creates hit singles or records top tracks (but not both), then she becomes mainstream.": "(create_hit_singles(Hallie) ⊕ record_top_tracks(Hallie)) → become_mainstream(Hallie)",
      "Hallie is either a solo artist or produces albums, but not both.": "solo_artist(Hallie) ⊕ produces_albums(Hallie)",
      "Every musician who gains a following either creates hit singles or collaborates with other artists (or both).": "∀x (gains_following(x) → (create_hit_singles(x) ∨ collaborate_with_artists(x)))",
      "If Hallie has vocal range and produces albums, then she gains a following.": "(has_vocal_range(Hallie) ∧ produces_albums(Hallie)) → gains_following(Hallie)",
      "Hallie does not record top tracks.": "¬record_top_tracks(Hallie)",
      "Hallie does not write songs.": "¬write_songs(Hallie)",
      "If Hallie either sells tickets or wins awards (but not both), then she gains a following.": "(sells_tickets(Hallie) ⊕ wins_awards(Hallie)) → gains_following(Hallie)",
      "Hallie does not perform live.": "¬perform_live(Hallie)"
    },
    "conclusion_fol": "¬creative(Hallie)"
  },
  {
    "id": 24,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Noelle does not read music fluently.",
    "reasoning": "fact1: Noelle has perfect pitch.\nfact2: Noelle is classically trained.\nrule: If Noelle has perfect pitch, then she either plays by ear or is classically trained, but not both.\nconclusion: Noelle does not play by ear.\n\nfact1: Noelle creates beautiful music.\nrule: Those who create beautiful music are musically gifted.\nconclusion: Noelle is musically gifted.\n\nfact1: Noelle does not play by ear.\nrule: Noelle either plays by ear or is a piano prodigy, but not both.\nconclusion: Noelle is a piano prodigy.\n\nfact1: Noelle is musically gifted.\nrule: If Noelle is musically gifted, then she will compose original pieces.\nconclusion: Noelle composes original pieces.\n\nfact1: Noelle composes original pieces.\nrule: Noelle either composes original pieces or improvises easily, but not necessarily both.\nconclusion: Noelle does not improvise easily.\n\nfact1: Noelle is a piano prodigy.\nfact2: Noelle does not improvise easily.\nrule: For all humans, if someone is a piano prodigy, then they either read music fluently or improvise easily (or both).\nconclusion: Noelle reads music fluently.\n\nTherefore, it is false that Noelle does not read music fluently. The correct option is: B.",
    "context": "Everyone who expresses themselves emotionally through their craft either performs publicly or composes original pieces (or both). If Noelle is musically gifted, then she will compose original pieces. For all humans, if someone is a piano prodigy, then they either read music fluently or improvise easily (or both). Noelle either composes original pieces or improvises easily, but not necessarily both. Noelle has perfect pitch. If Noelle appreciates harmony, then she is musically gifted. If Noelle has perfect pitch, then she either plays by ear or is classically trained, but not both. Those who create beautiful music are musically gifted. Jaime either plays by ear or is a piano prodigy, but not both. If Aisha is musically gifted, then she will compose original pieces. If Aisha has perfect pitch, then she either plays by ear or is classically trained, but not both. Noelle can play by ear if she learns music quickly. Aisha has perfect pitch. Noelle is classically trained. Noelle creates beautiful music. Noelle either plays by ear or is a piano prodigy, but not both. Valentina either composes original pieces or improvises easily, but not necessarily both.",
    "nl2fol": {
      "Everyone who expresses themselves emotionally through their craft either performs publicly or composes original pieces (or both).": "∀x (express_emotionally(x) → (perform_publicly(x) ∨ compose_original_pieces(x)))",
      "If Noelle is musically gifted, then she will compose original pieces.": "musically_gifted(Noelle) → compose_original_pieces(Noelle)",
      "For all humans, if someone is a piano prodigy, then they either read music fluently or improvise easily (or both).": "∀x (piano_prodigy(x) → (read_music_fluently(x) ∨ improvise_easily(x)))",
      "Noelle either composes original pieces or improvises easily, but not necessarily both.": "compose_original_pieces(Noelle) ⊕ improvise_easily(Noelle)",
      "Noelle has perfect pitch.": "has_perfect_pitch(Noelle)",
      "If Noelle appreciates harmony, then she is musically gifted.": "appreciates_harmony(Noelle) → musically_gifted(Noelle)",
      "If Noelle has perfect pitch, then she either plays by ear or is classically trained, but not both.": "has_perfect_pitch(Noelle) → (play_by_ear(Noelle) ⊕ is_classical_trained(Noelle))",
      "Those who create beautiful music are musically gifted.": "∀x (create_beautiful_music(x) → musically_gifted(x))",
      "Jaime either plays by ear or is a piano prodigy, but not both.": "play_by_ear(Jaime) ⊕ piano_prodigy(Jaime)",
      "If Aisha is musically gifted, then she will compose original pieces.": "musically_gifted(Aisha) → compose_original_pieces(Aisha)",
      "If Aisha has perfect pitch, then she either plays by ear or is classically trained, but not both.": "has_perfect_pitch(Aisha) → (play_by_ear(Aisha) ⊕ is_classical_trained(Aisha))",
      "Noelle can play by ear if she learns music quickly.": "learn_music_quickly(Noelle) → play_by_ear(Noelle)",
      "Aisha has perfect pitch.": "has_perfect_pitch(Aisha)",
      "Noelle is classically trained.": "is_classical_trained(Noelle)",
      "Noelle creates beautiful music.": "create_beautiful_music(Noelle)",
      "Noelle either plays by ear or is a piano prodigy, but not both.": "play_by_ear(Noelle) ⊕ piano_prodigy(Noelle)",
      "Valentina either composes original pieces or improvises easily, but not necessarily both.": "compose_original_pieces(Valentina) ⊕ improvise_easily(Valentina)"
    },
    "conclusion_fol": "¬read_music_fluently(Noelle)"
  },
  {
    "id": 25,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ramon does not become a legend in chess.",
    "reasoning": "fact1: Ramon sets high goals.\nfact2: Ramon does not dedicate time to achieve his goals.\nrule: Everyone who sets high goals either dedicates time to achieve them or practices often (or both).\nconclusion: Ramon practices often.\n\nfact1: Ramon thinks critically.\nrule: Anyone who thinks critically has a strategic mind.\nconclusion: Ramon has a strategic mind.\n\nfact1: Ramon develops new openings.\nrule: For Ramon, he either develops new openings or analyzes games, but not necessarily both.\nconclusion: Ramon does not analyze games.\n\nfact1: Ramon does not analyze games.\nrule: Ramon analyzes games or studies opponents.\nconclusion: Ramon studies his opponents.\n\nfact1: Ramon studies his opponents.\nfact2: Ramon practices often.\nrule: If someone studies their opponents and practices often, then they can win major tournaments.\nconclusion: Ramon wins major tournaments.\n\nfact1: Ramon has a strategic mind.\nfact2: Ramon wins major tournaments.\nrule: If Ramon has a strategic mind, then he can either win major tournaments or become a legend in chess, but not both.\nconclusion: Ramon does not become a legend in chess.\n\nTherefore, it is true that Ramon does not become a legend in chess. The correct option is: A.",
    "context": "Ramon sets high goals. If Ramon sets challenging targets, then he either practices often or achieves success (or both). Ramon analyzes games or studies opponents. If someone thinks ahead and anticipates outcomes, then they can have a strategic mind. Ramon develops new openings. If Ramon has a strategic mind, then he can either win major tournaments or become a legend in chess, but not both. Anyone who thinks critically has a strategic mind. Ramon thinks critically. Ramon does not dedicate time to achieve his goals. For Ramon, he either develops new openings or analyzes games, but not necessarily both. Everyone who sets high goals either dedicates time to achieve them or practices often (or both). If someone studies their opponents and practices often, then they can win major tournaments.",
    "nl2fol": {
      "Ramon sets high goals.": "sets_high_goals(Ramon)",
      "If Ramon sets challenging targets, then he either practices often or achieves success (or both).": "sets_challenging_targets(Ramon) → (practices_often(Ramon) ∨ achieves_success(Ramon))",
      "Ramon analyzes games or studies opponents.": "analyzes_games(Ramon) ∨ studies_opponents(Ramon)",
      "If someone thinks ahead and anticipates outcomes, then they can have a strategic mind.": "∀x ((thinks_ahead(x) ∧ anticipates_outcomes(x)) → strategic(x))",
      "Ramon develops new openings.": "develops_new_openings(Ramon)",
      "If Ramon has a strategic mind, then he can either win major tournaments or become a legend in chess, but not both.": "strategic(Ramon) → (win_major_tournaments(Ramon) ⊕ become_a_legend(Ramon))",
      "Anyone who thinks critically has a strategic mind.": "∀x (thinks_critically(x) → strategic(x))",
      "Ramon thinks critically.": "thinks_critically(Ramon)",
      "Ramon does not dedicate time to achieve his goals.": "¬dedicate_time(Ramon)",
      "For Ramon, he either develops new openings or analyzes games, but not necessarily both.": "develops_new_openings(Ramon) ⊕ analyzes_games(Ramon)",
      "Everyone who sets high goals either dedicates time to achieve them or practices often (or both).": "∀x (sets_high_goals(x) → (dedicate_time(x) ∨ practices_often(x)))",
      "If someone studies their opponents and practices often, then they can win major tournaments.": "∀x ((studies_opponents(x) ∧ practices_often(x)) → win_major_tournaments(x))"
    },
    "conclusion_fol": "¬become_a_legend(Ramon)"
  },
  {
    "id": 26,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Maliyah does not refuse to conform.",
    "reasoning": "fact1: Maliyah expresses her emotions.\nrule: If Maliyah expresses her emotions, then she will challenge the status quo and inspire others.\nconclusion: Maliyah challenges the status quo.\n\nfact1: Maliyah trusts her own instincts.\nfact2: Maliyah listens to others.\nrule: If Maliyah trusts her own instincts, then she either creates authentic art or listens to others, but not both.\nconclusion: Maliyah does not create authentic art.\n\nfact1: Maliyah does not create authentic art.\nrule: Anyone who stays true to themselves or values self-expression creates authentic art.\nconclusion: Maliyah does not value self-expression.\n\nfact1: Maliyah does not value self-expression.\nrule: Maliyah either pursues her own vision or values self-expression.\nconclusion: Maliyah pursues her own vision.\n\nfact1: Maliyah pursues her own vision.\nfact2: Maliyah follows established rules.\nrule: If Maliyah pursues her own vision, then she is either following established rules or creating unique art, but not both.\nconclusion: Maliyah does not create unique art.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Maliyah does not refuse to conform. The correct option is: C.",
    "context": "Maliyah either pursues her own vision or values self-expression. John listens to others. If Maliyah believes in herself, then she creates authentic art. Maliyah listens to others. If Maliyah trusts her own instincts, then she either creates authentic art or listens to others, but not both. Anyone who stays true to themselves or values self-expression creates authentic art. Nathaniel expresses her emotions. Jaylen either pursues her own vision or values self-expression. If Maliyah pursues her own vision, then she is either following established rules or creating unique art, but not both. Anyone who thinks outside the box or pushes boundaries can challenge the status quo. If Maliyah has artistic talent, then she either seeks creative freedom or values self-expression, but not both. Maliyah follows established rules. Jaylen trusts her own instincts. If John expresses her emotions, then she will challenge the status quo and inspire others. Jaylen follows established rules. Maliyah expresses her emotions. If Nathaniel trusts her own instincts, then she either creates authentic art or listens to others, but not both. Maliyah trusts her own instincts. If Maliyah expresses her emotions, then she will challenge the status quo and inspire others.",
    "nl2fol": {
      "Maliyah either pursues her own vision or values self-expression.": "pursue_own_vision(Maliyah) ∨ values_self_expression(Maliyah)",
      "John listens to others.": "listen_to_others(John)",
      "If Maliyah believes in herself, then she creates authentic art.": "believes_in_self(Maliyah) → creates_authentic_art(Maliyah)",
      "Maliyah listens to others.": "listens_to_others(Maliyah)",
      "If Maliyah trusts her own instincts, then she either creates authentic art or listens to others, but not both.": "trusts_own_instincts(Maliyah) → (listens_to_others(Maliyah) ⊕ creates_authentic_art(Maliyah))",
      "Anyone who stays true to themselves or values self-expression creates authentic art.": "∀x ((stays_true_to_herself(x) ∨ values_self_expression(x)) → creates_authentic_art(x))",
      "Nathaniel expresses her emotions.": "express_emotions(Nathaniel)",
      "Jaylen either pursues her own vision or values self-expression.": "pursue_own_vision(Jaylen) ∨ values_self_expression(Jaylen)",
      "If Maliyah pursues her own vision, then she is either following established rules or creating unique art, but not both.": "pursue_own_vision(Maliyah) → (follow_established_rules(Maliyah) ⊕ create_unique_art(Maliyah))",
      "Anyone who thinks outside the box or pushes boundaries can challenge the status quo.": "∀x ((think_outside_box(x) ∨ push_boundaries(x)) → challenge_status_quo(x))",
      "If Maliyah has artistic talent, then she either seeks creative freedom or values self-expression, but not both.": "has_artistic_talent(Maliyah) → (seeks_creative_freedom(Maliyah) ⊕ values_self_expression(Maliyah))",
      "Maliyah follows established rules.": "follow_established_rules(Maliyah)",
      "Jaylen trusts her own instincts.": "trusts_own_instincts(Jaylen)",
      "If John expresses her emotions, then she will challenge the status quo and inspire others.": "express_emotions(John) → (challenge_status_quo(John) ∧ inspire_others(John))",
      "Jaylen follows established rules.": "follow_established_rules(Jaylen)",
      "Maliyah expresses her emotions.": "express_emotions(Maliyah)",
      "If Nathaniel trusts her own instincts, then she either creates authentic art or listens to others, but not both.": "trusts_own_instincts(Nathaniel) → (listens_to_others(Nathaniel) ⊕ creates_authentic_art(Nathaniel))",
      "Maliyah trusts her own instincts.": "trusts_own_instincts(Maliyah)",
      "If Maliyah expresses her emotions, then she will challenge the status quo and inspire others.": "express_emotions(Maliyah) → (challenge_status_quo(Maliyah) ∧ inspire_others(Maliyah))"
    },
    "conclusion_fol": "¬refuse_to_conform(Maliyah)"
  },
  {
    "id": 27,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sincere inspires humanity.",
    "reasoning": "fact1: Sincere does not tour globally.\nfact2: Sincere does not entertain crowds.\nrule: For all people, if they either perform locally or tour globally (but not both), then they entertain crowds.\nconclusion: Sincere does not perform locally.\n\nfact1: Sincere does not perform locally.\nrule: Sincere gains international recognition or performs locally.\nconclusion: Sincere gains international recognition.\n\nfact1: Sincere learns from others.\nfact2: Sincere expresses himself creatively.\nrule: For anyone who learns from others and expresses themselves creatively, they can produce original work.\nconclusion: Sincere produces original work.\n\nfact1: Sincere gains international recognition.\nfact2: Sincere does not work independently.\nrule: If Sincere gains international recognition, then he either works independently or collaborates with artists, but not both.\nconclusion: Sincere collaborates with artists.\n\nfact1: Sincere produces original work.\nfact2: Sincere collaborates with artists.\nrule: If Sincere creates local content, then he either produces original work or collaborates with artists, but not both.\nconclusion: Sincere does not create local content.\n\nfact1: Sincere does not create local content.\nrule: Sincere either has a global platform or creates local content, but not both.\nconclusion: Sincere has a global platform.\n\nfact1: Sincere is influential.\nfact2: Sincere fosters global understanding.\nrule: If Sincere is influential, then he can either promote cultural awareness or foster global understanding, but not both.\nconclusion: Sincere does not promote cultural awareness.\n\nfact1: Sincere has a global platform.\nfact2: Sincere does not promote cultural awareness.\nrule: If Sincere has a global platform, then he can either promote cultural awareness or inspire humanity, but not both.\nconclusion: Sincere inspires humanity.\n\nTherefore, it is true that Sincere inspires humanity. The correct option is: A.",
    "context": "Sincere does not work independently. Sincere either has a global platform or creates local content, but not both. If Sincere has a global platform, then he can either promote cultural awareness or inspire humanity, but not both. Sincere learns from others. If Sincere values diversity, then he either builds connections with others or has a global platform (or both). Sincere gains international recognition or performs locally. Milani does not entertain crowds. If Sincere gains international recognition, then he either works independently or collaborates with artists, but not both. Anyone who starts small or builds a local following can perform locally. Sincere does not entertain crowds. Sincere expresses himself creatively. If Camilo is influential, then he can either promote cultural awareness or foster global understanding, but not both. If Sincere values diversity and appreciates culture, then he can collaborate with artists. Sincere is influential. Anyone who appreciates diversity or values inclusion can promote cultural awareness. Sincere shares his personal story or creates local content. For all people, if they either perform locally or tour globally (but not both), then they entertain crowds. If Sincere is influential, then he can either promote cultural awareness or foster global understanding, but not both. If Sincere creates local content, then he either produces original work or collaborates with artists, but not both. Sincere fosters global understanding. Sincere does not tour globally. For anyone who learns from others and expresses themselves creatively, they can produce original work.",
    "nl2fol": {
      "Sincere does not work independently.": "¬work_independently(Sincere)",
      "Sincere either has a global platform or creates local content, but not both.": "has_global_platform(Sincere) ⊕ create_local_content(Sincere)",
      "If Sincere has a global platform, then he can either promote cultural awareness or inspire humanity, but not both.": "has_global_platform(Sincere) → (promote_cultural_awareness(Sincere) ⊕ inspire_humanity(Sincere))",
      "Sincere learns from others.": "learns_from_others(Sincere)",
      "If Sincere values diversity, then he either builds connections with others or has a global platform (or both).": "values_diversity(Sincere) → (builds_connections(Sincere) ∨ has_global_platform(Sincere))",
      "Sincere gains international recognition or performs locally.": "gain_international_recognition(Sincere) ∨ perform_locally(Sincere)",
      "Milani does not entertain crowds.": "¬entertain_crowds(Milani)",
      "If Sincere gains international recognition, then he either works independently or collaborates with artists, but not both.": "gain_international_recognition(Sincere) → (work_independently(Sincere) ⊕ collaborate_with_artists(Sincere))",
      "Anyone who starts small or builds a local following can perform locally.": "∀x ((starts_small(x) ∨ builds_local_following(x)) → perform_locally(x))",
      "Sincere does not entertain crowds.": "¬entertain_crowds(Sincere)",
      "Sincere expresses himself creatively.": "expresses_creatively(Sincere)",
      "If Camilo is influential, then he can either promote cultural awareness or foster global understanding, but not both.": "is_influential(Camilo) → (foster_global_understanding(Camilo) ⊕ promote_cultural_awareness(Camilo))",
      "If Sincere values diversity and appreciates culture, then he can collaborate with artists.": "(values_diversity(Sincere) ∧ appreciates_culture(Sincere)) → collaborate_with_artists(Sincere)",
      "Sincere is influential.": "is_influential(Sincere)",
      "Anyone who appreciates diversity or values inclusion can promote cultural awareness.": "∀x ((appreciate_diversity(x) ∨ value_inclusion(x)) → promote_cultural_awareness(x))",
      "Sincere shares his personal story or creates local content.": "shares_personal_story(Sincere) ∨ create_local_content(Sincere)",
      "For all people, if they either perform locally or tour globally (but not both), then they entertain crowds.": "∀x ((perform_locally(x) ⊕ tour_globally(x)) → entertain_crowds(x))",
      "If Sincere is influential, then he can either promote cultural awareness or foster global understanding, but not both.": "is_influential(Sincere) → (foster_global_understanding(Sincere) ⊕ promote_cultural_awareness(Sincere))",
      "If Sincere creates local content, then he either produces original work or collaborates with artists, but not both.": "create_local_content(Sincere) → (produce_original_work(Sincere) ⊕ collaborate_with_artists(Sincere))",
      "Sincere fosters global understanding.": "foster_global_understanding(Sincere)",
      "Sincere does not tour globally.": "¬tour_globally(Sincere)",
      "For anyone who learns from others and expresses themselves creatively, they can produce original work.": "∀x ((learns_from_others(x) ∧ expresses_creatively(x)) → produce_original_work(x))"
    },
    "conclusion_fol": "inspire_humanity(Sincere)"
  },
  {
    "id": 28,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mina does not feel beautiful.",
    "reasoning": "fact1: Mina creates products.\nfact2: Mina prioritizes aesthetics.\nrule: If Mina creates products, then she either emphasizes practicality or prioritizes aesthetics, but not both.\nconclusion: Mina does not emphasize practicality.\n\nfact1: Mina has high standards.\nfact2: Mina is not a perfectionist.\nrule: If Mina has high standards, then she either pays attention to details or is a perfectionist, but not both.\nconclusion: Mina pays attention to details.\n\nfact1: Mina designs clothing.\nfact2: Mina does not emphasize practicality.\nrule: If Mina designs clothing, then she either emphasizes practicality or values comfort (or both).\nconclusion: Mina values comfort.\n\nfact1: Mina values comfort.\nrule: Mina is either trendy or values comfort, but not both.\nconclusion: Mina is not trendy.\n\nfact1: Mina is fashionable.\nfact2: Mina is not trendy.\nrule: If Mina is fashionable, then she is either trendy or has good style, but not both.\nconclusion: Mina has good style.\n\nfact1: Mina pays attention to details.\nfact2: Mina has good style.\nrule: If Mina pays attention to details, then she either has good style or dresses well, but not both.\nconclusion: Mina does not dress well.\n\nfact1: Mina does not dress well.\nrule: Mina either dresses well or wears proper fit clothes.\nconclusion: Mina wears proper fit clothes.\n\nfact1: Mina has low self-esteem.\nrule: Mina either has low self-esteem or feels confident, but not both.\nconclusion: Mina does not feel confident.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Mina does not feel beautiful. The correct option is: C.",
    "context": "Mina either has low self-esteem or feels confident, but not both. If Mina creates products, then she either emphasizes practicality or prioritizes aesthetics, but not both. Mina creates products. If Mina pays attention to details, then she either has good style or dresses well, but not both. Mina is either trendy or values comfort, but not both. If Mina designs clothing, then she either emphasizes practicality or values comfort (or both). Delilah either has low self-esteem or feels confident, but not both. If Mina is fashionable, then she is either trendy or has good style, but not both. If someone has good taste, then they take care of their appearance and dress well. If Mina has high standards, then she either pays attention to details or is a perfectionist, but not both. Delilah has high standards. Mina has low self-esteem. If Heidi designs clothing, then she either emphasizes practicality or values comfort (or both). Mina designs clothing. If Mina launches a brand, then she either focuses on sustainability or emphasizes practicality (but not both). Mina is not a perfectionist. Mina has high standards. Mohammad designs clothing. Mina prioritizes aesthetics. If Mohammad pays attention to details, then she either has good style or dresses well, but not both. Mina is fashionable. Mina either dresses well or wears proper fit clothes.",
    "nl2fol": {
      "Mina either has low self-esteem or feels confident, but not both.": "has_low_self_esteam(Mina) ⊕ feel_confident(Mina)",
      "If Mina creates products, then she either emphasizes practicality or prioritizes aesthetics, but not both.": "creates_products(Mina) → (emphasizes_practicality(Mina) ⊕ prioritizes_aesthetics(Mina))",
      "Mina creates products.": "creates_products(Mina)",
      "If Mina pays attention to details, then she either has good style or dresses well, but not both.": "pays_attention_to_details(Mina) → (has_good_style(Mina) ⊕ dresses_well(Mina))",
      "Mina is either trendy or values comfort, but not both.": "is_trendy(Mina) ⊕ values_comfort(Mina)",
      "If Mina designs clothing, then she either emphasizes practicality or values comfort (or both).": "design_clothing(Mina) → (emphasizes_practicality(Mina) ∨ values_comfort(Mina))",
      "Delilah either has low self-esteem or feels confident, but not both.": "has_low_self_esteam(Delilah) ⊕ feel_confident(Delilah)",
      "If Mina is fashionable, then she is either trendy or has good style, but not both.": "is_fashionable(Mina) → (is_trendy(Mina) ⊕ has_good_style(Mina))",
      "If someone has good taste, then they take care of their appearance and dress well.": "∀x (has_good_taste(x) → (takes_care_appearance(x) ∧ dresses_well(x)))",
      "If Mina has high standards, then she either pays attention to details or is a perfectionist, but not both.": "has_high_standards(Mina) → (pays_attention_to_details(Mina) ⊕ is_perfectionist(Mina))",
      "Delilah has high standards.": "has_high_standards(Delilah)",
      "Mina has low self-esteem.": "has_low_self_esteam(Mina)",
      "If Heidi designs clothing, then she either emphasizes practicality or values comfort (or both).": "design_clothing(Heidi) → (emphasizes_practicality(Heidi) ∨ values_comfort(Heidi))",
      "Mina designs clothing.": "design_clothing(Mina)",
      "If Mina launches a brand, then she either focuses on sustainability or emphasizes practicality (but not both).": "launches_brand(Mina) → (focuses_on_sustainability(Mina) ⊕ emphasizes_practicality(Mina))",
      "Mina is not a perfectionist.": "¬is_perfectionist(Mina)",
      "Mina has high standards.": "has_high_standards(Mina)",
      "Mohammad designs clothing.": "design_clothing(Mohammad)",
      "Mina prioritizes aesthetics.": "prioritizes_aesthetics(Mina)",
      "If Mohammad pays attention to details, then she either has good style or dresses well, but not both.": "pays_attention_to_details(Mohammad) → (has_good_style(Mohammad) ⊕ dresses_well(Mohammad))",
      "Mina is fashionable.": "is_fashionable(Mina)",
      "Mina either dresses well or wears proper fit clothes.": "dresses_well(Mina) ∨ wear_proper_fit_clothes(Mina)"
    },
    "conclusion_fol": "¬feel_beautiful(Mina)"
  },
  {
    "id": 29,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Iris discovers new minerals.",
    "reasoning": "fact1: Iris does not seek self-improvement.\nfact2: Iris does not value personal growth.\nrule: If Iris either values learning or seeks self-improvement (but not both), then she values personal growth.\nconclusion: Iris is not passionate about learning, she is passionate about research.\n\nfact1: Iris is not passionate about learning, she is passionate about research.\nrule: Iris values learning or is passionate about research.\nconclusion: Iris is passionate about research.\n\nfact1: Iris does not publish research.\nrule: Iris collaborates with peers or publishes research (or both).\nconclusion: Iris collaborates with her peers.\n\nfact1: Iris is passionate about research.\nfact2: Iris collaborates with her peers.\nrule: If Iris is passionate about research, then she shares knowledge with others and collaborates with peers.\nconclusion: Iris shares knowledge with others.\n\nfact1: Iris shares knowledge with others.\nrule: Iris either advances human understanding or shares knowledge with others, but not both.\nconclusion: Iris does not advance human understanding.\n\nfact1: Iris pursues academic degrees.\nfact2: Iris does not advance human understanding.\nrule: If Iris either contributes to scientific knowledge or pursues academic degrees (but not both), then she advances human understanding.\nconclusion: Iris contributes to scientific knowledge.\n\nfact1: Iris studies Earth's geological processes.\nfact2: Iris contributes to scientific knowledge.\nrule: If Iris studies Earth's geological processes, then she can either discover new minerals or contribute to scientific knowledge, but not both.\nconclusion: Iris discovers new minerals.\n\nTherefore, it is false that Iris discovers new minerals. The correct option is: B.",
    "context": "Maxine collaborates with peers or publishes research (or both). Iris values learning or is passionate about research. Iris does not publish research. Iris collaborates with peers or publishes research (or both). Iris does not seek self-improvement. If Iris is passionate about research, then she shares knowledge with others and collaborates with peers. If Daisy is passionate about research, then she shares knowledge with others and collaborates with peers. Iris studies Earth's geological processes. If Iris studies Earth's geological processes, then she can either discover new minerals or contribute to scientific knowledge, but not both. If Iris either contributes to scientific knowledge or pursues academic degrees (but not both), then she advances human understanding. If Iris either solves complex problems or analyzes data (but not both), then she is passionate about research. Iris does not value personal growth. Iris either advances human understanding or shares knowledge with others, but not both. If Iris is curious, then she either advances human understanding or has practical skills (but not both). Iris pursues academic degrees. Flora does not seek self-improvement. If Iris either values learning or seeks self-improvement (but not both), then she values personal growth.",
    "nl2fol": {
      "Maxine collaborates with peers or publishes research (or both).": "collaborate_with_peers(Maxine) ∨ publish_research(Maxine)",
      "Iris values learning or is passionate about research.": "values_learning(Iris) ∨ passionate_about_research(Iris)",
      "Iris does not publish research.": "¬publish_research(Iris)",
      "Iris collaborates with peers or publishes research (or both).": "collaborate_with_peers(Iris) ∨ publish_research(Iris)",
      "Iris does not seek self-improvement.": "¬seeks_self_improvement(Iris)",
      "If Iris is passionate about research, then she shares knowledge with others and collaborates with peers.": "passionate_about_research(Iris) → (share_knowledge_with_others(Iris) ∧ collaborate_with_peers(Iris))",
      "If Daisy is passionate about research, then she shares knowledge with others and collaborates with peers.": "passionate_about_research(Daisy) → (share_knowledge_with_others(Daisy) ∧ collaborate_with_peers(Daisy))",
      "Iris studies Earth's geological processes.": "study_earth_processes(Iris)",
      "If Iris studies Earth's geological processes, then she can either discover new minerals or contribute to scientific knowledge, but not both.": "study_earth_processes(Iris) → (discover_new_minerals(Iris) ⊕ contribute_to_scientific_knowledge(Iris))",
      "If Iris either contributes to scientific knowledge or pursues academic degrees (but not both), then she advances human understanding.": "(contribute_to_scientific_knowledge(Iris) ⊕ pursue_academic_degrees(Iris)) → advance_human_understanding(Iris)",
      "If Iris either solves complex problems or analyzes data (but not both), then she is passionate about research.": "(solve_complex_problems(Iris) ⊕ analyze_data(Iris)) → passionate_about_research(Iris)",
      "Iris does not value personal growth.": "¬values_personal_growth(Iris)",
      "Iris either advances human understanding or shares knowledge with others, but not both.": "advance_human_understanding(Iris) ⊕ share_knowledge_with_others(Iris)",
      "If Iris is curious, then she either advances human understanding or has practical skills (but not both).": "has_curiosity(Iris) → (advance_human_understanding(Iris) ⊕ has_practical_skills(Iris))",
      "Iris pursues academic degrees.": "pursue_academic_degrees(Iris)",
      "Flora does not seek self-improvement.": "¬seeks_self_improvement(Flora)",
      "If Iris either values learning or seeks self-improvement (but not both), then she values personal growth.": "(values_learning(Iris) ⊕ seeks_self_improvement(Iris)) → values_personal_growth(Iris)"
    },
    "conclusion_fol": "discover_new_minerals(Iris)"
  },
  {
    "id": 30,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Raelynn creates innovative products.",
    "reasoning": "fact1: Raelynn is curious.\nfact2: Raelynn does not think outside the box.\nrule: If Raelynn is curious, then she either thinks outside the box or pushes boundaries, but not both.\nconclusion: Raelynn pushes boundaries.\n\nfact1: Raelynn prioritizes stability.\nrule: Raelynn either prioritizes stability or can achieve success, but not both.\nconclusion: Raelynn does not achieve success.\n\nfact1: Raelynn does not take risks.\nfact2: Raelynn does not achieve success.\nrule: If Raelynn is innovative or takes risks, then she will achieve success.\nconclusion: Raelynn is not innovative.\n\nfact1: Raelynn pushes boundaries.\nfact2: Raelynn is not innovative.\nrule: If someone either pushes boundaries or works with traditional techniques (but not both), then they are innovative.\nconclusion: Raelynn works with traditional techniques.\n\nfact1: Raelynn works with traditional techniques.\nrule: Raelynn either experiments with materials or works with traditional techniques, but not both.\nconclusion: Raelynn does not experiment with materials.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Raelynn creates innovative products. The correct option is: C.",
    "context": "Raelynn prioritizes stability. Raelynn does not take risks. Raelynn is curious. If someone either pushes boundaries or works with traditional techniques (but not both), then they are innovative. If Raelynn is innovative or takes risks, then she will achieve success. If Raelynn has a creative vision, then she will either achieve success or build a strong network, but not both. If Raelynn is curious, then she either thinks outside the box or pushes boundaries, but not both. If Major experiments with materials, then she creates innovative products. Raelynn does not think outside the box. Raelynn either experiments with materials or works with traditional techniques, but not both. Major does not take risks. Raelynn either prioritizes stability or can achieve success, but not both.",
    "nl2fol": {
      "Raelynn prioritizes stability.": "prioritizes_stability(Raelynn)",
      "Raelynn does not take risks.": "¬takes_risks(Raelynn)",
      "Raelynn is curious.": "is_curious(Raelynn)",
      "If someone either pushes boundaries or works with traditional techniques (but not both), then they are innovative.": "∀x ((pushes_boundaries(x) ⊕ work_with_traditional_techniques(x)) → is_innovative(x))",
      "If Raelynn is innovative or takes risks, then she will achieve success.": "(is_innovative(Raelynn) ∨ takes_risks(Raelynn)) → achieve_success(Raelynn)",
      "If Raelynn has a creative vision, then she will either achieve success or build a strong network, but not both.": "has_creative_vision(Raelynn) → (achieve_success(Raelynn) ⊕ builds_strong_network(Raelynn))",
      "If Raelynn is curious, then she either thinks outside the box or pushes boundaries, but not both.": "is_curious(Raelynn) → (thinks_outside_box(Raelynn) ⊕ pushes_boundaries(Raelynn))",
      "If Major experiments with materials, then she creates innovative products.": "experiment_with_materials(Major) → create_innovative_products(Major)",
      "Raelynn does not think outside the box.": "¬thinks_outside_box(Raelynn)",
      "Raelynn either experiments with materials or works with traditional techniques, but not both.": "experiment_with_materials(Raelynn) ⊕ work_with_traditional_techniques(Raelynn)",
      "Major does not take risks.": "¬takes_risks(Major)",
      "Raelynn either prioritizes stability or can achieve success, but not both.": "achieve_success(Raelynn) ⊕ prioritizes_stability(Raelynn)"
    },
    "conclusion_fol": "create_innovative_products(Raelynn)"
  },
  {
    "id": 31,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Frankie lives in the desert.",
    "reasoning": "fact1: Frankie does not value companionship.\nrule: Armadillos that explore in groups value companionship.\nconclusion: Frankie does not explore in groups.\n\nfact1: Frankie does not rest in his burrow.\nfact2: Frankie does not stay healthy.\nrule: If Frankie rests in his burrow or sleeps soundly, then he will stay healthy.\nconclusion: Frankie does not sleep soundly.\n\nfact1: Frankie enjoys quiet spaces.\nfact2: Frankie does not sleep soundly.\nrule: If Frankie prefers to spend nights alone and enjoys quiet spaces, then he sleeps soundly.\nconclusion: Frankie does not prefer to spend nights alone.\n\nfact1: Frankie does not prefer to spend nights alone.\nrule: Frankie either has unique friends or prefers to spend nights alone, but not both.\nconclusion: Frankie has unique friends.\n\nfact1: Frankie has unique friends.\nfact2: Frankie does not explore in groups.\nrule: Every armadillo that has unique friends either explores in groups or roams alone (or both).\nconclusion: Frankie roams alone.\n\nfact1: Frankie is searching for food.\nrule: If Frankie is searching for food, he does not necessarily have protective instincts, and vice versa.\nconclusion: Frankie does not have protective instincts.\n\nfact1: Frankie roams alone.\nrule: If Frankie roams alone, then he is not a social animal, and if Frankie is a social animal, then he does not necessarily roam alone.\nconclusion: Frankie is not a social animal.\n\nfact1: Frankie lives in a colony.\nfact2: Frankie is not a social animal.\nrule: If Frankie lives in a colony, then he is either a social animal or forms symbiotic relationships with other creatures, but not both.\nconclusion: Frankie forms symbiotic relationships with other creatures.\n\nfact1: Frankie forms symbiotic relationships with other creatures.\nfact2: Frankie does not have protective instincts.\nrule: If Frankie lives in the desert, then he forms symbiotic relationships with other creatures and has protective instincts.\nconclusion: Frankie lives in the desert.\n\nTherefore, it is false that Frankie lives in the desert. The correct option is: B.",
    "context": "Frankie does not rest in his burrow. If an armadillo thrives in groups, then it is a social animal. Every armadillo that has unique friends either explores in groups or roams alone (or both). Any armadillo that lacks pack mates or wanders freely can roam alone. If Frankie lives in the desert, then he forms symbiotic relationships with other creatures and has protective instincts. If Frankie either travels with others or forages with family (but not both), then he tends to explore in groups. If Frankie lives in a colony, then he is either a social animal or forms symbiotic relationships with other creatures, but not both. If Frankie is searching for food, he does not necessarily have protective instincts, and vice versa. Armadillos that explore in groups value companionship. If Frankie prefers to spend nights alone and enjoys quiet spaces, then he sleeps soundly. Frankie either has unique friends or prefers to spend nights alone, but not both. Frankie does not value companionship. Any armadillo that coexists with insects or has an adaptive shell can form symbiotic relationships. All armadillos that find shaded areas stay hydrated and sleep soundly. Frankie lives in a colony. All curious armadillos dig complex burrows and have protective instincts. Frankie is searching for food. If Frankie rests in his burrow or sleeps soundly, then he will stay healthy. Frankie does not stay healthy. If Frankie roams alone, then he is not a social animal, and if Frankie is a social animal, then he does not necessarily roam alone. Frankie enjoys quiet spaces.",
    "nl2fol": {
      "Frankie does not rest in his burrow.": "¬rest_in_burrow(Frankie)",
      "If an armadillo thrives in groups, then it is a social animal.": "∀x (thrive_in_groups(x) → be_social_animal(x))",
      "Every armadillo that has unique friends either explores in groups or roams alone (or both).": "∀x (have_unique_friends(x) → (explore_in_groups(x) ∨ roam_alone(x)))",
      "Any armadillo that lacks pack mates or wanders freely can roam alone.": "∀x ((lack_pack_mates(x) ∨ wander_freely(x)) → roam_alone(x))",
      "If Frankie lives in the desert, then he forms symbiotic relationships with other creatures and has protective instincts.": "live_in_desert(Frankie) → (form_symbiotic_relationship(Frankie) ∧ have_protective_instincts(Frankie))",
      "If Frankie either travels with others or forages with family (but not both), then he tends to explore in groups.": "(travel_with_others(Frankie) ⊕ forage_with_family(Frankie)) → explore_in_groups(Frankie)",
      "If Frankie lives in a colony, then he is either a social animal or forms symbiotic relationships with other creatures, but not both.": "live_in_colony(Frankie) → (be_social_animal(Frankie) ⊕ form_symbiotic_relationship(Frankie))",
      "If Frankie is searching for food, he does not necessarily have protective instincts, and vice versa.": "search_for_food(Frankie) ⊕ have_protective_instincts(Frankie)",
      "Armadillos that explore in groups value companionship.": "∀x (explore_in_groups(x) → value_companionship(x))",
      "If Frankie prefers to spend nights alone and enjoys quiet spaces, then he sleeps soundly.": "(prefer_solo_nights(Frankie) ∧ enjoy_quiet_spaces(Frankie)) → sleep_soundly(Frankie)",
      "Frankie either has unique friends or prefers to spend nights alone, but not both.": "have_unique_friends(Frankie) ⊕ prefer_solo_nights(Frankie)",
      "Frankie does not value companionship.": "¬value_companionship(Frankie)",
      "Any armadillo that coexists with insects or has an adaptive shell can form symbiotic relationships.": "∀x ((coexist_with_insects(x) ∨ have_adaptive_shell(x)) → form_symbiotic_relationship(x))",
      "All armadillos that find shaded areas stay hydrated and sleep soundly.": "∀x (find_shaded_areas(x) → (stay_hydrated(x) ∧ sleep_soundly(x)))",
      "Frankie lives in a colony.": "live_in_colony(Frankie)",
      "All curious armadillos dig complex burrows and have protective instincts.": "∀x (be_curious(x) → (dig_complex_burrows(x) ∧ have_protective_instincts(x)))",
      "Frankie is searching for food.": "search_for_food(Frankie)",
      "If Frankie rests in his burrow or sleeps soundly, then he will stay healthy.": "(rest_in_burrow(Frankie) ∨ sleep_soundly(Frankie)) → stay_healthy(Frankie)",
      "Frankie does not stay healthy.": "¬stay_healthy(Frankie)",
      "If Frankie roams alone, then he is not a social animal, and if Frankie is a social animal, then he does not necessarily roam alone.": "be_social_animal(Frankie) ⊕ roam_alone(Frankie)",
      "Frankie enjoys quiet spaces.": "enjoy_quiet_spaces(Frankie)"
    },
    "conclusion_fol": "live_in_desert(Frankie)"
  },
  {
    "id": 32,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eliana works tirelessly.",
    "reasoning": "fact1: Eliana is driven by data.\nrule: Eliana is either driven by data or values community feedback, but not both.\nconclusion: Eliana does not value community feedback.\n\nfact1: Eliana leads by example.\nrule: Anyone who leads by example will inspire others.\nconclusion: Eliana inspires others.\n\nfact1: Eliana does not value community feedback.\nrule: Eliana either values community feedback or is a passionate advocate, but these two traits are mutually exclusive.\nconclusion: Eliana is a passionate advocate.\n\nfact1: Eliana cares for nature.\nfact2: Eliana fights pollution.\nrule: If someone cares for nature and fights pollution, then they are a dedicated environmentalist.\nconclusion: Eliana is a dedicated environmentalist.\n\nfact1: Eliana is a passionate advocate.\nfact2: Eliana inspires others.\nrule: If Eliana is a passionate advocate, then she either inspires others or achieves lasting results (but not both).\nconclusion: Eliana does not achieve lasting results.\n\nfact1: Eliana is a dedicated environmentalist.\nfact2: Eliana does not achieve lasting results.\nrule: For all humans, if someone is a dedicated environmentalist, then they either work tirelessly or achieve lasting results (or both).\nconclusion: Eliana works tirelessly.\n\nTherefore, it is true that Eliana works tirelessly. The correct option is: A.",
    "context": "Eliana is driven by data. If Eliana is a passionate advocate, then she either inspires others or achieves lasting results (but not both). If someone cares for nature and fights pollution, then they are a dedicated environmentalist. For all humans, if someone is a dedicated environmentalist, then they either work tirelessly or achieve lasting results (or both). Eliana fights pollution. Eliana either values community feedback or is a passionate advocate, but these two traits are mutually exclusive. Anyone who leads by example will inspire others. Eliana makes progress or achieves lasting results. Eliana leads by example. Eliana cares for nature. Eliana is either driven by data or values community feedback, but not both.",
    "nl2fol": {
      "Eliana is driven by data.": "driven_by_data(Eliana)",
      "If Eliana is a passionate advocate, then she either inspires others or achieves lasting results (but not both).": "passionate_advocate(Eliana) → (inspires_others(Eliana) ⊕ achieves_lasting_results(Eliana))",
      "If someone cares for nature and fights pollution, then they are a dedicated environmentalist.": "∀x ((cares_for_nature(x) ∧ fights_pollution(x)) → dedicated_environmentalist(x))",
      "For all humans, if someone is a dedicated environmentalist, then they either work tirelessly or achieve lasting results (or both).": "∀x (dedicated_environmentalist(x) → (works_tirelessly(x) ∨ achieves_lasting_results(x)))",
      "Eliana fights pollution.": "fights_pollution(Eliana)",
      "Eliana either values community feedback or is a passionate advocate, but these two traits are mutually exclusive.": "values_community_feedback(Eliana) ⊕ passionate_advocate(Eliana)",
      "Anyone who leads by example will inspire others.": "∀x (leads_by_example(x) → inspires_others(x))",
      "Eliana makes progress or achieves lasting results.": "makes_progress(Eliana) ∨ achieves_lasting_results(Eliana)",
      "Eliana leads by example.": "leads_by_example(Eliana)",
      "Eliana cares for nature.": "cares_for_nature(Eliana)",
      "Eliana is either driven by data or values community feedback, but not both.": "driven_by_data(Eliana) ⊕ values_community_feedback(Eliana)"
    },
    "conclusion_fol": "works_tirelessly(Eliana)"
  },
  {
    "id": 33,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Andy is not respected.",
    "reasoning": "fact1: Andy thinks critically.\nrule: Any gamer who stays focused or thinks critically can adapt to changes.\nconclusion: Andy adapts to changes.\n\nfact1: Andy does not master new skills.\nfact2: Andy adapts to changes.\nrule: If Andy either masters new skills or adapts to changes (but not both), then he is a quick learner.\nconclusion: Andy is a quick learner.\n\nfact1: Andy is an experienced gamer.\nfact2: Andy is a strategic thinker.\nrule: If Andy is an experienced gamer, then he is either a dedicated leader or a strategic thinker, but not both.\nconclusion: Andy is not a dedicated leader.\n\nfact1: Andy is an active participant.\nfact2: Andy is a quick learner.\nrule: All active participants who are top-ranked gamers are quick learners.\nconclusion: Andy is a top-ranked gamer.\n\nfact1: Andy is a top-ranked gamer.\nfact2: Andy is a team player.\nrule: If Andy is a top-ranked gamer, then he is either a team player or a skilled player, but not both.\nconclusion: Andy is not a skilled player.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Andy is not respected. The correct option is: C.",
    "context": "Tyson is an experienced gamer. If Andy either masters new skills or adapts to changes (but not both), then he is a quick learner. Andy is a team player. If Andy is an experienced gamer, then he is either a dedicated leader or a strategic thinker, but not both. If Andy either plays regularly or analyzes gameplay (but not both), then he is a skilled player. Andy is a strategic thinker. Andy does not master new skills. Andy is an experienced gamer. Houston does not master new skills. If Tyson is an experienced gamer, then he is either a dedicated leader or a strategic thinker, but not both. Andy thinks critically. Houston is a team player. If Sophia is a top-ranked gamer, then he is either a team player or a skilled player, but not both. If Andy is a top-ranked gamer, then he is either a team player or a skilled player, but not both. All active participants who are top-ranked gamers are quick learners. If Andy sets high standards, then he is a dedicated leader. If Andy has good reflexes or makes strategic moves, then he is top-ranked. Tyson is a strategic thinker. Any gamer who stays focused or thinks critically can adapt to changes. Houston thinks critically. Tyson is an active participant. Andy is an active participant.",
    "nl2fol": {
      "Tyson is an experienced gamer.": "experienced_gamer(Tyson)",
      "If Andy either masters new skills or adapts to changes (but not both), then he is a quick learner.": "(masters_new_skills(Andy) ⊕ adapts_to_changes(Andy)) → quick_learn(Andy)",
      "Andy is a team player.": "team_player(Andy)",
      "If Andy is an experienced gamer, then he is either a dedicated leader or a strategic thinker, but not both.": "experienced_gamer(Andy) → (dedicated_leader(Andy) ⊕ strategic_thinker(Andy))",
      "If Andy either plays regularly or analyzes gameplay (but not both), then he is a skilled player.": "(plays_regularly(Andy) ⊕ analyzes_gameplay(Andy)) → skilled_player(Andy)",
      "Andy is a strategic thinker.": "strategic_thinker(Andy)",
      "Andy does not master new skills.": "¬masters_new_skills(Andy)",
      "Andy is an experienced gamer.": "experienced_gamer(Andy)",
      "Houston does not master new skills.": "¬masters_new_skills(Houston)",
      "If Tyson is an experienced gamer, then he is either a dedicated leader or a strategic thinker, but not both.": "experienced_gamer(Tyson) → (dedicated_leader(Tyson) ⊕ strategic_thinker(Tyson))",
      "Andy thinks critically.": "thinks_critically(Andy)",
      "Houston is a team player.": "team_player(Houston)",
      "If Sophia is a top-ranked gamer, then he is either a team player or a skilled player, but not both.": "top_ranked(Sophia) → (team_player(Sophia) ⊕ skilled_player(Sophia))",
      "If Andy is a top-ranked gamer, then he is either a team player or a skilled player, but not both.": "top_ranked(Andy) → (team_player(Andy) ⊕ skilled_player(Andy))",
      "All active participants who are top-ranked gamers are quick learners.": "∀x (active_participant(x) → (top_ranked(x) ∧ quick_learn(x)))",
      "If Andy sets high standards, then he is a dedicated leader.": "sets_high_standards(Andy) → dedicated_leader(Andy)",
      "If Andy has good reflexes or makes strategic moves, then he is top-ranked.": "(has_good_reflexes(Andy) ∨ makes_strategic_moves(Andy)) → top_ranked(Andy)",
      "Tyson is a strategic thinker.": "has_strategic_thinking(Tyson)",
      "Any gamer who stays focused or thinks critically can adapt to changes.": "∀x ((stays_focused(x) ∨ thinks_critically(x)) → adapts_to_changes(x))",
      "Houston thinks critically.": "thinks_critically(Houston)",
      "Tyson is an active participant.": "active_participant(Tyson)",
      "Andy is an active participant.": "active_participant(Andy)"
    },
    "conclusion_fol": "¬respected(Andy)"
  },
  {
    "id": 34,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Chana does not have in-depth data analysis abilities.",
    "reasoning": "fact1: Chana is a key team member.\nfact2: Chana is not highly motivated.\nrule: If Chana is a key team member, then she is either an excellent troubleshooter or highly motivated, but not both.\nconclusion: Chana is an excellent troubleshooter.\n\nfact1: Chana does not handle multiple projects.\nrule: Chana either prioritizes tasks or handles multiple projects.\nconclusion: Chana prioritizes tasks.\n\nfact1: Chana does not work under pressure.\nrule: Chana either works under pressure or is organized, but not both.\nconclusion: Chana is organized.\n\nfact1: Chana is organized.\nrule: If someone is organized, then they manage their time effectively.\nconclusion: Chana manages time.\n\nfact1: Chana prioritizes tasks.\nfact2: Chana manages time.\nrule: Anyone who prioritizes tasks and manages time can meet deadlines.\nconclusion: Chana consistently meets deadlines.\n\nfact1: Chana consistently meets deadlines.\nrule: Anyone who consistently meets deadlines has a strong work ethic.\nconclusion: Chana has a strong work ethic.\n\nfact1: Chana is an excellent troubleshooter.\nfact2: Chana has a strong work ethic.\nrule: All excellent troubleshooters are respected experts and have a strong work ethic.\nconclusion: Chana is a respected expert.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Chana does not have in-depth data analysis abilities. The correct option is: C.",
    "context": "Chana either prioritizes tasks or handles multiple projects. All excellent troubleshooters are respected experts and have a strong work ethic. If Chana either identifies root causes or develops creative solutions (but not both), then she is an excellent troubleshooter. Chana does not work under pressure. If Chana leads critical projects, then she either demonstrates professionalism or has a strong work ethic, but not both. Vivian is a key team member. Anyone who consistently meets deadlines has a strong work ethic. Chana is a key team member. Chana is not highly motivated. Chana does not handle multiple projects. If Chana is a key team member, then she is either an excellent troubleshooter or highly motivated, but not both. Anyone who prioritizes tasks and manages time can meet deadlines. Chana either works under pressure or is organized, but not both. If someone is organized, then they manage their time effectively.",
    "nl2fol": {
      "Chana either prioritizes tasks or handles multiple projects.": "prioritizes_tasks(Chana) ∨ handles_multiple_projects(Chana)",
      "All excellent troubleshooters are respected experts and have a strong work ethic.": "∀x (excellent_troubleshooter(x) → (respected_expert(x) ∧ has_strong_work_ethic(x)))",
      "If Chana either identifies root causes or develops creative solutions (but not both), then she is an excellent troubleshooter.": "(identifies_root_causes(Chana) ⊕ develops_creative_solutions(Chana)) → excellent_troubleshooter(Chana)",
      "Chana does not work under pressure.": "¬works_under_pressure(Chana)",
      "If Chana leads critical projects, then she either demonstrates professionalism or has a strong work ethic, but not both.": "leads_critical_projects(Chana) → (demonstrates_professionalism(Chana) ⊕ has_strong_work_ethic(Chana))",
      "Vivian is a key team member.": "key_team_member(Vivian)",
      "Anyone who consistently meets deadlines has a strong work ethic.": "∀x (meets_deadlines(x) → has_strong_work_ethic(x))",
      "Chana is a key team member.": "key_team_member(Chana)",
      "Chana is not highly motivated.": "¬highly_motivated(Chana)",
      "Chana does not handle multiple projects.": "¬handles_multiple_projects(Chana)",
      "If Chana is a key team member, then she is either an excellent troubleshooter or highly motivated, but not both.": "key_team_member(Chana) → (excellent_troubleshooter(Chana) ⊕ highly_motivated(Chana))",
      "Anyone who prioritizes tasks and manages time can meet deadlines.": "∀x ((prioritizes_tasks(x) ∧ manages_time(x)) → meets_deadlines(x))",
      "Chana either works under pressure or is organized, but not both.": "works_under_pressure(Chana) ⊕ is_organized(Chana)",
      "If someone is organized, then they manage their time effectively.": "∀x (is_organized(x) → manages_time(x))"
    },
    "conclusion_fol": "¬in_depth_data_analysis(Chana)"
  },
  {
    "id": 35,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dean is not an expert ornithologist.",
    "reasoning": "fact1: Dean does not work hard.\nrule: Dean either has expertise or works hard.\nconclusion: Dean has expertise.\n\nfact1: Dean contributes to society.\nfact2: Dean gains recognition.\nrule: If Dean contributes to society, then he either receives awards or gains recognition (but not both).\nconclusion: Dean does not receive awards.\n\nfact1: Dean has expertise.\nfact2: Dean does not receive awards.\nrule: If Dean makes an impact and has expertise, then he receives awards.\nconclusion: Dean does not make an impact.\n\nfact1: Dean is not an active volunteer.\nrule: If Dean is a passionate conservationist, then he is both an active volunteer and public speaker.\nconclusion: Dean is not a passionate conservationist.\n\nfact1: Dean does not mentor students.\nfact2: Dean does not make an impact.\nrule: If Dean either mentors students or inspires others (but not both), then he makes an impact.\nconclusion: Dean does not inspire others.\n\nfact1: Dean does not publish research.\nfact2: Dean does not inspire others.\nrule: Anyone who publishes research or is a respected scientist can inspire others.\nconclusion: Dean is not a respected scientist.\n\nfact1: Dean is not a passionate conservationist.\nfact2: Dean is not a respected scientist.\nrule: If Dean is either an expert ornithologist or a passionate conservationist (but not both), then he is a respected scientist.\nconclusion: Dean is not an expert ornithologist.\n\nTherefore, it is true that Dean is not an expert ornithologist. The correct option is: A.",
    "context": "Dean does not mentor students. Dean contributes to society. If Dean makes an impact and has expertise, then he receives awards. Dean is not an active volunteer. If Dean is either an expert ornithologist or a passionate conservationist (but not both), then he is a respected scientist. Dean either holds degrees or receives awards. If Dean either mentors students or inspires others (but not both), then he makes an impact. If Dean contributes to society, then he either receives awards or gains recognition (but not both). Dean either has expertise or works hard. Dean gains recognition. Dean does not publish research. Anyone who publishes research or is a respected scientist can inspire others. Dean does not work hard. If Dean is a passionate conservationist, then he is both an active volunteer and public speaker.",
    "nl2fol": {
      "Dean does not mentor students.": "¬mentors_students(Dean)",
      "Dean contributes to society.": "contributes_to_society(Dean)",
      "If Dean makes an impact and has expertise, then he receives awards.": "(makes_impact(Dean) ∧ has_expertise(Dean)) → receives_awards(Dean)",
      "Dean is not an active volunteer.": "¬active_volunteer(Dean)",
      "If Dean is either an expert ornithologist or a passionate conservationist (but not both), then he is a respected scientist.": "(expert_ornithologist(Dean) ⊕ passionate_conservationist(Dean)) → respected_scientist(Dean)",
      "Dean either holds degrees or receives awards.": "holds_degrees(Dean) ∨ receives_awards(Dean)",
      "If Dean either mentors students or inspires others (but not both), then he makes an impact.": "(mentors_students(Dean) ⊕ inspires_others(Dean)) → makes_impact(Dean)",
      "If Dean contributes to society, then he either receives awards or gains recognition (but not both).": "contributes_to_society(Dean) → (receives_awards(Dean) ⊕ gains_recognition(Dean))",
      "Dean either has expertise or works hard.": "has_expertise(Dean) ∨ works_hard(Dean)",
      "Dean gains recognition.": "gains_recognition(Dean)",
      "Dean does not publish research.": "¬publishes_research(Dean)",
      "Anyone who publishes research or is a respected scientist can inspire others.": "∀x ((publishes_research(x) ∨ respected_scientist(x)) → inspires_others(x))",
      "Dean does not work hard.": "¬works_hard(Dean)",
      "If Dean is a passionate conservationist, then he is both an active volunteer and public speaker.": "passionate_conservationist(Dean) → (active_volunteer(Dean) ∧ speaks_publicly(Dean))"
    },
    "conclusion_fol": "¬expert_ornithologist(Dean)"
  },
  {
    "id": 36,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Murphy creates fast software.",
    "reasoning": "fact1: Murphy networks with his peers.\nrule: For Murphy, either networking with peers or attending tech conferences (but not both) are ways to advance in his career.\nconclusion: Murphy does not attend tech conferences.\n\nfact1: Murphy does not attend tech conferences.\nfact2: Murphy joins online forums.\nrule: If Murphy either attends tech conferences or joins online forums (but not both), then he participates in hackathons.\nconclusion: Murphy participates in hackathons.\n\nfact1: Murphy reads technical books.\nfact2: Murphy participates in hackathons.\nrule: Anyone who reads technical books and participates in hackathons is dedicated to learning.\nconclusion: Murphy is dedicated to learning.\n\nfact1: Murphy is dedicated to learning.\nrule: If Murphy is dedicated to learning, then he will build innovative products.\nconclusion: Murphy builds innovative products.\n\nfact1: Murphy builds innovative products.\nfact2: Murphy does not value user feedback.\nrule: If Murphy builds innovative products, then he either values user feedback or is passionate about coding (or both).\nconclusion: Murphy is passionate about coding.\n\nfact1: Murphy is passionate about coding.\nfact2: Murphy enjoys problem solving.\nrule: If Murphy is passionate about coding, then he is a good software developer and enjoys problem solving.\nconclusion: Murphy is a good software developer.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Murphy creates fast software. The correct option is: C.",
    "context": "If Murphy either writes efficient code or designs intuitive interfaces (but not both), then he is a good software developer. Murphy reads technical books. If Murphy is passionate about coding, then he is a good software developer and enjoys problem solving. Anyone who reads technical books and participates in hackathons is dedicated to learning. If Murphy is dedicated to learning, then he will build innovative products. Murphy joins online forums. For Murphy, either networking with peers or attending tech conferences (but not both) are ways to advance in his career. Murphy networks with his peers. Murphy enjoys problem solving. If Murphy builds innovative products, then he either values user feedback or is passionate about coding (or both). If Murphy either attends tech conferences or joins online forums (but not both), then he participates in hackathons. Murphy either codes regularly or attends tech conferences. Murphy does not value user feedback. If Murphy engages in self-study, then he either participates in hackathons or contributes to open source projects (or both).",
    "nl2fol": {
      "If Murphy either writes efficient code or designs intuitive interfaces (but not both), then he is a good software developer.": "(writes_efficient_code(Murphy) ⊕ designs_intuitive_interfaces(Murphy)) → good_software_developer(Murphy)",
      "Murphy reads technical books.": "reads_technical_books(Murphy)",
      "If Murphy is passionate about coding, then he is a good software developer and enjoys problem solving.": "passionate_about_coding(Murphy) → (good_software_developer(Murphy) ∧ enjoy_problem_solving(Murphy))",
      "Anyone who reads technical books and participates in hackathons is dedicated to learning.": "∀x ((reads_technical_books(x) ∧ participates_in_hackathons(x)) → dedicated_to_learning(x))",
      "If Murphy is dedicated to learning, then he will build innovative products.": "dedicated_to_learning(Murphy) → build_innovative_products(Murphy)",
      "Murphy joins online forums.": "joins_online_forums(Murphy)",
      "For Murphy, either networking with peers or attending tech conferences (but not both) are ways to advance in his career.": "networks_with_peers(Murphy) ⊕ attends_tech_conferences(Murphy)",
      "Murphy networks with his peers.": "networks_with_peers(Murphy)",
      "Murphy enjoys problem solving.": "enjoy_problem_solving(Murphy)",
      "If Murphy builds innovative products, then he either values user feedback or is passionate about coding (or both).": "build_innovative_products(Murphy) → (value_user_feedback(Murphy) ∨ passionate_about_coding(Murphy))",
      "If Murphy either attends tech conferences or joins online forums (but not both), then he participates in hackathons.": "(attends_tech_conferences(Murphy) ⊕ joins_online_forums(Murphy)) → participates_in_hackathons(Murphy)",
      "Murphy either codes regularly or attends tech conferences.": "codes_regularly(Murphy) ∨ attends_tech_conferences(Murphy)",
      "Murphy does not value user feedback.": "¬value_user_feedback(Murphy)",
      "If Murphy engages in self-study, then he either participates in hackathons or contributes to open source projects (or both).": "engages_in_self_study(Murphy) → (participates_in_hackathons(Murphy) ∨ contributes_to_open_source(Murphy))"
    },
    "conclusion_fol": "create_fast_software(Murphy)"
  },
  {
    "id": 37,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Buster is loving.",
    "reasoning": "fact1: Buster does not respond to calls.\nfact2: Buster follows routines.\nrule: If Buster either responds to calls or follows routines (but not both), then he listens to commands.\nconclusion: Buster listens to commands.\n\nfact1: Buster listens to commands.\nfact2: Buster behaves properly.\nrule: All dogs that listen to commands and behave properly are well-trained.\nconclusion: Buster is well-trained.\n\nfact1: Buster is well-trained.\nrule: All well-trained dogs are obedient and have good manners.\nconclusion: Buster is obedient.\n\nfact1: Buster is obedient.\nrule: Buster is either obedient or playful, but not necessarily both.\nconclusion: Buster is not playful.\n\nfact1: Buster is not playful.\nrule: Buster is either playful or loving (or both).\nconclusion: Buster is loving.\n\nTherefore, it is true that Buster is loving. The correct option is: A.",
    "context": "Buster does not respond to calls. All dogs that listen to commands and behave properly are well-trained. Buster is either obedient or playful, but not necessarily both. Buster follows routines. Buster is either playful or loving (or both). If Buster either responds to calls or follows routines (but not both), then he listens to commands. All well-trained dogs are obedient and have good manners. Buster behaves properly.",
    "nl2fol": {
      "Buster does not respond to calls.": "¬responds_to_calls(Buster)",
      "All dogs that listen to commands and behave properly are well-trained.": "∀x ((listens_commands(x) ∧ behaves_properly(x)) → well_trained(x))",
      "Buster is either obedient or playful, but not necessarily both.": "is_obedient(Buster) ⊕ playful(Buster)",
      "Buster follows routines.": "follows_routines(Buster)",
      "Buster is either playful or loving (or both).": "playful(Buster) ∨ loving(Buster)",
      "If Buster either responds to calls or follows routines (but not both), then he listens to commands.": "(responds_to_calls(Buster) ⊕ follows_routines(Buster)) → listens_commands(Buster)",
      "All well-trained dogs are obedient and have good manners.": "∀x (well_trained(x) → (is_obedient(x) ∧ has_good_manners(x)))",
      "Buster behaves properly.": "behaves_properly(Buster)"
    },
    "conclusion_fol": "loving(Buster)"
  },
  {
    "id": 38,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Schmoopy does not explore hidden rooms.",
    "reasoning": "fact1: Schmoopy has a small size.\nfact2: Schmoopy does not fit in tight spaces.\nrule: If Schmoopy has a small size, then she either lives in a mansion or fits in tight spaces (or both).\nconclusion: Schmoopy lives in a mansion.\n\nfact1: Schmoopy lives in a mansion.\nfact2: Schmoopy does not run quickly.\nrule: If Schmoopy lives in a mansion, then she either navigates mazes or runs quickly, but not both.\nconclusion: Schmoopy navigates mazes.\n\nfact1: Schmoopy navigates mazes.\nfact2: Schmoopy does not jump obstacles.\nrule: If Schmoopy either navigates mazes or jumps obstacles (but not both), then she loves climbing.\nconclusion: Schmoopy loves climbing.\n\nfact1: Schmoopy loves climbing.\nfact2: Schmoopy enjoys solving puzzles.\nrule: If Schmoopy loves climbing and enjoys solving puzzles, then she is adventurous.\nconclusion: Schmoopy is adventurous.\n\nfact1: Schmoopy does not enjoy shadows.\nrule: Schmoopy either enjoys shadows or fears darkness.\nconclusion: Schmoopy is fearful of darkness.\n\nfact1: Schmoopy is adventurous.\nfact2: Schmoopy does not find hidden food.\nrule: If Schmoopy is adventurous, then she can either discover hidden passages or find hidden food, but not both.\nconclusion: Schmoopy discovers hidden passages.\n\nfact1: Schmoopy is fearful of darkness.\nrule: Schmoopy is either curious or fearful of darkness, but not both.\nconclusion: Schmoopy is not curious.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Schmoopy does not explore hidden rooms. The correct option is: C.",
    "context": "If Schmoopy either sniffs out clues or follows trails (but not both), then she is able to discover hidden passages. Schmoopy does not find hidden food. If Schmoopy loves climbing and enjoys solving puzzles, then she is adventurous. Schmoopy does not fit in tight spaces. If Schmoopy has keen senses, then she either navigates mazes or digs burrows (but not both). If Schmoopy is adventurous, then she can either discover hidden passages or find hidden food, but not both. If Schmoopy has a small size, then she either lives in a mansion or fits in tight spaces (or both). If Schmoopy either navigates mazes or jumps obstacles (but not both), then she loves climbing. Schmoopy either enjoys shadows or fears darkness. Schmoopy does not jump obstacles. Schmoopy has a small size. Schmoopy is either curious or fearful of darkness, but not both. If Schmoopy lives in a mansion, then she either navigates mazes or runs quickly, but not both. If Schmoopy is nocturnal, then she is either fearful of darkness or has good vision, but not both. Schmoopy does not enjoy shadows. Schmoopy enjoys solving puzzles. Schmoopy does not run quickly. For any mouse, if it explores new areas and tries new things, then it is adventurous.",
    "nl2fol": {
      "If Schmoopy either sniffs out clues or follows trails (but not both), then she is able to discover hidden passages.": "(sniff_out_clues(Schmoopy) ⊕ follow_trails(Schmoopy)) → discover_hidden_passages(Schmoopy)",
      "Schmoopy does not find hidden food.": "¬find_hidden_food(Schmoopy)",
      "If Schmoopy loves climbing and enjoys solving puzzles, then she is adventurous.": "(loves_climbing(Schmoopy) ∧ enjoys_solving_puzzles(Schmoopy)) → is_adventurous(Schmoopy)",
      "Schmoopy does not fit in tight spaces.": "¬fits_in_tight_spaces(Schmoopy)",
      "If Schmoopy has keen senses, then she either navigates mazes or digs burrows (but not both).": "has_keen_senses(Schmoopy) → (navigates_mazes(Schmoopy) ⊕ digs_burrows(Schmoopy))",
      "If Schmoopy is adventurous, then she can either discover hidden passages or find hidden food, but not both.": "is_adventurous(Schmoopy) → (discover_hidden_passages(Schmoopy) ⊕ find_hidden_food(Schmoopy))",
      "If Schmoopy has a small size, then she either lives in a mansion or fits in tight spaces (or both).": "has_small_size(Schmoopy) → (lives_in_mansion(Schmoopy) ∨ fits_in_tight_spaces(Schmoopy))",
      "If Schmoopy either navigates mazes or jumps obstacles (but not both), then she loves climbing.": "(navigates_mazes(Schmoopy) ⊕ jumps_obstacles(Schmoopy)) → loves_climbing(Schmoopy)",
      "Schmoopy either enjoys shadows or fears darkness.": "enjoys_shadows(Schmoopy) ∨ fear_darkness(Schmoopy)",
      "Schmoopy does not jump obstacles.": "¬jumps_obstacles(Schmoopy)",
      "Schmoopy has a small size.": "has_small_size(Schmoopy)",
      "Schmoopy is either curious or fearful of darkness, but not both.": "curious(Schmoopy) ⊕ fear_darkness(Schmoopy)",
      "If Schmoopy lives in a mansion, then she either navigates mazes or runs quickly, but not both.": "lives_in_mansion(Schmoopy) → (navigates_mazes(Schmoopy) ⊕ runs_quickly(Schmoopy))",
      "If Schmoopy is nocturnal, then she is either fearful of darkness or has good vision, but not both.": "is_nocturnal(Schmoopy) → (has_good_vision(Schmoopy) ⊕ fear_darkness(Schmoopy))",
      "Schmoopy does not enjoy shadows.": "¬enjoys_shadows(Schmoopy)",
      "Schmoopy enjoys solving puzzles.": "enjoys_solving_puzzles(Schmoopy)",
      "Schmoopy does not run quickly.": "¬runs_quickly(Schmoopy)",
      "For any mouse, if it explores new areas and tries new things, then it is adventurous.": "∀x ((explores_new_areas(x) ∧ tries_new_things(x)) → is_adventurous(x))"
    },
    "conclusion_fol": "¬explore_hidden_rooms(Schmoopy)"
  },
  {
    "id": 39,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Esther did not uncover the truth.",
    "reasoning": "fact1: Esther does not gather evidence.\nrule: Esther either examines crime scenes or gathers evidence (or both).\nconclusion: Esther examines crime scenes.\n\nfact1: Esther does not study witness statements.\nfact2: Esther does not crack the case.\nrule: If Esther either studies witness statements or analyzes forensic data, then she will crack the case.\nconclusion: Esther does not analyze forensic data.\n\nfact1: Esther examines crime scenes.\nfact2: Esther does not analyze forensic data.\nrule: If Esther either examines crime scenes or analyzes forensic data (but not both), then she follows clues.\nconclusion: Esther follows clues.\n\nfact1: Esther follows clues.\nfact2: Esther does not solve cases.\nrule: If someone follows clues and reveals evidence, then they can solve cases.\nconclusion: Esther does not reveal evidence.\n\nfact1: Esther does not reveal evidence.\nrule: If Esther investigates carefully, then she will reveal evidence.\nconclusion: Esther does not investigate carefully.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Esther did not uncover the truth. The correct option is: C.",
    "context": "If someone follows clues and reveals evidence, then they can solve cases. If Esther either studies witness statements or analyzes forensic data, then she will crack the case. Esther does not crack the case. Norah either examines crime scenes or gathers evidence (or both). Esther either examines crime scenes or gathers evidence (or both). Esther does not solve cases. If Esther searches for clues or looks for patterns, then she will examine crime scenes. If Dax investigates carefully, then she will reveal evidence. Esther does not study witness statements. If Norah investigates carefully, then she will uncover the truth. If Esther investigates carefully, then she will reveal evidence. Esther reads reports or analyzes forensic data. If Esther either examines crime scenes or analyzes forensic data (but not both), then she follows clues. Esther does not gather evidence.",
    "nl2fol": {
      "If someone follows clues and reveals evidence, then they can solve cases.": "∀x ((follows_clues(x) ∧ reveal_evidence(x)) → solves_cases(x))",
      "If Esther either studies witness statements or analyzes forensic data, then she will crack the case.": "(studies_witness_statements(Esther) ∨ analyzes_forensic_data(Esther)) → cracks_the_case(Esther)",
      "Esther does not crack the case.": "¬cracks_the_case(Esther)",
      "Norah either examines crime scenes or gathers evidence (or both).": "examines_crime_scenes(Norah) ∨ gathers_evidence(Norah)",
      "Esther either examines crime scenes or gathers evidence (or both).": "examines_crime_scenes(Esther) ∨ gathers_evidence(Esther)",
      "Esther does not solve cases.": "¬solves_cases(Esther)",
      "If Esther searches for clues or looks for patterns, then she will examine crime scenes.": "(searches_for_clues(Esther) ∨ looks_for_patterns(Esther)) → examines_crime_scenes(Esther)",
      "If Dax investigates carefully, then she will reveal evidence.": "investigate_carefully(Dax) → reveal_evidence(Dax)",
      "Esther does not study witness statements.": "¬studies_witness_statements(Esther)",
      "If Norah investigates carefully, then she will uncover the truth.": "investigate_carefully(Norah) → uncover_the_truth(Norah)",
      "If Esther investigates carefully, then she will reveal evidence.": "investigate_carefully(Esther) → reveal_evidence(Esther)",
      "Esther reads reports or analyzes forensic data.": "reads_reports(Esther) ∨ analyzes_forensic_data(Esther)",
      "If Esther either examines crime scenes or analyzes forensic data (but not both), then she follows clues.": "(examines_crime_scenes(Esther) ⊕ analyzes_forensic_data(Esther)) → follows_clues(Esther)",
      "Esther does not gather evidence.": "¬gathers_evidence(Esther)"
    },
    "conclusion_fol": "¬uncover_the_truth(Esther)"
  },
  {
    "id": 40,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alliebear is a dedicated scientist.",
    "reasoning": "fact1: Alliebear does not publish her findings.\nfact2: Alliebear does not advance knowledge.\nrule: Anyone who makes breakthroughs either publishes their findings or advances knowledge (or both).\nconclusion: Alliebear does not make breakthroughs.\n\nfact1: Alliebear works independently.\nrule: Alliebear either works independently or collaborates with experts, but not both.\nconclusion: Alliebear does not collaborate with experts.\n\nfact1: Alliebear does not collaborate with experts.\nfact2: Alliebear does not make breakthroughs.\nrule: Anyone who collaborates with experts or produces innovative research can make breakthroughs.\nconclusion: Alliebear does not produce innovative research.\n\nfact1: Alliebear pursues a PhD.\nrule: Alliebear either gains acclaim or pursues a PhD, but not both.\nconclusion: Alliebear does not gain acclaim.\n\nfact1: Alliebear participates in conferences.\nrule: Alliebear either participates in conferences or delivers lectures, but not both.\nconclusion: Alliebear does not deliver lectures.\n\nfact1: Alliebear does not deliver lectures.\nfact2: Alliebear does not gain acclaim.\nrule: If Alliebear either receives awards or delivers lectures (but not both), then she gains acclaim.\nconclusion: Alliebear does not receive awards.\n\nfact1: Alliebear does not publish papers.\nfact2: Alliebear does not receive awards.\nrule: If Alliebear earns recognition, then she either publishes papers or receives awards (or both).\nconclusion: Alliebear does not earn recognition.\n\nfact1: Alliebear does not produce innovative research.\nfact2: Alliebear does not earn recognition.\nrule: If Alliebear is a dedicated scientist, then she produces innovative research and earns recognition.\nconclusion: Alliebear is a dedicated scientist.\n\nTherefore, it is false that Alliebear is a dedicated scientist. The correct option is: B.",
    "context": "Ashley participates in conferences. Alliebear does not publish her findings. If Margaret earns recognition, then she either publishes papers or receives awards (or both). Alliebear either works independently or collaborates with experts, but not both. Anyone who makes breakthroughs either publishes their findings or advances knowledge (or both). Alliebear does not publish papers. Alliebear does not advance knowledge. If Alliebear either mentors students or joins research teams (but not both), then she collaborates with experts. Alliebear works independently. Alliebear either participates in conferences or delivers lectures, but not both. Alliebear pursues a PhD. Anyone who collaborates with experts or produces innovative research can make breakthroughs. If Alliebear is a dedicated scientist, then she produces innovative research and earns recognition. Alliebear participates in conferences. Alliebear either gains acclaim or pursues a PhD, but not both. Kyree does not publish her findings. If someone has a creative mind, then they can make breakthroughs. If Alliebear earns recognition, then she either publishes papers or receives awards (or both). If Alliebear either receives awards or delivers lectures (but not both), then she gains acclaim. If Margaret is a dedicated scientist, then she produces innovative research and earns recognition.",
    "nl2fol": {
      "Ashley participates in conferences.": "participate_in_conferences(Ashley)",
      "Alliebear does not publish her findings.": "¬publishes_findings(Alliebear)",
      "If Margaret earns recognition, then she either publishes papers or receives awards (or both).": "earn_recognition(Margaret) → (publish_papers(Margaret) ∨ receive_awards(Margaret))",
      "Alliebear either works independently or collaborates with experts, but not both.": "works_independently(Alliebear) ⊕ collaborates_with_experts(Alliebear)",
      "Anyone who makes breakthroughs either publishes their findings or advances knowledge (or both).": "∀x (makes_breakthroughs(x) → (publishes_findings(x) ∨ advances_knowledge(x)))",
      "Alliebear does not publish papers.": "¬publish_papers(Alliebear)",
      "Alliebear does not advance knowledge.": "¬advances_knowledge(Alliebear)",
      "If Alliebear either mentors students or joins research teams (but not both), then she collaborates with experts.": "(mentors_students(Alliebear) ⊕ joins_research_teams(Alliebear)) → collaborates_with_experts(Alliebear)",
      "Alliebear works independently.": "works_independently(Alliebear)",
      "Alliebear either participates in conferences or delivers lectures, but not both.": "participate_in_conferences(Alliebear) ⊕ deliver_lectures(Alliebear)",
      "Alliebear pursues a PhD.": "pursue_phd(Alliebear)",
      "Anyone who collaborates with experts or produces innovative research can make breakthroughs.": "∀x ((collaborates_with_experts(x) ∨ produces_innovative_research(x)) → makes_breakthroughs(x))",
      "If Alliebear is a dedicated scientist, then she produces innovative research and earns recognition.": "dedicated_scientist(Alliebear) → (produces_innovative_research(Alliebear) ∧ earn_recognition(Alliebear))",
      "Alliebear participates in conferences.": "participate_in_conferences(Alliebear)",
      "Alliebear either gains acclaim or pursues a PhD, but not both.": "pursue_phd(Alliebear) ⊕ gain_acclaim(Alliebear)",
      "Kyree does not publish her findings.": "¬publishes_findings(Kyree)",
      "If someone has a creative mind, then they can make breakthroughs.": "∀x (has_creative_mind(x) → makes_breakthroughs(x))",
      "If Alliebear earns recognition, then she either publishes papers or receives awards (or both).": "earn_recognition(Alliebear) → (publish_papers(Alliebear) ∨ receive_awards(Alliebear))",
      "If Alliebear either receives awards or delivers lectures (but not both), then she gains acclaim.": "(receive_awards(Alliebear) ⊕ deliver_lectures(Alliebear)) → gain_acclaim(Alliebear)",
      "If Margaret is a dedicated scientist, then she produces innovative research and earns recognition.": "dedicated_scientist(Margaret) → (produces_innovative_research(Margaret) ∧ earn_recognition(Margaret))"
    },
    "conclusion_fol": "dedicated_scientist(Alliebear)"
  },
  {
    "id": 41,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Melissa earns recognition.",
    "reasoning": "fact1: Melissa runs a food shop.\nfact2: Melissa does not source local suppliers.\nrule: If Melissa runs a food shop, then she either sources local suppliers or uses seasonal produce (or both).\nconclusion: Melissa uses seasonal produce.\n\nfact1: Melissa uses seasonal produce.\nrule: Anyone who uses seasonal produce or follows family recipes can preserve freshness in their cooking.\nconclusion: Melissa preserves freshness in her cooking.\n\nfact1: Melissa experiments with ingredients.\nfact2: Melissa attracts new customers.\nrule: If Melissa experiments with ingredients, then she can either create unique flavors or attract new customers, but not both.\nconclusion: Melissa does not create unique flavors.\n\nfact1: Melissa preserves freshness in her cooking.\nfact2: Melissa does not create unique flavors.\nrule: If Melissa preserves freshness in her cooking, then she can either create unique flavors or earn recognition, but not both.\nconclusion: Melissa earns recognition.\n\nTherefore, it is true that Melissa earns recognition. The correct option is: A.",
    "context": "If Keanu values tradition and respects her elders, then she follows family recipes. Bo does not source local suppliers. Melissa experiments with ingredients. If Melissa has culinary skills, then she can create unique flavors. Anyone who uses seasonal produce or follows family recipes can preserve freshness in their cooking. Alexis runs a food shop. Melissa attracts new customers. If Melissa preserves freshness in her cooking, then she can either create unique flavors or earn recognition, but not both. Bo does not learn from her grandparents. Alexis experiments with ingredients. If Melissa runs a food shop, then she either sources local suppliers or uses seasonal produce (or both). If Bo preserves freshness in her cooking, then she can either create unique flavors or earn recognition, but not both. Melissa runs a food shop. If Melissa values culinary past, then she either follows family recipes or innovates cooking methods. Melissa does not source local suppliers. Bo does not honor her cultural heritage. If Melissa experiments with ingredients, then she can either create unique flavors or attract new customers, but not both. Keanu does not value tradition.",
    "nl2fol": {
      "If Keanu values tradition and respects her elders, then she follows family recipes.": "(values_tradition(Keanu) ∧ respects_elders(Keanu)) → follow_family_recipes(Keanu)",
      "Bo does not source local suppliers.": "¬source_local_suppliers(Bo)",
      "Melissa experiments with ingredients.": "experiment_with_ingredients(Melissa)",
      "If Melissa has culinary skills, then she can create unique flavors.": "has_culinary_skills(Melissa) → create_unique_flavors(Melissa)",
      "Anyone who uses seasonal produce or follows family recipes can preserve freshness in their cooking.": "∀x ((use_seasonal_produce(x) ∨ follow_family_recipes(x)) → preserve_freshness(x))",
      "Alexis runs a food shop.": "runs_food_shop(Alexis)",
      "Melissa attracts new customers.": "attract_new_customers(Melissa)",
      "If Melissa preserves freshness in her cooking, then she can either create unique flavors or earn recognition, but not both.": "preserve_freshness(Melissa) → (create_unique_flavors(Melissa) ⊕ earn_recognition(Melissa))",
      "Bo does not learn from her grandparents.": "¬learn_from_grandparents(Bo)",
      "Alexis experiments with ingredients.": "experiment_with_ingredients(Alexis)",
      "If Melissa runs a food shop, then she either sources local suppliers or uses seasonal produce (or both).": "runs_food_shop(Melissa) → (source_local_suppliers(Melissa) ∨ use_seasonal_produce(Melissa))",
      "If Bo preserves freshness in her cooking, then she can either create unique flavors or earn recognition, but not both.": "preserve_freshness(Bo) → (create_unique_flavors(Bo) ⊕ earn_recognition(Bo))",
      "Melissa runs a food shop.": "runs_food_shop(Melissa)",
      "If Melissa values culinary past, then she either follows family recipes or innovates cooking methods.": "value_culinary_past(Melissa) → (follow_family_recipes(Melissa) ∨ innovate_cooking_methods(Melissa))",
      "Melissa does not source local suppliers.": "¬source_local_suppliers(Melissa)",
      "Bo does not honor her cultural heritage.": "¬honor_cultural_heritage(Bo)",
      "If Melissa experiments with ingredients, then she can either create unique flavors or attract new customers, but not both.": "experiment_with_ingredients(Melissa) → (create_unique_flavors(Melissa) ⊕ attract_new_customers(Melissa))",
      "Keanu does not value tradition.": "¬values_tradition(Keanu)"
    },
    "conclusion_fol": "earn_recognition(Melissa)"
  },
  {
    "id": 42,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gabriel improves the lives of his citizens.",
    "reasoning": "fact1: Gabriel seeks power.\nrule: If Gabriel seeks power, then he will expand the Roman territory.\nconclusion: Gabriel expands the Roman territory.\n\nfact1: Gabriel inspires loyalty.\nfact2: Gabriel does not champion justice.\nrule: Any historical figure who inspires loyalty or champions justice can unite the masses.\nconclusion: Gabriel unites the masses.\n\nfact1: Gabriel unites the masses.\nrule: If Gabriel unites the masses, then he will lead a revolution.\nconclusion: Gabriel leads a revolution.\n\nfact1: Gabriel has a lasting legacy.\nfact2: Gabriel leads a revolution.\nrule: If Gabriel has a lasting legacy, then he either dies in peace or leads a revolution, but not both.\nconclusion: Gabriel does not die in peace.\n\nfact1: Gabriel does not die in peace.\nrule: Gabriel is either ambitious or dies in peace, but not both.\nconclusion: Gabriel is ambitious.\n\nfact1: Gabriel is ambitious.\nfact2: Gabriel expands the Roman territory.\nrule: If Gabriel is ambitious, then he can either expand the Roman territory or improve the lives of his citizens, but not both.\nconclusion: Gabriel does not improve the lives of his citizens.\n\nTherefore, it is false that Gabriel improves the lives of his citizens. The correct option is: B.",
    "context": "Gabriel either pursues glory or is ambitious. If Gabriel seeks power, then he will expand the Roman territory. If Gabriel is ambitious, then he can either expand the Roman territory or improve the lives of his citizens, but not both. Gabriel seeks power. If Gabriel is an influential leader and shapes history, then he leads a revolution. Gabriel inspires loyalty. If Gabriel unites the masses, then he will lead a revolution. Gabriel has a lasting legacy. Any historical figure who inspires loyalty or champions justice can unite the masses. If Gabriel has a lasting legacy, then he either dies in peace or leads a revolution, but not both. Gabriel is either ambitious or dies in peace, but not both. Adriel is either ambitious or dies in peace, but not both. If Adriel seeks power, then he will expand the Roman territory. If Donovan is ambitious, then he can either expand the Roman territory or improve the lives of his citizens, but not both. Gabriel does not champion justice. If Adriel unites the masses, then he will lead a revolution. Adalynn seeks power.",
    "nl2fol": {
      "Gabriel either pursues glory or is ambitious.": "pursues_glory(Gabriel) ∨ ambitious(Gabriel)",
      "If Gabriel seeks power, then he will expand the Roman territory.": "seeks_power(Gabriel) → expand_territory(Gabriel)",
      "If Gabriel is ambitious, then he can either expand the Roman territory or improve the lives of his citizens, but not both.": "ambitious(Gabriel) → (expand_territory(Gabriel) ⊕ improve_citizen_lives(Gabriel))",
      "Gabriel seeks power.": "seeks_power(Gabriel)",
      "If Gabriel is an influential leader and shapes history, then he leads a revolution.": "influential_leader(Gabriel) → (shapes_history(Gabriel) ∧ leads_a_revolution(Gabriel))",
      "Gabriel inspires loyalty.": "inspires_loyalty(Gabriel)",
      "If Gabriel unites the masses, then he will lead a revolution.": "unites_the_masses(Gabriel) → leads_a_revolution(Gabriel)",
      "Gabriel has a lasting legacy.": "has_legacy(Gabriel)",
      "Any historical figure who inspires loyalty or champions justice can unite the masses.": "∀x ((inspires_loyalty(x) ∨ champions_justice(x)) → unites_the_masses(x))",
      "If Gabriel has a lasting legacy, then he either dies in peace or leads a revolution, but not both.": "has_legacy(Gabriel) → (dies_in_peace(Gabriel) ⊕ leads_a_revolution(Gabriel))",
      "Gabriel is either ambitious or dies in peace, but not both.": "dies_in_peace(Gabriel) ⊕ ambitious(Gabriel)",
      "Adriel is either ambitious or dies in peace, but not both.": "dies_in_peace(Adriel) ⊕ ambitious(Adriel)",
      "If Adriel seeks power, then he will expand the Roman territory.": "seeks_power(Adriel) → expand_territory(Adriel)",
      "If Donovan is ambitious, then he can either expand the Roman territory or improve the lives of his citizens, but not both.": "ambitious(Donovan) → (expand_territory(Donovan) ⊕ improve_citizen_lives(Donovan))",
      "Gabriel does not champion justice.": "¬champions_justice(Gabriel)",
      "If Adriel unites the masses, then he will lead a revolution.": "unites_the_masses(Adriel) → leads_a_revolution(Adriel)",
      "Adalynn seeks power.": "seek_power(Adalynn)"
    },
    "conclusion_fol": "improve_citizen_lives(Gabriel)"
  },
  {
    "id": 43,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Spencer demands quality and strives for perfection.",
    "reasoning": "fact1: Spencer does not take risks.\nfact2: Spencer does not gain recognition.\nrule: If Spencer achieves success or takes risks, then he will gain recognition.\nconclusion: Spencer does not achieve success.\n\nfact1: Spencer does not practice self-care.\nfact2: Spencer cannot maintain focus.\nrule: Anyone who practices self-care or manages emotions can maintain focus.\nconclusion: Spencer does not manage his emotions.\n\nfact1: Spencer does not prioritize tasks.\nfact2: Spencer does not manage his emotions.\nrule: Anyone who handles stress prioritizes tasks or manages emotions (or both).\nconclusion: Spencer does not handle stress.\n\nfact1: Spencer does not handle stress.\nrule: Spencer either handles stress or works under pressure.\nconclusion: Spencer works under pressure.\n\nfact1: Spencer does not value excellence.\nrule: Spencer values excellence or is an excellent craftsman.\nconclusion: Spencer is an excellent craftsman.\n\nfact1: Spencer works under pressure.\nrule: Spencer is either passionate about cooking or works under pressure, but these two traits do not necessarily coexist.\nconclusion: Spencer is not passionate about cooking.\n\nfact1: Spencer does not achieve success.\nrule: Anyone who sets high standards or pays attention to details can achieve success.\nconclusion: Spencer does not set high standards.\n\nfact1: Spencer is an excellent craftsman.\nfact2: Spencer does not set high standards.\nrule: If Spencer is an excellent craftsman, then he either sets high standards or strives for perfection, but not both.\nconclusion: Spencer strives for perfection.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Spencer demands quality and strives for perfection. The correct option is: C.",
    "context": "If Spencer achieves success or takes risks, then he will gain recognition. If someone is dedicated to their work and develops skills, then they can be an excellent craftsman. Anyone who practices self-care or manages emotions can maintain focus. If Spencer craves recognition, then he strives for perfection and innovates recipes. Spencer does not value excellence. Anyone who handles stress prioritizes tasks or manages emotions (or both). Anyone who is self-aware or has good habits can manage their emotions. Spencer does not practice self-care. Spencer values excellence or is an excellent craftsman. If Spencer is an excellent craftsman, then he either sets high standards or strives for perfection, but not both. Spencer cannot maintain focus. Anyone who sets high standards or pays attention to details can achieve success. Spencer either handles stress or works under pressure. Spencer does not prioritize tasks. Spencer does not take risks. Spencer is either passionate about cooking or works under pressure, but these two traits do not necessarily coexist. Spencer does not gain recognition.",
    "nl2fol": {
      "If Spencer achieves success or takes risks, then he will gain recognition.": "(achieve_success(Spencer) ∨ take_risks(Spencer)) → gain_recognition(Spencer)",
      "If someone is dedicated to their work and develops skills, then they can be an excellent craftsman.": "∀x ((learns_quickly(x) ∧ develops_skills(x)) → excellent_craftsman(x))",
      "Anyone who practices self-care or manages emotions can maintain focus.": "∀x ((practices_self_care(x) ∨ manage_emotions(x)) → maintain_focus(x))",
      "If Spencer craves recognition, then he strives for perfection and innovates recipes.": "crave_recognition(Spencer) → (strive_for_perfection(Spencer) ∧ innovate_recipes(Spencer))",
      "Spencer does not value excellence.": "¬values_excellence(Spencer)",
      "Anyone who handles stress prioritizes tasks or manages emotions (or both).": "∀x (handles_stress(x) → (prioritize_tasks(x) ∨ manage_emotions(x)))",
      "Anyone who is self-aware or has good habits can manage their emotions.": "∀x ((is_self_aware(x) ∨ has_good_habits(x)) → manage_emotions(x))",
      "Spencer does not practice self-care.": "¬practices_self_care(Spencer)",
      "Spencer values excellence or is an excellent craftsman.": "values_excellence(Spencer) ∨ excellent_craftsman(Spencer)",
      "If Spencer is an excellent craftsman, then he either sets high standards or strives for perfection, but not both.": "excellent_craftsman(Spencer) → (set_high_standards(Spencer) ⊕ strive_for_perfection(Spencer))",
      "Spencer cannot maintain focus.": "¬maintain_focus(Spencer)",
      "Anyone who sets high standards or pays attention to details can achieve success.": "∀x ((pay_attention_details(x) ∨ set_high_standards(x)) → achieve_success(x))",
      "Spencer either handles stress or works under pressure.": "work_under_pressure(Spencer) ∨ handles_stress(Spencer)",
      "Spencer does not prioritize tasks.": "¬prioritize_tasks(Spencer)",
      "Spencer does not take risks.": "¬take_risks(Spencer)",
      "Spencer is either passionate about cooking or works under pressure, but these two traits do not necessarily coexist.": "passionate_about_cooking(Spencer) ⊕ work_under_pressure(Spencer)",
      "Spencer does not gain recognition.": "¬gain_recognition(Spencer)"
    },
    "conclusion_fol": "demand_quality(Spencer) ∧ strive_for_perfection(Spencer)"
  },
  {
    "id": 44,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Genevieve is passionate about baking.",
    "reasoning": "fact1: Genevieve does not seek community help.\nfact2: Genevieve is unable to overcome challenges.\nrule: Everyone who either seeks community help or finds new solutions is able to overcome challenges.\nconclusion: Genevieve does not find new solutions.\n\nfact1: Genevieve faces setbacks.\nfact2: Genevieve does not find new solutions.\nrule: If Genevieve faces setbacks, then she either acts on impulse or finds new solutions (or both).\nconclusion: Genevieve acts on impulse.\n\nfact1: Genevieve acts on impulse.\nrule: Genevieve either acts on impulse or thinks ahead, but not both.\nconclusion: Genevieve does not think ahead.\n\nfact1: Genevieve is a creative problem solver.\nrule: If Genevieve is a creative problem solver, then she has a strong work ethic and is a successful business owner.\nconclusion: Genevieve is a successful business owner.\n\nfact1: Genevieve does not think ahead.\nfact2: Genevieve anticipates problems.\nrule: Anyone who thinks ahead or anticipates problems has backup plans.\nconclusion: Genevieve has backup plans.\n\nfact1: Genevieve does not make safe investments.\nfact2: Genevieve has backup plans.\nrule: If Genevieve either makes safe investments or has backup plans (but not both), then she avoids risks.\nconclusion: Genevieve avoids risks.\n\nfact1: Genevieve avoids risks.\nrule: Genevieve is either resilient in adversity or avoids risks, but not both.\nconclusion: Genevieve is not resilient in adversity.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Genevieve is passionate about baking. The correct option is: C.",
    "context": "Oscar is either resilient in adversity or avoids risks, but not both. Leroy does not seek community help. Leroy is unable to overcome challenges. Kailani faces setbacks. If Oscar faces setbacks, then she either acts on impulse or finds new solutions (or both). If Genevieve is an entrepreneur, then she is either someone who avoids risks or seeks new opportunities, but not both. Genevieve is a creative problem solver. Kailani either acts on impulse or thinks ahead, but not both. Genevieve does not make safe investments. Genevieve is unable to overcome challenges. Genevieve is either resilient in adversity or avoids risks, but not both. If Genevieve faces setbacks, then she either acts on impulse or finds new solutions (or both). If Genevieve either makes safe investments or has backup plans (but not both), then she avoids risks. Genevieve either acts on impulse or thinks ahead, but not both. Anyone who thinks ahead or anticipates problems has backup plans. If Kailani is a creative problem solver, then she has a strong work ethic and is a successful business owner. Genevieve does not seek community help. All experienced individuals think ahead and make strategic decisions. Genevieve faces setbacks. Kailani anticipates problems. Everyone who either seeks community help or finds new solutions is able to overcome challenges. For all humans, if they take calculated risks, then they have backup plans and learn from mistakes. Oscar does not make safe investments. If Genevieve is a creative problem solver, then she has a strong work ethic and is a successful business owner. Genevieve anticipates problems. If Kailani either makes safe investments or has backup plans (but not both), then she avoids risks.",
    "nl2fol": {
      "Oscar is either resilient in adversity or avoids risks, but not both.": "resilient_in_adversity(Oscar) ⊕ avoids_risks(Oscar)",
      "Leroy does not seek community help.": "¬seeks_community_help(Leroy)",
      "Leroy is unable to overcome challenges.": "¬overcomes_challenges(Leroy)",
      "Kailani faces setbacks.": "faces_setbacks(Kailani)",
      "If Oscar faces setbacks, then she either acts on impulse or finds new solutions (or both).": "faces_setbacks(Oscar) → (acts_on_impulse(Oscar) ∨ finds_new_solutions(Oscar))",
      "If Genevieve is an entrepreneur, then she is either someone who avoids risks or seeks new opportunities, but not both.": "entrepreneur(Genevieve) → (avoids_risks(Genevieve) ⊕ seeks_new_opportunities(Genevieve))",
      "Genevieve is a creative problem solver.": "creative_problem_solver(Genevieve)",
      "Kailani either acts on impulse or thinks ahead, but not both.": "acts_on_impulse(Kailani) ⊕ thinks_ahead(Kailani)",
      "Genevieve does not make safe investments.": "¬makes_safe_investments(Genevieve)",
      "Genevieve is unable to overcome challenges.": "¬overcomes_challenges(Genevieve)",
      "Genevieve is either resilient in adversity or avoids risks, but not both.": "resilient_in_adversity(Genevieve) ⊕ avoids_risks(Genevieve)",
      "If Genevieve faces setbacks, then she either acts on impulse or finds new solutions (or both).": "faces_setbacks(Genevieve) → (acts_on_impulse(Genevieve) ∨ finds_new_solutions(Genevieve))",
      "If Genevieve either makes safe investments or has backup plans (but not both), then she avoids risks.": "(makes_safe_investments(Genevieve) ⊕ has_backup_plans(Genevieve)) → avoids_risks(Genevieve)",
      "Genevieve either acts on impulse or thinks ahead, but not both.": "acts_on_impulse(Genevieve) ⊕ thinks_ahead(Genevieve)",
      "Anyone who thinks ahead or anticipates problems has backup plans.": "∀x ((thinks_ahead(x) ∨ anticipates_problems(x)) → has_backup_plans(x))",
      "If Kailani is a creative problem solver, then she has a strong work ethic and is a successful business owner.": "creative_problem_solver(Kailani) → (has_strong_work_ethic(Kailani) ∧ successful_business_owner(Kailani))",
      "Genevieve does not seek community help.": "¬seeks_community_help(Genevieve)",
      "All experienced individuals think ahead and make strategic decisions.": "∀x (experienced(x) → (thinks_ahead(x) ∧ makes_strategic_decisions(x)))",
      "Genevieve faces setbacks.": "faces_setbacks(Genevieve)",
      "Kailani anticipates problems.": "anticipates_problems(Kailani)",
      "Everyone who either seeks community help or finds new solutions is able to overcome challenges.": "∀x ((seeks_community_help(x) ⊕ finds_new_solutions(x)) → overcomes_challenges(x))",
      "For all humans, if they take calculated risks, then they have backup plans and learn from mistakes.": "∀x (takes_calculated_risks(x) → (learns_from_mistakes(x) ∧ has_backup_plans(x)))",
      "Oscar does not make safe investments.": "¬makes_safe_investments(Oscar)",
      "If Genevieve is a creative problem solver, then she has a strong work ethic and is a successful business owner.": "creative_problem_solver(Genevieve) → (has_strong_work_ethic(Genevieve) ∧ successful_business_owner(Genevieve))",
      "Genevieve anticipates problems.": "anticipates_problems(Genevieve)",
      "If Kailani either makes safe investments or has backup plans (but not both), then she avoids risks.": "(makes_safe_investments(Kailani) ⊕ has_backup_plans(Kailani)) → avoids_risks(Kailani)"
    },
    "conclusion_fol": "passionate_about_baking(Genevieve)"
  },
  {
    "id": 45,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harlan is not passionate about environmental causes.",
    "reasoning": "fact1: Harlan stands up for others.\nfact2: Harlan is not ethically guided.\nrule: For all humans, if they either stand up for others or have strong morals, then they are ethically guided.\nconclusion: Harlan has strong morals.\n\nfact1: Harlan has strong morals.\nfact2: Harlan does not value social justice.\nrule: If Harlan has strong morals, then he either values social justice or believes in human rights (but not both).\nconclusion: Harlan believes in human rights.\n\nfact1: Harlan volunteers locally.\nfact2: Harlan does not make a positive impact.\nrule: If someone advocates for animal welfare and volunteers locally, then they can make a positive impact.\nconclusion: Harlan does not advocate for animal welfare.\n\nfact1: Harlan believes in human rights.\nfact2: Harlan does not advocate for animal welfare.\nrule: If Harlan believes in human rights, then he either works for social change or advocates for animal welfare (but not both).\nconclusion: Harlan works for social change.\n\nfact1: Harlan cares about his community.\nfact2: Harlan works for social change.\nrule: If Harlan cares about his community, then he either works for social change or fights against injustice (but not both).\nconclusion: Harlan does not fight against injustice.\n\nfact1: Harlan does not fight against injustice.\nfact2: Harlan inspires others.\nrule: If Harlan is passionate about environmental causes, then he will fight against injustice and inspire others.\nconclusion: Harlan is not passionate about environmental causes.\n\nTherefore, it is true that Harlan is not passionate about environmental causes. The correct option is: A.",
    "context": "Harlan stands up for others. Harlan does not value social justice. If someone advocates for animal welfare and volunteers locally, then they can make a positive impact. Harlan either raises awareness or works for social change. Harlan inspires others. If Harlan has strong morals, then he either values social justice or believes in human rights (but not both). Harlan is not ethically guided. If Harlan either opposes injustice or respects all life (but not both), then he has strong morals. Harlan cares about his community. Harlan does not make a positive impact. If Harlan believes in human rights, then he either works for social change or advocates for animal welfare (but not both). Soldier volunteers locally. If Harlan cares about his community, then he either works for social change or fights against injustice (but not both). For all humans, if they either stand up for others or have strong morals, then they are ethically guided. If someone opposes animal cruelty, then they will advocate for animal welfare. If Amara has strong morals, then he either values social justice or believes in human rights (but not both). Soldier does not value social justice. If Harlan is passionate about environmental causes, then he will fight against injustice and inspire others. Harlan volunteers locally.",
    "nl2fol": {
      "Harlan stands up for others.": "stands_up_for_others(Harlan)",
      "Harlan does not value social justice.": "¬values_social_justice(Harlan)",
      "If someone advocates for animal welfare and volunteers locally, then they can make a positive impact.": "∀x ((advocates_for_animal_welfare(x) ∧ volunteers_locally(x)) → makes_positive_impact(x))",
      "Harlan either raises awareness or works for social change.": "raises_awareness(Harlan) ∨ works_for_social_change(Harlan)",
      "Harlan inspires others.": "inspire_others(Harlan)",
      "If Harlan has strong morals, then he either values social justice or believes in human rights (but not both).": "has_strong_morals(Harlan) → (values_social_justice(Harlan) ⊕ believes_in_human_rights(Harlan))",
      "Harlan is not ethically guided.": "¬is_ethically_guided(Harlan)",
      "If Harlan either opposes injustice or respects all life (but not both), then he has strong morals.": "(opposes_injustice(Harlan) ⊕ respects_all_life(Harlan)) → has_strong_morals(Harlan)",
      "Harlan cares about his community.": "cares_about_community(Harlan)",
      "Harlan does not make a positive impact.": "¬makes_positive_impact(Harlan)",
      "If Harlan believes in human rights, then he either works for social change or advocates for animal welfare (but not both).": "believes_in_human_rights(Harlan) → (works_for_social_change(Harlan) ⊕ advocates_for_animal_welfare(Harlan))",
      "Soldier volunteers locally.": "volunteers_locally(Soldier)",
      "If Harlan cares about his community, then he either works for social change or fights against injustice (but not both).": "cares_about_community(Harlan) → (works_for_social_change(Harlan) ⊕ fight_against_injustice(Harlan))",
      "For all humans, if they either stand up for others or have strong morals, then they are ethically guided.": "∀x ((stands_up_for_others(x) ⊕ has_strong_morals(x)) → is_ethically_guided(x))",
      "If someone opposes animal cruelty, then they will advocate for animal welfare.": "∀x (opposes_animal_cruelty(x) → advocates_for_animal_welfare(x))",
      "If Amara has strong morals, then he either values social justice or believes in human rights (but not both).": "has_strong_morals(Amara) → (values_social_justice(Amara) ⊕ believes_in_human_rights(Amara))",
      "Soldier does not value social justice.": "¬values_social_justice(Soldier)",
      "If Harlan is passionate about environmental causes, then he will fight against injustice and inspire others.": "passionate_about_environmental_causes(Harlan) → (fight_against_injustice(Harlan) ∧ inspire_others(Harlan))",
      "Harlan volunteers locally.": "volunteers_locally(Harlan)"
    },
    "conclusion_fol": "¬passionate_about_environmental_causes(Harlan)"
  },
  {
    "id": 46,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Memphis is a nomadic artist.",
    "reasoning": "fact1: Memphis does not take risks.\nrule: Anyone who is adventurous or loves uncertainty will take risks.\nconclusion: Memphis is not adventurous.\n\nfact1: Memphis values independence.\nfact2: Memphis embraces spontaneity.\nrule: If Memphis has a free spirit, then he either values independence or embraces spontaneity, but not both.\nconclusion: Memphis does not have a free spirit.\n\nfact1: Memphis is not adventurous.\nrule: Anyone who either explores widely or has many homes is adventurous.\nconclusion: Memphis does not have many homes.\n\nfact1: Memphis does not have many homes.\nfact2: Memphis does not have a free spirit.\nrule: If Memphis either has many homes or travels frequently (but not both), then he has a free spirit.\nconclusion: Memphis does not travel frequently.\n\nfact1: Memphis does not travel frequently.\nrule: Memphis is either a settled artist or travels frequently.\nconclusion: Memphis is a settled artist.\n\nfact1: Memphis is a settled artist.\nrule: Either Memphis is a nomadic artist or a settled artist, but not both.\nconclusion: Memphis is a nomadic artist.\n\nTherefore, it is false that Memphis is a nomadic artist. The correct option is: B.",
    "context": "Memphis values independence. If Penelope either has many homes or travels frequently (but not both), then he has a free spirit. If Memphis either has no fixed address or visits many places (but not both), then he travels frequently. Memphis is either a settled artist or travels frequently. Jose does not take risks. Penelope does not have curiosity. Anyone who either explores widely or has many homes is adventurous. Anyone who is adventurous or loves uncertainty will take risks. If Memphis seeks experience, then he is adventurous. Memphis embraces spontaneity. If Jose has a free spirit, then he either values independence or embraces spontaneity, but not both. Either Penelope is a nomadic artist or a settled artist, but not both. Memphis does not take risks. Sariah values independence. If Memphis has a free spirit, then he either values independence or embraces spontaneity, but not both. If someone either owns multiple properties or rents various places (but not both), then they have many homes. Either Memphis is a nomadic artist or a settled artist, but not both. If Memphis either has many homes or travels frequently (but not both), then he has a free spirit.",
    "nl2fol": {
      "Memphis values independence.": "values_independence(Memphis)",
      "If Penelope either has many homes or travels frequently (but not both), then he has a free spirit.": "(has_many_homes(Penelope) ⊕ travels_frequently(Penelope)) → has_a_free_spirit(Penelope)",
      "If Memphis either has no fixed address or visits many places (but not both), then he travels frequently.": "(has_no_fixed_address(Memphis) ⊕ visits_many_places(Memphis)) → travels_frequently(Memphis)",
      "Memphis is either a settled artist or travels frequently.": "settled_artist(Memphis) ∨ travels_frequently(Memphis)",
      "Jose does not take risks.": "¬takes_risks(Jose)",
      "Penelope does not have curiosity.": "¬has_curiosity(Penelope)",
      "Anyone who either explores widely or has many homes is adventurous.": "∀x ((explores_widely(x) ∨ has_many_homes(x)) → is_adventurous(x))",
      "Anyone who is adventurous or loves uncertainty will take risks.": "∀x ((is_adventurous(x) ∨ loves_uncertainty(x)) → takes_risks(x))",
      "If Memphis seeks experience, then he is adventurous.": "seeks_experience(Memphis) → is_adventurous(Memphis)",
      "Memphis embraces spontaneity.": "embraces_spontaneity(Memphis)",
      "If Jose has a free spirit, then he either values independence or embraces spontaneity, but not both.": "has_a_free_spirit(Jose) → (values_independence(Jose) ⊕ embraces_spontaneity(Jose))",
      "Either Penelope is a nomadic artist or a settled artist, but not both.": "nomadic_artist(Penelope) ⊕ settled_artist(Penelope)",
      "Memphis does not take risks.": "¬takes_risks(Memphis)",
      "Sariah values independence.": "values_independence(Sariah)",
      "If Memphis has a free spirit, then he either values independence or embraces spontaneity, but not both.": "has_a_free_spirit(Memphis) → (values_independence(Memphis) ⊕ embraces_spontaneity(Memphis))",
      "If someone either owns multiple properties or rents various places (but not both), then they have many homes.": "∀x ((owns_multiple_properties(x) ⊕ rents_various_places(x)) → has_many_homes(x))",
      "Either Memphis is a nomadic artist or a settled artist, but not both.": "nomadic_artist(Memphis) ⊕ settled_artist(Memphis)",
      "If Memphis either has many homes or travels frequently (but not both), then he has a free spirit.": "(has_many_homes(Memphis) ⊕ travels_frequently(Memphis)) → has_a_free_spirit(Memphis)"
    },
    "conclusion_fol": "nomadic_artist(Memphis)"
  },
  {
    "id": 47,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Major is not a skilled boxer.",
    "reasoning": "fact1: Major speaks well.\nfact2: Major does not dress elegantly.\nrule: Anyone who speaks well or dresses elegantly can have high social status.\nconclusion: Major has high social status.\n\nfact1: Major has high social status.\nfact2: Major is not highly educated.\nrule: If Major has high social status, then he is either well-connected or highly educated (but not both).\nconclusion: Major is well-connected.\n\nfact1: Major is a famous figure.\nfact2: Major is not a respected leader.\nrule: Everyone who is a famous figure is either a respected leader or an influential person (or both).\nconclusion: Major is an influential person.\n\nfact1: Major is well-connected.\nfact2: Major is an influential person.\nrule: If Major is well-connected, then he is wealthy and an influential person.\nconclusion: Major has wealth.\n\nfact1: Major has wealth.\nrule: For Major, having wealth and supporting charity are mutually exclusive, but not necessarily exhaustive.\nconclusion: Major does not support charity.\n\nfact1: Major does not support charity.\nfact2: Major is not a popular figure.\nrule: If Major wins championships, then he either supports charity or is a popular figure (or both).\nconclusion: Major does not win championships.\n\nfact1: Major trains regularly.\nfact2: Major does not win championships.\nrule: If Major trains regularly and is a formidable opponent, then he can win championships.\nconclusion: Major is not a formidable opponent.\n\nfact1: Major is not a formidable opponent.\nfact2: Major has loyal fans.\nrule: If Major is a skilled boxer, then he is a formidable opponent and has loyal fans.\nconclusion: Major is not a skilled boxer.\n\nTherefore, it is true that Major is not a skilled boxer. The correct option is: A.",
    "context": "Major does not dress elegantly. Major trains regularly. Major is not highly educated. Major is a famous figure. If Major has sympathy for others and is successful, then he supports charity. If Major is well-connected, then he is wealthy and an influential person. Major speaks well. If Major trains regularly and is a formidable opponent, then he can win championships. For Major, having wealth and supporting charity are mutually exclusive, but not necessarily exhaustive. Major has loyal fans. If someone has discipline and natural talent, then they can win championships. Anyone who speaks well or dresses elegantly can have high social status. If Major has natural talent, then he has high social status and works hard. Everyone who is a famous figure is either a respected leader or an influential person (or both). Major is not a popular figure. If Major has high social status, then he is either well-connected or highly educated (but not both). If Major wins championships, then he either supports charity or is a popular figure (or both). If Major is a skilled boxer, then he is a formidable opponent and has loyal fans. Major is not a respected leader.",
    "nl2fol": {
      "Major does not dress elegantly.": "¬dresses_elegantly(Major)",
      "Major trains regularly.": "trains_regularly(Major)",
      "Major is not highly educated.": "¬is_highly_educated(Major)",
      "Major is a famous figure.": "famous_figure(Major)",
      "If Major has sympathy for others and is successful, then he supports charity.": "(has_sympathy(Major) ∧ is_successful(Major)) → supports_charity(Major)",
      "If Major is well-connected, then he is wealthy and an influential person.": "well_connected(Major) → (has_wealth(Major) ∧ influential_person(Major))",
      "Major speaks well.": "speaks_well(Major)",
      "If Major trains regularly and is a formidable opponent, then he can win championships.": "(trains_regularly(Major) ∧ formidable_opponent(Major)) → wins_championships(Major)",
      "For Major, having wealth and supporting charity are mutually exclusive, but not necessarily exhaustive.": "has_wealth(Major) ⊕ supports_charity(Major)",
      "Major has loyal fans.": "has_loyal_fans(Major)",
      "If someone has discipline and natural talent, then they can win championships.": "∀x ((has_discipline(x) ∧ has_natural_talent(x)) → wins_championships(x))",
      "Anyone who speaks well or dresses elegantly can have high social status.": "∀x ((speaks_well(x) ∨ dresses_elegantly(x)) → has_high_social_status(x))",
      "If Major has natural talent, then he has high social status and works hard.": "has_natural_talent(Major) → (has_high_social_status(Major) ∧ works_hard(Major))",
      "Everyone who is a famous figure is either a respected leader or an influential person (or both).": "∀x (famous_figure(x) → (respected_leader(x) ∨ influential_person(x)))",
      "Major is not a popular figure.": "¬popular_figure(Major)",
      "If Major has high social status, then he is either well-connected or highly educated (but not both).": "has_high_social_status(Major) → (well_connected(Major) ⊕ is_highly_educated(Major))",
      "If Major wins championships, then he either supports charity or is a popular figure (or both).": "wins_championships(Major) → (supports_charity(Major) ∨ popular_figure(Major))",
      "If Major is a skilled boxer, then he is a formidable opponent and has loyal fans.": "skilled_boxer(Major) → (formidable_opponent(Major) ∧ has_loyal_fans(Major))",
      "Major is not a respected leader.": "¬respected_leader(Major)"
    },
    "conclusion_fol": "¬skilled_boxer(Major)"
  },
  {
    "id": 48,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Orlando is an innovative scientist.",
    "reasoning": "fact1: Orlando does not gain recognition.\nfact2: Orlando does not advance industries.\nrule: Anyone who makes breakthrough discoveries either gains recognition or advances industries (or both).\nconclusion: Orlando does not make breakthrough discoveries.\n\nfact1: Orlando does not have an open mind.\nfact2: Orlando does not achieve success.\nrule: If Orlando is collaborative or has an open mind, then he can achieve success.\nconclusion: Orlando is not collaborative.\n\nfact1: Orlando is not collaborative.\nrule: If Orlando makes new connections, then he is collaborative and thinks creatively.\nconclusion: Orlando does not make new connections.\n\nfact1: Orlando does not read widely.\nfact2: Orlando does not make new connections.\nrule: If Orlando either reads widely or pursues knowledge (but not both), then he makes new connections.\nconclusion: Orlando does not pursue knowledge.\n\nfact1: Orlando does not pursue knowledge.\nrule: Orlando pursues knowledge or conducts meaningful research.\nconclusion: Orlando conducts meaningful research.\n\nfact1: Orlando conducts meaningful research.\nfact2: Orlando develops new technologies.\nrule: Anyone who conducts meaningful research or develops new technologies can improve people's lives.\nconclusion: Orlando improves people's lives.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Orlando is an innovative scientist. The correct option is: C.",
    "context": "If Orlando either reads widely or pursues knowledge (but not both), then he makes new connections. Orlando pursues knowledge or conducts meaningful research. Orlando does not advance industries. Everyone learns from others or pursues knowledge. Orlando develops new technologies. If Orlando works in a team, then he is either collaborative or follows instructions (but not both). Orlando does not achieve success. Orlando does not have an open mind. If Orlando is collaborative or has an open mind, then he can achieve success. Anyone who makes breakthrough discoveries either gains recognition or advances industries (or both). If Orlando makes new connections, then he is collaborative and thinks creatively. Orlando does not read widely. Orlando does not gain recognition. Anyone who conducts meaningful research or develops new technologies can improve people's lives. If someone sets clear goals and works with focus, then they can conduct meaningful research.",
    "nl2fol": {
      "If Orlando either reads widely or pursues knowledge (but not both), then he makes new connections.": "(reads_widely(Orlando) ⊕ pursues_knowledge(Orlando)) → makes_new_connections(Orlando)",
      "Orlando pursues knowledge or conducts meaningful research.": "pursues_knowledge(Orlando) ∨ conducts_meaningful_research(Orlando)",
      "Orlando does not advance industries.": "¬advance_industries(Orlando)",
      "Everyone learns from others or pursues knowledge.": "∀x (learns_from_others(x) ∨ pursues_knowledge(x))",
      "Orlando develops new technologies.": "develops_new_technologies(Orlando)",
      "If Orlando works in a team, then he is either collaborative or follows instructions (but not both).": "works_in_team(Orlando) → (follows_instructions(Orlando) ⊕ collaborative(Orlando))",
      "Orlando does not achieve success.": "¬achieve_success(Orlando)",
      "Orlando does not have an open mind.": "¬has_open_mind(Orlando)",
      "If Orlando is collaborative or has an open mind, then he can achieve success.": "(collaborative(Orlando) ∨ has_open_mind(Orlando)) → achieve_success(Orlando)",
      "Anyone who makes breakthrough discoveries either gains recognition or advances industries (or both).": "∀x (make_breakthrough_discoveries(x) → (gain_recognition(x) ∨ advance_industries(x)))",
      "If Orlando makes new connections, then he is collaborative and thinks creatively.": "makes_new_connections(Orlando) → (collaborative(Orlando) ∧ think_creatively(Orlando))",
      "Orlando does not read widely.": "¬reads_widely(Orlando)",
      "Orlando does not gain recognition.": "¬gain_recognition(Orlando)",
      "Anyone who conducts meaningful research or develops new technologies can improve people's lives.": "∀x ((conducts_meaningful_research(x) ∨ develops_new_technologies(x)) → improve_peoples_lives(x))",
      "If someone sets clear goals and works with focus, then they can conduct meaningful research.": "∀x ((sets_clear_goals(x) ∧ works_with_focus(x)) → conducts_meaningful_research(x))"
    },
    "conclusion_fol": "innovative_scientist(Orlando)"
  },
  {
    "id": 49,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Juliet reads daily affirmations.",
    "reasoning": "fact1: Juliet does not speak directly.\nrule: For Juliet, she either speaks directly or has empathy, but not necessarily both.\nconclusion: Juliet has empathy.\n\nfact1: Juliet has empathy.\nfact2: Juliet cannot build strong relationships.\nrule: If someone has empathy and listens actively, then they can build strong relationships.\nconclusion: Juliet does not listen actively.\n\nfact1: Juliet connects with nature.\nfact2: Juliet prioritizes self-care.\nrule: If someone connects with nature and prioritizes self-care, then they feel more centered.\nconclusion: Juliet feels more centered.\n\nfact1: Juliet does not listen actively.\nfact2: Juliet offers guidance.\nrule: If Juliet either listens actively or offers guidance (but not both), then she helps others heal.\nconclusion: Juliet helps others heal.\n\nfact1: Juliet spreads positivity.\nfact2: Juliet helps others heal.\nrule: If Juliet spreads positivity, then she either inspires others or helps others heal, but not both.\nconclusion: Juliet does not inspire others.\n\nfact1: Juliet does not inspire others.\nrule: If Juliet feels more optimistic, then she will inspire others.\nconclusion: Juliet does not feel more optimistic.\n\nfact1: Juliet does not feel more optimistic.\nrule: Anyone who feels more confident or practices mindfulness can feel more optimistic.\nconclusion: Juliet does not feel more confident.\n\nfact1: Juliet does not feel more confident.\nrule: If Juliet reads daily affirmations, then she feels more confident.\nconclusion: Juliet reads daily affirmations.\n\nTherefore, it is false that Juliet reads daily affirmations. The correct option is: B.",
    "context": "For Juliet, she either speaks directly or has empathy, but not necessarily both. Juliet does not speak directly. If someone connects with nature and prioritizes self-care, then they feel more centered. Juliet connects with nature. If Juliet feels more optimistic, then she will inspire others. Juliet offers guidance. Juliet cannot build strong relationships. Juliet prioritizes self-care. If Juliet spreads positivity, then she either inspires others or helps others heal, but not both. If Juliet either listens actively or offers guidance (but not both), then she helps others heal. Anyone who feels more confident or practices mindfulness can feel more optimistic. If someone has empathy and listens actively, then they can build strong relationships. If Juliet reads daily affirmations, then she feels more confident. Juliet spreads positivity.",
    "nl2fol": {
      "For Juliet, she either speaks directly or has empathy, but not necessarily both.": "speaks_directly(Juliet) ⊕ has_empathy(Juliet)",
      "Juliet does not speak directly.": "¬speaks_directly(Juliet)",
      "If someone connects with nature and prioritizes self-care, then they feel more centered.": "∀x ((connects_with_nature(x) ∧ prioritizes_self_care(x)) → feels_more_centered(x))",
      "Juliet connects with nature.": "connects_with_nature(Juliet)",
      "If Juliet feels more optimistic, then she will inspire others.": "feels_more_optimistic(Juliet) → inspires_others(Juliet)",
      "Juliet offers guidance.": "offers_guidance(Juliet)",
      "Juliet cannot build strong relationships.": "¬builds_strong_relationships(Juliet)",
      "Juliet prioritizes self-care.": "prioritizes_self_care(Juliet)",
      "If Juliet spreads positivity, then she either inspires others or helps others heal, but not both.": "spreads_positivity(Juliet) → (inspires_others(Juliet) ⊕ helps_others_heal(Juliet))",
      "If Juliet either listens actively or offers guidance (but not both), then she helps others heal.": "(listens_actively(Juliet) ⊕ offers_guidance(Juliet)) → helps_others_heal(Juliet)",
      "Anyone who feels more confident or practices mindfulness can feel more optimistic.": "∀x ((feels_more_confident(x) ∨ practices_mindfulness(x)) → feels_more_optimistic(x))",
      "If someone has empathy and listens actively, then they can build strong relationships.": "∀x ((has_empathy(x) ∧ listens_actively(x)) → builds_strong_relationships(x))",
      "If Juliet reads daily affirmations, then she feels more confident.": "reads_daily_affirmations(Juliet) → feels_more_confident(Juliet)",
      "Juliet spreads positivity.": "spreads_positivity(Juliet)"
    },
    "conclusion_fol": "reads_daily_affirmations(Juliet)"
  },
  {
    "id": 50,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Zayd appreciates the history.",
    "reasoning": "fact1: Zayd has imagination.\nrule: If Zayd has imagination, then he both pursues his passion and expresses himself creatively.\nconclusion: Zayd pursues his passion.\n\nfact1: Zayd does not visit museums.\nfact2: Zayd does not support local artists.\nrule: Everyone who enjoys culture either visits museums or supports local artists (or both).\nconclusion: Zayd does not enjoy culture.\n\nfact1: Zayd does not collect paintings.\nrule: Zayd loves art or collects paintings.\nconclusion: Zayd loves art.\n\nfact1: Zayd pursues his passion.\nfact2: Zayd does not develop his skills.\nrule: Everyone who pursues their passion either studies the masters or develops their skills (or both).\nconclusion: Zayd studies the masters.\n\nfact1: Zayd loves art.\nfact2: Zayd does not enjoy culture.\nrule: If Zayd loves art, then he is either a resident of Firenze or enjoys culture, but not both.\nconclusion: Zayd lives in Firenze.\n\nfact1: Zayd studies the masters.\nrule: If Zayd studies the masters, then he will become an artist.\nconclusion: Zayd becomes an artist.\n\nfact1: Zayd lives in Firenze.\nfact2: Zayd becomes an artist.\nrule: If Zayd lives in Firenze, then he can either become an artist or appreciate the history, but not both.\nconclusion: Zayd appreciates the history.\n\nTherefore, it is false that Zayd appreciates the history. The correct option is: B.",
    "context": "If Lawson has imagination, then he both pursues his passion and expresses himself creatively. Everyone who enjoys culture either visits museums or supports local artists (or both). Alvin does not visit museums. Any person who travels frequently or tries local food can enjoy culture. Alvin does not support local artists. If Zayd has talent, then he can either become an artist or work freelance, but not both. Zayd does not develop his skills. If Alvin lives in Firenze, then he can either become an artist or appreciate the history, but not both. Kyle has imagination. Zayd loves art or collects paintings. Zayd has imagination. If Zayd finds beauty, then he either loves art or creates masterpieces (or both). If Zayd loves art, then he is either a resident of Firenze or enjoys culture, but not both. If Zayd lives in a historic city, then he either lives in Firenze or is an architect, but not both. If Kyle studies the masters, then he will become an artist. Zayd does not visit museums. Alvin does not collect paintings. If Zayd has imagination, then he both pursues his passion and expresses himself creatively. Zayd does not collect paintings. Lawson loves art or collects paintings. If Zayd admires beauty, then he studies the masters and has a vision. If Zayd lives in Firenze, then he can either become an artist or appreciate the history, but not both. If Zayd studies the masters, then he will become an artist. Zayd does not support local artists. If Lawson loves art, then he is either a resident of Firenze or enjoys culture, but not both. Everyone who pursues their passion either studies the masters or develops their skills (or both).",
    "nl2fol": {
      "If Lawson has imagination, then he both pursues his passion and expresses himself creatively.": "has_imagination(Lawson) → (pursue_passion(Lawson) ∧ express_creatively(Lawson))",
      "Everyone who enjoys culture either visits museums or supports local artists (or both).": "∀x (enjoy_culture(x) → (visit_museums(x) ∨ support_local_artists(x)))",
      "Alvin does not visit museums.": "¬visit_museums(Alvin)",
      "Any person who travels frequently or tries local food can enjoy culture.": "∀x ((travel_frequently(x) ∨ try_local_food(x)) → enjoy_culture(x))",
      "Alvin does not support local artists.": "¬supports_local_artists(Alvin)",
      "If Zayd has talent, then he can either become an artist or work freelance, but not both.": "has_talent(Zayd) → (become_artist(Zayd) ⊕ work_freelance(Zayd))",
      "Zayd does not develop his skills.": "¬develop_skills(Zayd)",
      "If Alvin lives in Firenze, then he can either become an artist or appreciate the history, but not both.": "live_in_Firenze(Alvin) → (become_artist(Alvin) ⊕ appreciate_history(Alvin))",
      "Kyle has imagination.": "has_imagination(Kyle)",
      "Zayd loves art or collects paintings.": "love_art(Zayd) ∨ collects_paintings(Zayd)",
      "Zayd has imagination.": "has_imagination(Zayd)",
      "If Zayd finds beauty, then he either loves art or creates masterpieces (or both).": "find_beauty(Zayd) → (love_art(Zayd) ∨ create_masterpieces(Zayd))",
      "If Zayd loves art, then he is either a resident of Firenze or enjoys culture, but not both.": "love_art(Zayd) → (enjoy_culture(Zayd) ⊕ live_in_Firenze(Zayd))",
      "If Zayd lives in a historic city, then he either lives in Firenze or is an architect, but not both.": "live_in_historic_city(Zayd) → (live_in_Firenze(Zayd) ⊕ be_architect(Zayd))",
      "If Kyle studies the masters, then he will become an artist.": "study_masters(Kyle) → become_artist(Kyle)",
      "Zayd does not visit museums.": "¬visit_museums(Zayd)",
      "Alvin does not collect paintings.": "¬collects_paintings(Alvin)",
      "If Zayd has imagination, then he both pursues his passion and expresses himself creatively.": "has_imagination(Zayd) → (pursue_passion(Zayd) ∧ express_creatively(Zayd))",
      "Zayd does not collect paintings.": "¬collects_paintings(Zayd)",
      "Lawson loves art or collects paintings.": "love_art(Lawson) ∨ collects_paintings(Lawson)",
      "If Zayd admires beauty, then he studies the masters and has a vision.": "admire_beauty(Zayd) → (study_masters(Zayd) ∧ have_vision(Zayd))",
      "If Zayd lives in Firenze, then he can either become an artist or appreciate the history, but not both.": "live_in_Firenze(Zayd) → (become_artist(Zayd) ⊕ appreciate_history(Zayd))",
      "If Zayd studies the masters, then he will become an artist.": "study_masters(Zayd) → become_artist(Zayd)",
      "Zayd does not support local artists.": "¬support_local_artists(Zayd)",
      "If Lawson loves art, then he is either a resident of Firenze or enjoys culture, but not both.": "love_art(Lawson) → (enjoy_culture(Lawson) ⊕ live_in_Firenze(Lawson))",
      "Everyone who pursues their passion either studies the masters or develops their skills (or both).": "∀x (pursue_passion(x) → (study_masters(x) ∨ develop_skills(x)))"
    },
    "conclusion_fol": "appreciate_history(Zayd)"
  },
  {
    "id": 51,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Makenzie studies geology, then she can either make groundbreaking discoveries or inspire scientists, but not both.",
    "reasoning": "fact1: Makenzie loves nature.\nfact2: Makenzie enjoys fieldwork.\nrule: Anyone who loves nature and enjoys fieldwork can study geology.\nconclusion: Makenzie studies geology.\n\nfact1: Makenzie does not chart new terrain.\nfact2: Makenzie cannot uncover secrets.\nrule: Anyone who charts new terrain or maps landforms can uncover secrets.\nconclusion: Makenzie does not map landforms.\n\nfact1: Makenzie does not map landforms.\nfact2: Makenzie does not seek adventure.\nrule: If Makenzie either maps landforms or explores wilderness (but not both), then she seeks adventure.\nconclusion: Makenzie does not explore the wilderness.\n\nfact1: Makenzie does not explore the wilderness.\nrule: Makenzie either explores wilderness or analyzes rocks, but not both.\nconclusion: Makenzie analyzes rocks.\n\nfact1: Makenzie analyzes rocks.\nfact2: Makenzie does not further her understanding.\nrule: If someone either collects fossil samples or analyzes rocks (but not both), then they further understanding.\nconclusion: Makenzie collects fossil samples.\n\nfact1: Makenzie collects fossil samples.\nfact2: Makenzie does not contribute to science.\nrule: If Makenzie either collects fossil samples or advances knowledge (but not both), then she contributes to science.\nconclusion: Makenzie advances knowledge.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Makenzie studies geology, then she can either make groundbreaking discoveries or inspire scientists, but not both. The correct option is: C.",
    "context": "If Makenzie either maps landforms or explores wilderness (but not both), then she seeks adventure. Makenzie cannot uncover secrets. Makenzie does not further her understanding. Makenzie does not contribute to science. Makenzie either explores wilderness or analyzes rocks, but not both. If Makenzie either collects fossil samples or advances knowledge (but not both), then she contributes to science. Anyone who loves nature and enjoys fieldwork can study geology. Anyone who charts new terrain or maps landforms can uncover secrets. If someone either collects fossil samples or analyzes rocks (but not both), then they further understanding. Makenzie does not chart new terrain. Makenzie does not seek adventure. Makenzie enjoys fieldwork. Makenzie loves nature.",
    "nl2fol": {
      "If Makenzie either maps landforms or explores wilderness (but not both), then she seeks adventure.": "(map_landforms(Makenzie) ⊕ explore_wilderness(Makenzie)) → seek_adventure(Makenzie)",
      "Makenzie cannot uncover secrets.": "¬uncover_secrets(Makenzie)",
      "Makenzie does not further her understanding.": "¬further_understanding(Makenzie)",
      "Makenzie does not contribute to science.": "¬contribute_to_science(Makenzie)",
      "Makenzie either explores wilderness or analyzes rocks, but not both.": "explore_wilderness(Makenzie) ⊕ analyze_rocks(Makenzie)",
      "If Makenzie either collects fossil samples or advances knowledge (but not both), then she contributes to science.": "(collect_fossil_samples(Makenzie) ⊕ advance_knowledge(Makenzie)) → contribute_to_science(Makenzie)",
      "Anyone who loves nature and enjoys fieldwork can study geology.": "∀x ((loves_nature(x) ∧ enjoys_fieldwork(x)) → study_geology(x))",
      "Anyone who charts new terrain or maps landforms can uncover secrets.": "∀x ((chart_new_terrain(x) ∨ map_landforms(x)) → uncover_secrets(x))",
      "If someone either collects fossil samples or analyzes rocks (but not both), then they further understanding.": "∀x ((collect_fossil_samples(x) ⊕ analyze_rocks(x)) → further_understanding(x))",
      "Makenzie does not chart new terrain.": "¬chart_new_terrain(Makenzie)",
      "Makenzie does not seek adventure.": "¬seek_adventure(Makenzie)",
      "Makenzie enjoys fieldwork.": "enjoys_fieldwork(Makenzie)",
      "Makenzie loves nature.": "loves_nature(Makenzie)"
    },
    "conclusion_fol": "study_geology(Makenzie) → (make_groundbreaking_discoveries(Makenzie) ⊕ inspire_scientists(Makenzie))"
  },
  {
    "id": 52,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Norah is not an inexperienced climber.",
    "reasoning": "fact1: Norah does not explore remote areas.\nfact2: Norah attempts record breaks.\nrule: If someone either explores remote areas or attempts record breaks (but not both), then they are a thrill seeker.\nconclusion: Norah is a thrill seeker.\n\nfact1: Norah is a thrill seeker.\nrule: If Norah is a thrill seeker, then she leads private expeditions.\nconclusion: Norah leads private expeditions.\n\nfact1: Norah leads private expeditions.\nrule: Norah either leads private expeditions or is a professional guide, but not both.\nconclusion: Norah is not a professional guide.\n\nfact1: Norah is not a professional guide.\nrule: Norah is either a professional guide or a novice adventurer, but not both.\nconclusion: Norah is a novice adventurer.\n\nfact1: Norah is a novice adventurer.\nrule: Norah is either a novice adventurer or an experienced climber, but not both.\nconclusion: Norah is not an experienced climber.\n\nfact1: Norah is not an experienced climber.\nrule: Norah is either an experienced climber or an inexperienced climber, but not both.\nconclusion: Norah is an inexperienced climber.\n\nTherefore, it is false that Norah is not an inexperienced climber. The correct option is: B.",
    "context": "Alora is either an experienced climber or an inexperienced climber, but not both. Norah either leads private expeditions or is a professional guide, but not both. If Norah has acuminate instincts, then she either detects hidden dangers or is a novice adventurer (or both). If Norah enjoys solo trips, then she is either a thrill seeker or a participant in competitions, but not both. Norah is either an experienced climber or an inexperienced climber, but not both. Norah is either a professional guide or a novice adventurer, but not both. Keegan either leads private expeditions or is a professional guide, but not both. If Keegan is a thrill seeker, then she leads private expeditions. Norah attempts record breaks. Alora does not explore remote areas. Norah is either a novice adventurer or an experienced climber, but not both. Norah does not explore remote areas. If Norah is a thrill seeker, then she leads private expeditions. If someone either explores remote areas or attempts record breaks (but not both), then they are a thrill seeker.",
    "nl2fol": {
      "Alora is either an experienced climber or an inexperienced climber, but not both.": "experienced_climber(Alora) ⊕ inexperienced_climber(Alora)",
      "Norah either leads private expeditions or is a professional guide, but not both.": "leads_private_expeditions(Norah) ⊕ professional_guide(Norah)",
      "If Norah has acuminate instincts, then she either detects hidden dangers or is a novice adventurer (or both).": "has_acuminate_instincts(Norah) → (detects_hidden_dangers(Norah) ∨ novice_adventurer(Norah))",
      "If Norah enjoys solo trips, then she is either a thrill seeker or a participant in competitions, but not both.": "enjoys_solo_trips(Norah) → (thrill_seeker(Norah) ⊕ participates_in_competitions(Norah))",
      "Norah is either an experienced climber or an inexperienced climber, but not both.": "experienced_climber(Norah) ⊕ inexperienced_climber(Norah)",
      "Norah is either a professional guide or a novice adventurer, but not both.": "professional_guide(Norah) ⊕ novice_adventurer(Norah)",
      "Keegan either leads private expeditions or is a professional guide, but not both.": "leads_private_expeditions(Keegan) ⊕ professional_guide(Keegan)",
      "If Keegan is a thrill seeker, then she leads private expeditions.": "thrill_seeker(Keegan) → leads_private_expeditions(Keegan)",
      "Norah attempts record breaks.": "attempts_record_breaks(Norah)",
      "Alora does not explore remote areas.": "¬explores_remote_areas(Alora)",
      "Norah is either a novice adventurer or an experienced climber, but not both.": "novice_adventurer(Norah) ⊕ experienced_climber(Norah)",
      "Norah does not explore remote areas.": "¬explores_remote_areas(Norah)",
      "If Norah is a thrill seeker, then she leads private expeditions.": "thrill_seeker(Norah) → leads_private_expeditions(Norah)",
      "If someone either explores remote areas or attempts record breaks (but not both), then they are a thrill seeker.": "∀x ((explores_remote_areas(x) ⊕ attempts_record_breaks(x)) → thrill_seeker(x))"
    },
    "conclusion_fol": "¬inexperienced_climber(Norah)"
  },
  {
    "id": 53,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ares performs well in competitions.",
    "reasoning": "fact1: Ares does not have agility.\nrule: Ares either has speed or agility, but not both.\nconclusion: Ares has speed.\n\nfact1: Ares is a champion.\nfact2: Ares has speed.\nrule: If Ares is a champion, then he either has an attractive appearance or has speed (but not both).\nconclusion: Ares does not have an attractive appearance.\n\nfact1: Ares does not have an attractive appearance.\nfact2: Ares does not have excellent jumping skills.\nrule: If Ares has noble bloodlines, then he either has an attractive appearance or excellent jumping skills (or both).\nconclusion: Ares does not have noble bloodlines.\n\nfact1: Ares does not have noble bloodlines.\nrule: If a horse has noble bloodlines, it is not necessarily confident, and if a horse is confident, it does not necessarily have noble bloodlines.\nconclusion: Ares is confident.\n\nfact1: Ares has a good temper.\nfact2: Ares responds to commands.\nrule: If Ares builds strong bonds with Rachel, then he either has a good temper or responds to commands, but not both.\nconclusion: Ares does not build strong bonds with Rachel.\n\nfact1: Ares is confident.\nfact2: Ares does not build strong bonds with Rachel.\nrule: If Ares is confident, then he either performs well in competitions or builds strong bonds with Rachel, but not both.\nconclusion: Ares performs well in competitions.\n\nTherefore, it is true that Ares performs well in competitions. The correct option is: A.",
    "context": "Ares is a champion. If Ares has noble bloodlines, then he either has an attractive appearance or excellent jumping skills (or both). If Ares is confident, then he either performs well in competitions or builds strong bonds with Rachel, but not both. If a horse has noble bloodlines, it is not necessarily confident, and if a horse is confident, it does not necessarily have noble bloodlines. Ares either has speed or agility, but not both. If Ares either has a shiny coat or a flowing mane (but not both), then he has an attractive appearance. Ares has a good temper. Ares does not have excellent jumping skills. If Ares is a champion, then he either has an attractive appearance or has speed (but not both). Ares responds to commands. If Ares builds strong bonds with Rachel, then he either has a good temper or responds to commands, but not both. Ares does not have agility.",
    "nl2fol": {
      "Ares is a champion.": "is_champion(Ares)",
      "If Ares has noble bloodlines, then he either has an attractive appearance or excellent jumping skills (or both).": "has_noble_bloodlines(Ares) → (attractive_appearance(Ares) ∨ excellent_jumping_skills(Ares))",
      "If Ares is confident, then he either performs well in competitions or builds strong bonds with Rachel, but not both.": "confident(Ares) → (perform_well(Ares) ⊕ build_strong_bonds(Ares))",
      "If a horse has noble bloodlines, it is not necessarily confident, and if a horse is confident, it does not necessarily have noble bloodlines.": "∀x (confident(x) ⊕ has_noble_bloodlines(x))",
      "Ares either has speed or agility, but not both.": "has_speed(Ares) ⊕ has_agility(Ares)",
      "If Ares either has a shiny coat or a flowing mane (but not both), then he has an attractive appearance.": "(has_shiny_coat(Ares) ⊕ has_flowing_mane(Ares)) → attractive_appearance(Ares)",
      "Ares has a good temper.": "has_good_temper(Ares)",
      "Ares does not have excellent jumping skills.": "¬excellent_jumping_skills(Ares)",
      "If Ares is a champion, then he either has an attractive appearance or has speed (but not both).": "is_champion(Ares) → (attractive_appearance(Ares) ⊕ has_speed(Ares))",
      "Ares responds to commands.": "responds_to_commands(Ares)",
      "If Ares builds strong bonds with Rachel, then he either has a good temper or responds to commands, but not both.": "build_strong_bonds(Ares) → (has_good_temper(Ares) ⊕ responds_to_commands(Ares))",
      "Ares does not have agility.": "¬has_agility(Ares)"
    },
    "conclusion_fol": "perform_well(Ares)"
  },
  {
    "id": 54,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Zayn does not care about the environment.",
    "reasoning": "fact1: Zayn values sustainability.\nfact2: Zayn conducts research.\nrule: If Zayn values sustainability, then he conducts research and earns an environmental degree.\nconclusion: Zayn earns an environmental degree.\n\nfact1: Zayn lives in a rural area.\nrule: If Zayn lives in a rural area, then he will likely enjoy hiking.\nconclusion: Zayn enjoys hiking.\n\nfact1: Zayn enjoys hiking.\nrule: If Zayn enjoys hiking, then he works outdoors.\nconclusion: Zayn works outdoors.\n\nfact1: Zayn works outdoors.\nfact2: Zayn supports conservation.\nrule: If Zayn works outdoors, then he either supports conservation or protects wildlife, but not both.\nconclusion: Zayn does not protect wildlife.\n\nfact1: Zayn earns an environmental degree.\nrule: Anyone who earns an environmental degree will study ecology.\nconclusion: Zayn studies ecology.\n\nfact1: Zayn studies ecology.\nfact2: Zayn does not protect wildlife.\nrule: Anyone who studies ecology either protects wildlife or loves nature (or both).\nconclusion: Zayn loves nature.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Zayn does not care about the environment. The correct option is: C.",
    "context": "If Zayn appreciates scenery, then he either visits mountains or enjoys hiking. Anyone who studies ecology either protects wildlife or loves nature (or both). Anyone who has curiosity and appreciates biodiversity can study ecology. If Zayn values sustainability, then he conducts research and earns an environmental degree. If Zayn teaches others, then he either protects wildlife or preserves habitats (or both). Zayn values sustainability. If Sweetness enjoys hiking, then he works outdoors. Saanvi supports conservation. Andi values sustainability. Sweetness lives in a rural area. If Andi works outdoors, then he either supports conservation or protects wildlife, but not both. If Zayn lives in a rural area, then he will likely enjoy hiking. If Sweetness values sustainability, then he conducts research and earns an environmental degree. Anyone who earns an environmental degree will study ecology. Zayn conducts research. Andi conducts research. Zayn lives in a rural area. If Zayn enjoys hiking, then he works outdoors. If Zayn is a volunteer, then he either works outdoors or teaches science, but not both. If Zayn works outdoors, then he either supports conservation or protects wildlife, but not both. Zayn supports conservation.",
    "nl2fol": {
      "If Zayn appreciates scenery, then he either visits mountains or enjoys hiking.": "appreciate_scenery(Zayn) → (visit_mountains(Zayn) ∨ enjoy_hiking(Zayn))",
      "Anyone who studies ecology either protects wildlife or loves nature (or both).": "∀x (study_ecology(x) → (protect_wildlife(x) ∨ love_nature(x)))",
      "Anyone who has curiosity and appreciates biodiversity can study ecology.": "∀x ((has_curiosity(x) ∧ appreciates_biodiversity(x)) → study_ecology(x))",
      "If Zayn values sustainability, then he conducts research and earns an environmental degree.": "value_sustainability(Zayn) → (conduct_research(Zayn) ∧ earn_environmental_degree(Zayn))",
      "If Zayn teaches others, then he either protects wildlife or preserves habitats (or both).": "teach_others(Zayn) → (protect_wildlife(Zayn) ∨ preserve_habitats(Zayn))",
      "Zayn values sustainability.": "value_sustainability(Zayn)",
      "If Sweetness enjoys hiking, then he works outdoors.": "enjoy_hiking(Sweetness) → work_outdoors(Sweetness)",
      "Saanvi supports conservation.": "supports_conservation(Saanvi)",
      "Andi values sustainability.": "values_sustainability(Andi)",
      "Sweetness lives in a rural area.": "live_rurally(Sweetness)",
      "If Andi works outdoors, then he either supports conservation or protects wildlife, but not both.": "work_outdoors(Andi) → (support_conservation(Andi) ⊕ protect_wildlife(Andi))",
      "If Zayn lives in a rural area, then he will likely enjoy hiking.": "live_rurally(Zayn) → enjoy_hiking(Zayn)",
      "If Sweetness values sustainability, then he conducts research and earns an environmental degree.": "value_sustainability(Sweetness) → (conduct_research(Sweetness) ∧ earn_environmental_degree(Sweetness))",
      "Anyone who earns an environmental degree will study ecology.": "∀x (earn_environmental_degree(x) → study_ecology(x))",
      "Zayn conducts research.": "conduct_research(Zayn)",
      "Andi conducts research.": "conducts_research(Andi)",
      "Zayn lives in a rural area.": "live_rurally(Zayn)",
      "If Zayn enjoys hiking, then he works outdoors.": "enjoy_hiking(Zayn) → work_outdoors(Zayn)",
      "If Zayn is a volunteer, then he either works outdoors or teaches science, but not both.": "be_volunteer(Zayn) → (work_outdoors(Zayn) ⊕ teach_science(Zayn))",
      "If Zayn works outdoors, then he either supports conservation or protects wildlife, but not both.": "work_outdoors(Zayn) → (support_conservation(Zayn) ⊕ protect_wildlife(Zayn))",
      "Zayn supports conservation.": "support_conservation(Zayn)"
    },
    "conclusion_fol": "¬care_about_environment(Zayn)"
  },
  {
    "id": 55,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Wyatt's relationship is not spontaneous.",
    "reasoning": "fact1: Wyatt does not appreciate moments.\nrule: Wyatt either appreciates moments or tries new things, but not both.\nconclusion: Wyatt tries new things.\n\nfact1: Wyatt travels frequently.\nfact2: Wyatt tries new things.\nrule: If Wyatt travels frequently, then he either tries new things or explores new places, but not both.\nconclusion: Wyatt does not explore new places.\n\nfact1: Wyatt values loneliness.\nrule: For Wyatt, either building lasting connections or valuing loneliness is true, but not both.\nconclusion: Wyatt does not build lasting connections.\n\nfact1: Wyatt does not pursue his passion.\nfact2: Wyatt does not build lasting connections.\nrule: Anyone who achieves success either pursues their passion or builds lasting connections (or both).\nconclusion: Wyatt does not achieve success.\n\nfact1: Wyatt does not achieve success.\nrule: If Wyatt takes risks, then he will achieve success.\nconclusion: Wyatt does not take risks.\n\nfact1: Wyatt does not take risks.\nfact2: Wyatt does not explore new places.\nrule: Everyone who is adventurous either takes risks or explores new places.\nconclusion: Wyatt is not adventurous.\n\nfact1: Wyatt does not follow a routine.\nrule: Wyatt is either open-minded or follows a routine, but not both.\nconclusion: Wyatt is open-minded.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Wyatt's relationship is not spontaneous. The correct option is: C.",
    "context": "For Wyatt, either building lasting connections or valuing loneliness is true, but not both. If Wyatt travels frequently, then he either tries new things or explores new places, but not both. Wyatt is either open-minded or follows a routine, but not both. Everyone who is adventurous either takes risks or explores new places. Mohammad does not appreciate moments. If Mohammad is adventurous, then he is both open-minded and planned. Everyone who enjoys uncertainty is adventurous. Wyatt values loneliness. Wyatt does not pursue his passion. Cade is either open-minded or follows a routine, but not both. If Wyatt meets new people, then he either captures beauty or builds lasting connections (or both). If Cade travels frequently, then he either tries new things or explores new places, but not both. Axl values loneliness. Wyatt does not follow a routine. Wyatt either appreciates moments or tries new things, but not both. Wyatt does not appreciate moments. Wyatt travels frequently. Cade does not pursue his passion. If Wyatt takes risks, then he will achieve success. Anyone who achieves success either pursues their passion or builds lasting connections (or both).",
    "nl2fol": {
      "For Wyatt, either building lasting connections or valuing loneliness is true, but not both.": "build_lasting_connections(Wyatt) ⊕ value_loneliness(Wyatt)",
      "If Wyatt travels frequently, then he either tries new things or explores new places, but not both.": "travel_frequently(Wyatt) → (try_new_things(Wyatt) ⊕ explore_new_places(Wyatt))",
      "Wyatt is either open-minded or follows a routine, but not both.": "open_minded(Wyatt) ⊕ follows_routine(Wyatt)",
      "Everyone who is adventurous either takes risks or explores new places.": "∀x (adventurous(x) → (take_risks(x) ∨ explore_new_places(x)))",
      "Mohammad does not appreciate moments.": "¬appreciate_moments(Mohammad)",
      "If Mohammad is adventurous, then he is both open-minded and planned.": "adventurous(Mohammad) → (open_minded(Mohammad) ∧ planned(Mohammad))",
      "Everyone who enjoys uncertainty is adventurous.": "∀x (enjoys_uncertainty(x) → adventurous(x))",
      "Wyatt values loneliness.": "value_loneliness(Wyatt)",
      "Wyatt does not pursue his passion.": "¬pursue_passion(Wyatt)",
      "Cade is either open-minded or follows a routine, but not both.": "open_minded(Cade) ⊕ follows_routine(Cade)",
      "If Wyatt meets new people, then he either captures beauty or builds lasting connections (or both).": "meet_new_people(Wyatt) → (capture_beauty(Wyatt) ∨ build_lasting_connections(Wyatt))",
      "If Cade travels frequently, then he either tries new things or explores new places, but not both.": "travel_frequently(Cade) → (try_new_things(Cade) ⊕ explore_new_places(Cade))",
      "Axl values loneliness.": "value_loneliness(Axl)",
      "Wyatt does not follow a routine.": "¬follows_routine(Wyatt)",
      "Wyatt either appreciates moments or tries new things, but not both.": "appreciate_moments(Wyatt) ⊕ try_new_things(Wyatt)",
      "Wyatt does not appreciate moments.": "¬appreciate_moments(Wyatt)",
      "Wyatt travels frequently.": "travel_frequently(Wyatt)",
      "Cade does not pursue his passion.": "¬pursue_passion(Cade)",
      "If Wyatt takes risks, then he will achieve success.": "take_risks(Wyatt) → achieve_success(Wyatt)",
      "Anyone who achieves success either pursues their passion or builds lasting connections (or both).": "∀x (achieve_success(x) → (pursue_passion(x) ∨ build_lasting_connections(x)))"
    },
    "conclusion_fol": "¬spontaneous(Wyatt)"
  },
  {
    "id": 56,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Yosef is disruptive to nature.",
    "reasoning": "fact1: Yosef does not practice meditation.\nrule: Yosef practices meditation or dedicates his life to his faith.\nconclusion: Yosef dedicates his life to his faith.\n\nfact1: Yosef does not farm his own food.\nrule: Yosef farms his own food or lives off the land.\nconclusion: Yosef lives off the land.\n\nfact1: Yosef dedicates his life to his faith.\nrule: If Yosef dedicates his life to his faith, then he is a monk.\nconclusion: Yosef is a monk.\n\nfact1: Yosef is a monk.\nfact2: Yosef lives off the land.\nrule: If Yosef is a monk, then he either lives off the land or lives simply, but not both.\nconclusion: Yosef does not live simply.\n\nfact1: Yosef does not live simply.\nrule: Yosef either lives simply or is harmonious with nature (or both).\nconclusion: Yosef is harmonious with nature.\n\nfact1: Yosef is harmonious with nature.\nrule: Either Yosef is harmonious with nature or he is disruptive to nature, but not both.\nconclusion: Yosef is not disruptive to nature.\n\nTherefore, it is false that Yosef is disruptive to nature. The correct option is: B.",
    "context": "Yosef farms his own food or lives off the land. Yosef either lives simply or is harmonious with nature (or both). If Yosef dedicates his life to his faith, then he is a monk. If Yosef is spiritual, then he is either in harmony with nature or he dominates his environment, but not both. Yosef does not practice meditation. Yosef does not farm his own food. If Yosef leads a quiet life, then he is either a monk or clergy, but not both. Yosef practices meditation or dedicates his life to his faith. Either Yosef is harmonious with nature or he is disruptive to nature, but not both. If Yosef has strong faith, then he either lives off the land or is self-sufficient, but not both. If Yosef is a monk, then he either lives off the land or lives simply, but not both.",
    "nl2fol": {
      "Yosef farms his own food or lives off the land.": "farms_own_food(Yosef) ∨ lives_off_the_land(Yosef)",
      "Yosef either lives simply or is harmonious with nature (or both).": "lives_simply(Yosef) ∨ harmonious_with_nature(Yosef)",
      "If Yosef dedicates his life to his faith, then he is a monk.": "dedicates_life_to_faith(Yosef) → is_a_monk(Yosef)",
      "If Yosef is spiritual, then he is either in harmony with nature or he dominates his environment, but not both.": "spiritual(Yosef) → (dominates_environment(Yosef) ⊕ harmonious_with_nature(Yosef))",
      "Yosef does not practice meditation.": "¬practices_meditation(Yosef)",
      "Yosef does not farm his own food.": "¬farms_own_food(Yosef)",
      "If Yosef leads a quiet life, then he is either a monk or clergy, but not both.": "leads_a_quiet_life(Yosef) → (is_a_monk(Yosef) ⊕ is_clergy(Yosef))",
      "Yosef practices meditation or dedicates his life to his faith.": "practices_meditation(Yosef) ∨ dedicates_life_to_faith(Yosef)",
      "Either Yosef is harmonious with nature or he is disruptive to nature, but not both.": "harmonious_with_nature(Yosef) ⊕ disruptive_to_nature(Yosef)",
      "If Yosef has strong faith, then he either lives off the land or is self-sufficient, but not both.": "has_strong_faith(Yosef) → (is_self_sufficient(Yosef) ⊕ lives_off_the_land(Yosef))",
      "If Yosef is a monk, then he either lives off the land or lives simply, but not both.": "is_a_monk(Yosef) → (lives_off_the_land(Yosef) ⊕ lives_simply(Yosef))"
    },
    "conclusion_fol": "disruptive_to_nature(Yosef)"
  },
  {
    "id": 57,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Zaiden cannot analyze economic data.",
    "reasoning": "fact1: Zaiden does not code programs.\nrule: Zaiden codes programs or uses machine learning.\nconclusion: Zaiden uses machine learning.\n\nfact1: Zaiden builds databases.\nrule: Zaiden either builds databases or works with algorithms, but not both.\nconclusion: Zaiden does not work with algorithms.\n\nfact1: Zaiden uses machine learning.\nfact2: Zaiden does not work with algorithms.\nrule: If Zaiden either uses machine learning or works with algorithms (but not both), then he is able to develop models.\nconclusion: Zaiden develops models.\n\nfact1: Zaiden studies statistics.\nfact2: Zaiden develops models.\nrule: Anyone who studies statistics and develops models can interpret market trends.\nconclusion: Zaiden interprets market trends.\n\nfact1: Zaiden interprets market trends.\nrule: Zaiden either interprets market trends or understands econometrics, but not both.\nconclusion: Zaiden does not understand econometrics.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Zaiden cannot analyze economic data. The correct option is: C.",
    "context": "Jaiden codes programs or uses machine learning. Zaiden builds databases. Zaiden studies statistics. Zaiden codes programs or uses machine learning. Zaiden either interprets market trends or understands econometrics, but not both. Valerie studies statistics. Valerie does not code programs. Hanna either builds databases or works with algorithms, but not both. Hanna builds databases. Zaiden either builds databases or works with algorithms, but not both. Anyone who processes data or creates software works with algorithms. If Zaiden has a PhD, then he either develops models or consults governments, but not both. If Zaiden either uses machine learning or works with algorithms (but not both), then he is able to develop models. Zaiden does not code programs. Anyone who studies statistics and develops models can interpret market trends.",
    "nl2fol": {
      "Jaiden codes programs or uses machine learning.": "codes_programs(Jaiden) ∨ uses_machine_learning(Jaiden)",
      "Zaiden builds databases.": "builds_databases(Zaiden)",
      "Zaiden studies statistics.": "studies_statistics(Zaiden)",
      "Zaiden codes programs or uses machine learning.": "codes_programs(Zaiden) ∨ uses_machine_learning(Zaiden)",
      "Zaiden either interprets market trends or understands econometrics, but not both.": "interpret_market_trends(Zaiden) ⊕ understand_econometrics(Zaiden)",
      "Valerie studies statistics.": "studies_statistics(Valerie)",
      "Valerie does not code programs.": "¬codes_programs(Valerie)",
      "Hanna either builds databases or works with algorithms, but not both.": "builds_databases(Hanna) ⊕ works_with_algorithms(Hanna)",
      "Hanna builds databases.": "builds_databases(Hanna)",
      "Zaiden either builds databases or works with algorithms, but not both.": "builds_databases(Zaiden) ⊕ works_with_algorithms(Zaiden)",
      "Anyone who processes data or creates software works with algorithms.": "∀x ((processes_data(x) ∨ creates_software(x)) → works_with_algorithms(x))",
      "If Zaiden has a PhD, then he either develops models or consults governments, but not both.": "has_phd(Zaiden) → (develops_models(Zaiden) ⊕ consults_governments(Zaiden))",
      "If Zaiden either uses machine learning or works with algorithms (but not both), then he is able to develop models.": "(uses_machine_learning(Zaiden) ⊕ works_with_algorithms(Zaiden)) → develops_models(Zaiden)",
      "Zaiden does not code programs.": "¬codes_programs(Zaiden)",
      "Anyone who studies statistics and develops models can interpret market trends.": "∀x ((studies_statistics(x) ∧ develops_models(x)) → interpret_market_trends(x))"
    },
    "conclusion_fol": "¬analyze_economic_data(Zaiden)"
  },
  {
    "id": 58,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Marie faces resistance.",
    "reasoning": "fact1: Marie pursues higher education.\nrule: Marie either empowers the youth or pursues higher education, but not both.\nconclusion: Marie does not empower the youth.\n\nfact1: Marie works independently.\nrule: Marie either works independently or fosters community, but not both.\nconclusion: Marie does not foster community.\n\nfact1: Marie builds consensus.\nrule: For anyone, sparking controversy and building consensus are mutually exclusive.\nconclusion: Marie does not spark controversy.\n\nfact1: Marie challenges the status quo.\nfact2: Marie does not foster community.\nrule: If Marie either challenges the status quo or fosters community (but not both), then she leads by example.\nconclusion: Marie leads by example.\n\nfact1: Marie takes a risk.\nfact2: Marie does not spark controversy.\nrule: If Marie takes a risk, then she will either spark controversy or promote peace, but not both.\nconclusion: Marie promotes peace.\n\nfact1: Marie leads by example.\nfact2: Marie does not empower the youth.\nrule: Anyone who leads by example either inspires others or empowers the youth.\nconclusion: Marie inspires others.\n\nfact1: Marie promotes peace.\nfact2: Marie inspires others.\nrule: If Marie promotes peace, then she will either face resistance or inspire others, but not both.\nconclusion: Marie does not face resistance.\n\nTherefore, it is false that Marie faces resistance. The correct option is: B.",
    "context": "Marie pursues higher education. Marie builds consensus. If Marie promotes peace, then she will either face resistance or inspire others, but not both. Anyone who leads by example either inspires others or empowers the youth. Marie takes a risk. If Marie takes a risk, then she will either spark controversy or promote peace, but not both. For anyone, sparking controversy and building consensus are mutually exclusive. Marie either empowers the youth or pursues higher education, but not both. Marie works independently. Marie challenges the status quo. If Marie either challenges the status quo or fosters community (but not both), then she leads by example. Marie either works independently or fosters community, but not both. If someone believes in non-violence and engages in dialogue, then they promote peace.",
    "nl2fol": {
      "Marie pursues higher education.": "pursue_higher_education(Marie)",
      "Marie builds consensus.": "build_consensus(Marie)",
      "If Marie promotes peace, then she will either face resistance or inspire others, but not both.": "promote_peace(Marie) → (face_resistance(Marie) ⊕ inspire_others(Marie))",
      "Anyone who leads by example either inspires others or empowers the youth.": "∀x (lead_by_example(x) → (inspire_others(x) ∨ empower_youth(x)))",
      "Marie takes a risk.": "take_risk(Marie)",
      "If Marie takes a risk, then she will either spark controversy or promote peace, but not both.": "take_risk(Marie) → (spark_controversy(Marie) ⊕ promote_peace(Marie))",
      "For anyone, sparking controversy and building consensus are mutually exclusive.": "∀x (build_consensus(x) ⊕ spark_controversy(x))",
      "Marie either empowers the youth or pursues higher education, but not both.": "pursue_higher_education(Marie) ⊕ empower_youth(Marie)",
      "Marie works independently.": "work_independently(Marie)",
      "Marie challenges the status quo.": "challenge_status_quo(Marie)",
      "If Marie either challenges the status quo or fosters community (but not both), then she leads by example.": "(challenge_status_quo(Marie) ⊕ foster_community(Marie)) → lead_by_example(Marie)",
      "Marie either works independently or fosters community, but not both.": "work_independently(Marie) ⊕ foster_community(Marie)",
      "If someone believes in non-violence and engages in dialogue, then they promote peace.": "∀x ((believes_in_nonviolence(x) ∧ engages_in_dialogue(x)) → promote_peace(x))"
    },
    "conclusion_fol": "face_resistance(Marie)"
  },
  {
    "id": 59,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Paradise apologizes sincerely.",
    "reasoning": "fact1: Paradise values honesty.\nfact2: Paradise takes responsibility.\nrule: If Paradise values honesty, then she either takes responsibility or owns up to her mistakes, but not both.\nconclusion: Paradise does not own up to her mistakes.\n\nfact1: Paradise does not own up to her mistakes.\nrule: If a person owns up to their mistakes, they may not necessarily make amends, and vice versa.\nconclusion: Paradise makes amends.\n\nfact1: Paradise does not listen carefully.\nrule: Paradise listens carefully or speaks without thought.\nconclusion: Paradise speaks without thought.\n\nfact1: Paradise thinks before acting.\nrule: Paradise either thinks before acting or acts on impulse, but not both.\nconclusion: Paradise does not act on impulse.\n\nfact1: Paradise speaks without thought.\nfact2: Paradise does not act on impulse.\nrule: If Paradise either speaks without thought or acts on impulse (but not both), then she hurts others.\nconclusion: Paradise hurts others.\n\nfact1: Paradise hurts others.\nfact2: Paradise makes amends.\nrule: If Paradise hurts others, then she either apologizes sincerely or makes amends, but not both.\nconclusion: Paradise does not apologize sincerely.\n\nTherefore, it is false that Paradise apologizes sincerely. The correct option is: B.",
    "context": "If Paradise is an emotional person, then she speaks without thought. Paradise either thinks before acting or acts on impulse, but not both. If Wilson hurts others, then she either apologizes sincerely or makes amends, but not both. Paradise thinks before acting. Kylie thinks before acting. Wilson takes responsibility. Paradise listens carefully or speaks without thought. If Paradise either speaks without thought or acts on impulse (but not both), then she hurts others. Paradise takes responsibility. If Paradise values honesty, then she either takes responsibility or owns up to her mistakes, but not both. If someone takes blame, then they own up to their mistakes and learn from errors. If Paradise hurts others, then she either apologizes sincerely or makes amends, but not both. If a person owns up to their mistakes, they may not necessarily make amends, and vice versa. Paradise does not listen carefully. Paradise values honesty.",
    "nl2fol": {
      "If Paradise is an emotional person, then she speaks without thought.": "emotional_person(Paradise) → speaks_without_thought(Paradise)",
      "Paradise either thinks before acting or acts on impulse, but not both.": "thinks_before_acting(Paradise) ⊕ acts_on_impulse(Paradise)",
      "If Wilson hurts others, then she either apologizes sincerely or makes amends, but not both.": "hurts_others(Wilson) → (apologizes_sincerely(Wilson) ⊕ makes_amends(Wilson))",
      "Paradise thinks before acting.": "thinks_before_acting(Paradise)",
      "Kylie thinks before acting.": "thinks_before_acting(Kylie)",
      "Wilson takes responsibility.": "takes_responsibility(Wilson)",
      "Paradise listens carefully or speaks without thought.": "listens_carefully(Paradise) ∨ speaks_without_thought(Paradise)",
      "If Paradise either speaks without thought or acts on impulse (but not both), then she hurts others.": "(speaks_without_thought(Paradise) ⊕ acts_on_impulse(Paradise)) → hurts_others(Paradise)",
      "Paradise takes responsibility.": "takes_responsibility(Paradise)",
      "If Paradise values honesty, then she either takes responsibility or owns up to her mistakes, but not both.": "values_honesty(Paradise) → (takes_responsibility(Paradise) ⊕ owns_up_to_mistakes(Paradise))",
      "If someone takes blame, then they own up to their mistakes and learn from errors.": "∀x (takes_blame(x) → (owns_up_to_mistakes(x) ∧ learns_from_errors(x)))",
      "If Paradise hurts others, then she either apologizes sincerely or makes amends, but not both.": "hurts_others(Paradise) → (apologizes_sincerely(Paradise) ⊕ makes_amends(Paradise))",
      "If a person owns up to their mistakes, they may not necessarily make amends, and vice versa.": "∀x (owns_up_to_mistakes(x) ⊕ makes_amends(x))",
      "Paradise does not listen carefully.": "¬listens_carefully(Paradise)",
      "Paradise values honesty.": "values_honesty(Paradise)"
    },
    "conclusion_fol": "apologizes_sincerely(Paradise)"
  },
  {
    "id": 60,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cassian achieves success, or he is both dedicated and hardworking.",
    "reasoning": "fact1: Cassian does not learn quickly.\nfact2: Cassian does not succeed professionally.\nrule: If Cassian either learns quickly or overcomes obstacles (but not both), then he succeeds professionally.\nconclusion: Cassian does not overcome obstacles.\n\nfact1: Cassian is driven.\nfact2: Cassian faces challenges.\nrule: If Cassian is driven, then he either pushes his limits or faces challenges (but not both).\nconclusion: Cassian does not push his limits.\n\nfact1: Cassian pursues his dream.\nfact2: Cassian does not overcome obstacles.\nrule: Everyone who pursues their dream either has passion or overcomes obstacles.\nconclusion: Cassian has passion.\n\nfact1: Cassian has passion.\nrule: All people who have passion put in effort and stay disciplined.\nconclusion: Cassian stays disciplined.\n\nfact1: Cassian stays disciplined.\nrule: Everyone either sets goals or stays disciplined, but not both is not necessarily true.\nconclusion: Cassian does not set goals.\n\nfact1: Cassian does not remain anonymous.\nrule: Cassian either remains anonymous or gains recognition, but not both.\nconclusion: Cassian gains recognition.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Cassian achieves success, or he is both dedicated and hardworking. The correct option is: C.",
    "context": "If Cassian sets priorities, then he either overcomes obstacles or finds motivation. Skylar does not learn quickly. Everyone either sets goals or stays disciplined, but not both is not necessarily true. If Skylar sets goals or achieves success, then he will gain recognition. If Cassian is driven, then he either pushes his limits or faces challenges (but not both). All people who have passion put in effort and stay disciplined. Wren is hardworking. Skylar will make progress. Cassian either remains anonymous or gains recognition, but not both. Skylar does not remain anonymous. Skylar faces challenges. Cassian is driven. Skylar does not succeed professionally. If Cassian either learns quickly or overcomes obstacles (but not both), then he succeeds professionally. Cassian pursues his dream. If Aila puts in effort, then he will make progress. If Aila either pushes his limits or strives for excellence (but not both), then he is dedicated. Cassian does not succeed professionally. Aila either remains anonymous or gains recognition, but not both. If Skylar is driven, then he either pushes his limits or faces challenges (but not both). Everyone who pursues their dream either has passion or overcomes obstacles. Cassian faces challenges. Wren pursues his dream. Cassian does not learn quickly. Cassian does not remain anonymous. Aila is driven. Cassian values practice or puts in effort. If Skylar either learns quickly or overcomes obstacles (but not both), then he succeeds professionally. Cassian either sets high standards or achieves success.",
    "nl2fol": {
      "If Cassian sets priorities, then he either overcomes obstacles or finds motivation.": "sets_priorities(Cassian) → (overcomes_obstacles(Cassian) ∨ finds_motivation(Cassian))",
      "Skylar does not learn quickly.": "¬learns_quickly(Skylar)",
      "Everyone either sets goals or stays disciplined, but not both is not necessarily true.": "∀x (sets_goals(x) ⊕ stays_disciplined(x))",
      "If Skylar sets goals or achieves success, then he will gain recognition.": "(sets_goals(Skylar) ∨ achieve_success(Skylar)) → gain_recognition(Skylar)",
      "If Cassian is driven, then he either pushes his limits or faces challenges (but not both).": "is_driven(Cassian) → (pushes_limits(Cassian) ⊕ faces_challenges(Cassian))",
      "All people who have passion put in effort and stay disciplined.": "∀x (has_passion(x) → (puts_in_effort(x) ∧ stays_disciplined(x)))",
      "Wren is hardworking.": "hardworking(Wren)",
      "Skylar will make progress.": "makes_progress(Skylar)",
      "Cassian either remains anonymous or gains recognition, but not both.": "remains_anonymous(Cassian) ⊕ gain_recognition(Cassian)",
      "Skylar does not remain anonymous.": "¬remains_anonymous(Skylar)",
      "Skylar faces challenges.": "face_challenges(Skylar)",
      "Cassian is driven.": "is_driven(Cassian)",
      "Skylar does not succeed professionally.": "¬succeeds_professionally(Skylar)",
      "If Cassian either learns quickly or overcomes obstacles (but not both), then he succeeds professionally.": "(learns_quickly(Cassian) ⊕ overcomes_obstacles(Cassian)) → succeeds_professionally(Cassian)",
      "Cassian pursues his dream.": "pursues_dream(Cassian)",
      "If Aila puts in effort, then he will make progress.": "puts_in_effort(Aila) → makes_progress(Aila)",
      "If Aila either pushes his limits or strives for excellence (but not both), then he is dedicated.": "(pushes_limits(Aila) ⊕ strives_excellence(Aila)) → dedicated(Aila)",
      "Cassian does not succeed professionally.": "¬succeeds_professionally(Cassian)",
      "Aila either remains anonymous or gains recognition, but not both.": "remains_anonymous(Aila) ⊕ gain_recognition(Aila)",
      "If Skylar is driven, then he either pushes his limits or faces challenges (but not both).": "is_driven(Skylar) → (pushes_limits(Skylar) ⊕ faces_challenges(Skylar))",
      "Everyone who pursues their dream either has passion or overcomes obstacles.": "∀x (pursues_dream(x) → (has_passion(x) ∨ overcomes_obstacles(x)))",
      "Cassian faces challenges.": "faces_challenges(Cassian)",
      "Wren pursues his dream.": "pursues_dream(Wren)",
      "Cassian does not learn quickly.": "¬learns_quickly(Cassian)",
      "Cassian does not remain anonymous.": "¬remains_anonymous(Cassian)",
      "Aila is driven.": "driven(Aila)",
      "Cassian values practice or puts in effort.": "values_practice(Cassian) ∨ puts_in_effort(Cassian)",
      "If Skylar either learns quickly or overcomes obstacles (but not both), then he succeeds professionally.": "(learns_quickly(Skylar) ⊕ overcomes_obstacles(Skylar)) → succeeds_professionally(Skylar)",
      "Cassian either sets high standards or achieves success.": "sets_high_standards(Cassian) ∨ achieve_success(Cassian)"
    },
    "conclusion_fol": "achieve_success(Cassian) ∨ (dedicated(Cassian) ∧ hardworking(Cassian))"
  },
  {
    "id": 61,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Goldie does not have irrepressible energy.",
    "reasoning": "fact1: Goldie has good taste.\nrule: Anyone who draws well or has good taste is artistic.\nconclusion: Goldie is artistic.\n\nfact1: Goldie is artistic.\nfact2: Goldie does not create poetry.\nrule: If Goldie is artistic, then she either writes stories or creates poetry (or both).\nconclusion: Goldie writes stories.\n\nfact1: Goldie writes stories.\nfact2: Goldie does not compose music.\nrule: If someone either writes stories or composes music (but not both), then they have a good imagination.\nconclusion: Goldie has a good imagination.\n\nfact1: Goldie is passionate.\nrule: If someone is passionate, then they are inspiring and think outside the box.\nconclusion: Goldie is inspiring.\n\nfact1: Goldie is inspiring.\nfact2: Goldie has a good imagination.\nrule: If someone is inspiring, then they either have a good imagination or have creativity (but both is allowed in the input logic expression).\nconclusion: Goldie does not have creativity.\n\nfact1: Goldie is a charismatic performer.\nfact2: Goldie does not have creativity.\nrule: For all people, if someone is a charismatic performer, then they either have creativity or have irrepressible energy (or both).\nconclusion: Goldie has irrepressible energy.\n\nTherefore, it is false that Goldie does not have irrepressible energy. The correct option is: B.",
    "context": "If Goldie is artistic, then she either writes stories or creates poetry (or both). Anyone who draws well or has good taste is artistic. Goldie is a charismatic performer. If someone is inspiring, then they either have a good imagination or have creativity (but both is allowed in the input logic expression). For all people, if someone is a charismatic performer, then they either have creativity or have irrepressible energy (or both). Goldie has good taste. For a person, being a good communicator and expressing themselves effectively can make them inspiring. Goldie does not create poetry. If someone either writes stories or composes music (but not both), then they have a good imagination. Goldie is passionate. Goldie does not compose music. If someone is passionate, then they are inspiring and think outside the box.",
    "nl2fol": {
      "If Goldie is artistic, then she either writes stories or creates poetry (or both).": "is_artistic(Goldie) → (writes_stories(Goldie) ∨ creates_poetry(Goldie))",
      "Anyone who draws well or has good taste is artistic.": "∀x ((draws_well(x) ∨ has_good_taste(x)) → is_artistic(x))",
      "Goldie is a charismatic performer.": "charismatic_performer(Goldie)",
      "If someone is inspiring, then they either have a good imagination or have creativity (but both is allowed in the input logic expression).": "∀x (is_inspiring(x) → (has_good_imagination(x) ⊕ has_creativity(x)))",
      "For all people, if someone is a charismatic performer, then they either have creativity or have irrepressible energy (or both).": "∀x (charismatic_performer(x) → (has_creativity(x) ∨ has_irrepressible_energy(x)))",
      "Goldie has good taste.": "has_good_taste(Goldie)",
      "For a person, being a good communicator and expressing themselves effectively can make them inspiring.": "∀x ((speaks_well(x) ∧ expresses_herself(x)) → is_inspiring(x))",
      "Goldie does not create poetry.": "¬creates_poetry(Goldie)",
      "If someone either writes stories or composes music (but not both), then they have a good imagination.": "∀x ((writes_stories(x) ⊕ composes_music(x)) → has_good_imagination(x))",
      "Goldie is passionate.": "passionate(Goldie)",
      "Goldie does not compose music.": "¬composes_music(Goldie)",
      "If someone is passionate, then they are inspiring and think outside the box.": "∀x (passionate(x) → (is_inspiring(x) ∧ think_outside(x)))"
    },
    "conclusion_fol": "¬has_irrepressible_energy(Goldie)"
  },
  {
    "id": 62,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alice inspires others.",
    "reasoning": "fact1: Alice upholds justice.\nrule: If someone upholds justice, then they defend freedom.\nconclusion: Alice defends freedom.\n\nfact1: Alice does not help others.\nfact2: Alice does not exemplify integrity.\nrule: If Alice either shows selflessness or helps others (but not both), then she exemplifies integrity.\nconclusion: Alice does not show selflessness.\n\nfact1: Alice does not show selflessness.\nrule: If Alice receives high honor, then she demonstrates bravery and shows selflessness.\nconclusion: Alice does not receive high honor.\n\nfact1: Alice enlists in the military.\nfact2: Alice defends freedom.\nrule: All people who enlist in the military either serve their country or defend freedom.\nconclusion: Alice does not serve her country.\n\nfact1: Alice does not serve her country.\nrule: Alice serves her country or is a war hero.\nconclusion: Alice is a war hero.\n\nfact1: Alice is a war hero.\nfact2: Alice does not receive high honor.\nrule: For all humans, if someone is a war hero, then they either receive high honor or inspire others (or both).\nconclusion: Alice inspires others.\n\nTherefore, it is true that Alice inspires others. The correct option is: A.",
    "context": "If Alice displays courage, then she earns respect and receives high honor. For all humans, if someone is a war hero, then they either receive high honor or inspire others (or both). Alice serves her country or is a war hero. Ila does not help others. Alice does not exemplify integrity. If Kaiden receives high honor, then she demonstrates bravery and shows selflessness. If Alice receives high honor, then she demonstrates bravery and shows selflessness. Alice does not help others. If Alice either shows selflessness or helps others (but not both), then she exemplifies integrity. If Alice shows courage or risks her life, then she is a war hero. Kaiden upholds justice. Ila does not exemplify integrity. All people who enlist in the military either serve their country or defend freedom. If Ila either shows selflessness or helps others (but not both), then she exemplifies integrity. Alice upholds justice. Anyone who follows orders or risks their own life serves their country. Alice enlists in the military. Anyone who risks their life either shows selflessness or earns recognition. If someone upholds justice, then they defend freedom.",
    "nl2fol": {
      "If Alice displays courage, then she earns respect and receives high honor.": "display_courage(Alice) → (earn_respect(Alice) ∧ receive_high_honor(Alice))",
      "For all humans, if someone is a war hero, then they either receive high honor or inspire others (or both).": "∀x (war_hero(x) → (receive_high_honor(x) ∨ inspire_others(x)))",
      "Alice serves her country or is a war hero.": "serve_country(Alice) ∨ war_hero(Alice)",
      "Ila does not help others.": "¬help_others(Ila)",
      "Alice does not exemplify integrity.": "¬exemplify_integrity(Alice)",
      "If Kaiden receives high honor, then she demonstrates bravery and shows selflessness.": "receive_high_honor(Kaiden) → (demonstrate_bravery(Kaiden) ∧ show_selflessness(Kaiden))",
      "If Alice receives high honor, then she demonstrates bravery and shows selflessness.": "receive_high_honor(Alice) → (demonstrate_bravery(Alice) ∧ show_selflessness(Alice))",
      "Alice does not help others.": "¬help_others(Alice)",
      "If Alice either shows selflessness or helps others (but not both), then she exemplifies integrity.": "(show_selflessness(Alice) ⊕ help_others(Alice)) → exemplify_integrity(Alice)",
      "If Alice shows courage or risks her life, then she is a war hero.": "(show_courage(Alice) ∨ risk_life(Alice)) → war_hero(Alice)",
      "Kaiden upholds justice.": "uphold_justice(Kaiden)",
      "Ila does not exemplify integrity.": "¬exemplify_integrity(Ila)",
      "All people who enlist in the military either serve their country or defend freedom.": "∀x (enlist_in_military(x) → (serve_country(x) ⊕ defend_freedom(x)))",
      "If Ila either shows selflessness or helps others (but not both), then she exemplifies integrity.": "(show_selflessness(Ila) ⊕ help_others(Ila)) → exemplify_integrity(Ila)",
      "Alice upholds justice.": "uphold_justice(Alice)",
      "Anyone who follows orders or risks their own life serves their country.": "∀x ((follow_orders(x) ∨ risk_own_life(x)) → serve_country(x))",
      "Alice enlists in the military.": "enlist_in_military(Alice)",
      "Anyone who risks their life either shows selflessness or earns recognition.": "∀x (risk_life(x) → (show_selflessness(x) ∨ earn_recognition(x)))",
      "If someone upholds justice, then they defend freedom.": "∀x (uphold_justice(x) → defend_freedom(x))"
    },
    "conclusion_fol": "inspire_others(Alice)"
  },
  {
    "id": 63,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Edith cannot create meaningful art.",
    "reasoning": "fact1: Edith does not perform well.\nfact2: Edith does not feel fulfilled.\nrule: If Edith either performs well or achieves success (but not both), then she feels fulfilled.\nconclusion: Edith does not achieve success.\n\nfact1: Edith takes risks.\nfact2: Edith does not achieve success.\nrule: If someone takes risks and thinks outside the box, then they can achieve success.\nconclusion: Edith does not think outside the box.\n\nfact1: Edith does not pursue her passions.\nrule: Edith either is inspired or pursues her passions.\nconclusion: Edith is inspired.\n\nfact1: Edith is inspired.\nfact2: Edith does not think outside the box.\nrule: Everyone who is inspired either thinks outside the box or values creativity (or both).\nconclusion: Edith values creativity.\n\nfact1: Edith expresses emotions.\nfact2: Edith values creativity.\nrule: Anyone who expresses emotions and values creativity can be artistic.\nconclusion: Edith is artistic.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Edith cannot create meaningful art. The correct option is: C.",
    "context": "Everyone who is inspired either thinks outside the box or values creativity (or both). Anyone who expresses emotions and values creativity can be artistic. Edith does not perform well. Edith expresses emotions. Anyone who taps into emotions either understands the human experience or values creativity (or both). Anyone who taps into emotions is either artistic or understands human experience (or both). If someone takes risks and thinks outside the box, then they can achieve success. Edith either is inspired or pursues her passions. Emanuel does not perform well. Edith does not feel fulfilled. Cheyenne does not feel fulfilled. If Kartier either performs well or achieves success (but not both), then she feels fulfilled. Cheyenne does not have intuition. If Edith either performs well or achieves success (but not both), then she feels fulfilled. Edith takes risks. Cheyenne takes risks. Edith does not pursue her passions. Emanuel expresses emotions.",
    "nl2fol": {
      "Everyone who is inspired either thinks outside the box or values creativity (or both).": "∀x (be_inspired(x) → (think_outside_box(x) ∨ values_creativity(x)))",
      "Anyone who expresses emotions and values creativity can be artistic.": "∀x ((expresses_emotions(x) ∧ values_creativity(x)) → be_artistic(x))",
      "Edith does not perform well.": "¬performs_well(Edith)",
      "Edith expresses emotions.": "expresses_emotions(Edith)",
      "Anyone who taps into emotions either understands the human experience or values creativity (or both).": "∀x (tap_into_emotions(x) → (understand_human_experience(x) ∨ values_creativity(x)))",
      "Anyone who taps into emotions is either artistic or understands human experience (or both).": "∀x (tap_into_emotions(x) → (be_artistic(x) ∨ understand_human_experience(x)))",
      "If someone takes risks and thinks outside the box, then they can achieve success.": "∀x ((takes_risks(x) ∧ think_outside_box(x)) → achieves_success(x))",
      "Edith either is inspired or pursues her passions.": "be_inspired(Edith) ∨ pursue_passions(Edith)",
      "Emanuel does not perform well.": "¬performs_well(Emanuel)",
      "Edith does not feel fulfilled.": "¬feels_fulfilled(Edith)",
      "Cheyenne does not feel fulfilled.": "¬feels_fulfilled(Cheyenne)",
      "If Kartier either performs well or achieves success (but not both), then she feels fulfilled.": "(performs_well(Kartier) ⊕ achieves_success(Kartier)) → feels_fulfilled(Kartier)",
      "Cheyenne does not have intuition.": "¬have_intuition(Cheyenne)",
      "If Edith either performs well or achieves success (but not both), then she feels fulfilled.": "(performs_well(Edith) ⊕ achieves_success(Edith)) → feels_fulfilled(Edith)",
      "Edith takes risks.": "takes_risks(Edith)",
      "Cheyenne takes risks.": "takes_risks(Cheyenne)",
      "Edith does not pursue her passions.": "¬pursue_passions(Edith)",
      "Emanuel expresses emotions.": "expresses_emotions(Emanuel)"
    },
    "conclusion_fol": "¬create_meaningful_art(Edith)"
  },
  {
    "id": 64,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alden does not uphold justice.",
    "reasoning": "fact1: Alden listens actively.\nrule: Alden either listens actively or speaks persuasively, but not both.\nconclusion: Alden does not speak persuasively.\n\nfact1: Alden possesses experience.\nfact2: Alden has strong opinions.\nrule: For anyone who possesses experience and has strong opinions, they can make key decisions.\nconclusion: Alden makes key decisions.\n\nfact1: Alden makes key decisions.\nrule: Anyone who makes key decisions or influences others has authority.\nconclusion: Alden has authority.\n\nfact1: Alden has authority.\nrule: If someone has authority, then they hold power.\nconclusion: Alden holds power.\n\nfact1: Alden holds power.\nfact2: Alden faces consequences.\nrule: If Alden holds power, then he either upholds justice or faces consequences, but not both.\nconclusion: Alden does not uphold justice.\n\nTherefore, it is true that Alden does not uphold justice. The correct option is: A.",
    "context": "Alden listens actively. Anyone who has influence or commands respect holds power. Alden possesses experience. Anyone who makes key decisions or influences others has authority. Alden faces consequences. Alden has strong opinions. Alden either listens actively or speaks persuasively, but not both. If someone has authority, then they hold power. Anyone who takes leadership or earns respect has authority. If Alden holds power, then he either upholds justice or faces consequences, but not both. Superman does not hold a high office. For anyone who possesses experience and has strong opinions, they can make key decisions.",
    "nl2fol": {
      "Alden listens actively.": "listens_actively(Alden)",
      "Anyone who has influence or commands respect holds power.": "∀x ((has_influence(x) ∨ commands_respect(x)) → holds_power(x))",
      "Alden possesses experience.": "possesses_experience(Alden)",
      "Anyone who makes key decisions or influences others has authority.": "∀x ((makes_key_decisions(x) ∨ influences_others(x)) → has_authority(x))",
      "Alden faces consequences.": "faces_consequences(Alden)",
      "Alden has strong opinions.": "has_strong_opinions(Alden)",
      "Alden either listens actively or speaks persuasively, but not both.": "listens_actively(Alden) ⊕ speaks_persuasively(Alden)",
      "If someone has authority, then they hold power.": "∀x (has_authority(x) → holds_power(x))",
      "Anyone who takes leadership or earns respect has authority.": "∀x ((takes_leadership(x) ∨ earns_respect(x)) → has_authority(x))",
      "If Alden holds power, then he either upholds justice or faces consequences, but not both.": "holds_power(Alden) → (upholds_justice(Alden) ⊕ faces_consequences(Alden))",
      "Superman does not hold a high office.": "¬holds_high_office(Superman)",
      "For anyone who possesses experience and has strong opinions, they can make key decisions.": "∀x ((possesses_experience(x) ∧ has_strong_opinions(x)) → makes_key_decisions(x))"
    },
    "conclusion_fol": "¬upholds_justice(Alden)"
  },
  {
    "id": 65,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Israel passes on his knowledge to others.",
    "reasoning": "fact1: Israel has experience.\nrule: All humans who have experience and command respect hold power.\nconclusion: Israel holds power.\n\nfact1: Israel holds power.\nfact2: Israel serves others.\nrule: If Israel holds power, then he either serves others or seeks personal gain, but not both.\nconclusion: Israel does not seek personal gain.\n\nfact1: Israel does not seek personal gain.\nrule: For Israel, he either leads by example or seeks personal gain, but not both.\nconclusion: Israel leads by example.\n\nfact1: Israel shows bravery.\nfact2: Israel does not uphold honor.\nrule: Anyone who shows bravery or upholds honor can inspire others.\nconclusion: Israel inspires others.\n\nfact1: Israel leads by example.\nfact2: Israel inspires others.\nrule: If someone leads by example, then they leave a lasting legacy and inspire others.\nconclusion: Israel leaves a lasting legacy.\n\nfact1: Israel lives a long life.\nfact2: Israel leaves a lasting legacy.\nrule: If Israel lives a long life, then he can either leave a lasting legacy or pass on his knowledge to others, but not both.\nconclusion: Israel does not pass on his knowledge to others.\n\nTherefore, it is false that Israel passes on his knowledge to others. The correct option is: B.",
    "context": "Israel shares wisdom or inspires others. Israel makes sacrifices or leads by example. Israel has experience. For Israel, he either leads by example or seeks personal gain, but not both. Israel lives a long life. Israel serves others. If Israel lives a long life, then he can either leave a lasting legacy or pass on his knowledge to others, but not both. All humans who have experience and command respect hold power. Anyone who possesses wisdom and commands loyalty can hold power. If someone leads by example, then they leave a lasting legacy and inspire others. Anyone who shows bravery or upholds honor can inspire others. Israel does not uphold honor. If Israel holds power, then he either serves others or seeks personal gain, but not both. Israel shows bravery.",
    "nl2fol": {
      "Israel shares wisdom or inspires others.": "shares_wisdom(Israel) ∨ inspire_others(Israel)",
      "Israel makes sacrifices or leads by example.": "make_sacrifices(Israel) ∨ lead_by_example(Israel)",
      "Israel has experience.": "has_experience(Israel)",
      "For Israel, he either leads by example or seeks personal gain, but not both.": "seek_personal_gain(Israel) ⊕ lead_by_example(Israel)",
      "Israel lives a long life.": "live_long(Israel)",
      "Israel serves others.": "serve_others(Israel)",
      "If Israel lives a long life, then he can either leave a lasting legacy or pass on his knowledge to others, but not both.": "live_long(Israel) → (leave_legacy(Israel) ⊕ pass_on_knowledge(Israel))",
      "All humans who have experience and command respect hold power.": "∀x (has_experience(x) → (commands_respect(x) ∧ holds_power(x)))",
      "Anyone who possesses wisdom and commands loyalty can hold power.": "∀x ((possesses_wisdom(x) ∧ commands_loyalty(x)) → holds_power(x))",
      "If someone leads by example, then they leave a lasting legacy and inspire others.": "∀x (lead_by_example(x) → (leave_legacy(x) ∧ inspire_others(x)))",
      "Anyone who shows bravery or upholds honor can inspire others.": "∀x ((show_bravery(x) ∨ uphold_honor(x)) → inspire_others(x))",
      "Israel does not uphold honor.": "¬uphold_honor(Israel)",
      "If Israel holds power, then he either serves others or seeks personal gain, but not both.": "holds_power(Israel) → (serve_others(Israel) ⊕ seek_personal_gain(Israel))",
      "Israel shows bravery.": "show_bravery(Israel)"
    },
    "conclusion_fol": "pass_on_knowledge(Israel)"
  },
  {
    "id": 66,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amirah is skilled at cooking.",
    "reasoning": "fact1: Amirah uses fresh ingredients.\nrule: If Amirah uses fresh ingredients or knows flavor combinations, then she has good taste.\nconclusion: Amirah has good taste.\n\nfact1: Amirah is a food blogger.\nfact2: Amirah does not host cooking shows.\nrule: If Amirah is a food blogger, then she either develops new recipes or hosts cooking shows, but not both.\nconclusion: Amirah develops new recipes.\n\nfact1: Amirah enjoys experimenting with food.\nfact2: Amirah has good taste.\nrule: If Amirah enjoys experimenting with food, then she is a talented cook and has good taste.\nconclusion: Amirah is a talented cook.\n\nfact1: Amirah does not teach cooking classes.\nfact2: Amirah develops new recipes.\nrule: If Amirah either teaches cooking classes or develops new recipes (but not both), then she writes cookbooks.\nconclusion: Amirah writes cookbooks.\n\nfact1: Amirah writes cookbooks.\nrule: For Amirah, she either writes cookbooks or works as a chef, but not both.\nconclusion: Amirah does not work as a chef.\n\nfact1: Amirah is a talented cook.\nfact2: Amirah does not work as a chef.\nrule: If Amirah is a talented cook, then she either works as a chef or runs her own restaurant, but not both.\nconclusion: Amirah runs her own restaurant.\n\nfact1: Amirah runs her own restaurant.\nfact2: Amirah does not receive food awards.\nrule: If Amirah runs her own restaurant and is a successful chef, then she receives food awards.\nconclusion: Amirah is not a successful chef.\n\nfact1: Amirah is not passionate about cooking.\nfact2: Amirah is not a successful chef.\nrule: If Amirah is either passionate about cooking or skilled at cooking (but not both), then she is a successful chef.\nconclusion: Amirah is skilled at cooking.\n\nTherefore, it is false that Amirah is skilled at cooking. The correct option is: B.",
    "context": "If Amirah either teaches cooking classes or develops new recipes (but not both), then she writes cookbooks. If Kenzo is a talented cook, then she either works as a chef or runs her own restaurant, but not both. Amirah does not receive food awards. If Amirah is a food blogger, then she either develops new recipes or hosts cooking shows, but not both. If Jakari is a food blogger, then she either develops new recipes or hosts cooking shows, but not both. Amirah does not teach cooking classes. Jonathan enjoys experimenting with food. If Amirah is either passionate about cooking or skilled at cooking (but not both), then she is a successful chef. If Amirah runs her own restaurant and is a successful chef, then she receives food awards. If Kenzo uses fresh ingredients or knows flavor combinations, then she has good taste. Amirah does not host cooking shows. Jonathan is not passionate about cooking. If Jakari is either passionate about cooking or skilled at cooking (but not both), then she is a successful chef. If Jakari enjoys experimenting with food, then she is a talented cook and has good taste. If Amirah uses fresh ingredients or knows flavor combinations, then she has good taste. If Amirah is an entrepreneur, then she either has formal culinary training or runs her own restaurant, but not both. If Amirah shares recipes online or documents her cooking life, then she can write cookbooks. Kenzo uses fresh ingredients. Kenzo is a food blogger. If Amirah is a talented cook, then she either works as a chef or runs her own restaurant, but not both. If Jonathan runs her own restaurant and is a successful chef, then she receives food awards. If Amirah enjoys experimenting with food, then she is a talented cook and has good taste. Amirah is not passionate about cooking. Amirah enjoys experimenting with food. For Amirah, she either writes cookbooks or works as a chef, but not both. Jakari does not teach cooking classes. If Amirah has business acumen and values customer experience, then she is a successful chef. Jonathan does not receive food awards. Amirah uses fresh ingredients. Amirah is a food blogger.",
    "nl2fol": {
      "If Amirah either teaches cooking classes or develops new recipes (but not both), then she writes cookbooks.": "(teaches_cooking_classes(Amirah) ⊕ develops_new_recipes(Amirah)) → writes_cookbooks(Amirah)",
      "If Kenzo is a talented cook, then she either works as a chef or runs her own restaurant, but not both.": "is_talented_cook(Kenzo) → (works_as_chef(Kenzo) ⊕ runs_own_restaurant(Kenzo))",
      "Amirah does not receive food awards.": "¬receives_food_awards(Amirah)",
      "If Amirah is a food blogger, then she either develops new recipes or hosts cooking shows, but not both.": "is_food_blogger(Amirah) → (develops_new_recipes(Amirah) ⊕ hosts_cooking_shows(Amirah))",
      "If Jakari is a food blogger, then she either develops new recipes or hosts cooking shows, but not both.": "is_food_blogger(Jakari) → (develops_new_recipes(Jakari) ⊕ hosts_cooking_shows(Jakari))",
      "Amirah does not teach cooking classes.": "¬teaches_cooking_classes(Amirah)",
      "Jonathan enjoys experimenting with food.": "enjoys_experimenting(Jonathan)",
      "If Amirah is either passionate about cooking or skilled at cooking (but not both), then she is a successful chef.": "(passionate_about_cooking(Amirah) ⊕ skilled_at_cooking(Amirah)) → successful_chef(Amirah)",
      "If Amirah runs her own restaurant and is a successful chef, then she receives food awards.": "(runs_own_restaurant(Amirah) ∧ successful_chef(Amirah)) → receives_food_awards(Amirah)",
      "If Kenzo uses fresh ingredients or knows flavor combinations, then she has good taste.": "(uses_fresh_ingredients(Kenzo) ∨ knows_flavor_combos(Kenzo)) → has_good_taste(Kenzo)",
      "Amirah does not host cooking shows.": "¬hosts_cooking_shows(Amirah)",
      "Jonathan is not passionate about cooking.": "¬passionate_about_cooking(Jonathan)",
      "If Jakari is either passionate about cooking or skilled at cooking (but not both), then she is a successful chef.": "(passionate_about_cooking(Jakari) ⊕ skilled_at_cooking(Jakari)) → successful_chef(Jakari)",
      "If Jakari enjoys experimenting with food, then she is a talented cook and has good taste.": "enjoys_experimenting(Jakari) → (is_talented_cook(Jakari) ∧ has_good_taste(Jakari))",
      "If Amirah uses fresh ingredients or knows flavor combinations, then she has good taste.": "(uses_fresh_ingredients(Amirah) ∨ knows_flavor_combos(Amirah)) → has_good_taste(Amirah)",
      "If Amirah is an entrepreneur, then she either has formal culinary training or runs her own restaurant, but not both.": "is_entrepreneur(Amirah) → (has_formal_culinary_training(Amirah) ⊕ runs_own_restaurant(Amirah))",
      "If Amirah shares recipes online or documents her cooking life, then she can write cookbooks.": "(shares_recipes_online(Amirah) ∨ documents_cooking_life(Amirah)) → writes_cookbooks(Amirah)",
      "Kenzo uses fresh ingredients.": "uses_fresh_ingredients(Kenzo)",
      "Kenzo is a food blogger.": "is_food_blogger(Kenzo)",
      "If Amirah is a talented cook, then she either works as a chef or runs her own restaurant, but not both.": "is_talented_cook(Amirah) → (works_as_chef(Amirah) ⊕ runs_own_restaurant(Amirah))",
      "If Jonathan runs her own restaurant and is a successful chef, then she receives food awards.": "(runs_own_restaurant(Jonathan) ∧ successful_chef(Jonathan)) → receives_food_awards(Jonathan)",
      "If Amirah enjoys experimenting with food, then she is a talented cook and has good taste.": "enjoys_experimenting(Amirah) → (is_talented_cook(Amirah) ∧ has_good_taste(Amirah))",
      "Amirah is not passionate about cooking.": "¬passionate_about_cooking(Amirah)",
      "Amirah enjoys experimenting with food.": "enjoys_experimenting(Amirah)",
      "For Amirah, she either writes cookbooks or works as a chef, but not both.": "writes_cookbooks(Amirah) ⊕ works_as_chef(Amirah)",
      "Jakari does not teach cooking classes.": "¬teaches_cooking_classes(Jakari)",
      "If Amirah has business acumen and values customer experience, then she is a successful chef.": "has_business_acumen(Amirah) → (values_customer_experience(Amirah) ∧ successful_chef(Amirah))",
      "Jonathan does not receive food awards.": "¬receives_food_awards(Jonathan)",
      "Amirah uses fresh ingredients.": "uses_fresh_ingredients(Amirah)",
      "Amirah is a food blogger.": "is_food_blogger(Amirah)"
    },
    "conclusion_fol": "skilled_at_cooking(Amirah)"
  },
  {
    "id": 67,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ayan is not notorious.",
    "reasoning": "fact1: Ayan is embracing peace.\nrule: For Ayan, either embracing peace is an option or seeking redemption is an option, but they can't coexist.\nconclusion: Ayan does not seek redemption.\n\nfact1: Ayan does not seek redemption.\nrule: Ayan either seeks redemption or fights oppression, but not both.\nconclusion: Ayan fights oppression.\n\nfact1: Ayan has influence.\nfact2: Ayan fights oppression.\nrule: For all people, if they have influence and fight oppression, then they uphold justice.\nconclusion: Ayan upholds justice.\n\nfact1: Ayan has power.\nfact2: Ayan upholds justice.\nrule: If Ayan has power, then he is either capable of taking lives or upholds justice, but not both.\nconclusion: Ayan is not capable of taking lives.\n\nfact1: Ayan is not capable of taking lives.\nrule: Ayan is either capable of taking lives or has compassion, but not both.\nconclusion: Ayan has compassion.\n\nfact1: Ayan has compassion.\nrule: Ayan is either capable of violence or has compassion, but not both.\nconclusion: Ayan is not murderous.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Ayan is not notorious. The correct option is: C.",
    "context": "If Ayan renounces violence, then he desires forgiveness and seeks redemption. Koen either seeks redemption or fights oppression, but not both. Ayan is either capable of violence or has compassion, but not both. Brooks has power. Brooks has influence. For all people, if they have influence and fight oppression, then they uphold justice. For Ayan, either embracing peace is an option or seeking redemption is an option, but they can't coexist. Ayan has power. If Rosalie is either murderous or protective (but not both), then he is notorious. Koen is not protective. Ayan either seeks redemption or fights oppression, but not both. Koen is either capable of taking lives or has compassion, but not both. Ayan has influence. Ayan is embracing peace. If Ayan has power, then he is either capable of taking lives or upholds justice, but not both. If Ayan lacks empathy or has aggression, then he can be murderous. Ayan is either capable of taking lives or has compassion, but not both.",
    "nl2fol": {
      "If Ayan renounces violence, then he desires forgiveness and seeks redemption.": "renounces_violence(Ayan) → (desires_forgiveness(Ayan) ∧ seeks_redemption(Ayan))",
      "Koen either seeks redemption or fights oppression, but not both.": "seeks_redemption(Koen) ⊕ fights_oppression(Koen)",
      "Ayan is either capable of violence or has compassion, but not both.": "has_compassion(Ayan) ⊕ murderous(Ayan)",
      "Brooks has power.": "has_power(Brooks)",
      "Brooks has influence.": "has_influence(Brooks)",
      "For all people, if they have influence and fight oppression, then they uphold justice.": "∀x ((has_influence(x) ∧ fights_oppression(x)) → upholds_justice(x))",
      "For Ayan, either embracing peace is an option or seeking redemption is an option, but they can't coexist.": "embraces_peace(Ayan) ⊕ seeks_redemption(Ayan)",
      "Ayan has power.": "has_power(Ayan)",
      "If Rosalie is either murderous or protective (but not both), then he is notorious.": "(murderous(Rosalie) ⊕ protective(Rosalie)) → notorious(Rosalie)",
      "Koen is not protective.": "¬protective(Koen)",
      "Ayan either seeks redemption or fights oppression, but not both.": "seeks_redemption(Ayan) ⊕ fights_oppression(Ayan)",
      "Koen is either capable of taking lives or has compassion, but not both.": "takes_lives(Koen) ⊕ has_compassion(Koen)",
      "Ayan has influence.": "has_influence(Ayan)",
      "Ayan is embracing peace.": "embraces_peace(Ayan)",
      "If Ayan has power, then he is either capable of taking lives or upholds justice, but not both.": "has_power(Ayan) → (upholds_justice(Ayan) ⊕ takes_lives(Ayan))",
      "If Ayan lacks empathy or has aggression, then he can be murderous.": "(lacks_empathy(Ayan) ∨ has_aggression(Ayan)) → murderous(Ayan)",
      "Ayan is either capable of taking lives or has compassion, but not both.": "takes_lives(Ayan) ⊕ has_compassion(Ayan)"
    },
    "conclusion_fol": "¬notorious(Ayan)"
  },
  {
    "id": 68,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cristian achieves success.",
    "reasoning": "fact1: Cristian does not stay active.\nrule: Cristian either prioritizes relaxation or stays active.\nconclusion: Cristian prioritizes relaxation.\n\nfact1: Cristian prioritizes relaxation.\nrule: For Cristian, either he works hard or prioritizes relaxation, but no one does both.\nconclusion: Cristian does not work hard.\n\nfact1: Cristian trusts his instincts.\nfact2: Cristian does not work hard.\nrule: If Cristian trusts his instincts, then he either works hard or is driven (or both).\nconclusion: Cristian is driven.\n\nfact1: Cristian does not seek stability.\nrule: Cristian either plays it safe or seeks stability, but not both.\nconclusion: Cristian plays it safe.\n\nfact1: Cristian plays it safe.\nrule: Cristian either plays it safe or pursues his dreams, but not both.\nconclusion: Cristian does not pursue his dreams.\n\nfact1: Cristian does not pursue his dreams.\nrule: Anyone who has passion or is motivated will pursue their dreams.\nconclusion: Cristian does not have passion.\n\nfact1: Cristian is driven.\nrule: If someone is driven, then they will seek opportunities.\nconclusion: Cristian seeks opportunities.\n\nfact1: Cristian does not have passion.\nfact2: Cristian seeks opportunities.\nrule: Anyone who has passion or seeks opportunities will take risks.\nconclusion: Cristian takes risks.\n\nfact1: Cristian takes risks.\nrule: If Cristian takes risks, then he achieves success.\nconclusion: Cristian achieves success.\n\nTherefore, it is true that Cristian achieves success. The correct option is: A.",
    "context": "Anyone who has passion or seeks opportunities will take risks. Cristian either plays it safe or seeks stability, but not both. For Cristian, either he works hard or prioritizes relaxation, but no one does both. Cristian either prioritizes relaxation or stays active. Cristian either plays it safe or pursues his dreams, but not both. Cristian trusts his instincts. If Cristian takes risks, then he achieves success. Cristian does not seek stability. If Cristian trusts his instincts, then he either works hard or is driven (or both). If someone is driven, then they will seek opportunities. If someone loves music, then they have passion. Anyone who has passion or is motivated will pursue their dreams. Cristian does not stay active.",
    "nl2fol": {
      "Anyone who has passion or seeks opportunities will take risks.": "∀x ((has_passion(x) ∨ seeks_opportunities(x)) → take_risks(x))",
      "Cristian either plays it safe or seeks stability, but not both.": "plays_it_safe(Cristian) ⊕ seeks_stability(Cristian)",
      "For Cristian, either he works hard or prioritizes relaxation, but no one does both.": "works_hard(Cristian) ⊕ prioritizes_relaxation(Cristian)",
      "Cristian either prioritizes relaxation or stays active.": "prioritizes_relaxation(Cristian) ∨ stays_active(Cristian)",
      "Cristian either plays it safe or pursues his dreams, but not both.": "plays_it_safe(Cristian) ⊕ pursue_dreams(Cristian)",
      "Cristian trusts his instincts.": "trusts_instincts(Cristian)",
      "If Cristian takes risks, then he achieves success.": "take_risks(Cristian) → achieve_success(Cristian)",
      "Cristian does not seek stability.": "¬seeks_stability(Cristian)",
      "If Cristian trusts his instincts, then he either works hard or is driven (or both).": "trusts_instincts(Cristian) → (works_hard(Cristian) ∨ is_driven(Cristian))",
      "If someone is driven, then they will seek opportunities.": "∀x (is_driven(x) → seeks_opportunities(x))",
      "If someone loves music, then they have passion.": "∀x (loves_music(x) → has_passion(x))",
      "Anyone who has passion or is motivated will pursue their dreams.": "∀x ((has_passion(x) ∨ is_motivated(x)) → pursue_dreams(x))",
      "Cristian does not stay active.": "¬stays_active(Cristian)"
    },
    "conclusion_fol": "achieve_success(Cristian)"
  },
  {
    "id": 69,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Drew manages his condition effectively.",
    "reasoning": "fact1: Drew faces health challenges.\nrule: If Drew faces health challenges, then he remains optimistic and takes personal responsibility.\nconclusion: Drew takes personal responsibility for his health.\n\nfact1: Drew takes personal responsibility for his health.\nrule: Everyone either takes personal responsibility for their health or has a supportive doctor, but not both is not necessarily true.\nconclusion: Drew does not have a supportive doctor.\n\nfact1: Drew needs external help.\nrule: For Drew, either he needs external help or he is self-sufficient, but not both.\nconclusion: Drew is not self-sufficient.\n\nfact1: Drew has healthcare coverage.\nfact2: Drew is not self-sufficient.\nrule: If Drew has healthcare coverage, then he is either self-sufficient or requires medication (but not both).\nconclusion: Drew requires medication.\n\nfact1: Drew requires medication.\nfact2: Drew has a strong support system.\nrule: If Drew requires medication, then he either has a strong support system or a chronic illness (but not both).\nconclusion: Drew does not have a chronic illness.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Drew manages his condition effectively. The correct option is: C.",
    "context": "If Jamir faces health challenges, then he remains optimistic and takes personal responsibility. For Drew, either he needs external help or he is self-sufficient, but not both. Drew has healthcare coverage. If Drew faces health challenges, then he remains optimistic and takes personal responsibility. If Drew has healthcare coverage, then he is either self-sufficient or requires medication (but not both). Jamir has healthcare coverage. If Jamir has a chronic illness or has a supportive doctor, then he manages his condition effectively. Drew either monitors his health or requires medication. Drew needs external help. Alfredo needs external help. If Alfredo requires medication, then he either has a strong support system or a chronic illness (but not both). Joziah has a strong support system. Drew faces health challenges. If Drew either manages his finances or makes independent decisions (but not both), then he is self-sufficient. Joziah faces health challenges. For Joziah, either he needs external help or he is self-sufficient, but not both. Everyone either takes personal responsibility for their health or has a supportive doctor, but not both is not necessarily true. If Drew requires medication, then he either has a strong support system or a chronic illness (but not both). Drew has a strong support system.",
    "nl2fol": {
      "If Jamir faces health challenges, then he remains optimistic and takes personal responsibility.": "faces_health_challenges(Jamir) → (remains_optimistic(Jamir) ∧ takes_personal_responsibility(Jamir))",
      "For Drew, either he needs external help or he is self-sufficient, but not both.": "needs_external_help(Drew) ⊕ is_self_sufficient(Drew)",
      "Drew has healthcare coverage.": "has_healthcare_coverage(Drew)",
      "If Drew faces health challenges, then he remains optimistic and takes personal responsibility.": "faces_health_challenges(Drew) → (remains_optimistic(Drew) ∧ takes_personal_responsibility(Drew))",
      "If Drew has healthcare coverage, then he is either self-sufficient or requires medication (but not both).": "has_healthcare_coverage(Drew) → (is_self_sufficient(Drew) ⊕ requires_medication(Drew))",
      "Jamir has healthcare coverage.": "has_healthcare_coverage(Jamir)",
      "If Jamir has a chronic illness or has a supportive doctor, then he manages his condition effectively.": "(has_chronic_illness(Jamir) ∨ has_supportive_doctor(Jamir)) → manages_condition_effectively(Jamir)",
      "Drew either monitors his health or requires medication.": "monitors_health(Drew) ∨ requires_medication(Drew)",
      "Drew needs external help.": "needs_external_help(Drew)",
      "Alfredo needs external help.": "needs_external_help(Alfredo)",
      "If Alfredo requires medication, then he either has a strong support system or a chronic illness (but not both).": "requires_medication(Alfredo) → (has_strong_support_system(Alfredo) ⊕ has_chronic_illness(Alfredo))",
      "Joziah has a strong support system.": "has_support_system(Joziah)",
      "Drew faces health challenges.": "faces_health_challenges(Drew)",
      "If Drew either manages his finances or makes independent decisions (but not both), then he is self-sufficient.": "(manages_finance(Drew) ⊕ makes_independent_decisions(Drew)) → is_self_sufficient(Drew)",
      "Joziah faces health challenges.": "faces_health_challenges(Joziah)",
      "For Joziah, either he needs external help or he is self-sufficient, but not both.": "needs_external_help(Joziah) ⊕ is_self_sufficient(Joziah)",
      "Everyone either takes personal responsibility for their health or has a supportive doctor, but not both is not necessarily true.": "∀x (takes_personal_responsibility(x) ⊕ has_supportive_doctor(x))",
      "If Drew requires medication, then he either has a strong support system or a chronic illness (but not both).": "requires_medication(Drew) → (has_strong_support_system(Drew) ⊕ has_chronic_illness(Drew))",
      "Drew has a strong support system.": "has_strong_support_system(Drew)"
    },
    "conclusion_fol": "manages_condition_effectively(Drew)"
  },
  {
    "id": 70,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Juan is an experienced logger.",
    "reasoning": "fact1: Juan does not protect animal habitats.\nrule: For any person, either they conserve water or protect animal habitats, but not both, is not true, instead they can do both.\nconclusion: Juan conserves water.\n\nfact1: Juan does not trim his shrubs.\nfact2: Juan does not keep his landscaping in order.\nrule: Anyone who trims shrubs or prunes plants keeps their landscaping in order.\nconclusion: Juan does not prune plants.\n\nfact1: Juan does not reduce his carbon footprint.\nfact2: Juan conserves water.\nrule: Anyone who reduces their carbon footprint or conserves water can preserve an ecosystem.\nconclusion: Juan preserves an ecosystem.\n\nfact1: Juan preserves an ecosystem.\nfact2: Juan maintains soil health.\nrule: If Juan preserves an ecosystem, then he either manages wildlife or maintains soil health, but not both.\nconclusion: Juan does not manage wildlife.\n\nfact1: Juan works in forestry.\nfact2: Juan does not manage wildlife.\nrule: If Juan works in forestry, then he either manages wildlife or harvests timber (or both).\nconclusion: Juan harvests timber.\n\nfact1: Juan does not prune plants.\nrule: Juan either uses a chainsaw or prunes plants, but not both.\nconclusion: Juan uses a chainsaw.\n\nfact1: Juan uses a chainsaw.\nfact2: Juan harvests timber.\nrule: If Juan masters the bucksaw technique, then he either uses a chainsaw or harvests timber, but not both.\nconclusion: Juan does not master the bucksaw technique.\n\nfact1: Juan does not master the bucksaw technique.\nfact2: Juan does not fell trees efficiently.\nrule: If Juan is an experienced logger, then he either masters the bucksaw technique or fells trees efficiently (or both).\nconclusion: Juan is an experienced logger.\n\nTherefore, it is false that Juan is an experienced logger. The correct option is: B.",
    "context": "Juan either plants trees or preserves ecosystems. If Tony works in forestry, then he either manages wildlife or harvests timber (or both). If Juan either splits wood or cuts firewood (but not both), then he harvests timber. If Nola preserves an ecosystem, then he either manages wildlife or maintains soil health, but not both. If Juan masters the bucksaw technique, then he either uses a chainsaw or harvests timber, but not both. Nola does not fell trees efficiently. For any person, either they conserve water or protect animal habitats, but not both, is not true, instead they can do both. Anyone who reduces their carbon footprint or conserves water can preserve an ecosystem. Juan works in forestry. Juan does not trim his shrubs. If Juan cuts wood and makes smooth cuts, then he uses a chainsaw. Nola does not trim his shrubs. Stinky works in forestry. Juan does not protect animal habitats. Stinky either uses a chainsaw or prunes plants, but not both. If Stinky is an experienced logger, then he either masters the bucksaw technique or fells trees efficiently (or both). Stinky does not reduce his carbon footprint. If Nola masters the bucksaw technique, then he either uses a chainsaw or harvests timber, but not both. Juan either uses a chainsaw or prunes plants, but not both. If Juan preserves an ecosystem, then he either manages wildlife or maintains soil health, but not both. Juan maintains soil health. Anyone who trims shrubs or prunes plants keeps their landscaping in order. If Juan works in forestry, then he either manages wildlife or harvests timber (or both). Juan does not fell trees efficiently. Juan does not reduce his carbon footprint. If Juan is an experienced logger, then he either masters the bucksaw technique or fells trees efficiently (or both). Tony does not protect animal habitats. Stinky maintains soil health. Juan does not keep his landscaping in order.",
    "nl2fol": {
      "Juan either plants trees or preserves ecosystems.": "plant_trees(Juan) ∨ preserve_ecosystem(Juan)",
      "If Tony works in forestry, then he either manages wildlife or harvests timber (or both).": "work_in_forestry(Tony) → (manage_wildlife(Tony) ∨ harvest_timber(Tony))",
      "If Juan either splits wood or cuts firewood (but not both), then he harvests timber.": "(split_wood(Juan) ⊕ cut_firewood(Juan)) → harvest_timber(Juan)",
      "If Nola preserves an ecosystem, then he either manages wildlife or maintains soil health, but not both.": "preserve_ecosystem(Nola) → (maintain_soil_health(Nola) ⊕ manage_wildlife(Nola))",
      "If Juan masters the bucksaw technique, then he either uses a chainsaw or harvests timber, but not both.": "master_bucksaw_technique(Juan) → (use_chainsaw(Juan) ⊕ harvest_timber(Juan))",
      "Nola does not fell trees efficiently.": "¬fell_trees_efficiently(Nola)",
      "For any person, either they conserve water or protect animal habitats, but not both, is not true, instead they can do both.": "∀x (conserve_water(x) ⊕ protect_animal_habitats(x))",
      "Anyone who reduces their carbon footprint or conserves water can preserve an ecosystem.": "∀x ((reduce_carbon_footprint(x) ∨ conserve_water(x)) → preserve_ecosystem(x))",
      "Juan works in forestry.": "work_in_forestry(Juan)",
      "Juan does not trim his shrubs.": "¬trims_shrubs(Juan)",
      "If Juan cuts wood and makes smooth cuts, then he uses a chainsaw.": "(cuts_wood(Juan) ∧ makes_smooth_cuts(Juan)) → use_chainsaw(Juan)",
      "Nola does not trim his shrubs.": "¬trims_shrubs(Nola)",
      "Stinky works in forestry.": "work_in_forestry(Stinky)",
      "Juan does not protect animal habitats.": "¬protect_animal_habitats(Juan)",
      "Stinky either uses a chainsaw or prunes plants, but not both.": "use_chainsaw(Stinky) ⊕ prunes_plants(Stinky)",
      "If Stinky is an experienced logger, then he either masters the bucksaw technique or fells trees efficiently (or both).": "experienced_logger(Stinky) → (master_bucksaw_technique(Stinky) ∨ fell_trees_efficiently(Stinky))",
      "Stinky does not reduce his carbon footprint.": "¬reduces_carbon_footprint(Stinky)",
      "If Nola masters the bucksaw technique, then he either uses a chainsaw or harvests timber, but not both.": "master_bucksaw_technique(Nola) → (use_chainsaw(Nola) ⊕ harvest_timber(Nola))",
      "Juan either uses a chainsaw or prunes plants, but not both.": "use_chainsaw(Juan) ⊕ prunes_plants(Juan)",
      "If Juan preserves an ecosystem, then he either manages wildlife or maintains soil health, but not both.": "preserve_ecosystem(Juan) → (maintain_soil_health(Juan) ⊕ manage_wildlife(Juan))",
      "Juan maintains soil health.": "maintain_soil_health(Juan)",
      "Anyone who trims shrubs or prunes plants keeps their landscaping in order.": "∀x ((trims_shrubs(x) ∨ prunes_plants(x)) → keeps_landscaping(x))",
      "If Juan works in forestry, then he either manages wildlife or harvests timber (or both).": "work_in_forestry(Juan) → (manage_wildlife(Juan) ∨ harvest_timber(Juan))",
      "Juan does not fell trees efficiently.": "¬fell_trees_efficiently(Juan)",
      "Juan does not reduce his carbon footprint.": "¬reduce_carbon_footprint(Juan)",
      "If Juan is an experienced logger, then he either masters the bucksaw technique or fells trees efficiently (or both).": "experienced_logger(Juan) → (master_bucksaw_technique(Juan) ∨ fell_trees_efficiently(Juan))",
      "Tony does not protect animal habitats.": "¬protect_animal_habitats(Tony)",
      "Stinky maintains soil health.": "maintain_soil_health(Stinky)",
      "Juan does not keep his landscaping in order.": "¬keeps_landscaping(Juan)"
    },
    "conclusion_fol": "experienced_logger(Juan)"
  },
  {
    "id": 71,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Scott has a chromosomal abnormality.",
    "reasoning": "fact1: Scott does not have a stable weight.\nrule: Scott either has a stable weight or has a weak immune system, but not both.\nconclusion: Scott has a weak immune system.\n\nfact1: Scott thrives under pressure.\nrule: Anyone who thrives under pressure has high adaptability.\nconclusion: Scott has high adaptability.\n\nfact1: Scott is healthy.\nfact2: Scott has a weak immune system.\nrule: If Scott ages gracefully, then he is either healthy or has a weak immune system, but not both.\nconclusion: Scott does not age gracefully.\n\nfact1: Scott does not age gracefully.\nrule: Scott either ages gracefully or has complex DNA, but not both.\nconclusion: Scott has complex DNA.\n\nfact1: Scott has high adaptability.\nfact2: Scott is more resilient.\nrule: If Scott has a genetic mutation, then he either has high adaptability or is more resilient (but not both).\nconclusion: Scott does not have a genetic mutation.\n\nfact1: Scott has complex DNA.\nfact2: Scott does not develop slowly.\nrule: Anyone who has complex DNA and is genetically diverse develops slowly.\nconclusion: Scott is not genetically diverse.\n\nfact1: Scott does not have a rare trait.\nfact2: Scott is not genetically diverse.\nrule: If someone either has a rare trait or a unique genetic profile, then they are genetically diverse.\nconclusion: Scott does not have a unique genetic profile.\n\nfact1: Scott does not have a genetic mutation.\nfact2: Scott does not have a unique genetic profile.\nrule: If Scott either has a genetic mutation or a chromosomal abnormality (but not both), then he has a unique genetic profile.\nconclusion: Scott has a chromosomal abnormality.\n\nTherefore, it is false that Scott has a chromosomal abnormality. The correct option is: B.",
    "context": "Westyn either has a stable weight or has a weak immune system, but not both. Scott is healthy. If Scott ages gracefully, then he is either healthy or has a weak immune system, but not both. If Scott has a genetic mutation, then he either has high adaptability or is more resilient (but not both). Bryant does not have a rare trait. Bryant is more resilient. Scott does not develop slowly. If someone either has a rare trait or a unique genetic profile, then they are genetically diverse. If Bryant ages gracefully, then he is either healthy or has a weak immune system, but not both. If Reign has a genetic mutation, then he either has high adaptability or is more resilient (but not both). Bryant does not develop slowly. Scott does not have a stable weight. Scott either ages gracefully or has complex DNA, but not both. Anyone who has complex DNA and is genetically diverse develops slowly. Scott either has a stable weight or has a weak immune system, but not both. Bryant thrives under pressure. If Reign either has a genetic mutation or a chromosomal abnormality (but not both), then he has a unique genetic profile. If Scott lives a healthy lifestyle, then he will age gracefully. Scott thrives under pressure. If Scott either has a genetic mutation or a chromosomal abnormality (but not both), then he has a unique genetic profile. Scott is more resilient. Scott either stays fit or has a weak immune system. Scott does not have a rare trait. If Scott experiences environmental stress, then he either has high adaptability or has strong coping mechanisms (but not both). Reign either ages gracefully or has complex DNA, but not both. Anyone who thrives under pressure has high adaptability.",
    "nl2fol": {
      "Westyn either has a stable weight or has a weak immune system, but not both.": "has_weak_immune_system(Westyn) ⊕ has_stable_weight(Westyn)",
      "Scott is healthy.": "is_healthy(Scott)",
      "If Scott ages gracefully, then he is either healthy or has a weak immune system, but not both.": "ages_gracefully(Scott) → (is_healthy(Scott) ⊕ has_weak_immune_system(Scott))",
      "If Scott has a genetic mutation, then he either has high adaptability or is more resilient (but not both).": "genetic_mutation(Scott) → (has_high_adaptability(Scott) ⊕ is_more_resilient(Scott))",
      "Bryant does not have a rare trait.": "¬has_rareTrait(Bryant)",
      "Bryant is more resilient.": "is_more_resilient(Bryant)",
      "Scott does not develop slowly.": "¬develops_slowly(Scott)",
      "If someone either has a rare trait or a unique genetic profile, then they are genetically diverse.": "∀x ((has_rareTrait(x) ⊕ unique_genetic_profile(x)) → is_genetically_diverse(x))",
      "If Bryant ages gracefully, then he is either healthy or has a weak immune system, but not both.": "ages_gracefully(Bryant) → (is_healthy(Bryant) ⊕ has_weak_immune_system(Bryant))",
      "If Reign has a genetic mutation, then he either has high adaptability or is more resilient (but not both).": "genetic_mutation(Reign) → (has_high_adaptability(Reign) ⊕ is_more_resilient(Reign))",
      "Bryant does not develop slowly.": "¬develops_slowly(Bryant)",
      "Scott does not have a stable weight.": "¬has_stable_weight(Scott)",
      "Scott either ages gracefully or has complex DNA, but not both.": "ages_gracefully(Scott) ⊕ has_complex_dna(Scott)",
      "Anyone who has complex DNA and is genetically diverse develops slowly.": "∀x ((has_complex_dna(x) ∧ is_genetically_diverse(x)) → develops_slowly(x))",
      "Scott either has a stable weight or has a weak immune system, but not both.": "has_weak_immune_system(Scott) ⊕ has_stable_weight(Scott)",
      "Bryant thrives under pressure.": "thrives_under_pressure(Bryant)",
      "If Reign either has a genetic mutation or a chromosomal abnormality (but not both), then he has a unique genetic profile.": "(genetic_mutation(Reign) ⊕ chromosomal_abnormality(Reign)) → unique_genetic_profile(Reign)",
      "If Scott lives a healthy lifestyle, then he will age gracefully.": "lives_healthy_lifestyle(Scott) → ages_gracefully(Scott)",
      "Scott thrives under pressure.": "thrives_under_pressure(Scott)",
      "If Scott either has a genetic mutation or a chromosomal abnormality (but not both), then he has a unique genetic profile.": "(genetic_mutation(Scott) ⊕ chromosomal_abnormality(Scott)) → unique_genetic_profile(Scott)",
      "Scott is more resilient.": "is_more_resilient(Scott)",
      "Scott either stays fit or has a weak immune system.": "stays_fit(Scott) ∨ has_weak_immune_system(Scott)",
      "Scott does not have a rare trait.": "¬has_rareTrait(Scott)",
      "If Scott experiences environmental stress, then he either has high adaptability or has strong coping mechanisms (but not both).": "experiences_environmental_stress(Scott) → (has_high_adaptability(Scott) ⊕ has_strong_coping_mechanisms(Scott))",
      "Reign either ages gracefully or has complex DNA, but not both.": "ages_gracefully(Reign) ⊕ has_complex_dna(Reign)",
      "Anyone who thrives under pressure has high adaptability.": "∀x (thrives_under_pressure(x) → has_high_adaptability(x))"
    },
    "conclusion_fol": "chromosomal_abnormality(Scott)"
  },
  {
    "id": 72,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bennett pioneers breakthrough technologies.",
    "reasoning": "fact1: Bennett analyzes data.\nfact2: Bennett does not think critically.\nrule: If Bennett either solves complex problems or analyzes data (but not both), then he thinks critically.\nconclusion: Bennett can solve complex problems.\n\nfact1: Bennett can solve complex problems.\nrule: If Bennett can solve complex problems, then he leads innovative projects and optimizes systems.\nconclusion: Bennett optimizes systems.\n\nfact1: Bennett optimizes systems.\nfact2: Bennett advances artificial intelligence.\nrule: If Bennett optimizes systems, then he either advances artificial intelligence or enhances computing capabilities, but not both.\nconclusion: Bennett does not enhance computing capabilities.\n\nfact1: Bennett does not enhance computing capabilities.\nrule: If someone improves software, then they enhance computing capabilities.\nconclusion: Bennett does not improve software.\n\nfact1: Bennett does not improve software.\nrule: Bennett either develops efficient operating systems or improves software.\nconclusion: Bennett develops efficient operating systems.\n\nfact1: Bennett studies multiprocessing.\nfact2: Bennett develops efficient operating systems.\nrule: If Bennett studies multiprocessing, then he either develops efficient operating systems or pioneers breakthrough technologies, but not both.\nconclusion: Bennett pioneers breakthrough technologies.\n\nTherefore, it is false that Bennett pioneers breakthrough technologies. The correct option is: B.",
    "context": "If Bennett optimizes systems, then he either advances artificial intelligence or enhances computing capabilities, but not both. If someone improves software, then they enhance computing capabilities. Bennett studies multiprocessing. If Bennett studies multiprocessing, then he either develops efficient operating systems or pioneers breakthrough technologies, but not both. If Francesca studies multiprocessing, then he either develops efficient operating systems or pioneers breakthrough technologies, but not both. Bennett does not think critically. If Bennett collaborates with experts, then he either solves complex problems or creates novel solutions (but not both). Anyone who understands algorithms and designs system architecture can develop efficient operating systems. Bennett analyzes data. If Bennett either solves complex problems or analyzes data (but not both), then he thinks critically. If Bennett can solve complex problems, then he leads innovative projects and optimizes systems. Bennett either develops efficient operating systems or improves software. Bennett advances artificial intelligence. If Francesca can solve complex problems, then he leads innovative projects and optimizes systems.",
    "nl2fol": {
      "If Bennett optimizes systems, then he either advances artificial intelligence or enhances computing capabilities, but not both.": "optimize_systems(Bennett) → (advance_artificial_intelligence(Bennett) ⊕ enhance_computing(Bennett))",
      "If someone improves software, then they enhance computing capabilities.": "∀x (improve_software(x) → enhance_computing(x))",
      "Bennett studies multiprocessing.": "study_multiprocessing(Bennett)",
      "If Bennett studies multiprocessing, then he either develops efficient operating systems or pioneers breakthrough technologies, but not both.": "study_multiprocessing(Bennett) → (develop_efficient_operating_systems(Bennett) ⊕ pioneer_breakthrough_technologies(Bennett))",
      "If Francesca studies multiprocessing, then he either develops efficient operating systems or pioneers breakthrough technologies, but not both.": "study_multiprocessing(Francesca) → (develop_efficient_operating_systems(Francesca) ⊕ pioneer_breakthrough_technologies(Francesca))",
      "Bennett does not think critically.": "¬think_critically(Bennett)",
      "If Bennett collaborates with experts, then he either solves complex problems or creates novel solutions (but not both).": "collaborate_with_experts(Bennett) → (solve_complex_problems(Bennett) ⊕ create_novel_solutions(Bennett))",
      "Anyone who understands algorithms and designs system architecture can develop efficient operating systems.": "∀x ((understands_algorithms(x) ∧ designs_system_architecture(x)) → develop_efficient_operating_systems(x))",
      "Bennett analyzes data.": "analyze_data(Bennett)",
      "If Bennett either solves complex problems or analyzes data (but not both), then he thinks critically.": "(solve_complex_problems(Bennett) ⊕ analyze_data(Bennett)) → think_critically(Bennett)",
      "If Bennett can solve complex problems, then he leads innovative projects and optimizes systems.": "solve_complex_problems(Bennett) → (lead_innovative_projects(Bennett) ∧ optimize_systems(Bennett))",
      "Bennett either develops efficient operating systems or improves software.": "develop_efficient_operating_systems(Bennett) ∨ improve_software(Bennett)",
      "Bennett advances artificial intelligence.": "advance_artificial_intelligence(Bennett)",
      "If Francesca can solve complex problems, then he leads innovative projects and optimizes systems.": "solve_complex_problems(Francesca) → (lead_innovative_projects(Francesca) ∧ optimize_systems(Francesca))"
    },
    "conclusion_fol": "pioneer_breakthrough_technologies(Bennett)"
  },
  {
    "id": 73,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lovie opposes extremism.",
    "reasoning": "fact1: Lovie does not earn respect.\nrule: If someone heals their community, then they will earn respect.\nconclusion: Lovie does not heal her community.\n\nfact1: Lovie defends minorities.\nfact2: Lovie does not advocate for freedom.\nrule: If Lovie either defends minorities or supports human rights (but not both), then she advocates for freedom.\nconclusion: Lovie supports human rights.\n\nfact1: Lovie supports human rights.\nrule: Lovie either supports human rights or promotes social justice, but no one necessarily does both.\nconclusion: Lovie does not promote social justice.\n\nfact1: Lovie does not heal her community.\nrule: If Lovie fosters peace, then she heals her community.\nconclusion: Lovie does not foster peace.\n\nfact1: Lovie does not foster peace.\nrule: If someone values tolerance, then they foster peace.\nconclusion: Lovie does not value tolerance.\n\nfact1: Lovie does not value tolerance.\nfact2: Lovie does not promote social justice.\nrule: For all humans, if they oppose extremism or value tolerance, then they promote social justice.\nconclusion: Lovie opposes extremism.\n\nTherefore, it is false that Lovie opposes extremism. The correct option is: B.",
    "context": "Lovie preaches understanding or fosters peace. If Lovie either defends minorities or supports human rights (but not both), then she advocates for freedom. Lovie does not earn respect. For all humans, if they oppose extremism or value tolerance, then they promote social justice. Anyone who rejects prejudice or embraces diversity values tolerance. If someone heals their community, then they will earn respect. Lilly either supports human rights or promotes social justice, but no one necessarily does both. Lovie either supports human rights or promotes social justice, but no one necessarily does both. If Lilly either defends minorities or supports human rights (but not both), then she advocates for freedom. Shiloh does not earn respect. If someone values tolerance, then they foster peace. Lovie defends minorities. Lovie does not advocate for freedom. If Lilly fosters peace, then she heals her community. Lovie believes in equality or supports human rights. If Lovie fosters peace, then she heals her community.",
    "nl2fol": {
      "Lovie preaches understanding or fosters peace.": "preaches_understanding(Lovie) ∨ fosters_peace(Lovie)",
      "If Lovie either defends minorities or supports human rights (but not both), then she advocates for freedom.": "(defends_minorities(Lovie) ⊕ supports_human_rights(Lovie)) → advocates_freedom(Lovie)",
      "Lovie does not earn respect.": "¬earns_respect(Lovie)",
      "For all humans, if they oppose extremism or value tolerance, then they promote social justice.": "∀x ((opposes_extremism(x) ∨ values_tolerance(x)) → promotes_social_justice(x))",
      "Anyone who rejects prejudice or embraces diversity values tolerance.": "∀x ((rejects_prejudice(x) ∨ embraces_diversity(x)) → values_tolerance(x))",
      "If someone heals their community, then they will earn respect.": "∀x (heals_communities(x) → earns_respect(x))",
      "Lilly either supports human rights or promotes social justice, but no one necessarily does both.": "supports_human_rights(Lilly) ⊕ promotes_social_justice(Lilly)",
      "Lovie either supports human rights or promotes social justice, but no one necessarily does both.": "supports_human_rights(Lovie) ⊕ promotes_social_justice(Lovie)",
      "If Lilly either defends minorities or supports human rights (but not both), then she advocates for freedom.": "(defends_minorities(Lilly) ⊕ supports_human_rights(Lilly)) → advocates_freedom(Lilly)",
      "Shiloh does not earn respect.": "¬earn_respect(Shiloh)",
      "If someone values tolerance, then they foster peace.": "∀x (values_tolerance(x) → fosters_peace(x))",
      "Lovie defends minorities.": "defends_minorities(Lovie)",
      "Lovie does not advocate for freedom.": "¬advocates_freedom(Lovie)",
      "If Lilly fosters peace, then she heals her community.": "fosters_peace(Lilly) → heals_communities(Lilly)",
      "Lovie believes in equality or supports human rights.": "believes_in_equality(Lovie) ∨ supports_human_rights(Lovie)",
      "If Lovie fosters peace, then she heals her community.": "fosters_peace(Lovie) → heals_communities(Lovie)"
    },
    "conclusion_fol": "opposes_extremism(Lovie)"
  },
  {
    "id": 74,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Twinkle is well-trained or trustworthy, then she is useful for dressage.",
    "reasoning": "fact1: Twinkle has good manners.\nfact2: Twinkle follows rules.\nrule: All horses that have good manners either obey commands or follow rules.\nconclusion: Twinkle does not obey commands.\n\nfact1: Twinkle does not obey commands.\nrule: Twinkle either obeys commands or is disciplined.\nconclusion: Twinkle is disciplined.\n\nfact1: Twinkle does not achieve high jumps.\nrule: Twinkle is either agile or achieves high jumps, but not necessarily both.\nconclusion: Twinkle is agile.\n\nfact1: Twinkle is disciplined.\nfact2: Twinkle remains calm.\nrule: If Twinkle is disciplined, then she either remains calm or stands still (but not both).\nconclusion: Twinkle does not stand still.\n\nfact1: Twinkle has strength.\nfact2: Twinkle is agile.\nrule: If Twinkle is strong, then she is either agile or trustworthy (but not both).\nconclusion: Twinkle is not trustworthy.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Twinkle is well-trained or trustworthy, then she is useful for dressage. The correct option is: C.",
    "context": "Twinkle is either agile or achieves high jumps, but not necessarily both. Twinkle follows rules. If a horse is patient and respects its rider, then it can stand still. If Twinkle performs dressage, then she is either disciplined or has good posture (but not both). If Twinkle is strong, then she is either agile or trustworthy (but not both). Twinkle has strength. Twinkle remains calm. Twinkle does not achieve high jumps. Twinkle either obeys commands or is disciplined. All horses that have good manners either obey commands or follow rules. Twinkle has good manners. If Twinkle has good reflexes, then she is either agile or has endurance (but not both). If Twinkle is disciplined, then she either remains calm or stands still (but not both).",
    "nl2fol": {
      "Twinkle is either agile or achieves high jumps, but not necessarily both.": "achieves_high_jumps(Twinkle) ⊕ is_agile(Twinkle)",
      "Twinkle follows rules.": "follows_rules(Twinkle)",
      "If a horse is patient and respects its rider, then it can stand still.": "∀x ((is_patient(x) ∧ respects_rider(x)) → stands_still(x))",
      "If Twinkle performs dressage, then she is either disciplined or has good posture (but not both).": "performs_dressage(Twinkle) → (has_good_posture(Twinkle) ⊕ is_disciplined(Twinkle))",
      "If Twinkle is strong, then she is either agile or trustworthy (but not both).": "has_strength(Twinkle) → (is_agile(Twinkle) ⊕ trustworthy(Twinkle))",
      "Twinkle has strength.": "has_strength(Twinkle)",
      "Twinkle remains calm.": "remains_calm(Twinkle)",
      "Twinkle does not achieve high jumps.": "¬achieves_high_jumps(Twinkle)",
      "Twinkle either obeys commands or is disciplined.": "obeys_commands(Twinkle) ∨ is_disciplined(Twinkle)",
      "All horses that have good manners either obey commands or follow rules.": "∀x (has_good_manners(x) → (obeys_commands(x) ⊕ follows_rules(x)))",
      "Twinkle has good manners.": "has_good_manners(Twinkle)",
      "If Twinkle has good reflexes, then she is either agile or has endurance (but not both).": "has_good_reflexes(Twinkle) → (is_agile(Twinkle) ⊕ has_endurance(Twinkle))",
      "If Twinkle is disciplined, then she either remains calm or stands still (but not both).": "is_disciplined(Twinkle) → (remains_calm(Twinkle) ⊕ stands_still(Twinkle))"
    },
    "conclusion_fol": "(well_trained(Twinkle) ∨ trustworthy(Twinkle)) → useful_for_dressage(Twinkle)"
  },
  {
    "id": 75,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emelia earns respect from others.",
    "reasoning": "fact1: Emelia is meticulous.\nrule: Anyone who is meticulous will attend to details.\nconclusion: Emelia attends to details.\n\nfact1: Emelia does not prioritize her work.\nrule: If someone meets deadlines, then they prioritize their work.\nconclusion: Emelia does not meet deadlines.\n\nfact1: Emelia does not meet deadlines.\nrule: Emelia either manages tasks or meets deadlines, but not both.\nconclusion: Emelia manages tasks.\n\nfact1: Emelia attends to details.\nfact2: Emelia manages tasks.\nrule: For all people, if they attend to details and manage tasks, then they perform their job precisely.\nconclusion: Emelia performs her job precisely.\n\nfact1: Emelia performs her job precisely.\nfact2: Emelia coordinates efficiently.\nrule: If Emelia performs her job precisely, then she saves lives and coordinates efficiently.\nconclusion: Emelia saves lives.\n\nfact1: Emelia handles pressure well.\nfact2: Emelia saves lives.\nrule: If Emelia handles pressure well, then she either earns respect from others or saves lives, but not both.\nconclusion: Emelia earns respect from others.\n\nTherefore, it is false that Emelia earns respect from others. The correct option is: B.",
    "context": "If Emelia handles pressure well, then she either earns respect from others or saves lives, but not both. Anyone who is meticulous will attend to details. Emelia coordinates efficiently. Emelia is meticulous. If someone meets deadlines, then they prioritize their work. Emelia handles pressure well. If Emelia performs her job precisely, then she saves lives and coordinates efficiently. Emelia does not prioritize her work. Emelia either manages tasks or meets deadlines, but not both. For all people, if they attend to details and manage tasks, then they perform their job precisely.",
    "nl2fol": {
      "If Emelia handles pressure well, then she either earns respect from others or saves lives, but not both.": "handles_pressure(Emelia) → (earns_respect(Emelia) ⊕ saves_lives(Emelia))",
      "Anyone who is meticulous will attend to details.": "∀x (is_meticulous(x) → attends_details(x))",
      "Emelia coordinates efficiently.": "coordinates_efficiently(Emelia)",
      "Emelia is meticulous.": "is_meticulous(Emelia)",
      "If someone meets deadlines, then they prioritize their work.": "∀x (meets_deadlines(x) → prioritizes_work(x))",
      "Emelia handles pressure well.": "handles_pressure(Emelia)",
      "If Emelia performs her job precisely, then she saves lives and coordinates efficiently.": "performs_precisely(Emelia) → (saves_lives(Emelia) ∧ coordinates_efficiently(Emelia))",
      "Emelia does not prioritize her work.": "¬prioritizes_work(Emelia)",
      "Emelia either manages tasks or meets deadlines, but not both.": "manages_tasks(Emelia) ⊕ meets_deadlines(Emelia)",
      "For all people, if they attend to details and manage tasks, then they perform their job precisely.": "∀x ((attends_details(x) ∧ manages_tasks(x)) → performs_precisely(x))"
    },
    "conclusion_fol": "earns_respect(Emelia)"
  },
  {
    "id": 76,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Angie is either fearful of enclosed spaces or comfortable in enclosed spaces, but not both.",
    "reasoning": "fact1: Angie hikes outdoors.\nfact2: Angie does not enjoy sunny days.\nrule: If Angie either hikes outdoors or enjoys sunny days (but not both), then she prefers open areas.\nconclusion: Angie prefers open areas.\n\nfact1: Angie cannot make groundbreaking findings.\nrule: If Angie understands ecosystems or values underground discovery, then she can make groundbreaking findings.\nconclusion: Angie does not value underground discovery.\n\nfact1: Angie studies rock formations.\nfact2: Angie does not value underground discovery.\nrule: If someone either appreciates subterranean landscapes or studies rock formations, then they value underground discovery.\nconclusion: Angie appreciates subterranean landscapes.\n\nfact1: Angie does not explore caves.\nrule: Angie either avoids tunnels or explores caves.\nconclusion: Angie avoids tunnels.\n\nfact1: Angie is a geologist.\nfact2: Angie appreciates subterranean landscapes.\nrule: If Angie is a geologist, then she is either appreciative of subterranean landscapes or enjoys caving, but not both.\nconclusion: Angie does not enjoy caving.\n\nfact1: Angie does not enjoy caving.\nfact2: Angie likes small rooms.\nrule: Anyone who enjoys caving or likes small rooms is comfortable in enclosed spaces.\nconclusion: Angie is comfortable in enclosed spaces.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Angie is either fearful of enclosed spaces or comfortable in enclosed spaces, but not both. The correct option is: C.",
    "context": "Eddie cannot make groundbreaking findings. Everyone enjoys open spaces or is comfortable in enclosed spaces. If Angie either hikes outdoors or enjoys sunny days (but not both), then she prefers open areas. Angie studies rock formations. Zaylee does not explore caves. If Angie is a geologist, then she is either appreciative of subterranean landscapes or enjoys caving, but not both. Angie likes small rooms. Angie does not explore caves. Angie hikes outdoors. Angie either avoids tunnels or explores caves. Huggalump likes small rooms. Zaylee studies rock formations. If Huggalump understands ecosystems or values underground discovery, then she can make groundbreaking findings. Huggalump either avoids tunnels or explores caves. Angie is a geologist. If Angie understands ecosystems or values underground discovery, then she can make groundbreaking findings. If Eddie either hikes outdoors or enjoys sunny days (but not both), then she prefers open areas. Eddie hikes outdoors. Huggalump is a geologist. Angie cannot make groundbreaking findings. Angie does not enjoy sunny days. Anyone who enjoys caving or likes small rooms is comfortable in enclosed spaces. If someone has claustrophobia and likes wide spaces, then they avoid tunnels. If someone either appreciates subterranean landscapes or studies rock formations, then they value underground discovery.",
    "nl2fol": {
      "Eddie cannot make groundbreaking findings.": "¬make_groundbreaking_findings(Eddie)",
      "Everyone enjoys open spaces or is comfortable in enclosed spaces.": "∀x (enjoys_open_spaces(x) ∨ comfortable_in_enclosed_spaces(x))",
      "If Angie either hikes outdoors or enjoys sunny days (but not both), then she prefers open areas.": "(hike_outdoors(Angie) ⊕ enjoy_sunny_days(Angie)) → prefer_open_areas(Angie)",
      "Angie studies rock formations.": "study_rock_formation(Angie)",
      "Zaylee does not explore caves.": "¬explore_caves(Zaylee)",
      "If Angie is a geologist, then she is either appreciative of subterranean landscapes or enjoys caving, but not both.": "geologist(Angie) → (appreciate_subterranean_landscapes(Angie) ⊕ enjoy_caving(Angie))",
      "Angie likes small rooms.": "like_small_rooms(Angie)",
      "Angie does not explore caves.": "¬explore_caves(Angie)",
      "Angie hikes outdoors.": "hike_outdoors(Angie)",
      "Angie either avoids tunnels or explores caves.": "avoid_tunnels(Angie) ∨ explore_caves(Angie)",
      "Huggalump likes small rooms.": "like_small_rooms(Huggalump)",
      "Zaylee studies rock formations.": "study_rock_formation(Zaylee)",
      "If Huggalump understands ecosystems or values underground discovery, then she can make groundbreaking findings.": "(understand_ecosystems(Huggalump) ∨ value_underground_discovery(Huggalump)) → make_groundbreaking_findings(Huggalump)",
      "Huggalump either avoids tunnels or explores caves.": "avoid_tunnels(Huggalump) ∨ explore_caves(Huggalump)",
      "Angie is a geologist.": "geologist(Angie)",
      "If Angie understands ecosystems or values underground discovery, then she can make groundbreaking findings.": "(understand_ecosystems(Angie) ∨ value_underground_discovery(Angie)) → make_groundbreaking_findings(Angie)",
      "If Eddie either hikes outdoors or enjoys sunny days (but not both), then she prefers open areas.": "(hike_outdoors(Eddie) ⊕ enjoy_sunny_days(Eddie)) → prefer_open_areas(Eddie)",
      "Eddie hikes outdoors.": "hike_outdoors(Eddie)",
      "Huggalump is a geologist.": "geologist(Huggalump)",
      "Angie cannot make groundbreaking findings.": "¬make_groundbreaking_findings(Angie)",
      "Angie does not enjoy sunny days.": "¬enjoy_sunny_days(Angie)",
      "Anyone who enjoys caving or likes small rooms is comfortable in enclosed spaces.": "∀x ((enjoy_caving(x) ∨ like_small_rooms(x)) → comfortable_in_enclosed_spaces(x))",
      "If someone has claustrophobia and likes wide spaces, then they avoid tunnels.": "∀x ((has_claustrophobia(x) ∧ likes_wide_spaces(x)) → avoid_tunnels(x))",
      "If someone either appreciates subterranean landscapes or studies rock formations, then they value underground discovery.": "∀x ((appreciate_subterranean_landscapes(x) ⊕ study_rock_formation(x)) → value_underground_discovery(x))"
    },
    "conclusion_fol": "fearful_of_enclosed_spaces(Angie) ⊕ comfortable_in_enclosed_spaces(Angie)"
  },
  {
    "id": 77,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Niklaus does not grow nutritious crops.",
    "reasoning": "fact1: Niklaus does not plant seeds.\nrule: Niklaus either plants seeds or manages a farm.\nconclusion: Niklaus manages a farm.\n\nfact1: Niklaus works outdoors.\nfact2: Niklaus does not grow groundnuts.\nrule: If Niklaus works outdoors, then he either runs a ranch or grows groundnuts (or both).\nconclusion: Niklaus runs a ranch.\n\nfact1: Niklaus runs a ranch.\nrule: Anyone who runs a ranch owns animals.\nconclusion: Niklaus owns animals.\n\nfact1: Niklaus manages a farm.\nfact2: Niklaus owns animals.\nrule: Anyone who manages a farm or owns animals can raise livestock.\nconclusion: Niklaus raises livestock.\n\nfact1: Niklaus cultivates land.\nfact2: Niklaus raises livestock.\nrule: If Niklaus cultivates land, then he is either a successful farmer or raises livestock, but not both.\nconclusion: Niklaus is not a successful farmer.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Niklaus does not grow nutritious crops. The correct option is: C.",
    "context": "Calvin works outdoors. Calvin does not grow groundnuts. Niklaus cultivates land. If Niklaus cultivates land, then he is either a successful farmer or raises livestock, but not both. Niklaus manages a farm if he lives in a rural area. Niklaus does not plant seeds. Niklaus either plants seeds or manages a farm. If Niklaus works outdoors, then he either runs a ranch or grows groundnuts (or both). If Niklaus either harvests grains or tends to an orchard (but not both), then he runs a ranch. If Niklaus sells produce, then he either raises livestock or exports goods, but not both. If Maverick works outdoors, then he either runs a ranch or grows groundnuts (or both). Niklaus does not grow groundnuts. Niklaus works outdoors. If Maverick cultivates land, then he is either a successful farmer or raises livestock, but not both. If Niklaus has large land or needs extra income, then he can own animals. Anyone who manages a farm or owns animals can raise livestock. Maverick either plants seeds or manages a farm. Anyone who runs a ranch owns animals. If Niklaus either uses sustainable methods or harvests regularly (but not both), then he is a successful farmer. Maverick does not contribute to his community.",
    "nl2fol": {
      "Calvin works outdoors.": "work_outdoors(Calvin)",
      "Calvin does not grow groundnuts.": "¬grow_groundnuts(Calvin)",
      "Niklaus cultivates land.": "cultivate_land(Niklaus)",
      "If Niklaus cultivates land, then he is either a successful farmer or raises livestock, but not both.": "cultivate_land(Niklaus) → (successful_farmer(Niklaus) ⊕ raise_livestock(Niklaus))",
      "Niklaus manages a farm if he lives in a rural area.": "live_rurally(Niklaus) → manage_farm(Niklaus)",
      "Niklaus does not plant seeds.": "¬plant_seeds(Niklaus)",
      "Niklaus either plants seeds or manages a farm.": "plant_seeds(Niklaus) ∨ manage_farm(Niklaus)",
      "If Niklaus works outdoors, then he either runs a ranch or grows groundnuts (or both).": "work_outdoors(Niklaus) → (run_ranch(Niklaus) ∨ grow_groundnuts(Niklaus))",
      "If Niklaus either harvests grains or tends to an orchard (but not both), then he runs a ranch.": "(harvest_grains(Niklaus) ⊕ tend_to_orchard(Niklaus)) → run_ranch(Niklaus)",
      "If Niklaus sells produce, then he either raises livestock or exports goods, but not both.": "sell_produce(Niklaus) → (raise_livestock(Niklaus) ⊕ export_goods(Niklaus))",
      "If Maverick works outdoors, then he either runs a ranch or grows groundnuts (or both).": "work_outdoors(Maverick) → (run_ranch(Maverick) ∨ grow_groundnuts(Maverick))",
      "Niklaus does not grow groundnuts.": "¬grow_groundnuts(Niklaus)",
      "Niklaus works outdoors.": "work_outdoors(Niklaus)",
      "If Maverick cultivates land, then he is either a successful farmer or raises livestock, but not both.": "cultivate_land(Maverick) → (successful_farmer(Maverick) ⊕ raise_livestock(Maverick))",
      "If Niklaus has large land or needs extra income, then he can own animals.": "(have_large_land(Niklaus) ∨ need_extra_income(Niklaus)) → own_animals(Niklaus)",
      "Anyone who manages a farm or owns animals can raise livestock.": "∀x ((manage_farm(x) ∨ own_animals(x)) → raise_livestock(x))",
      "Maverick either plants seeds or manages a farm.": "plant_seeds(Maverick) ∨ manage_farm(Maverick)",
      "Anyone who runs a ranch owns animals.": "∀x (run_ranch(x) → own_animals(x))",
      "If Niklaus either uses sustainable methods or harvests regularly (but not both), then he is a successful farmer.": "(use_sustainable_methods(Niklaus) ⊕ harvest_regularly(Niklaus)) → successful_farmer(Niklaus)",
      "Maverick does not contribute to his community.": "¬contribute_to_community(Maverick)"
    },
    "conclusion_fol": "¬grow_nutritious_crops(Niklaus)"
  },
  {
    "id": 78,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aurelio does not prioritize his health.",
    "reasoning": "fact1: Aurelio has good intuition.\nfact2: Aurelio does not reflect on his actions.\nrule: If Aurelio has good intuition, then he is either self-aware or reflective about his actions, but not both.\nconclusion: Aurelio is self-aware.\n\nfact1: Aurelio is self-aware.\nfact2: Aurelio does not take care of his emotions.\nrule: If Aurelio is self-aware, then he either listens to his body or takes care of his emotions, but not both.\nconclusion: Aurelio listens to his body.\n\nfact1: Aurelio pursues wellbeing.\nfact2: Aurelio does not maintain balance.\nrule: Everyone who pursues wellbeing either engages in physical activity or maintains balance (or both).\nconclusion: Aurelio engages in physical activity.\n\nfact1: Aurelio engages in physical activity.\nrule: Aurelio either engages in physical activity or manages stress, but not both.\nconclusion: Aurelio does not manage stress.\n\nfact1: Aurelio does not manage stress.\nrule: Aurelio practices mindfulness or manages stress.\nconclusion: Aurelio practices mindfulness.\n\nfact1: Aurelio practices mindfulness.\nrule: If Aurelio practices mindfulness, then he follows an alkaline diet and stays hydrated.\nconclusion: Aurelio follows an alkaline diet.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Aurelio does not prioritize his health. The correct option is: C.",
    "context": "If Aurelio has good intuition, then he is either self-aware or reflective about his actions, but not both. Aurelio does not reflect on his actions. Aurelio does not maintain balance. Aurelio either engages in physical activity or manages stress, but not both. Everyone who pursues wellbeing either engages in physical activity or maintains balance (or both). Aurelio has good intuition. If Aurelio practices mindfulness, then he follows an alkaline diet and stays hydrated. Aurelio practices mindfulness or manages stress. Any person who recognizes their emotions or connects with nature can manage stress. Aurelio does not take care of his emotions. Aurelio pursues wellbeing. If someone either plays sports or dances frequently (but not both), then they engage in physical activity. If Aurelio is self-aware, then he either listens to his body or takes care of his emotions, but not both. If Aurelio practices reflection, then he either is self-aware or values self-growth, but not both.",
    "nl2fol": {
      "If Aurelio has good intuition, then he is either self-aware or reflective about his actions, but not both.": "has_good_intuition(Aurelio) → (is_self_aware(Aurelio) ⊕ reflects_on_actions(Aurelio))",
      "Aurelio does not reflect on his actions.": "¬reflects_on_actions(Aurelio)",
      "Aurelio does not maintain balance.": "¬maintains_balance(Aurelio)",
      "Aurelio either engages in physical activity or manages stress, but not both.": "engages_in_physical_activity(Aurelio) ⊕ manages_stress(Aurelio)",
      "Everyone who pursues wellbeing either engages in physical activity or maintains balance (or both).": "∀x (pursues_wellbeing(x) → (maintains_balance(x) ∨ engages_in_physical_activity(x)))",
      "Aurelio has good intuition.": "has_good_intuition(Aurelio)",
      "If Aurelio practices mindfulness, then he follows an alkaline diet and stays hydrated.": "practices_mindfulness(Aurelio) → (follows_alkaline_diet(Aurelio) ∧ stays_hydrated(Aurelio))",
      "Aurelio practices mindfulness or manages stress.": "practices_mindfulness(Aurelio) ∨ manages_stress(Aurelio)",
      "Any person who recognizes their emotions or connects with nature can manage stress.": "∀x ((recognizes_emotions(x) ∨ connects_with_nature(x)) → manages_stress(x))",
      "Aurelio does not take care of his emotions.": "¬takes_care_of_emotions(Aurelio)",
      "Aurelio pursues wellbeing.": "pursues_wellbeing(Aurelio)",
      "If someone either plays sports or dances frequently (but not both), then they engage in physical activity.": "∀x ((plays_sports(x) ⊕ dances_frequently(x)) → engages_in_physical_activity(x))",
      "If Aurelio is self-aware, then he either listens to his body or takes care of his emotions, but not both.": "is_self_aware(Aurelio) → (listens_to_body(Aurelio) ⊕ takes_care_of_emotions(Aurelio))",
      "If Aurelio practices reflection, then he either is self-aware or values self-growth, but not both.": "practices_reflection(Aurelio) → (is_self_aware(Aurelio) ⊕ values_self_growth(Aurelio))"
    },
    "conclusion_fol": "¬prioritizes_health(Aurelio)"
  },
  {
    "id": 79,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aries gains influence.",
    "reasoning": "fact1: Aries challenges conventional wisdom.\nfact2: Aries influences public opinion.\nrule: If Aries challenges conventional wisdom, then he either influences public opinion or leaves a lasting impact, but not both.\nconclusion: Aries does not leave a lasting impact.\n\nfact1: Aries embraces paradoxes.\nrule: Aries either avoids complexity or embraces paradoxes, but not both.\nconclusion: Aries does not avoid complexity.\n\nfact1: Aries does not avoid complexity.\nrule: Aries either avoids complexity or pursues knowledge, but not both.\nconclusion: Aries pursues knowledge.\n\nfact1: Aries does not examine arguments.\nrule: Every philosopher examines arguments or develops critical thinking.\nconclusion: Aries is able to develop critical thinking.\n\nfact1: Aries pursues knowledge.\nfact2: Aries is able to develop critical thinking.\nrule: If Aries pursues knowledge, then he is either able to think discursively or develop critical thinking, but not both.\nconclusion: Aries does not think discursively.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Aries gains influence. The correct option is: C.",
    "context": "If Myla thinks discursively, then he gains influence and leaves a lasting impact. Aries embraces paradoxes. If Aries seeks understanding, then he either avoids complexity or values clarity, but not both. Aries either avoids complexity or embraces paradoxes, but not both. Matthew influences public opinion. If Aries pursues knowledge, then he is either able to think discursively or develop critical thinking, but not both. Myla challenges conventional wisdom. If Aries challenges conventional wisdom, then he either influences public opinion or leaves a lasting impact, but not both. For any philosopher, if they evaluate evidence and consider different perspectives, then they can develop critical thinking. If Matthew pursues knowledge, then he is either able to think discursively or develop critical thinking, but not both. Aries either avoids complexity or pursues knowledge, but not both. Aries challenges conventional wisdom. Aries does not examine arguments. Every philosopher examines arguments or develops critical thinking. Aries influences public opinion. Every philosopher who engages in debates either thinks discursively or seeks new perspectives.",
    "nl2fol": {
      "If Myla thinks discursively, then he gains influence and leaves a lasting impact.": "think_discursively(Myla) → (gain_influence(Myla) ∧ leavelasting_impact(Myla))",
      "Aries embraces paradoxes.": "embracing_paradoxes(Aries)",
      "If Aries seeks understanding, then he either avoids complexity or values clarity, but not both.": "seeks_understanding(Aries) → (avoid_complexity(Aries) ⊕ values_clarity(Aries))",
      "Aries either avoids complexity or embraces paradoxes, but not both.": "embracing_paradoxes(Aries) ⊕ avoid_complexity(Aries)",
      "Matthew influences public opinion.": "influence_public_opinion(Matthew)",
      "If Aries pursues knowledge, then he is either able to think discursively or develop critical thinking, but not both.": "pursue_knowledge(Aries) → (develop_critical_thinking(Aries) ⊕ think_discursively(Aries))",
      "Myla challenges conventional wisdom.": "challenges_conventional_wisdom(Myla)",
      "If Aries challenges conventional wisdom, then he either influences public opinion or leaves a lasting impact, but not both.": "challenge_conventional_wisdom(Aries) → (influence_public_opinion(Aries) ⊕ leavelasting_impact(Aries))",
      "For any philosopher, if they evaluate evidence and consider different perspectives, then they can develop critical thinking.": "∀x ((evaluates_evidence(x) ∧ considers_perspective(x)) → develop_critical_thinking(x))",
      "If Matthew pursues knowledge, then he is either able to think discursively or develop critical thinking, but not both.": "pursue_knowledge(Matthew) → (develop_critical_thinking(Matthew) ⊕ think_discursively(Matthew))",
      "Aries either avoids complexity or pursues knowledge, but not both.": "avoid_complexity(Aries) ⊕ pursue_knowledge(Aries)",
      "Aries challenges conventional wisdom.": "challenge_conventional_wisdom(Aries)",
      "Aries does not examine arguments.": "¬examines_arguments(Aries)",
      "Every philosopher examines arguments or develops critical thinking.": "∀x (examines_arguments(x) ∨ develop_critical_thinking(x))",
      "Aries influences public opinion.": "influence_public_opinion(Aries)",
      "Every philosopher who engages in debates either thinks discursively or seeks new perspectives.": "∀x (engages_in_debates(x) → (think_discursively(x) ∨ seeks_new_perspectives(x)))"
    },
    "conclusion_fol": "gain_influence(Aries)"
  },
  {
    "id": 80,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ayden is not reckless.",
    "reasoning": "fact1: Ayden does not experience shame.\nrule: If Ayden loses influence, then he experiences shame.\nconclusion: Ayden does not lose influence.\n\nfact1: Ayden has a strong support system.\nrule: If someone has a strong support system, they may not struggle with guilt, and vice versa.\nconclusion: Ayden does not struggle with guilt.\n\nfact1: Ayden does not make enemies.\nrule: Ayden makes enemies or loses friends.\nconclusion: Ayden loses friends.\n\nfact1: Ayden engages in controversy.\nfact2: Ayden does not struggle with guilt.\nrule: If Ayden engages in controversy and becomes isolated, then he struggles with guilt.\nconclusion: Ayden does not become isolated.\n\nfact1: Ayden does not become isolated.\nfact2: Ayden does not lose influence.\nrule: If Ayden faces consequences, then he either becomes isolated or loses influence (or both).\nconclusion: Ayden does not face consequences.\n\nfact1: Ayden does not face consequences.\nrule: If someone damages their reputation, then they face consequences and harm others.\nconclusion: Ayden does not damage his reputation.\n\nfact1: Ayden does not damage his reputation.\nrule: Anyone who loses trust or breaks promises will damage their reputation.\nconclusion: Ayden does not lose trust.\n\nfact1: Ayden does not attract attention.\nfact2: Ayden does not lose trust.\nrule: If Ayden is reckless, then he will either attract attention or lose trust, but not both.\nconclusion: Ayden is not reckless.\n\nTherefore, it is true that Ayden is not reckless. The correct option is: A.",
    "context": "If Estelle loses influence, then he experiences shame. If Ayden faces consequences, then he either becomes isolated or loses influence (or both). If someone has a strong support system, they may not struggle with guilt, and vice versa. Anyone who loses trust or breaks promises will damage their reputation. If Laila engages in controversy and becomes isolated, then he struggles with guilt. Anyone who betrays confidence will lose trust. Anyone who betrays others will lose friends. If Ayden abuses power, then he gains notoriety and loses influence. Ayden does not experience shame. If Ayden loses influence, then he experiences shame. Ayden has a strong support system. If Estelle is reckless, then he will either attract attention or lose trust, but not both. If someone damages their reputation, then they face consequences and harm others. If someone pursues power and acts selfishly, then they can harm others. Laila does not make enemies. Yummers has a strong support system. Ayden makes enemies or loses friends. If Ayden harbors secrets, then he will struggle with guilt. Ayden does not make enemies. If Yummers faces consequences, then he either becomes isolated or loses influence (or both). If Ayden engages in controversy and becomes isolated, then he struggles with guilt. If Ayden is reckless, then he will either attract attention or lose trust, but not both. Laila does not experience shame. Laila has regrets. Estelle engages in controversy. Ayden does not attract attention. If someone takes risks and disregards rules, then they will face consequences. Ayden engages in controversy. Estelle makes enemies or loses friends.",
    "nl2fol": {
      "If Estelle loses influence, then he experiences shame.": "lose_influence(Estelle) → experience_shame(Estelle)",
      "If Ayden faces consequences, then he either becomes isolated or loses influence (or both).": "face_consequences(Ayden) → (become_isolated(Ayden) ∨ lose_influence(Ayden))",
      "If someone has a strong support system, they may not struggle with guilt, and vice versa.": "∀x (has_support_system(x) ⊕ struggles_with_guilt(x))",
      "Anyone who loses trust or breaks promises will damage their reputation.": "∀x ((lose_trust(x) ∨ break_promises(x)) → damage_reputation(x))",
      "If Laila engages in controversy and becomes isolated, then he struggles with guilt.": "(engages_in_controversy(Laila) ∧ become_isolated(Laila)) → struggles_with_guilt(Laila)",
      "Anyone who betrays confidence will lose trust.": "∀x (betray_confidence(x) → lose_trust(x))",
      "Anyone who betrays others will lose friends.": "∀x (betray_others(x) → lose_friends(x))",
      "If Ayden abuses power, then he gains notoriety and loses influence.": "abuse_power(Ayden) → (gain_notoriety(Ayden) ∧ lose_influence(Ayden))",
      "Ayden does not experience shame.": "¬experience_shame(Ayden)",
      "If Ayden loses influence, then he experiences shame.": "lose_influence(Ayden) → experience_shame(Ayden)",
      "Ayden has a strong support system.": "has_support_system(Ayden)",
      "If Estelle is reckless, then he will either attract attention or lose trust, but not both.": "reckless(Estelle) → (attract_attention(Estelle) ⊕ lose_trust(Estelle))",
      "If someone damages their reputation, then they face consequences and harm others.": "∀x (damage_reputation(x) → (face_consequences(x) ∧ harm_others(x)))",
      "If someone pursues power and acts selfishly, then they can harm others.": "∀x ((pursue_power(x) ∧ act_selfishly(x)) → harm_others(x))",
      "Laila does not make enemies.": "¬make_enemies(Laila)",
      "Yummers has a strong support system.": "has_support_system(Yummers)",
      "Ayden makes enemies or loses friends.": "make_enemies(Ayden) ∨ lose_friends(Ayden)",
      "If Ayden harbors secrets, then he will struggle with guilt.": "harbors_secrets(Ayden) → struggles_with_guilt(Ayden)",
      "Ayden does not make enemies.": "¬make_enemies(Ayden)",
      "If Yummers faces consequences, then he either becomes isolated or loses influence (or both).": "face_consequences(Yummers) → (become_isolated(Yummers) ∨ lose_influence(Yummers))",
      "If Ayden engages in controversy and becomes isolated, then he struggles with guilt.": "(engages_in_controversy(Ayden) ∧ become_isolated(Ayden)) → struggles_with_guilt(Ayden)",
      "If Ayden is reckless, then he will either attract attention or lose trust, but not both.": "reckless(Ayden) → (attract_attention(Ayden) ⊕ lose_trust(Ayden))",
      "Laila does not experience shame.": "¬experience_shame(Laila)",
      "Laila has regrets.": "have_regrets(Laila)",
      "Estelle engages in controversy.": "engages_in_controversy(Estelle)",
      "Ayden does not attract attention.": "¬attract_attention(Ayden)",
      "If someone takes risks and disregards rules, then they will face consequences.": "∀x ((takes_risks(x) ∧ disregards_rules(x)) → face_consequences(x))",
      "Ayden engages in controversy.": "engages_in_controversy(Ayden)",
      "Estelle makes enemies or loses friends.": "make_enemies(Estelle) ∨ lose_friends(Estelle)"
    },
    "conclusion_fol": "¬reckless(Ayden)"
  },
  {
    "id": 81,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Brandon is a reckless driver.",
    "reasoning": "fact1: Brandon drives regularly.\nfact2: Brandon follows traffic rules.\nrule: If Brandon drives regularly, then he follows traffic rules and is a defensive driver.\nconclusion: Brandon is a defensive driver.\n\nfact1: Brandon knows vehicle mechanics.\nfact2: Brandon enjoys mentoring.\nrule: If someone knows vehicle mechanics and enjoys mentoring, then they can be a driving instructor.\nconclusion: Brandon is a driving instructor.\n\nfact1: Brandon is a driving instructor.\nfact2: Brandon is a professional racer.\nrule: If Brandon is a driving instructor, then he is either a professional racer or teaches road safety, but not both.\nconclusion: Brandon does not teach road safety.\n\nfact1: Brandon does not teach road safety.\nrule: For Brandon, he is either an experienced driver or teaches road safety, but not both.\nconclusion: Brandon is an experienced driver.\n\nfact1: Brandon is an experienced driver.\nfact2: Brandon is a defensive driver.\nrule: If Brandon is an experienced driver, then he is either a defensive driver or a cautious driver, but not both.\nconclusion: Brandon is not a cautious driver.\n\nfact1: Brandon is not a cautious driver.\nrule: Either Brandon is a cautious driver or a reckless driver, but not both.\nconclusion: Brandon is a reckless driver.\n\nTherefore, it is true that Brandon is a reckless driver. The correct option is: A.",
    "context": "If Brandon drives regularly, then he follows traffic rules and is a defensive driver. For Brandon, he is either an experienced driver or teaches road safety, but not both. Brandon follows traffic rules. If Brandon is a driving instructor, then he is either a professional racer or teaches road safety, but not both. If Brandon respects life, then he is precise and a cautious driver. Brandon knows vehicle mechanics. Brandon drives regularly. Brandon enjoys mentoring. If Brandon is an experienced driver, then he is either a defensive driver or a cautious driver, but not both. Either Brandon is a cautious driver or a reckless driver, but not both. Brandon is a professional racer. If Brandon owns a driving school, then he is either a driving instructor or creates a driving curriculum, but not both. If someone knows vehicle mechanics and enjoys mentoring, then they can be a driving instructor.",
    "nl2fol": {
      "If Brandon drives regularly, then he follows traffic rules and is a defensive driver.": "drives_regularly(Brandon) → (follows_traffic_rules(Brandon) ∧ defensive_driver(Brandon))",
      "For Brandon, he is either an experienced driver or teaches road safety, but not both.": "teaches_road_safety(Brandon) ⊕ experienced_driver(Brandon)",
      "Brandon follows traffic rules.": "follows_traffic_rules(Brandon)",
      "If Brandon is a driving instructor, then he is either a professional racer or teaches road safety, but not both.": "driving_instructor(Brandon) → (professional_racer(Brandon) ⊕ teaches_road_safety(Brandon))",
      "If Brandon respects life, then he is precise and a cautious driver.": "respects_life(Brandon) → (values_precision(Brandon) ∧ cautious_driver(Brandon))",
      "Brandon knows vehicle mechanics.": "knows_vehicle_mechanics(Brandon)",
      "Brandon drives regularly.": "drives_regularly(Brandon)",
      "Brandon enjoys mentoring.": "enjoys_mentoring(Brandon)",
      "If Brandon is an experienced driver, then he is either a defensive driver or a cautious driver, but not both.": "experienced_driver(Brandon) → (defensive_driver(Brandon) ⊕ cautious_driver(Brandon))",
      "Either Brandon is a cautious driver or a reckless driver, but not both.": "cautious_driver(Brandon) ⊕ reckless_driver(Brandon)",
      "Brandon is a professional racer.": "professional_racer(Brandon)",
      "If Brandon owns a driving school, then he is either a driving instructor or creates a driving curriculum, but not both.": "owns_driving_school(Brandon) → (creates_driving_curriculum(Brandon) ⊕ driving_instructor(Brandon))",
      "If someone knows vehicle mechanics and enjoys mentoring, then they can be a driving instructor.": "∀x ((knows_vehicle_mechanics(x) ∧ enjoys_mentoring(x)) → driving_instructor(x))"
    },
    "conclusion_fol": "reckless_driver(Brandon)"
  },
  {
    "id": 82,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Moshe aspires to greatness and inspires others along the way.",
    "reasoning": "fact1: Moshe does not learn from failure.\nrule: Everyone either conquers challenges or learns from failure.\nconclusion: Moshe conquers challenges.\n\nfact1: Moshe conquers challenges.\nfact2: Moshe does not reach new heights.\nrule: Everyone who conquers challenges either reaches new heights or finds inner peace (or both).\nconclusion: Moshe finds inner peace.\n\nfact1: Moshe finds inner peace.\nrule: Moshe either finds inner peace or builds resilience, but not necessarily both.\nconclusion: Moshe does not build resilience.\n\nfact1: Moshe does not overcome his fears.\nfact2: Moshe does not build resilience.\nrule: If Moshe pushes past his limits, then he either overcomes fears or builds resilience (but not both).\nconclusion: Moshe does not push past his limits.\n\nfact1: Moshe does not set high goals.\nfact2: Moshe does not push past his limits.\nrule: If Moshe either sets high goals or pursues excellence (but not both), then he pushes past his limits.\nconclusion: Moshe does not pursue excellence.\n\nfact1: Moshe does not face major setbacks.\nrule: Moshe either achieves success or faces major setbacks, but not both.\nconclusion: Moshe achieves success.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Moshe aspires to greatness and inspires others along the way. The correct option is: C.",
    "context": "Moshe either achieves success or faces major setbacks, but not both. Everyone either conquers challenges or learns from failure. Moshe does not reach new heights. Moshe either finds inner peace or builds resilience, but not necessarily both. If Moshe either sets high goals or pursues excellence (but not both), then he pushes past his limits. If Moshe pushes past his limits, then he either overcomes fears or builds resilience (but not both). Everyone who conquers challenges either reaches new heights or finds inner peace (or both). Moshe does not overcome his fears. If Moshe either connects with nature or practices mindfulness (but not both), then he finds inner peace. Moshe does not set high goals. Anyone who sets ambitious targets or believes in themselves aspires to greatness. If Moshe sets challenging targets, then he will push past his limits. Moshe does not face major setbacks. If Moshe either sets goals or embraces risks (but not both), then he conquers challenges. Moshe does not learn from failure.",
    "nl2fol": {
      "Moshe either achieves success or faces major setbacks, but not both.": "achieve_success(Moshe) ⊕ face_major_setbacks(Moshe)",
      "Everyone either conquers challenges or learns from failure.": "∀x (conquer_challenges(x) ∨ learn_from_failure(x))",
      "Moshe does not reach new heights.": "¬reach_new_heights(Moshe)",
      "Moshe either finds inner peace or builds resilience, but not necessarily both.": "find_inner_peace(Moshe) ⊕ build_resilience(Moshe)",
      "If Moshe either sets high goals or pursues excellence (but not both), then he pushes past his limits.": "(set_high_goals(Moshe) ⊕ pursue_excellence(Moshe)) → push_past_limits(Moshe)",
      "If Moshe pushes past his limits, then he either overcomes fears or builds resilience (but not both).": "push_past_limits(Moshe) → (overcome_fears(Moshe) ⊕ build_resilience(Moshe))",
      "Everyone who conquers challenges either reaches new heights or finds inner peace (or both).": "∀x (conquer_challenges(x) → (reach_new_heights(x) ∨ find_inner_peace(x)))",
      "Moshe does not overcome his fears.": "¬overcome_fears(Moshe)",
      "If Moshe either connects with nature or practices mindfulness (but not both), then he finds inner peace.": "(connect_with_nature(Moshe) ⊕ practice_mindfulness(Moshe)) → find_inner_peace(Moshe)",
      "Moshe does not set high goals.": "¬set_high_goals(Moshe)",
      "Anyone who sets ambitious targets or believes in themselves aspires to greatness.": "∀x ((set_ambitious_targets(x) ∨ believe_in_himself(x)) → aspire_to_greatness(x))",
      "If Moshe sets challenging targets, then he will push past his limits.": "set_challenging_targets(Moshe) → push_past_limits(Moshe)",
      "Moshe does not face major setbacks.": "¬face_major_setbacks(Moshe)",
      "If Moshe either sets goals or embraces risks (but not both), then he conquers challenges.": "(set_goals(Moshe) ⊕ embrace_risks(Moshe)) → conquer_challenges(Moshe)",
      "Moshe does not learn from failure.": "¬learn_from_failure(Moshe)"
    },
    "conclusion_fol": "aspire_to_greatness(Moshe) ∧ inspire_others_along_the_way(Moshe)"
  },
  {
    "id": 83,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Colin does not fight for affordable housing.",
    "reasoning": "fact1: Colin is passionate about politics.\nfact2: Colin educates others on activism.\nrule: If Colin is passionate about politics, then he either mobilizes social change or educates others on activism, but not both.\nconclusion: Colin does not mobilize social change.\n\nfact1: Colin is a community leader.\nfact2: Colin does not empower minorities.\nrule: If Colin is a community leader, then he either empowers minorities or fights poverty, but not both.\nconclusion: Colin fights poverty.\n\nfact1: Colin fights poverty.\nfact2: Colin promotes fairness.\nrule: Anyone who fights poverty or promotes fairness values equality.\nconclusion: Colin values equality.\n\nfact1: Colin values equality.\nfact2: Colin champions human rights.\nrule: Anyone who values equality and champions human rights opposes inequality.\nconclusion: Colin opposes inequality.\n\nfact1: Colin believes in social justice.\nfact2: Colin does not mobilize social change.\nrule: If Colin believes in social justice, then he either organizes community events or mobilizes social change.\nconclusion: Colin organizes community events.\n\nfact1: Colin opposes inequality.\nfact2: Colin organizes community events.\nrule: If Colin opposes inequality, then he advocates for workers' rights and organizes community events.\nconclusion: Colin advocates for workers' rights.\n\nfact1: Colin supports socialism.\nfact2: Colin advocates for workers' rights.\nrule: If Colin supports socialism, then he either advocates for workers' rights or fights for affordable housing, but not both.\nconclusion: Colin does not fight for affordable housing.\n\nTherefore, it is true that Colin does not fight for affordable housing. The correct option is: A.",
    "context": "Colin is passionate about politics. Colin supports socialism. Anyone who values equality and champions human rights opposes inequality. If Muffinhead is a community leader, then he either empowers minorities or fights poverty, but not both. Nancy promotes fairness. Nancy champions human rights. If Colin is a community leader, then he either empowers minorities or fights poverty, but not both. If Colin believes in social justice, then he either organizes community events or mobilizes social change. If Colin supports socialism, then he either advocates for workers' rights or fights for affordable housing, but not both. Nancy is passionate about politics. If Colin is passionate about politics, then he either mobilizes social change or educates others on activism, but not both. Colin is a community leader. If Colin opposes inequality, then he advocates for workers' rights and organizes community events. Colin champions human rights. If Colin either helps the homeless or provides food aid (but not both), then he fights poverty. Colin believes in social justice. Colin does not empower minorities. Colin promotes fairness. Colin raises awareness or opposes inequality. Anyone who fights poverty or promotes fairness values equality. Colin educates others on activism. Nancy educates others on activism.",
    "nl2fol": {
      "Colin is passionate about politics.": "is_passionate_about_politics(Colin)",
      "Colin supports socialism.": "supports_socialism(Colin)",
      "Anyone who values equality and champions human rights opposes inequality.": "∀x ((values_equality(x) ∧ champions_human_rights(x)) → opposes_inequality(x))",
      "If Muffinhead is a community leader, then he either empowers minorities or fights poverty, but not both.": "is_community_leader(Muffinhead) → (empowers_minorities(Muffinhead) ⊕ fights_poverty(Muffinhead))",
      "Nancy promotes fairness.": "promotes_fairness(Nancy)",
      "Nancy champions human rights.": "champions_human_rights(Nancy)",
      "If Colin is a community leader, then he either empowers minorities or fights poverty, but not both.": "is_community_leader(Colin) → (empowers_minorities(Colin) ⊕ fights_poverty(Colin))",
      "If Colin believes in social justice, then he either organizes community events or mobilizes social change.": "believes_in_social_justice(Colin) → (organize_community_events(Colin) ∨ mobilize_social_change(Colin))",
      "If Colin supports socialism, then he either advocates for workers' rights or fights for affordable housing, but not both.": "supports_socialism(Colin) → (advocate_for_workers_rights(Colin) ⊕ fight_for_affordable_housing(Colin))",
      "Nancy is passionate about politics.": "is_passionate_about_politics(Nancy)",
      "If Colin is passionate about politics, then he either mobilizes social change or educates others on activism, but not both.": "is_passionate_about_politics(Colin) → (mobilize_social_change(Colin) ⊕ educates_others_on_activism(Colin))",
      "Colin is a community leader.": "is_community_leader(Colin)",
      "If Colin opposes inequality, then he advocates for workers' rights and organizes community events.": "opposes_inequality(Colin) → (advocate_for_workers_rights(Colin) ∧ organize_community_events(Colin))",
      "Colin champions human rights.": "champions_human_rights(Colin)",
      "If Colin either helps the homeless or provides food aid (but not both), then he fights poverty.": "(helps_the_homeless(Colin) ⊕ provides_food_aid(Colin)) → fights_poverty(Colin)",
      "Colin believes in social justice.": "believes_in_social_justice(Colin)",
      "Colin does not empower minorities.": "¬empowers_minorities(Colin)",
      "Colin promotes fairness.": "promotes_fairness(Colin)",
      "Colin raises awareness or opposes inequality.": "raises_awareness(Colin) ∨ opposes_inequality(Colin)",
      "Anyone who fights poverty or promotes fairness values equality.": "∀x ((fights_poverty(x) ∨ promotes_fairness(x)) → values_equality(x))",
      "Colin educates others on activism.": "educates_others_on_activism(Colin)",
      "Nancy educates others on activism.": "educates_others_on_activism(Nancy)"
    },
    "conclusion_fol": "¬fight_for_affordable_housing(Colin)"
  },
  {
    "id": 84,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emerson does not blend tradition with innovation.",
    "reasoning": "fact1: Emerson does not appreciate proportion.\nfact2: Emerson does not recognize beauty in things.\nrule: If Emerson either pursues elegance or appreciates proportion (but not both), then he recognizes beauty in things.\nconclusion: Emerson does not pursue elegance.\n\nfact1: Emerson does not focus on details.\nfact2: Emerson does not prioritize practicality.\nrule: If Emerson appreciates functionality, then he either focuses on details or prioritizes practicality (but not both).\nconclusion: Emerson does not appreciate functionality.\n\nfact1: Emerson does not pursue elegance.\nfact2: Emerson does not admire symmetry.\nrule: If Emerson either values aesthetics or pursues elegance (but not both), then he admires symmetry.\nconclusion: Emerson does not value aesthetics.\n\nfact1: Emerson does not value aesthetics.\nfact2: Emerson does not appreciate functionality.\nrule: If Emerson either values aesthetics or creates timeless designs (but not both), then he appreciates functionality.\nconclusion: Emerson does not create timeless designs.\n\nfact1: Emerson copies others.\nfact2: Emerson avoids experiments.\nrule: If Emerson lacks originality, then he either copies others or avoids experiments (but not both).\nconclusion: Emerson does not lack originality.\n\nfact1: Emerson does not lack originality.\nrule: If Emerson follows trends, then he will lack originality.\nconclusion: Emerson does not follow trends.\n\nfact1: Emerson does not follow trends.\nrule: Emerson either follows trends or is a respected architect, but not both.\nconclusion: Emerson is a respected architect.\n\nfact1: Emerson is a respected architect.\nfact2: Emerson does not create timeless designs.\nrule: For all humans, if someone is a respected architect, then they either create timeless designs or blend tradition with innovation (or both).\nconclusion: Emerson does not blend tradition with innovation.\n\nTherefore, it is false that Emerson does not blend tradition with innovation. The correct option is: B.",
    "context": "Joziah does not prioritize practicality. If Emerson is experienced, then he has creativity and follows trends. Emerson does not prioritize practicality. If Leila either values aesthetics or pursues elegance (but not both), then he admires symmetry. If someone imitates others and avoids risks, then they will lack originality. Adele does not focus on details. Emerson copies others. If Adele appreciates functionality, then he either focuses on details or prioritizes practicality (but not both). If Emerson appreciates functionality, then he either focuses on details or prioritizes practicality (but not both). Emerson does not recognize beauty in things. Emerson does not focus on details. If Emerson either pursues elegance or appreciates proportion (but not both), then he recognizes beauty in things. If Emerson either values aesthetics or pursues elegance (but not both), then he admires symmetry. Emerson either follows trends or is a respected architect, but not both. Joziah does not appreciate proportion. Emerson does not appreciate proportion. Emerson avoids experiments. If Emerson has cultural sensitivity, then he values historical context and creates timeless designs. If Emerson either values aesthetics or creates timeless designs (but not both), then he appreciates functionality. If Leila either values aesthetics or creates timeless designs (but not both), then he appreciates functionality. For all humans, if someone is a respected architect, then they either create timeless designs or blend tradition with innovation (or both). Emerson does not admire symmetry. If Leila lacks originality, then he either copies others or avoids experiments (but not both). If Leila either pursues elegance or appreciates proportion (but not both), then he recognizes beauty in things. If Joziah follows trends, then he will lack originality. If Emerson lacks originality, then he either copies others or avoids experiments (but not both). If Emerson follows trends, then he will lack originality.",
    "nl2fol": {
      "Joziah does not prioritize practicality.": "¬prioritize_practicality(Joziah)",
      "If Emerson is experienced, then he has creativity and follows trends.": "is_experienced(Emerson) → (has_creativity(Emerson) ∧ follows_trends(Emerson))",
      "Emerson does not prioritize practicality.": "¬prioritize_practicality(Emerson)",
      "If Leila either values aesthetics or pursues elegance (but not both), then he admires symmetry.": "(value_aesthetics(Leila) ⊕ pursue_elegance(Leila)) → admire_symmetry(Leila)",
      "If someone imitates others and avoids risks, then they will lack originality.": "∀x ((imitates_others(x) ∧ avoids_risks(x)) → lacks_originality(x))",
      "Adele does not focus on details.": "¬focus_on_details(Adele)",
      "Emerson copies others.": "copies_others(Emerson)",
      "If Adele appreciates functionality, then he either focuses on details or prioritizes practicality (but not both).": "appreciate_functionality(Adele) → (focus_on_details(Adele) ⊕ prioritize_practicality(Adele))",
      "If Emerson appreciates functionality, then he either focuses on details or prioritizes practicality (but not both).": "appreciate_functionality(Emerson) → (focus_on_details(Emerson) ⊕ prioritize_practicality(Emerson))",
      "Emerson does not recognize beauty in things.": "¬recognize_beauty(Emerson)",
      "Emerson does not focus on details.": "¬focus_on_details(Emerson)",
      "If Emerson either pursues elegance or appreciates proportion (but not both), then he recognizes beauty in things.": "(pursue_elegance(Emerson) ⊕ appreciate_proportion(Emerson)) → recognize_beauty(Emerson)",
      "If Emerson either values aesthetics or pursues elegance (but not both), then he admires symmetry.": "(value_aesthetics(Emerson) ⊕ pursue_elegance(Emerson)) → admire_symmetry(Emerson)",
      "Emerson either follows trends or is a respected architect, but not both.": "follows_trends(Emerson) ⊕ respected_architect(Emerson)",
      "Joziah does not appreciate proportion.": "¬appreciate_proportion(Joziah)",
      "Emerson does not appreciate proportion.": "¬appreciate_proportion(Emerson)",
      "Emerson avoids experiments.": "avoids_experiments(Emerson)",
      "If Emerson has cultural sensitivity, then he values historical context and creates timeless designs.": "has_cultural_sensitivity(Emerson) → (values_historical_context(Emerson) ∧ create_timeless_designs(Emerson))",
      "If Emerson either values aesthetics or creates timeless designs (but not both), then he appreciates functionality.": "(value_aesthetics(Emerson) ⊕ create_timeless_designs(Emerson)) → appreciate_functionality(Emerson)",
      "If Leila either values aesthetics or creates timeless designs (but not both), then he appreciates functionality.": "(value_aesthetics(Leila) ⊕ create_timeless_designs(Leila)) → appreciate_functionality(Leila)",
      "For all humans, if someone is a respected architect, then they either create timeless designs or blend tradition with innovation (or both).": "∀x (respected_architect(x) → (create_timeless_designs(x) ∨ blend_tradition_with_innovation(x)))",
      "Emerson does not admire symmetry.": "¬admire_symmetry(Emerson)",
      "If Leila lacks originality, then he either copies others or avoids experiments (but not both).": "lacks_originality(Leila) → (copies_others(Leila) ⊕ avoids_experiments(Leila))",
      "If Leila either pursues elegance or appreciates proportion (but not both), then he recognizes beauty in things.": "(pursue_elegance(Leila) ⊕ appreciate_proportion(Leila)) → recognize_beauty(Leila)",
      "If Joziah follows trends, then he will lack originality.": "follows_trends(Joziah) → lacks_originality(Joziah)",
      "If Emerson lacks originality, then he either copies others or avoids experiments (but not both).": "lacks_originality(Emerson) → (copies_others(Emerson) ⊕ avoids_experiments(Emerson))",
      "If Emerson follows trends, then he will lack originality.": "follows_trends(Emerson) → lacks_originality(Emerson)"
    },
    "conclusion_fol": "¬blend_tradition_with_innovation(Emerson)"
  },
  {
    "id": 85,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jase trains elite units.",
    "reasoning": "fact1: Jase meets challenges.\nfact2: Jase mentors others.\nrule: Anyone who meets challenges and mentors others can become experienced.\nconclusion: Jase is experienced.\n\nfact1: Jase is accountable.\nfact2: Jase acts with empathy.\nrule: If Jase is accountable, then he either makes tough decisions or acts with empathy, but not both.\nconclusion: Jase does not make tough decisions.\n\nfact1: Jase is experienced.\nfact2: Jase fosters teamwork.\nrule: If Jase is experienced, then he can either foster teamwork or inspire others, but not both.\nconclusion: Jase does not inspire others.\n\nfact1: Jase holds a high rank.\nfact2: Jase does not inspire others.\nrule: If Jase holds a high rank, then he can either lead by example or inspire others, but not both.\nconclusion: Jase leads by example.\n\nfact1: Jase does not make tough decisions.\nfact2: Jase prioritizes others.\nrule: If Jase either makes tough decisions or prioritizes others (but not both), then he is respected.\nconclusion: Jase is respected.\n\nfact1: Jase is respected.\nfact2: Jase leads by example.\nrule: If Jase is respected, then he can either train elite units or lead by example, but not both.\nconclusion: Jase does not train elite units.\n\nTherefore, it is false that Jase trains elite units. The correct option is: B.",
    "context": "Brody holds a high rank. Jase prioritizes others. Jase fosters teamwork. If Reece either makes tough decisions or prioritizes others (but not both), then he is respected. If Jase holds a high rank, then he can either lead by example or inspire others, but not both. Anyone who meets challenges and mentors others can become experienced. Jase meets challenges. If Jase either makes tough decisions or prioritizes others (but not both), then he is respected. Reece meets challenges. Harlem is accountable. Anyone who demonstrates integrity and puts others first is respected. Harlem acts with empathy. If Jase is experienced, then he can either foster teamwork or inspire others, but not both. Jase is accountable. Anyone who works hard or sets high standards can inspire others. If Jase is accountable, then he either makes tough decisions or acts with empathy, but not both. Jase mentors others. Jase holds a high rank. If Jase either takes charges or sets goals (but not both), then he makes tough decisions. Jase acts with empathy. If Reece is accountable, then he either makes tough decisions or acts with empathy, but not both. If Jase is respected, then he can either train elite units or lead by example, but not both.",
    "nl2fol": {
      "Brody holds a high rank.": "hold_high_rank(Brody)",
      "Jase prioritizes others.": "prioritizes_others(Jase)",
      "Jase fosters teamwork.": "fosters_teamwork(Jase)",
      "If Reece either makes tough decisions or prioritizes others (but not both), then he is respected.": "(makes_tough_decisions(Reece) ⊕ prioritizes_others(Reece)) → is_respected(Reece)",
      "If Jase holds a high rank, then he can either lead by example or inspire others, but not both.": "holds_high_rank(Jase) → (leads_by_example(Jase) ⊕ inspires_others(Jase))",
      "Anyone who meets challenges and mentors others can become experienced.": "∀x ((meets_challenges(x) ∧ mentors_others(x)) → is_experienced(x))",
      "Jase meets challenges.": "meets_challenges(Jase)",
      "If Jase either makes tough decisions or prioritizes others (but not both), then he is respected.": "(makes_tough_decisions(Jase) ⊕ prioritizes_others(Jase)) → is_respected(Jase)",
      "Reece meets challenges.": "meets_challenges(Reece)",
      "Harlem is accountable.": "is_accountable(Harlem)",
      "Anyone who demonstrates integrity and puts others first is respected.": "∀x ((demonstrates_integrity(x) ∧ puts_others_first(x)) → is_respected(x))",
      "Harlem acts with empathy.": "acts_with_empathy(Harlem)",
      "If Jase is experienced, then he can either foster teamwork or inspire others, but not both.": "is_experienced(Jase) → (fosters_teamwork(Jase) ⊕ inspires_others(Jase))",
      "Jase is accountable.": "is_accountable(Jase)",
      "Anyone who works hard or sets high standards can inspire others.": "∀x ((works_hard(x) ∨ sets_high_standards(x)) → inspires_others(x))",
      "If Jase is accountable, then he either makes tough decisions or acts with empathy, but not both.": "is_accountable(Jase) → (makes_tough_decisions(Jase) ⊕ acts_with_empathy(Jase))",
      "Jase mentors others.": "mentors_others(Jase)",
      "Jase holds a high rank.": "holds_high_rank(Jase)",
      "If Jase either takes charges or sets goals (but not both), then he makes tough decisions.": "(takes_charges(Jase) ⊕ sets_goals(Jase)) → makes_tough_decisions(Jase)",
      "Jase acts with empathy.": "acts_with_empathy(Jase)",
      "If Reece is accountable, then he either makes tough decisions or acts with empathy, but not both.": "is_accountable(Reece) → (makes_tough_decisions(Reece) ⊕ acts_with_empathy(Reece))",
      "If Jase is respected, then he can either train elite units or lead by example, but not both.": "is_respected(Jase) → (trains_elite_units(Jase) ⊕ leads_by_example(Jase))"
    },
    "conclusion_fol": "trains_elite_units(Jase)"
  },
  {
    "id": 86,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Forest can survive in harsh environments.",
    "reasoning": "fact1: Forest is intelligent.\nfact2: Forest has strong instincts.\nrule: If Forest is intelligent, then he is either agile or has strong instincts, but not both.\nconclusion: Forest is not agile.\n\nfact1: Forest lives in the rainforest.\nfact2: Forest does not have venom.\nrule: If Forest lives in the rainforest, then he is either carnivorous or venomous, but not both.\nconclusion: Forest is a carnivorous snake.\n\nfact1: Forest is a carnivorous snake.\nfact2: Forest is not camouflaged.\nrule: If Forest is a carnivorous snake, then he is either stealthy or camouflaged, but not both.\nconclusion: Forest has stealth.\n\nfact1: Forest has stealth.\nfact2: Forest is not agile.\nrule: Any snake that has stealth or is agile is adaptable.\nconclusion: Forest is adaptable.\n\nfact1: Forest has unique characteristics.\nrule: All snakes with unique characteristics attract scientific attention.\nconclusion: Forest attracts scientific attention.\n\nfact1: Forest is adaptable.\nfact2: Forest attracts scientific attention.\nrule: If Forest is adaptable, then he can survive in harsh environments and attract scientific attention.\nconclusion: Forest can survive in harsh environments.\n\nTherefore, it is true that Forest can survive in harsh environments. The correct option is: A.",
    "context": "Kendra has strong instincts. Anaya is not camouflaged. Forest lives in the rainforest. Forest has unique characteristics. Kendra does not have venom. If Kendra is intelligent, then he is either agile or has strong instincts, but not both. Forest does not have venom. If Kehlani is a carnivorous snake, then he is either stealthy or camouflaged, but not both. Any snake that has stealth or is agile is adaptable. Forest is not camouflaged. Forest is intelligent. Forest has strong instincts. All snakes with unique characteristics attract scientific attention. Kehlani lives in the rainforest. All snakes either move silently or have stealth. If Forest lives in the rainforest, then he is either carnivorous or venomous, but not both. Kehlani has unique characteristics. Kehlani is intelligent. If Forest is a carnivorous snake, then he is either stealthy or camouflaged, but not both. If Forest is intelligent, then he is either agile or has strong instincts, but not both. If Forest is adaptable, then he can survive in harsh environments and attract scientific attention. If Kehlani is adaptable, then he can survive in harsh environments and attract scientific attention.",
    "nl2fol": {
      "Kendra has strong instincts.": "has_strong_instincts(Kendra)",
      "Anaya is not camouflaged.": "¬is_camouflaged(Anaya)",
      "Forest lives in the rainforest.": "lives_in_rainforest(Forest)",
      "Forest has unique characteristics.": "unique_characteristics(Forest)",
      "Kendra does not have venom.": "¬has_venom(Kendra)",
      "If Kendra is intelligent, then he is either agile or has strong instincts, but not both.": "is_intelligent(Kendra) → (has_strong_instincts(Kendra) ⊕ is_agile(Kendra))",
      "Forest does not have venom.": "¬has_venom(Forest)",
      "If Kehlani is a carnivorous snake, then he is either stealthy or camouflaged, but not both.": "is_carnivorous(Kehlani) → (has_stealth(Kehlani) ⊕ is_camouflaged(Kehlani))",
      "Any snake that has stealth or is agile is adaptable.": "∀x ((has_stealth(x) ∨ is_agile(x)) → adaptable(x))",
      "Forest is not camouflaged.": "¬is_camouflaged(Forest)",
      "Forest is intelligent.": "is_intelligent(Forest)",
      "Forest has strong instincts.": "has_strong_instincts(Forest)",
      "All snakes with unique characteristics attract scientific attention.": "∀x (unique_characteristics(x) → attract_scientific_attention(x))",
      "Kehlani lives in the rainforest.": "lives_in_rainforest(Kehlani)",
      "All snakes either move silently or have stealth.": "∀x (moves_silently(x) ∨ has_stealth(x))",
      "If Forest lives in the rainforest, then he is either carnivorous or venomous, but not both.": "lives_in_rainforest(Forest) → (is_carnivorous(Forest) ⊕ has_venom(Forest))",
      "Kehlani has unique characteristics.": "unique_characteristics(Kehlani)",
      "Kehlani is intelligent.": "is_intelligent(Kehlani)",
      "If Forest is a carnivorous snake, then he is either stealthy or camouflaged, but not both.": "is_carnivorous(Forest) → (has_stealth(Forest) ⊕ is_camouflaged(Forest))",
      "If Forest is intelligent, then he is either agile or has strong instincts, but not both.": "is_intelligent(Forest) → (has_strong_instincts(Forest) ⊕ is_agile(Forest))",
      "If Forest is adaptable, then he can survive in harsh environments and attract scientific attention.": "adaptable(Forest) → (survive_in_harsh_environment(Forest) ∧ attract_scientific_attention(Forest))",
      "If Kehlani is adaptable, then he can survive in harsh environments and attract scientific attention.": "adaptable(Kehlani) → (survive_in_harsh_environment(Kehlani) ∧ attract_scientific_attention(Kehlani))"
    },
    "conclusion_fol": "survive_in_harsh_environment(Forest)"
  },
  {
    "id": 87,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cairo lives in water.",
    "reasoning": "fact1: Cairo is agile.\nfact2: Cairo does not jump a long distance.\nrule: If Cairo is agile, then he either swims efficiently or jumps a long distance (but not both).\nconclusion: Cairo swims efficiently.\n\nfact1: Cairo lives in a damp environment.\nfact2: Cairo hides in vegetation.\nrule: All frogs that live in damp environments either hide in vegetation or burrow into soil.\nconclusion: Cairo does not burrow into soil.\n\nfact1: Cairo does not burrow into soil.\nrule: Cairo burrows into soil or hibernates underground.\nconclusion: Cairo hibernates underground.\n\nfact1: Cairo swims efficiently.\nrule: All frogs that swim efficiently have webbed feet.\nconclusion: Cairo has webbed feet.\n\nfact1: Cairo has webbed feet.\nfact2: Cairo hibernates underground.\nrule: If Cairo has webbed feet, then he either hibernates underground or breathes air, but not both.\nconclusion: Cairo does not breathe air.\n\nfact1: Cairo does not breathe air.\nfact2: Cairo inhabits forests.\nrule: If Cairo either breathes air or inhabits forests (but not both), then he lives on land.\nconclusion: Cairo lives on land.\n\nfact1: Cairo lives on land.\nrule: Either Cairo lives on land or lives in water, but not both.\nconclusion: Cairo does not live in water.\n\nTherefore, it is false that Cairo lives in water. The correct option is: B.",
    "context": "Ariana hides in vegetation. All frogs that live in damp environments either hide in vegetation or burrow into soil. Cairo inhabits forests. If Cairo is a small-sized frog, then he lives on land and eats insects. Cairo does not jump a long distance. Ariana is agile. If Cairo is agile, then he either swims efficiently or jumps a long distance (but not both). Cairo burrows into soil or hibernates underground. Cairo hides in vegetation. If Cairo either breathes air or inhabits forests (but not both), then he lives on land. Cairo is agile. If Cairo has webbed feet, then he either hibernates underground or breathes air, but not both. All frogs that swim efficiently have webbed feet. If Cairo either has powerful legs or uses stream current (but not both), then he can swim efficiently. Cairo lives in a damp environment. If Ariana is agile, then he either swims efficiently or jumps a long distance (but not both). Either Cairo lives on land or lives in water, but not both. If Cairo is small, then he hibernates underground and eats insects. If Galilea has webbed feet, then he either hibernates underground or breathes air, but not both.",
    "nl2fol": {
      "Ariana hides in vegetation.": "hide_in_vegetation(Ariana)",
      "All frogs that live in damp environments either hide in vegetation or burrow into soil.": "∀x (live_in_damp_env(x) → (hide_in_vegetation(x) ⊕ burrow_soil(x)))",
      "Cairo inhabits forests.": "inhabit_forests(Cairo)",
      "If Cairo is a small-sized frog, then he lives on land and eats insects.": "small_size(Cairo) → (live_on_land(Cairo) ∧ eat_insects(Cairo))",
      "Cairo does not jump a long distance.": "¬jump_long_distance(Cairo)",
      "Ariana is agile.": "is_agile(Ariana)",
      "If Cairo is agile, then he either swims efficiently or jumps a long distance (but not both).": "is_agile(Cairo) → (swim_efficiently(Cairo) ⊕ jump_long_distance(Cairo))",
      "Cairo burrows into soil or hibernates underground.": "burrow_soil(Cairo) ∨ hibernate_underground(Cairo)",
      "Cairo hides in vegetation.": "hide_in_vegetation(Cairo)",
      "If Cairo either breathes air or inhabits forests (but not both), then he lives on land.": "(breathe_air(Cairo) ⊕ inhabit_forests(Cairo)) → live_on_land(Cairo)",
      "Cairo is agile.": "is_agile(Cairo)",
      "If Cairo has webbed feet, then he either hibernates underground or breathes air, but not both.": "have_webbed_feet(Cairo) → (hibernate_underground(Cairo) ⊕ breathe_air(Cairo))",
      "All frogs that swim efficiently have webbed feet.": "∀x (swim_efficiently(x) → have_webbed_feet(x))",
      "If Cairo either has powerful legs or uses stream current (but not both), then he can swim efficiently.": "(has_powerful_legs(Cairo) ⊕ use_stream_current(Cairo)) → swim_efficiently(Cairo)",
      "Cairo lives in a damp environment.": "live_in_damp_env(Cairo)",
      "If Ariana is agile, then he either swims efficiently or jumps a long distance (but not both).": "is_agile(Ariana) → (swim_efficiently(Ariana) ⊕ jump_long_distance(Ariana))",
      "Either Cairo lives on land or lives in water, but not both.": "live_on_land(Cairo) ⊕ live_in_water(Cairo)",
      "If Cairo is small, then he hibernates underground and eats insects.": "are_small(Cairo) → (hibernate_underground(Cairo) ∧ eat_insects(Cairo))",
      "If Galilea has webbed feet, then he either hibernates underground or breathes air, but not both.": "have_webbed_feet(Galilea) → (hibernate_underground(Galilea) ⊕ breathe_air(Galilea))"
    },
    "conclusion_fol": "live_in_water(Cairo)"
  },
  {
    "id": 88,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Goobers is well-hydrated.",
    "reasoning": "fact1: Goobers does not lose balance.\nfact2: Goobers gets injured.\nrule: If a camel stumbles frequently, then it loses balance and gets injured.\nconclusion: Goobers does not stumble frequently.\n\nfact1: Goobers carries a heavy load.\nfact2: Goobers does not stumble frequently.\nrule: If Goobers carries a heavy load, then he either stumbles frequently or feels exhausted (or both).\nconclusion: Goobers feels exhausted.\n\nfact1: Goobers feels exhausted.\nfact2: Goobers walks briskly.\nrule: If Goobers feels exhausted, then he either rests in the shade or walks briskly, but not both.\nconclusion: Goobers does not rest in the shade.\n\nfact1: Goobers does not rest in the shade.\nrule: Goobers either rests in the shade or traverses dunes, but not both at the same time.\nconclusion: Goobers traverses dunes.\n\nfact1: Goobers does not have strong legs.\nrule: All camels that find an oasis have strong legs and endurance.\nconclusion: Goobers does not find an oasis.\n\nfact1: Goobers traverses dunes.\nfact2: Goobers does not reach water.\nrule: If Goobers traverses dunes, then he either crosses the desert or reaches water.\nconclusion: Goobers crosses the desert.\n\nfact1: Goobers crosses the desert.\nfact2: Goobers does not find an oasis.\nrule: Every camel that crosses the desert is either thirsty or finds an oasis.\nconclusion: Goobers is thirsty.\n\nfact1: Goobers is thirsty.\nrule: For every camel, it is either thirsty or well-hydrated, but not both.\nconclusion: Goobers is well-hydrated.\n\nTherefore, it is false that Goobers is well-hydrated. The correct option is: B.",
    "context": "For all camels, if they have a dry mouth and feel weak, then they are thirsty. If Goobers carries a heavy load, then he either stumbles frequently or feels exhausted (or both). Goobers does not reach water. Goobers does not have strong legs. If a camel stumbles frequently, then it loses balance and gets injured. For every camel, it is either thirsty or well-hydrated, but not both. If Goobers feels exhausted, then he either rests in the shade or walks briskly, but not both. Every camel that crosses the desert is either thirsty or finds an oasis. Goobers does not lose balance. Goobers gets injured. Goobers carries a heavy load. Goobers either rests in the shade or traverses dunes, but not both at the same time. All camels that have owners are able to carry loads and traverse dunes. If Goobers traverses dunes, then he either crosses the desert or reaches water. Goobers walks briskly. All camels that find an oasis have strong legs and endurance. Blossom does not lose balance.",
    "nl2fol": {
      "For all camels, if they have a dry mouth and feel weak, then they are thirsty.": "∀x ((has_dry_mouth(x) ∧ feels_weak(x)) → thirsty(x))",
      "If Goobers carries a heavy load, then he either stumbles frequently or feels exhausted (or both).": "carries_heavy_load(Goobers) → (stumble_frequently(Goobers) ∨ feels_exhausted(Goobers))",
      "Goobers does not reach water.": "¬reach_water(Goobers)",
      "Goobers does not have strong legs.": "¬strong_legs(Goobers)",
      "If a camel stumbles frequently, then it loses balance and gets injured.": "∀x (stumble_frequently(x) → (lose_balance(x) ∧ get_injured(x)))",
      "For every camel, it is either thirsty or well-hydrated, but not both.": "∀x (thirsty(x) ⊕ well_hydrated(x))",
      "If Goobers feels exhausted, then he either rests in the shade or walks briskly, but not both.": "feels_exhausted(Goobers) → (rest_in_shade(Goobers) ⊕ walks_briskly(Goobers))",
      "Every camel that crosses the desert is either thirsty or finds an oasis.": "∀x (cross_desert(x) → (thirsty(x) ∨ find_oasis(x)))",
      "Goobers does not lose balance.": "¬lose_balance(Goobers)",
      "Goobers gets injured.": "get_injured(Goobers)",
      "Goobers carries a heavy load.": "carries_heavy_load(Goobers)",
      "Goobers either rests in the shade or traverses dunes, but not both at the same time.": "rest_in_shade(Goobers) ⊕ traverse_dunes(Goobers)",
      "All camels that have owners are able to carry loads and traverse dunes.": "∀x (has_owner(x) → (carry_loads(x) ∧ traverse_dunes(x)))",
      "If Goobers traverses dunes, then he either crosses the desert or reaches water.": "traverse_dunes(Goobers) → (cross_desert(Goobers) ∨ reach_water(Goobers))",
      "Goobers walks briskly.": "walks_briskly(Goobers)",
      "All camels that find an oasis have strong legs and endurance.": "∀x (find_oasis(x) → (strong_legs(x) ∧ endurance(x)))",
      "Blossom does not lose balance.": "¬lose_balance(Blossom)"
    },
    "conclusion_fol": "well_hydrated(Goobers)"
  },
  {
    "id": 89,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Wesson is not respected by peers.",
    "reasoning": "fact1: Wesson prioritizes his family life.\nrule: Wesson either works tirelessly or prioritizes his family life, but not both.\nconclusion: Wesson does not work tirelessly.\n\nfact1: Wesson does not work tirelessly.\nrule: Wesson is well-respected or works tirelessly.\nconclusion: Wesson is well-respected.\n\nfact1: Wesson is well-respected.\nfact2: Wesson does not help others unconditionally.\nrule: If Wesson is well-respected, then he either performs selfless acts or helps others unconditionally, but not both.\nconclusion: Wesson performs selfless acts.\n\nfact1: Wesson stays under the radar.\nrule: Wesson either makes a groundbreaking discovery or stays under the radar, but not both.\nconclusion: Wesson does not make a groundbreaking discovery.\n\nfact1: Wesson has a noble character.\nfact2: Wesson performs selfless acts.\nrule: If Wesson has a noble character, then he is either considered a hero or performs selfless acts, but not both.\nconclusion: Wesson is not considered a hero.\n\nfact1: Wesson is not considered a hero.\nrule: If Wesson is recognized by governments or respected by peers, then he is considered a hero.\nconclusion: Wesson is not respected by peers.\n\nTherefore, it is true that Wesson is not respected by peers. The correct option is: A.",
    "context": "If Wesson has a noble character, then he is either considered a hero or performs selfless acts, but not both. Wesson prioritizes his family life. Wesson stays under the radar. Wesson either works tirelessly or prioritizes his family life, but not both. If Wesson is well-respected, then he either performs selfless acts or helps others unconditionally, but not both. If someone has strong convictions, then they perform selfless acts and stand up for others. Wesson does not help others unconditionally. Wesson either makes a groundbreaking discovery or stays under the radar, but not both. If Wesson either meets deadlines or contributes freely (but not both), then he works tirelessly. If Wesson is recognized by governments or respected by peers, then he is considered a hero. Wesson has a noble character. Wesson is well-respected or works tirelessly. If Wesson saves lives, then he demonstrates bravery and is recognized by governments.",
    "nl2fol": {
      "If Wesson has a noble character, then he is either considered a hero or performs selfless acts, but not both.": "has_noble_character(Wesson) → (performs_selfless_acts(Wesson) ⊕ considered_a_hero(Wesson))",
      "Wesson prioritizes his family life.": "prioritizes_family_life(Wesson)",
      "Wesson stays under the radar.": "stays_under_the_radar(Wesson)",
      "Wesson either works tirelessly or prioritizes his family life, but not both.": "works_tirelessly(Wesson) ⊕ prioritizes_family_life(Wesson)",
      "If Wesson is well-respected, then he either performs selfless acts or helps others unconditionally, but not both.": "is_well_respected(Wesson) → (performs_selfless_acts(Wesson) ⊕ helps_others_unconditionally(Wesson))",
      "If someone has strong convictions, then they perform selfless acts and stand up for others.": "∀x (has_strong_convictions(x) → (performs_selfless_acts(x) ∧ stands_up_for_others(x)))",
      "Wesson does not help others unconditionally.": "¬helps_others_unconditionally(Wesson)",
      "Wesson either makes a groundbreaking discovery or stays under the radar, but not both.": "stays_under_the_radar(Wesson) ⊕ makes_groundbreaking_discovery(Wesson)",
      "If Wesson either meets deadlines or contributes freely (but not both), then he works tirelessly.": "(meets_deadlines(Wesson) ⊕ contributes_freely(Wesson)) → works_tirelessly(Wesson)",
      "If Wesson is recognized by governments or respected by peers, then he is considered a hero.": "(recognized_by_governments(Wesson) ∨ respected_by_peers(Wesson)) → considered_a_hero(Wesson)",
      "Wesson has a noble character.": "has_noble_character(Wesson)",
      "Wesson is well-respected or works tirelessly.": "is_well_respected(Wesson) ∨ works_tirelessly(Wesson)",
      "If Wesson saves lives, then he demonstrates bravery and is recognized by governments.": "saves_lives(Wesson) → (demonstrates_bravery(Wesson) ∧ recognized_by_governments(Wesson))"
    },
    "conclusion_fol": "¬respected_by_peers(Wesson)"
  },
  {
    "id": 90,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Atharv follows his passion.",
    "reasoning": "fact1: Atharv sets goals.\nfact2: Atharv does not make progress.\nrule: Everyone who sets goals either makes progress or works hard (or both).\nconclusion: Atharv works hard.\n\nfact1: Atharv works hard.\nfact2: Atharv does not become an expert.\nrule: If Atharv works hard, then he either achieves success or becomes an expert (but not both).\nconclusion: Atharv achieves success.\n\nfact1: Atharv cares about his community.\nfact2: Atharv does not feel content.\nrule: If someone cares about their community and makes people smile, then they feel content.\nconclusion: Atharv does not make people smile.\n\nfact1: Atharv takes risks.\nfact2: Atharv does not become influential.\nrule: If Atharv takes risks, then he either gains recognition or becomes influential, but not both.\nconclusion: Atharv gains recognition.\n\nfact1: Atharv achieves success.\nfact2: Atharv gains recognition.\nrule: If Atharv develops unique skills, then he either achieves success or gains recognition (but not both).\nconclusion: Atharv does not develop unique skills.\n\nfact1: Atharv does not make people smile.\nfact2: Atharv does not live a fulfilling life.\nrule: If Atharv either makes people smile or brings joy to others (but not both), then he lives a fulfilling life.\nconclusion: Atharv does not bring joy to others.\n\nfact1: Atharv does not develop unique skills.\nfact2: Atharv does not bring joy to others.\nrule: For all humans, if someone follows their passion, then they will develop unique skills and bring joy to others.\nconclusion: Atharv follows his passion.\n\nTherefore, it is false that Atharv follows his passion. The correct option is: B.",
    "context": "If Atharv works hard, then he either achieves success or becomes an expert (but not both). Atharv does not feel content. If Atharv has creative talent, then he either brings joy to others or makes a difference (but not both). Atharv sets goals. Atharv does not make progress. Atharv takes risks. Atharv does not live a fulfilling life. Everyone who sets goals either makes progress or works hard (or both). For all humans, if someone follows their passion, then they will develop unique skills and bring joy to others. If Atharv either makes people smile or brings joy to others (but not both), then he lives a fulfilling life. Atharv does not become influential. If someone cares about their community and makes people smile, then they feel content. Atharv cares about his community. Atharv does not become an expert. If Atharv takes risks, then he either gains recognition or becomes influential, but not both. If Atharv develops unique skills, then he either achieves success or gains recognition (but not both).",
    "nl2fol": {
      "If Atharv works hard, then he either achieves success or becomes an expert (but not both).": "works_hard(Atharv) → (becomes_expert(Atharv) ⊕ achieve_success(Atharv))",
      "Atharv does not feel content.": "¬feels_content(Atharv)",
      "If Atharv has creative talent, then he either brings joy to others or makes a difference (but not both).": "has_creative_talent(Atharv) → (bring_joy_to_others(Atharv) ⊕ makes_a_difference(Atharv))",
      "Atharv sets goals.": "sets_goals(Atharv)",
      "Atharv does not make progress.": "¬makes_progress(Atharv)",
      "Atharv takes risks.": "takes_risks(Atharv)",
      "Atharv does not live a fulfilling life.": "¬live_fulfilling_life(Atharv)",
      "Everyone who sets goals either makes progress or works hard (or both).": "∀x (sets_goals(x) → (makes_progress(x) ∨ works_hard(x)))",
      "For all humans, if someone follows their passion, then they will develop unique skills and bring joy to others.": "∀x (follow_passion(x) → (develop_unique_skills(x) ∧ bring_joy_to_others(x)))",
      "If Atharv either makes people smile or brings joy to others (but not both), then he lives a fulfilling life.": "(make_people_smile(Atharv) ⊕ bring_joy_to_others(Atharv)) → live_fulfilling_life(Atharv)",
      "Atharv does not become influential.": "¬becomes_influential(Atharv)",
      "If someone cares about their community and makes people smile, then they feel content.": "∀x ((cares_about_community(x) ∧ make_people_smile(x)) → feels_content(x))",
      "Atharv cares about his community.": "cares_about_community(Atharv)",
      "Atharv does not become an expert.": "¬becomes_expert(Atharv)",
      "If Atharv takes risks, then he either gains recognition or becomes influential, but not both.": "takes_risks(Atharv) → (gain_recognition(Atharv) ⊕ becomes_influential(Atharv))",
      "If Atharv develops unique skills, then he either achieves success or gains recognition (but not both).": "develop_unique_skills(Atharv) → (achieve_success(Atharv) ⊕ gain_recognition(Atharv))"
    },
    "conclusion_fol": "follow_passion(Atharv)"
  },
  {
    "id": 91,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jenna cannot focus on her art.",
    "reasoning": "fact1: Jenna does not pursue a career.\nrule: Jenna either pursues a career or has hobbies, but not both.\nconclusion: Jenna has hobbies.\n\nfact1: Jenna has hobbies.\nfact2: Jenna volunteers regularly.\nrule: If Jenna has hobbies, then she either joins clubs or volunteers regularly (but not both).\nconclusion: Jenna does not join clubs.\n\nfact1: Jenna does not read books.\nrule: Jenna reads books or attends parties.\nconclusion: Jenna attends parties.\n\nfact1: Jenna attends parties.\nfact2: Jenna does not join clubs.\nrule: If Jenna either attends parties or joins clubs (but not both), then she is socially active.\nconclusion: Jenna is socially active.\n\nfact1: Jenna is socially active.\nrule: Jenna either has a private space or is socially active, but not both.\nconclusion: Jenna does not have a private space.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Jenna cannot focus on her art. The correct option is: C.",
    "context": "Jenna either enjoys solo activities or attends parties. Jenna either has a private space or is socially active, but not both. Jenna does not read books. If Jenna has hobbies, then she either joins clubs or volunteers regularly (but not both). Jenna reads books or attends parties. If someone lives alone and values solitude, then they can have a private space. Jenna either pursues a career or has hobbies, but not both. Everyone who enjoys leisure either travels frequently or has hobbies (or both). Jenna volunteers regularly. Jenna does not pursue a career. If Jenna either attends parties or joins clubs (but not both), then she is socially active.",
    "nl2fol": {
      "Jenna either enjoys solo activities or attends parties.": "enjoys_solo_activities(Jenna) ∨ attends_parties(Jenna)",
      "Jenna either has a private space or is socially active, but not both.": "is_socially_active(Jenna) ⊕ has_private_space(Jenna)",
      "Jenna does not read books.": "¬reads_books(Jenna)",
      "If Jenna has hobbies, then she either joins clubs or volunteers regularly (but not both).": "has_hobbies(Jenna) → (joins_clubs(Jenna) ⊕ volunteers_regularly(Jenna))",
      "Jenna reads books or attends parties.": "reads_books(Jenna) ∨ attends_parties(Jenna)",
      "If someone lives alone and values solitude, then they can have a private space.": "∀x ((lives_alone(x) ∧ values_solitude(x)) → has_private_space(x))",
      "Jenna either pursues a career or has hobbies, but not both.": "pursues_career(Jenna) ⊕ has_hobbies(Jenna)",
      "Everyone who enjoys leisure either travels frequently or has hobbies (or both).": "∀x (enjoys_leisure(x) → (travels_frequently(x) ∨ has_hobbies(x)))",
      "Jenna volunteers regularly.": "volunteers_regularly(Jenna)",
      "Jenna does not pursue a career.": "¬pursues_career(Jenna)",
      "If Jenna either attends parties or joins clubs (but not both), then she is socially active.": "(attends_parties(Jenna) ⊕ joins_clubs(Jenna)) → is_socially_active(Jenna)"
    },
    "conclusion_fol": "¬can_focus_on_art(Jenna)"
  },
  {
    "id": 92,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rio is ridiculed by others.",
    "reasoning": "fact1: Rio does not prioritize leisure.\nrule: Rio either prioritizes leisure or works diligently, but not both.\nconclusion: Rio works diligently.\n\nfact1: Rio holds patents.\nfact2: Rio builds prototypes.\nrule: If Rio holds patents, then he either builds prototypes or creates useful innovations, but not both.\nconclusion: Rio does not create useful innovations.\n\nfact1: Rio is passionate.\nrule: If Rio is passionate, then he thinks creatively and makes groundbreaking discoveries.\nconclusion: Rio makes groundbreaking discoveries.\n\nfact1: Rio makes groundbreaking discoveries.\nfact2: Rio does not create useful innovations.\nrule: If Rio either makes groundbreaking discoveries or creates useful innovations (but not both), then he is applauded by others.\nconclusion: Rio is applauded by others.\n\nfact1: Rio is applauded by others.\nrule: Either Rio is applauded by others or he is ridiculed by others, but not both.\nconclusion: Rio is not ridiculed by others.\n\nTherefore, it is false that Rio is ridiculed by others. The correct option is: B.",
    "context": "Rio builds prototypes. Rio either prioritizes leisure or works diligently, but not both. Rio is passionate. If Rio holds patents, then he either builds prototypes or creates useful innovations, but not both. Either Rio is applauded by others or he is ridiculed by others, but not both. If Rio is passionate, then he thinks creatively and makes groundbreaking discoveries. If Rio either makes groundbreaking discoveries or creates useful innovations (but not both), then he is applauded by others. Rio holds patents. Rio does not prioritize leisure.",
    "nl2fol": {
      "Rio builds prototypes.": "builds_prototypes(Rio)",
      "Rio either prioritizes leisure or works diligently, but not both.": "prioritizes_leisure(Rio) ⊕ works_diligently(Rio)",
      "Rio is passionate.": "passionate(Rio)",
      "If Rio holds patents, then he either builds prototypes or creates useful innovations, but not both.": "holds_patents(Rio) → (builds_prototypes(Rio) ⊕ creates_useful_innovations(Rio))",
      "Either Rio is applauded by others or he is ridiculed by others, but not both.": "applauded_by_others(Rio) ⊕ ridiculed_by_others(Rio)",
      "If Rio is passionate, then he thinks creatively and makes groundbreaking discoveries.": "passionate(Rio) → (thinks_creatively(Rio) ∧ makes_groundbreaking_discoveries(Rio))",
      "If Rio either makes groundbreaking discoveries or creates useful innovations (but not both), then he is applauded by others.": "(makes_groundbreaking_discoveries(Rio) ⊕ creates_useful_innovations(Rio)) → applauded_by_others(Rio)",
      "Rio holds patents.": "holds_patents(Rio)",
      "Rio does not prioritize leisure.": "¬prioritizes_leisure(Rio)"
    },
    "conclusion_fol": "ridiculed_by_others(Rio)"
  },
  {
    "id": 93,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Beckham does not create works of art.",
    "reasoning": "fact1: Beckham dyes fabrics.\nfact2: Beckham stitches cloth.\nrule: If Beckham uses leather, then he either dyes fabrics or stitches cloth (but not both).\nconclusion: Beckham does not use leather.\n\nfact1: Beckham restores furniture.\nfact2: Beckham does not use leather.\nrule: If Beckham restores furniture, then he either uses leather or works with wood (or both).\nconclusion: Beckham works with wood.\n\nfact1: Beckham embraces innovation.\nrule: Beckham either values tradition or embraces innovation, but not both.\nconclusion: Beckham does not value tradition.\n\nfact1: Beckham does not value tradition.\nrule: If someone preserves heritage, then they value tradition.\nconclusion: Beckham does not preserve heritage.\n\nfact1: Beckham works with wood.\nrule: Beckham either works with wood or makes modern furniture, but not both.\nconclusion: Beckham does not make modern furniture.\n\nfact1: Beckham uses original techniques.\nfact2: Beckham does not preserve heritage.\nrule: If someone restores antiques and uses original techniques, then they preserve heritage.\nconclusion: Beckham does not restore antiques.\n\nfact1: Beckham does not make modern furniture.\nrule: Beckham is either a skilled upholsterer or makes modern furniture, but not both.\nconclusion: Beckham is a skilled upholsterer.\n\nfact1: Beckham is a skilled upholsterer.\nfact2: Beckham does not restore antiques.\nrule: If Beckham is a skilled upholsterer, then he either restores antiques or creates works of art (or both).\nconclusion: Beckham does not create works of art.\n\nTherefore, it is false that Beckham does not create works of art. The correct option is: B.",
    "context": "Beckham either crafts metal or works with wood. If Beckham honors his family, then he appreciates history and values tradition. Cielo embraces innovation. Beckham uses original techniques. If Dewdrop restores furniture, then he either uses leather or works with wood (or both). Dewdrop uses original techniques. Beckham either works with wood or makes modern furniture, but not both. Maya stitches cloth. If Beckham restores furniture, then he either uses leather or works with wood (or both). Beckham either values tradition or embraces innovation, but not both. If Beckham is a skilled upholsterer, then he either restores antiques or creates works of art (or both). Beckham works with fabrics or uses leather. If Beckham appreciates craftsmanship, then he preserves heritage and is passionate about design. If Beckham uses leather, then he either dyes fabrics or stitches cloth (but not both). Beckham restores furniture. If someone restores antiques and uses original techniques, then they preserve heritage. Beckham embraces innovation. Beckham is either a skilled upholsterer or makes modern furniture, but not both. Beckham stitches cloth. If someone preserves heritage, then they value tradition. Cielo either works with wood or makes modern furniture, but not both. Beckham dyes fabrics.",
    "nl2fol": {
      "Beckham either crafts metal or works with wood.": "crafts_metal(Beckham) ∨ works_with_wood(Beckham)",
      "If Beckham honors his family, then he appreciates history and values tradition.": "honors_family(Beckham) → (appreciates_history(Beckham) ∧ values_tradition(Beckham))",
      "Cielo embraces innovation.": "embraces_innovation(Cielo)",
      "Beckham uses original techniques.": "uses_original_techniques(Beckham)",
      "If Dewdrop restores furniture, then he either uses leather or works with wood (or both).": "restores_furniture(Dewdrop) → (uses_leather(Dewdrop) ∨ works_with_wood(Dewdrop))",
      "Dewdrop uses original techniques.": "uses_original_techniques(Dewdrop)",
      "Beckham either works with wood or makes modern furniture, but not both.": "works_with_wood(Beckham) ⊕ makes_modern_furniture(Beckham)",
      "Maya stitches cloth.": "stitches_cloth(Maya)",
      "If Beckham restores furniture, then he either uses leather or works with wood (or both).": "restores_furniture(Beckham) → (uses_leather(Beckham) ∨ works_with_wood(Beckham))",
      "Beckham either values tradition or embraces innovation, but not both.": "embraces_innovation(Beckham) ⊕ values_tradition(Beckham)",
      "If Beckham is a skilled upholsterer, then he either restores antiques or creates works of art (or both).": "skilled_upholsterer(Beckham) → (restore_antiques(Beckham) ∨ create_works_of_art(Beckham))",
      "Beckham works with fabrics or uses leather.": "works_with_fabrics(Beckham) ∨ uses_leather(Beckham)",
      "If Beckham appreciates craftsmanship, then he preserves heritage and is passionate about design.": "appreciate_craftsmanship(Beckham) → (preserves_heritage(Beckham) ∧ passionate_about_design(Beckham))",
      "If Beckham uses leather, then he either dyes fabrics or stitches cloth (but not both).": "uses_leather(Beckham) → (dyes_fabrics(Beckham) ⊕ stitches_cloth(Beckham))",
      "Beckham restores furniture.": "restores_furniture(Beckham)",
      "If someone restores antiques and uses original techniques, then they preserve heritage.": "∀x ((restore_antiques(x) ∧ uses_original_techniques(x)) → preserves_heritage(x))",
      "Beckham embraces innovation.": "embraces_innovation(Beckham)",
      "Beckham is either a skilled upholsterer or makes modern furniture, but not both.": "skilled_upholsterer(Beckham) ⊕ makes_modern_furniture(Beckham)",
      "Beckham stitches cloth.": "stitches_cloth(Beckham)",
      "If someone preserves heritage, then they value tradition.": "∀x (preserves_heritage(x) → values_tradition(x))",
      "Cielo either works with wood or makes modern furniture, but not both.": "works_with_wood(Cielo) ⊕ makes_modern_furniture(Cielo)",
      "Beckham dyes fabrics.": "dyes_fabrics(Beckham)"
    },
    "conclusion_fol": "¬create_works_of_art(Beckham)"
  },
  {
    "id": 94,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rio is successful.",
    "reasoning": "fact1: Rio is not someone who takes risks.\nrule: For Rio, she is either a practical thinker or someone who takes risks, but not both.\nconclusion: Rio is a practical thinker.\n\nfact1: Rio is a public figure.\nfact2: Rio enjoys socializing.\nrule: If Rio is a public figure, then she either enjoys socializing or values her privacy, but not both.\nconclusion: Rio does not value her privacy.\n\nfact1: Rio does not value her privacy.\nrule: Rio either values her privacy or is passionate about cultivating rare fruits, but not both.\nconclusion: Rio is passionate.\n\nfact1: Rio is a practical thinker.\nrule: Rio is either a practical thinker or a visionary, but not both.\nconclusion: Rio is not visionary.\n\nfact1: Rio is a fruit farmer.\nfact2: Rio is not visionary.\nrule: If Rio is a fruit farmer, then she is either down-to-earth or visionary, but not both.\nconclusion: Rio is down-to-earth.\n\nfact1: Rio is down-to-earth.\nrule: Rio is either down-to-earth or inspirational, but not both.\nconclusion: Rio is not inspirational.\n\nfact1: Rio is passionate.\nfact2: Rio is not inspirational.\nrule: If Rio is passionate, then she is either successful or inspirational, but not both.\nconclusion: Rio is successful.\n\nTherefore, it is true that Rio is successful. The correct option is: A.",
    "context": "If Rio is passionate, then she is either successful or inspirational, but not both. If Mara is a fruit farmer, then she is either down-to-earth or visionary, but not both. Rio is either down-to-earth or inspirational, but not both. Rio either has common sense or is visionary. Rio enjoys socializing. If Mara is passionate, then she is either successful or inspirational, but not both. Ayleen is not someone who takes risks. For Rio, she is either a practical thinker or someone who takes risks, but not both. Rio is either a practical thinker or a visionary, but not both. Rio is a fruit farmer. Mara is either a practical thinker or a visionary, but not both. Rio is a public figure. Anyone who follows their dreams and helps others can be inspirational. Kobe is either down-to-earth or inspirational, but not both. Rio is determined or passionate. If Rio is a fruit farmer, then she is either down-to-earth or visionary, but not both. Mara is a fruit farmer. Rio is not someone who takes risks. If Mara is a public figure, then she either enjoys socializing or values her privacy, but not both. Ayleen enjoys socializing. Rio either values her privacy or is passionate about cultivating rare fruits, but not both. If Rio is a public figure, then she either enjoys socializing or values her privacy, but not both.",
    "nl2fol": {
      "If Rio is passionate, then she is either successful or inspirational, but not both.": "passionate(Rio) → (successful(Rio) ⊕ inspirational(Rio))",
      "If Mara is a fruit farmer, then she is either down-to-earth or visionary, but not both.": "fruit_farmer(Mara) → (down_to_earth(Mara) ⊕ visionary(Mara))",
      "Rio is either down-to-earth or inspirational, but not both.": "down_to_earth(Rio) ⊕ inspirational(Rio)",
      "Rio either has common sense or is visionary.": "has_common_sense(Rio) ∨ visionary(Rio)",
      "Rio enjoys socializing.": "enjoys_socializing(Rio)",
      "If Mara is passionate, then she is either successful or inspirational, but not both.": "passionate(Mara) → (successful(Mara) ⊕ inspirational(Mara))",
      "Ayleen is not someone who takes risks.": "¬takes_risks(Ayleen)",
      "For Rio, she is either a practical thinker or someone who takes risks, but not both.": "takes_risks(Rio) ⊕ practical_thinker(Rio)",
      "Rio is either a practical thinker or a visionary, but not both.": "practical_thinker(Rio) ⊕ visionary(Rio)",
      "Rio is a fruit farmer.": "fruit_farmer(Rio)",
      "Mara is either a practical thinker or a visionary, but not both.": "practical_thinker(Mara) ⊕ visionary(Mara)",
      "Rio is a public figure.": "is_public_figure(Rio)",
      "Anyone who follows their dreams and helps others can be inspirational.": "∀x ((follows_dreams(x) ∧ helps_others(x)) → inspirational(x))",
      "Kobe is either down-to-earth or inspirational, but not both.": "down_to_earth(Kobe) ⊕ inspirational(Kobe)",
      "Rio is determined or passionate.": "is_determined(Rio) ∨ passionate(Rio)",
      "If Rio is a fruit farmer, then she is either down-to-earth or visionary, but not both.": "fruit_farmer(Rio) → (down_to_earth(Rio) ⊕ visionary(Rio))",
      "Mara is a fruit farmer.": "fruit_farmer(Mara)",
      "Rio is not someone who takes risks.": "¬takes_risks(Rio)",
      "If Mara is a public figure, then she either enjoys socializing or values her privacy, but not both.": "is_public_figure(Mara) → (enjoys_socializing(Mara) ⊕ values_privacy(Mara))",
      "Ayleen enjoys socializing.": "enjoys_socializing(Ayleen)",
      "Rio either values her privacy or is passionate about cultivating rare fruits, but not both.": "values_privacy(Rio) ⊕ passionate(Rio)",
      "If Rio is a public figure, then she either enjoys socializing or values her privacy, but not both.": "is_public_figure(Rio) → (enjoys_socializing(Rio) ⊕ values_privacy(Rio))"
    },
    "conclusion_fol": "successful(Rio)"
  },
  {
    "id": 95,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Maci either values precision or cares about her appearance (or both).",
    "reasoning": "fact1: Maci runs her own business.\nrule: Maci either runs her own business or studies design, but not both.\nconclusion: Maci did not study design.\n\nfact1: Maci learns from others.\nrule: If Maci learns from others, then she has worked under a mentor.\nconclusion: Maci worked under a mentor.\n\nfact1: Maci worked under a mentor.\nfact2: Maci did not study design.\nrule: Anyone who worked under a mentor or studied design has experience.\nconclusion: Maci has experience.\n\nfact1: Maci does not have good taste.\nfact2: Maci does not produce beautiful designs.\nrule: If Maci pays attention to details or has good taste, then she will produce beautiful designs.\nconclusion: Maci does not pay attention to details.\n\nfact1: Maci has experience.\nfact2: Maci is not a perfectionist.\nrule: If Maci has experience in fashion design, then she is either a perfectionist or creates quality work, but not both.\nconclusion: Maci creates quality work.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Maci either values precision or cares about her appearance (or both). The correct option is: C.",
    "context": "Anyone who worked under a mentor or studied design has experience. Maci does not have good taste. If Maci has experience in fashion design, then she is either a perfectionist or creates quality work, but not both. Maci is not a perfectionist. Maci runs her own business. If Maci pays attention to details or has good taste, then she will produce beautiful designs. Maci either runs her own business or studies design, but not both. Maci learns from others. Maci does not produce beautiful designs. If Maci learns from others, then she has worked under a mentor.",
    "nl2fol": {
      "Anyone who worked under a mentor or studied design has experience.": "∀x ((worked_under_mentor(x) ∨ studied_design(x)) → has_experience(x))",
      "Maci does not have good taste.": "¬has_good_taste(Maci)",
      "If Maci has experience in fashion design, then she is either a perfectionist or creates quality work, but not both.": "has_experience(Maci) → (is_perfectionist(Maci) ⊕ creates_quality_work(Maci))",
      "Maci is not a perfectionist.": "¬is_perfectionist(Maci)",
      "Maci runs her own business.": "runs_own_business(Maci)",
      "If Maci pays attention to details or has good taste, then she will produce beautiful designs.": "(pays_attention_details(Maci) ∨ has_good_taste(Maci)) → produces_beautiful_designs(Maci)",
      "Maci either runs her own business or studies design, but not both.": "runs_own_business(Maci) ⊕ studied_design(Maci)",
      "Maci learns from others.": "learns_from_others(Maci)",
      "Maci does not produce beautiful designs.": "¬produces_beautiful_designs(Maci)",
      "If Maci learns from others, then she has worked under a mentor.": "learns_from_others(Maci) → worked_under_mentor(Maci)"
    },
    "conclusion_fol": "values_precision(Maci) ∨ cares_about_appearance(Maci)"
  },
  {
    "id": 96,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hope makes a groundbreaking discovery.",
    "reasoning": "fact1: Hope does not work independently.\nrule: Hope either works independently or collaborates with others, but not both.\nconclusion: Hope collaborates with others.\n\nfact1: Hope collaborates with others.\nfact2: Hope does not think critically.\nrule: If Hope makes valuable contributions, then she thinks critically and collaborates with others.\nconclusion: Hope does not make valuable contributions.\n\nfact1: Hope does not make valuable contributions.\nrule: If someone has innovative ideas, then they will make valuable contributions.\nconclusion: Hope does not have innovative ideas.\n\nfact1: Hope does not excel academically.\nfact2: Hope does not have innovative ideas.\nrule: If Hope either excels academically or pursues alternative careers (but not both), then she has innovative ideas.\nconclusion: Hope does not pursue alternative careers.\n\nfact1: Hope does not pursue alternative careers.\nrule: Hope either pursues alternative careers or is a dedicated scientist, but not both.\nconclusion: Hope is a dedicated scientist.\n\nfact1: Hope is a dedicated scientist.\nfact2: Hope does not inspire others.\nrule: If Hope is a dedicated scientist, then she either makes a groundbreaking discovery or inspires others (or both).\nconclusion: Hope makes a groundbreaking discovery.\n\nTherefore, it is true that Hope makes a groundbreaking discovery. The correct option is: A.",
    "context": "Hope either pursues alternative careers or is a dedicated scientist, but not both. Anyone who conducts research or publishes papers is a dedicated scientist. Hope does not work independently. If Hope is a dedicated scientist, then she either makes a groundbreaking discovery or inspires others (or both). Hope does not inspire others. If Hope either excels academically or pursues alternative careers (but not both), then she has innovative ideas. Hope either works independently or collaborates with others, but not both. Hope does not excel academically. If someone has innovative ideas, then they will make valuable contributions. If Hope makes valuable contributions, then she thinks critically and collaborates with others. Hope does not think critically.",
    "nl2fol": {
      "Hope either pursues alternative careers or is a dedicated scientist, but not both.": "pursue_alternative_careers(Hope) ⊕ dedicated_scientist(Hope)",
      "Anyone who conducts research or publishes papers is a dedicated scientist.": "∀x ((conducts_research(x) ∨ publishes_papers(x)) → dedicated_scientist(x))",
      "Hope does not work independently.": "¬work_independently(Hope)",
      "If Hope is a dedicated scientist, then she either makes a groundbreaking discovery or inspires others (or both).": "dedicated_scientist(Hope) → (make_groundbreaking_discovery(Hope) ∨ inspire_others(Hope))",
      "Hope does not inspire others.": "¬inspire_others(Hope)",
      "If Hope either excels academically or pursues alternative careers (but not both), then she has innovative ideas.": "(excels_academically(Hope) ⊕ pursue_alternative_careers(Hope)) → has_innovative_ideas(Hope)",
      "Hope either works independently or collaborates with others, but not both.": "work_independently(Hope) ⊕ collaborate_with_others(Hope)",
      "Hope does not excel academically.": "¬excels_academically(Hope)",
      "If someone has innovative ideas, then they will make valuable contributions.": "∀x (has_innovative_ideas(x) → make_valuable_contributions(x))",
      "If Hope makes valuable contributions, then she thinks critically and collaborates with others.": "make_valuable_contributions(Hope) → (collaborate_with_others(Hope) ∧ think_critically(Hope))",
      "Hope does not think critically.": "¬think_critically(Hope)"
    },
    "conclusion_fol": "make_groundbreaking_discovery(Hope)"
  },
  {
    "id": 97,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jaxton requires medical treatment.",
    "reasoning": "fact1: Jaxton experiences setbacks.\nfact2: Jaxton does not seek support.\nrule: If Jaxton experiences setbacks, then he either prioritizes self-care or seeks support (but not both).\nconclusion: Jaxton prioritizes self-care.\n\nfact1: Jaxton eats nutritious food.\nrule: If Jaxton eats nutritious food, then he maintains good health.\nconclusion: Jaxton maintains good health.\n\nfact1: Jaxton sets goals.\nfact2: Jaxton works hard.\nrule: If someone sets goals and works hard, then they have ambition.\nconclusion: Jaxton has ambition.\n\nfact1: Jaxton has ambition.\nfact2: Jaxton prioritizes self-care.\nrule: If Jaxton has ambition, then he prioritizes self-care and engages in regular exercise.\nconclusion: Jaxton engages in regular exercise.\n\nfact1: Jaxton engages in regular exercise.\nrule: Jaxton either engages in regular exercise or needs a special diet, but these are not mutually exclusive.\nconclusion: Jaxton does not need a special diet.\n\nfact1: Jaxton maintains good health.\nrule: Jaxton is either maintaining good health or has anemia, but not both.\nconclusion: Jaxton does not have anemia.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Jaxton requires medical treatment. The correct option is: C.",
    "context": "If Jaxton has low energy and gets regular checkups, then he has anemia. Jaxton manages stress or prioritizes self-care. Jaxton experiences setbacks. If Jaxton listens to his doctor, then he maintains good health. If Jaxton experiences setbacks, then he either prioritizes self-care or seeks support (but not both). Jaxton does not seek support. Jaxton works hard. Jaxton eats nutritious food. Jaxton is either maintaining good health or has anemia, but not both. If Jaxton has ambition, then he prioritizes self-care and engages in regular exercise. If someone sets goals and works hard, then they have ambition. Jaxton sets goals. Jaxton either engages in regular exercise or needs a special diet, but these are not mutually exclusive. If Jaxton eats nutritious food, then he maintains good health.",
    "nl2fol": {
      "If Jaxton has low energy and gets regular checkups, then he has anemia.": "low_energy(Jaxton) → (gets_regular_checkups(Jaxton) ∧ has_anemia(Jaxton))",
      "Jaxton manages stress or prioritizes self-care.": "manages_stress(Jaxton) ∨ prioritizes_self_care(Jaxton)",
      "Jaxton experiences setbacks.": "experiences_setbacks(Jaxton)",
      "If Jaxton listens to his doctor, then he maintains good health.": "listens_to_doctor(Jaxton) → maintains_good_health(Jaxton)",
      "If Jaxton experiences setbacks, then he either prioritizes self-care or seeks support (but not both).": "experiences_setbacks(Jaxton) → (seeks_support(Jaxton) ⊕ prioritizes_self_care(Jaxton))",
      "Jaxton does not seek support.": "¬seeks_support(Jaxton)",
      "Jaxton works hard.": "works_hard(Jaxton)",
      "Jaxton eats nutritious food.": "eats_nutritious_food(Jaxton)",
      "Jaxton is either maintaining good health or has anemia, but not both.": "maintains_good_health(Jaxton) ⊕ has_anemia(Jaxton)",
      "If Jaxton has ambition, then he prioritizes self-care and engages in regular exercise.": "has_ambition(Jaxton) → (prioritizes_self_care(Jaxton) ∧ engages_in_regular_exercise(Jaxton))",
      "If someone sets goals and works hard, then they have ambition.": "∀x ((sets_goals(x) ∧ works_hard(x)) → has_ambition(x))",
      "Jaxton sets goals.": "set_goals(Jaxton)",
      "Jaxton either engages in regular exercise or needs a special diet, but these are not mutually exclusive.": "engages_in_regular_exercise(Jaxton) ⊕ needs_special_diet(Jaxton)",
      "If Jaxton eats nutritious food, then he maintains good health.": "eats_nutritious_food(Jaxton) → maintains_good_health(Jaxton)"
    },
    "conclusion_fol": "requires_medical_treatment(Jaxton)"
  },
  {
    "id": 98,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Iyla is not trusted.",
    "reasoning": "fact1: Iyla has thick skin.\nrule: Anyone who has thick skin can handle criticism.\nconclusion: Iyla handles criticism.\n\nfact1: Iyla handles criticism.\nrule: Iyla either builds trust or handles criticism, but not both.\nconclusion: Iyla cannot build trust.\n\nfact1: Iyla does not respect confidentiality.\nrule: Iyla values anonymity or respects confidentiality.\nconclusion: Iyla values anonymity.\n\nfact1: Iyla does not keep secrets.\nfact2: Iyla cannot build trust.\nrule: Anyone who protects clients' interests or keeps secrets can build trust.\nconclusion: Iyla does not protect clients' interests.\n\nfact1: Iyla guards confidential information.\nfact2: Iyla does not protect clients' interests.\nrule: Everyone who guards confidential information either protects clients' interests or is reliable (or both).\nconclusion: Iyla is reliable.\n\nfact1: Iyla is reliable.\nfact2: Iyla values anonymity.\nrule: If Iyla is reliable, then she either values anonymity or prioritizes privacy (but not both).\nconclusion: Iyla does not prioritize privacy.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Iyla is not trusted. The correct option is: C.",
    "context": "Devin has thick skin. Anyone who has thick skin can handle criticism. Anyone who respects boundaries or values discretion prioritizes privacy. Promise does not ensure security. Devin either builds trust or handles criticism, but not both. If someone is transparent and follows promises, then they can build trust. Iyla does not keep secrets. If Iyla is reliable, then she either values anonymity or prioritizes privacy (but not both). Iyla values anonymity or respects confidentiality. Iyla does not respect confidentiality. If Khaleesi is reliable, then she either values anonymity or prioritizes privacy (but not both). Khaleesi values anonymity or respects confidentiality. Iyla has thick skin. Devin does not keep secrets. Khaleesi does not respect confidentiality. Iyla either builds trust or handles criticism, but not both. Anyone who protects clients' interests or keeps secrets can build trust. Everyone who guards confidential information either protects clients' interests or is reliable (or both). Iyla guards confidential information.",
    "nl2fol": {
      "Devin has thick skin.": "has_thick_skin(Devin)",
      "Anyone who has thick skin can handle criticism.": "∀x (has_thick_skin(x) → handles_criticism(x))",
      "Anyone who respects boundaries or values discretion prioritizes privacy.": "∀x ((respects_boundaries(x) ∨ values_discretion(x)) → prioritize_privacy(x))",
      "Promise does not ensure security.": "¬ensure_security(Promise)",
      "Devin either builds trust or handles criticism, but not both.": "build_trust(Devin) ⊕ handles_criticism(Devin)",
      "If someone is transparent and follows promises, then they can build trust.": "∀x ((is_transparent(x) ∧ follows_promises(x)) → build_trust(x))",
      "Iyla does not keep secrets.": "¬keep_secrets(Iyla)",
      "If Iyla is reliable, then she either values anonymity or prioritizes privacy (but not both).": "is_reliable(Iyla) → (values_anonymity(Iyla) ⊕ prioritize_privacy(Iyla))",
      "Iyla values anonymity or respects confidentiality.": "values_anonymity(Iyla) ∨ respects_confidentiality(Iyla)",
      "Iyla does not respect confidentiality.": "¬respects_confidentiality(Iyla)",
      "If Khaleesi is reliable, then she either values anonymity or prioritizes privacy (but not both).": "is_reliable(Khaleesi) → (values_anonymity(Khaleesi) ⊕ prioritize_privacy(Khaleesi))",
      "Khaleesi values anonymity or respects confidentiality.": "values_anonymity(Khaleesi) ∨ respects_confidentiality(Khaleesi)",
      "Iyla has thick skin.": "has_thick_skin(Iyla)",
      "Devin does not keep secrets.": "¬keeps_secrets(Devin)",
      "Khaleesi does not respect confidentiality.": "¬respects_confidentiality(Khaleesi)",
      "Iyla either builds trust or handles criticism, but not both.": "build_trust(Iyla) ⊕ handles_criticism(Iyla)",
      "Anyone who protects clients' interests or keeps secrets can build trust.": "∀x ((protect_clients_interests(x) ∨ keep_secrets(x)) → build_trust(x))",
      "Everyone who guards confidential information either protects clients' interests or is reliable (or both).": "∀x (guard_confidential_info(x) → (protect_clients_interests(x) ∨ is_reliable(x)))",
      "Iyla guards confidential information.": "guard_confidential_info(Iyla)"
    },
    "conclusion_fol": "¬trusted(Iyla)"
  },
  {
    "id": 99,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miracle cannot find common ground.",
    "reasoning": "fact1: Miracle has leadership.\nfact2: Miracle is strong-willed.\nrule: If Miracle has leadership, then she is either strong-willed or diplomatic, but not both.\nconclusion: Miracle is not diplomatic.\n\nfact1: Miracle is outspoken.\nfact2: Miracle is not diplomatic.\nrule: If Miracle is outspoken, then she is either diplomatic or has strong opinions, but not both.\nconclusion: Miracle has strong opinions.\n\nfact1: Miracle is empathetic.\nfact2: Miracle does not speak clearly.\nrule: If Miracle is empathetic, then she either speaks clearly or listens actively (but not both).\nconclusion: Miracle listens actively.\n\nfact1: Miracle has strong opinions.\nrule: Miracle is either an effective mediator or has strong opinions, but these two traits are mutually exclusive.\nconclusion: Miracle is not an effective mediator.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Miracle cannot find common ground. The correct option is: C.",
    "context": "If Miracle has leadership, then she is either strong-willed or diplomatic, but not both. Miracle has leadership. Miracle is either an effective mediator or has strong opinions, but these two traits are mutually exclusive. Coleson does not speak clearly. If Amiyah is outspoken, then she is either diplomatic or has strong opinions, but not both. Miracle is strong-willed. Miracle is outspoken. Averie is empathetic. If Miracle is empathetic, then she either speaks clearly or listens actively (but not both). Averie is strong-willed. Miracle does not speak clearly. Miracle is empathetic. If Miracle is outspoken, then she is either diplomatic or has strong opinions, but not both. Anyone who practices mindfulness or has self-control can remain calm under pressure. Everyone who leads a community either listens actively or builds trust (or both).",
    "nl2fol": {
      "If Miracle has leadership, then she is either strong-willed or diplomatic, but not both.": "has_leadership(Miracle) → (is_strong_willed(Miracle) ⊕ is_diplomatic(Miracle))",
      "Miracle has leadership.": "has_leadership(Miracle)",
      "Miracle is either an effective mediator or has strong opinions, but these two traits are mutually exclusive.": "has_strong_opinions(Miracle) ⊕ effective_mediator(Miracle)",
      "Coleson does not speak clearly.": "¬speaks_clearly(Coleson)",
      "If Amiyah is outspoken, then she is either diplomatic or has strong opinions, but not both.": "is_outspoken(Amiyah) → (has_strong_opinions(Amiyah) ⊕ is_diplomatic(Amiyah))",
      "Miracle is strong-willed.": "is_strong_willed(Miracle)",
      "Miracle is outspoken.": "is_outspoken(Miracle)",
      "Averie is empathetic.": "is_empathetic(Averie)",
      "If Miracle is empathetic, then she either speaks clearly or listens actively (but not both).": "is_empathetic(Miracle) → (speaks_clearly(Miracle) ⊕ listens_actively(Miracle))",
      "Averie is strong-willed.": "strong_willed(Averie)",
      "Miracle does not speak clearly.": "¬speaks_clearly(Miracle)",
      "Miracle is empathetic.": "is_empathetic(Miracle)",
      "If Miracle is outspoken, then she is either diplomatic or has strong opinions, but not both.": "is_outspoken(Miracle) → (has_strong_opinions(Miracle) ⊕ is_diplomatic(Miracle))",
      "Anyone who practices mindfulness or has self-control can remain calm under pressure.": "∀x ((practices_mindfulness(x) ∨ has_self_control(x)) → remain_calm_under_pressure(x))",
      "Everyone who leads a community either listens actively or builds trust (or both).": "∀x (leads_community(x) → (listens_actively(x) ∨ builds_trust(x)))"
    },
    "conclusion_fol": "¬can_find_common_ground(Miracle)"
  },
  {
    "id": 100,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Josue is not talkative.",
    "reasoning": "fact1: Josue does not make noise.\nrule: All parrots either make noise or learn to speak.\nconclusion: Josue learns to speak.\n\nfact1: Josue does not have feathers.\nrule: Every parrot has feathers or has vocal cords.\nconclusion: Josue has vocal cords.\n\nfact1: Josue does not have a large vocabulary.\nfact2: Josue is not charismatic.\nrule: If Josue either has a large vocabulary or entertains crowds (but not both), then he is charismatic.\nconclusion: Josue does not entertain crowds.\n\nfact1: Josue does not entertain crowds.\nrule: If a parrot can make humans laugh, then it will entertain crowds.\nconclusion: Josue cannot make humans laugh.\n\nfact1: Josue has vocal cords.\nfact2: Josue cannot make humans laugh.\nrule: If a parrot has vocal cords and is communicative, then it can make humans laugh.\nconclusion: Josue is not communicative.\n\nfact1: Josue knows phrases.\nfact2: Josue is not communicative.\nrule: All parrots that either know phrases or understand the context of their speech are communicative.\nconclusion: Josue understands the context of his speech.\n\nfact1: Josue understands the context of his speech.\nrule: A parrot can either mimic sounds or understand the context of its speech, but not necessarily both.\nconclusion: Josue cannot mimic sounds.\n\nfact1: Josue learns to speak.\nfact2: Josue cannot mimic sounds.\nrule: If Josue learns to speak, then he is either mute or can mimic sounds.\nconclusion: Josue is mute.\n\nfact1: Josue is mute.\nrule: Josue is either talkative or mute, but not both.\nconclusion: Josue is not talkative.\n\nTherefore, it is true that Josue is not talkative. The correct option is: A.",
    "context": "Josue knows phrases. All parrots either make noise or learn to speak. All parrots that can sing have vocal cords. Josue will understand the context of his speech if he responds intelligently. All parrots that either know phrases or understand the context of their speech are communicative. Every parrot that either whistles tunes or repeats words (but not both) can mimic sounds. If Josue either has a large vocabulary or entertains crowds (but not both), then he is charismatic. Josue does not make noise. If a parrot can make humans laugh, then it will entertain crowds. Every parrot has feathers or has vocal cords. Josue does not have feathers. Josue does not have a large vocabulary. Josue is not charismatic. Josue is either talkative or mute, but not both. A parrot can either mimic sounds or understand the context of its speech, but not necessarily both. If a parrot has vocal cords and is communicative, then it can make humans laugh. If Josue learns to speak, then he is either mute or can mimic sounds. All parrots that express emotions are communicative.",
    "nl2fol": {
      "Josue knows phrases.": "knows_phrases(Josue)",
      "All parrots either make noise or learn to speak.": "∀x (makes_noise(x) ∨ learn_to_speak(x))",
      "All parrots that can sing have vocal cords.": "∀x (can_sing(x) → has_vocal_cords(x))",
      "Josue will understand the context of his speech if he responds intelligently.": "respond_intelligently(Josue) → understand_context(Josue)",
      "All parrots that either know phrases or understand the context of their speech are communicative.": "∀x ((knows_phrases(x) ⊕ understand_context(x)) → communicative(x))",
      "Every parrot that either whistles tunes or repeats words (but not both) can mimic sounds.": "∀x ((whistles_tunes(x) ⊕ repeats_words(x)) → mimic_sounds(x))",
      "If Josue either has a large vocabulary or entertains crowds (but not both), then he is charismatic.": "(has_large_vocabulary(Josue) ⊕ entertains_crowds(Josue)) → is_charismatic(Josue)",
      "Josue does not make noise.": "¬makes_noise(Josue)",
      "If a parrot can make humans laugh, then it will entertain crowds.": "∀x (makes_humans_laugh(x) → entertains_crowds(x))",
      "Every parrot has feathers or has vocal cords.": "∀x (has_feathers(x) ∨ has_vocal_cords(x))",
      "Josue does not have feathers.": "¬has_feathers(Josue)",
      "Josue does not have a large vocabulary.": "¬has_large_vocabulary(Josue)",
      "Josue is not charismatic.": "¬is_charismatic(Josue)",
      "Josue is either talkative or mute, but not both.": "talkative(Josue) ⊕ mute(Josue)",
      "A parrot can either mimic sounds or understand the context of its speech, but not necessarily both.": "∀x (mimic_sounds(x) ⊕ understand_context(x))",
      "If a parrot has vocal cords and is communicative, then it can make humans laugh.": "∀x ((has_vocal_cords(x) ∧ communicative(x)) → makes_humans_laugh(x))",
      "If Josue learns to speak, then he is either mute or can mimic sounds.": "learn_to_speak(Josue) → (mute(Josue) ∨ mimic_sounds(Josue))",
      "All parrots that express emotions are communicative.": "∀x (expresses_emotions(x) → communicative(x))"
    },
    "conclusion_fol": "¬talkative(Josue)"
  },
  {
    "id": 101,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dr. Lilian contributes to sustainable agriculture.",
    "reasoning": "fact1: Dr. Lilian engages in critical thinking.\nfact2: Lilian explores new ideas.\nrule: If Dr. Lilian engages in critical thinking, then she either explores new ideas or enhances her knowledge, but not both.\nconclusion: Dr. Lilian is not enhancing her knowledge.\n\nfact1: Dr. Lilian does not formulate hypotheses.\nfact2: Dr. Lilian is not enhancing her knowledge.\nrule: Anyone who either improves their understanding or formulates hypotheses is enhancing their knowledge.\nconclusion: Dr. Lilian cannot improve her understanding of microbiology.\n\nfact1: Dr. Lilian does not conduct experiments.\nfact2: Dr. Lilian cannot improve her understanding of microbiology.\nrule: Any scientist who develops new theories or conducts experiments can improve their understanding of their field.\nconclusion: Dr. Lilian does not develop new theories.\n\nfact1: Lilian has curiosity.\nfact2: Dr. Lilian does not develop new theories.\nrule: If a scientist is curious and advances their field, then they develop new theories.\nconclusion: Dr. Lilian does not advance her field.\n\nfact1: Dr. Lilian does not mentor students.\nfact2: Dr. Lilian does not advance her field.\nrule: If Dr. Lilian either collaborates with colleagues or mentors students (but not both), then she advances her field.\nconclusion: Dr. Lilian does not collaborate with colleagues.\n\nfact1: Dr. Lilian does not collaborate with colleagues.\nrule: Every scientist either collaborates with colleagues or publishes research papers.\nconclusion: Dr. Lilian publishes research papers.\n\nfact1: Dr. Lilian publishes research papers.\nfact2: Dr. Lilian does not lead innovative projects.\nrule: If Dr. Lilian publishes research papers, then she either makes breakthroughs or leads innovative projects, but not both.\nconclusion: Lilian makes breakthroughs.\n\nfact1: Lilian makes breakthroughs.\nfact2: Lilian does not gain international recognition.\nrule: If a scientist makes breakthroughs and wins prestigious awards, then they gain international recognition.\nconclusion: Dr. Lilian does not win prestigious awards.\n\nfact1: Dr. Lilian studies microorganisms.\nfact2: Dr. Lilian does not win prestigious awards.\nrule: If Dr. Lilian studies microorganisms, then she either contributes to sustainable agriculture or wins prestigious awards (or both).\nconclusion: Dr. Lilian contributes to sustainable agriculture.\n\nTherefore, it is true that Dr. Lilian contributes to sustainable agriculture. The correct option is: A.",
    "context": "If Dr. Lilian focuses on novel approaches, then she will advance her field. Dr. Ignacio does not formulate hypotheses. Dr. Lilian does not mentor students. Lilian does not gain international recognition. Dr. Lilian engages in critical thinking. Dr. Ignacio engages in critical thinking. Every scientist either collaborates with colleagues or publishes research papers. Lilian has curiosity. Lilian explores new ideas. If Dr. Lilian has expertise, then she either makes breakthroughs or influences policy, but not both. Dr. Lilian does not formulate hypotheses. Dr. Lilian does not lead innovative projects. If Dr. Lilian either analyzes data or designs experiments (but not both), then she publishes research papers. Any scientist who develops new theories or conducts experiments can improve their understanding of their field. Dr. Lilian does not conduct experiments. If Dr. Lilian engages in critical thinking, then she either explores new ideas or enhances her knowledge, but not both. Anyone who either improves their understanding or formulates hypotheses is enhancing their knowledge. If a scientist is curious and advances their field, then they develop new theories. Dr. Lilian studies microorganisms. If Dr. Lilian studies microorganisms, then she either contributes to sustainable agriculture or wins prestigious awards (or both). Emery does not gain international recognition. If a scientist reads scientific literature and participates in discussions, then they enhance their knowledge. If Dr. Lilian publishes research papers, then she either makes breakthroughs or leads innovative projects, but not both. If a scientist makes breakthroughs and wins prestigious awards, then they gain international recognition. If Dr. Lilian either collaborates with colleagues or mentors students (but not both), then she advances her field.",
    "nl2fol": {
      "If Dr. Lilian focuses on novel approaches, then she will advance her field.": "focus_on_novel_approaches(Lilian) → advance_field(Lilian)",
      "Dr. Ignacio does not formulate hypotheses.": "¬formulate_hypotheses(Ignacio)",
      "Dr. Lilian does not mentor students.": "¬mentor_students(Lilian)",
      "Lilian does not gain international recognition.": "¬gain_international_recognition(Lilian)",
      "Dr. Lilian engages in critical thinking.": "engage_in_critical_thinking(Lilian)",
      "Dr. Ignacio engages in critical thinking.": "engage_in_critical_thinking(Ignacio)",
      "Every scientist either collaborates with colleagues or publishes research papers.": "∀x (collaborate_with_colleagues(x) ∨ publish_research_papers(x))",
      "Lilian has curiosity.": "has_curiosity(Lilian)",
      "Lilian explores new ideas.": "explore_new_ideas(Lilian)",
      "If Dr. Lilian has expertise, then she either makes breakthroughs or influences policy, but not both.": "has_expertise(Lilian) → (make_breakthroughs(Lilian) ⊕ influence_policy(Lilian))",
      "Dr. Lilian does not formulate hypotheses.": "¬formulate_hypotheses(Lilian)",
      "Dr. Lilian does not lead innovative projects.": "¬lead_innovative_projects(Lilian)",
      "If Dr. Lilian either analyzes data or designs experiments (but not both), then she publishes research papers.": "(analyze_data(Lilian) ⊕ design_experiments(Lilian)) → publish_research_papers(Lilian)",
      "Any scientist who develops new theories or conducts experiments can improve their understanding of their field.": "∀x ((develop_new_theories(x) ∨ conduct_experiments(x)) → improve_understanding(x))",
      "Dr. Lilian does not conduct experiments.": "¬conduct_experiments(Lilian)",
      "If Dr. Lilian engages in critical thinking, then she either explores new ideas or enhances her knowledge, but not both.": "engage_in_critical_thinking(Lilian) → (explore_new_ideas(Lilian) ⊕ enhance_knowledge(Lilian))",
      "Anyone who either improves their understanding or formulates hypotheses is enhancing their knowledge.": "∀x ((improve_understanding(x) ⊕ formulate_hypotheses(x)) → enhance_knowledge(x))",
      "If a scientist is curious and advances their field, then they develop new theories.": "∀x ((has_curiosity(x) ∧ advance_field(x)) → develop_new_theories(x))",
      "Dr. Lilian studies microorganisms.": "study_microorganisms(Lilian)",
      "If Dr. Lilian studies microorganisms, then she either contributes to sustainable agriculture or wins prestigious awards (or both).": "study_microorganisms(Lilian) → (contribute_to_sustainable_agriculture(Lilian) ∨ win_prestigious_awards(Lilian))",
      "Emery does not gain international recognition.": "¬gain_international_recognition(Emery)",
      "If a scientist reads scientific literature and participates in discussions, then they enhance their knowledge.": "∀x ((read_scientific_literature(x) ∧ participate_in_discussions(x)) → enhance_knowledge(x))",
      "If Dr. Lilian publishes research papers, then she either makes breakthroughs or leads innovative projects, but not both.": "publish_research_papers(Lilian) → (make_breakthroughs(Lilian) ⊕ lead_innovative_projects(Lilian))",
      "If a scientist makes breakthroughs and wins prestigious awards, then they gain international recognition.": "∀x ((make_breakthroughs(x) ∧ win_prestigious_awards(x)) → gain_international_recognition(x))",
      "If Dr. Lilian either collaborates with colleagues or mentors students (but not both), then she advances her field.": "(collaborate_with_colleagues(Lilian) ⊕ mentor_students(Lilian)) → advance_field(Lilian)"
    },
    "conclusion_fol": "contribute_to_sustainable_agriculture(Lilian)"
  },
  {
    "id": 102,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jaziel is a general plant researcher.",
    "reasoning": "fact1: Jaziel classifies foliage.\nrule: For Jaziel, he either classifies foliage or documents habitats, but not both.\nconclusion: Jaziel does not document habitats.\n\nfact1: Jaziel does not document habitats.\nrule: Jaziel either documents habitats or investigates root systems, but not both.\nconclusion: Jaziel investigates root systems.\n\nfact1: Jaziel investigates root systems.\nrule: Jaziel either investigates root systems or tracks seed dispersal, but not both.\nconclusion: Jaziel does not track seed dispersal.\n\nfact1: Jaziel does not track seed dispersal.\nrule: Jaziel either tracks seed dispersal or analyzes bloom patterns, but not both.\nconclusion: Jaziel analyzes bloom patterns.\n\nfact1: Jaziel does not examine fungal growth.\nfact2: Jaziel analyzes bloom patterns.\nrule: If Jaziel either examines fungal growth or analyzes bloom patterns (but not both), then he studies tropical flora.\nconclusion: Jaziel studies tropical flora.\n\nfact1: Jaziel studies tropical flora.\nrule: Any botanist who studies tropical flora or discovers new species is specialized in rare plants.\nconclusion: Jaziel is specialized in rare plants.\n\nfact1: Jaziel is specialized in rare plants.\nrule: Jaziel is either specialized in rare plants or a general plant researcher, but not both.\nconclusion: Jaziel is not a general plant researcher.\n\nTherefore, it is false that Jaziel is a general plant researcher. The correct option is: B.",
    "context": "Julissa either tracks seed dispersal or analyzes bloom patterns, but not both. Jose either investigates root systems or tracks seed dispersal, but not both. Jaziel either investigates root systems or tracks seed dispersal, but not both. For Jaziel, he either classifies foliage or documents habitats, but not both. If Jaziel has a green thumb, then he analyzes bloom patterns and collects plant samples. Elena classifies foliage. If Jaziel explores remote regions, then he either identifies unique specimens or studies tropical flora. Julissa does not examine fungal growth. Jaziel is either specialized in rare plants or a general plant researcher, but not both. If Jose either examines fungal growth or analyzes bloom patterns (but not both), then he studies tropical flora. Every botanist who studies plant migration either researches plant adaptation or tracks seed dispersal (or both). Jaziel classifies foliage. If Jaziel has vast knowledge, then he excels in experimentation and specializes in rare plants. Jaziel either documents habitats or investigates root systems, but not both. Jaziel does not examine fungal growth. Jaziel either tracks seed dispersal or analyzes bloom patterns, but not both. Jose either documents habitats or investigates root systems, but not both. If Jaziel either examines fungal growth or analyzes bloom patterns (but not both), then he studies tropical flora. Any botanist who studies tropical flora or discovers new species is specialized in rare plants.",
    "nl2fol": {
      "Julissa either tracks seed dispersal or analyzes bloom patterns, but not both.": "tracks_seed_dispersal(Julissa) ⊕ analyzes_bloom_patterns(Julissa)",
      "Jose either investigates root systems or tracks seed dispersal, but not both.": "investigates_root_systems(Jose) ⊕ tracks_seed_dispersal(Jose)",
      "Jaziel either investigates root systems or tracks seed dispersal, but not both.": "investigates_root_systems(Jaziel) ⊕ tracks_seed_dispersal(Jaziel)",
      "For Jaziel, he either classifies foliage or documents habitats, but not both.": "classifies_foliage(Jaziel) ⊕ documents_habitats(Jaziel)",
      "If Jaziel has a green thumb, then he analyzes bloom patterns and collects plant samples.": "has_green_thumb(Jaziel) → (analyzes_bloom_patterns(Jaziel) ∧ collects_plant_samples(Jaziel))",
      "Elena classifies foliage.": "classifies_foliage(Elena)",
      "If Jaziel explores remote regions, then he either identifies unique specimens or studies tropical flora.": "explores_remote_regions(Jaziel) → (identifies_unique_specimens(Jaziel) ∨ studies_tropical_flora(Jaziel))",
      "Julissa does not examine fungal growth.": "¬examines_fungal_growth(Julissa)",
      "Jaziel is either specialized in rare plants or a general plant researcher, but not both.": "specialized_in_rare_plants(Jaziel) ⊕ general_plant_researcher(Jaziel)",
      "If Jose either examines fungal growth or analyzes bloom patterns (but not both), then he studies tropical flora.": "(examines_fungal_growth(Jose) ⊕ analyzes_bloom_patterns(Jose)) → studies_tropical_flora(Jose)",
      "Every botanist who studies plant migration either researches plant adaptation or tracks seed dispersal (or both).": "∀x (studies_plant_migration(x) → (researches_plant_adaptation(x) ∨ tracks_seed_dispersal(x)))",
      "Jaziel classifies foliage.": "classifies_foliage(Jaziel)",
      "If Jaziel has vast knowledge, then he excels in experimentation and specializes in rare plants.": "has_vast_knowledge(Jaziel) → (excels_in_experimentation(Jaziel) ∧ specialized_in_rare_plants(Jaziel))",
      "Jaziel either documents habitats or investigates root systems, but not both.": "documents_habitats(Jaziel) ⊕ investigates_root_systems(Jaziel)",
      "Jaziel does not examine fungal growth.": "¬examines_fungal_growth(Jaziel)",
      "Jaziel either tracks seed dispersal or analyzes bloom patterns, but not both.": "tracks_seed_dispersal(Jaziel) ⊕ analyzes_bloom_patterns(Jaziel)",
      "Jose either documents habitats or investigates root systems, but not both.": "documents_habitats(Jose) ⊕ investigates_root_systems(Jose)",
      "If Jaziel either examines fungal growth or analyzes bloom patterns (but not both), then he studies tropical flora.": "(examines_fungal_growth(Jaziel) ⊕ analyzes_bloom_patterns(Jaziel)) → studies_tropical_flora(Jaziel)",
      "Any botanist who studies tropical flora or discovers new species is specialized in rare plants.": "∀x ((studies_tropical_flora(x) ∨ discovers_new_species(x)) → specialized_in_rare_plants(x))"
    },
    "conclusion_fol": "general_plant_researcher(Jaziel)"
  },
  {
    "id": 103,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kehlani does not protect the ecosystem.",
    "reasoning": "fact1: Kehlani does not prioritize her own survival.\nrule: A leech either prioritizes its own survival or respects the needs of others, but not necessarily both.\nconclusion: Kehlani respects the needs of the crayfish.\n\nfact1: Kehlani does not adjust her behavior.\nfact2: Kehlani thrives in change.\nrule: If Kehlani either adjusts her behavior or thrives in change (but not both), then she is adaptable.\nconclusion: Kehlani is adaptable.\n\nfact1: Kehlani maintains balance in her ecosystem.\nfact2: Kehlani is adaptable.\nrule: If Kehlani maintains balance in her ecosystem, then she is either adaptable or resourceful, but not both.\nconclusion: Kehlani is not resourceful.\n\nfact1: Kehlani is cooperative.\nfact2: Kehlani communicates effectively.\nrule: If Kehlani is cooperative, then she lives with crayfish and communicates effectively.\nconclusion: Kehlani lives with crayfish.\n\nfact1: Kehlani lives with crayfish.\nfact2: Kehlani respects the needs of the crayfish.\nrule: If Kehlani lives with crayfish and respects their needs, then she has complex social bonds.\nconclusion: Kehlani has complex social bonds.\n\nfact1: Kehlani has complex social bonds.\nfact2: Kehlani is not resourceful.\nrule: If Kehlani has complex social bonds, then she is either resourceful or intelligent, but not both.\nconclusion: Kehlani is intelligent.\n\nfact1: Kehlani is intelligent.\nfact2: Kehlani does not care for her host.\nrule: If Kehlani is intelligent, then she either cares for her host or protects the ecosystem, but not both.\nconclusion: Kehlani protects the ecosystem.\n\nTherefore, it is false that Kehlani does not protect the ecosystem. The correct option is: B.",
    "context": "Kehlani thrives in change. If Kehlani has complex social bonds, then she is either resourceful or intelligent, but not both. A leech either prioritizes its own survival or respects the needs of others, but not necessarily both. Kehlani does not prioritize her own survival. If Kehlani is intelligent, then she either cares for her host or protects the ecosystem, but not both. Kehlani does not care for her host. If Kehlani maintains balance in her ecosystem, then she is either adaptable or resourceful, but not both. Kehlani does not adjust her behavior. If Kehlani lives with crayfish and respects their needs, then she has complex social bonds. All leeches that are sensitive to their environment are adaptable and have strong instincts. If Kehlani either adjusts her behavior or thrives in change (but not both), then she is adaptable. Kehlani is cooperative. Kehlani communicates effectively. Kehlani maintains balance in her ecosystem. If Kehlani forms long-term attachments or shows empathy towards others, then she can have complex social bonds. If Kehlani is cooperative, then she lives with crayfish and communicates effectively. Jamir does not adjust her behavior. If Princeton is intelligent, then she either cares for her host or protects the ecosystem, but not both.",
    "nl2fol": {
      "Kehlani thrives in change.": "thrives_in_change(Kehlani)",
      "If Kehlani has complex social bonds, then she is either resourceful or intelligent, but not both.": "has_complex_social_bonds(Kehlani) → (is_resourceful(Kehlani) ⊕ intelligent(Kehlani))",
      "A leech either prioritizes its own survival or respects the needs of others, but not necessarily both.": "∀x (prioritizes_own_survival(x) ⊕ respects_needs(x))",
      "Kehlani does not prioritize her own survival.": "¬prioritizes_own_survival(Kehlani)",
      "If Kehlani is intelligent, then she either cares for her host or protects the ecosystem, but not both.": "intelligent(Kehlani) → (care_for_host(Kehlani) ⊕ protect_ecosystem(Kehlani))",
      "Kehlani does not care for her host.": "¬care_for_host(Kehlani)",
      "If Kehlani maintains balance in her ecosystem, then she is either adaptable or resourceful, but not both.": "maintains_balance(Kehlani) → (adaptable(Kehlani) ⊕ is_resourceful(Kehlani))",
      "Kehlani does not adjust her behavior.": "¬adjusts_behavior(Kehlani)",
      "If Kehlani lives with crayfish and respects their needs, then she has complex social bonds.": "(lives_with_crayfish(Kehlani) ∧ respects_needs(Kehlani)) → has_complex_social_bonds(Kehlani)",
      "All leeches that are sensitive to their environment are adaptable and have strong instincts.": "∀x (sensitive_to_environment(x) → (adaptable(x) ∧ has_strong_instincts(x)))",
      "If Kehlani either adjusts her behavior or thrives in change (but not both), then she is adaptable.": "(adjusts_behavior(Kehlani) ⊕ thrives_in_change(Kehlani)) → adaptable(Kehlani)",
      "Kehlani is cooperative.": "is_cooperative(Kehlani)",
      "Kehlani communicates effectively.": "communicates_effectively(Kehlani)",
      "Kehlani maintains balance in her ecosystem.": "maintains_balance(Kehlani)",
      "If Kehlani forms long-term attachments or shows empathy towards others, then she can have complex social bonds.": "(forms_long_term_attachments(Kehlani) ∨ shows_empathy_towards_others(Kehlani)) → has_complex_social_bonds(Kehlani)",
      "If Kehlani is cooperative, then she lives with crayfish and communicates effectively.": "is_cooperative(Kehlani) → (lives_with_crayfish(Kehlani) ∧ communicates_effectively(Kehlani))",
      "Jamir does not adjust her behavior.": "¬adjusts_behavior(Jamir)",
      "If Princeton is intelligent, then she either cares for her host or protects the ecosystem, but not both.": "intelligent(Princeton) → (care_for_host(Princeton) ⊕ protect_ecosystem(Princeton))"
    },
    "conclusion_fol": "¬protect_ecosystem(Kehlani)"
  },
  {
    "id": 104,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Babe is passionate about music, preserves the tradition of country music and creates original works.",
    "reasoning": "fact1: Babe does not speak clearly.\nrule: Babe speaks clearly or gives honest opinions.\nconclusion: Babe gives honest opinions.\n\nfact1: Babe gives honest opinions.\nfact2: Babe does not earn trust.\nrule: Anyone who gives honest opinions and is authentic will earn trust.\nconclusion: Babe is not authentic.\n\nfact1: Babe does not build relationships.\nfact2: Babe does not inspire others.\nrule: Anyone who shares experiences or builds relationships can inspire others.\nconclusion: Babe does not share experiences.\n\nfact1: Babe does not share experiences.\nrule: Everyone connects with others or shares experiences.\nconclusion: Babe connects with others.\n\nfact1: Babe stays true to herself.\nrule: Anyone who speaks from the heart or stays true to themselves values honesty.\nconclusion: Babe values honesty.\n\nfact1: Babe has charisma.\nfact2: Babe values honesty.\nrule: All charismatic people are dedicated to their craft and value honesty.\nconclusion: Babe is dedicated to her craft.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Babe is passionate about music, preserves the tradition of country music and creates original works. The correct option is: C.",
    "context": "Duke speaks clearly or gives honest opinions. Duke does not speak clearly. If Babe is sincere, then she is either transparent or speaks from the heart, but not both. Babe does not build relationships. Duke does not inspire others. If Babe has good listening skills, then she shares her experiences and communicates effectively. If Babe listens actively and speaks mindfully, then she will give honest opinions. Maci does not build relationships. If Babe either tells true stories or sings soulfully (but not both), then she is authentic. Ryker has charisma. Ryker creates original works. Babe does not earn trust. Babe has charisma. Babe does not speak clearly. Ryker does not earn trust. Everyone connects with others or shares experiences. All charismatic people are dedicated to their craft and value honesty. Babe does not inspire others. If someone tells stories, then they have vulnerability and connect with others. Babe speaks clearly or gives honest opinions. Babe stays true to herself. Anyone who gives honest opinions and is authentic will earn trust. Anyone who speaks from the heart or stays true to themselves values honesty. Anyone who shares experiences or builds relationships can inspire others. Ryker expresses emotion. Anyone who sets high standards or practices often is dedicated to their craft. Ryker respects the legacy.",
    "nl2fol": {
      "Duke speaks clearly or gives honest opinions.": "speaks_clearly(Duke) ∨ gives_honest_opinions(Duke)",
      "Duke does not speak clearly.": "¬speaks_clearly(Duke)",
      "If Babe is sincere, then she is either transparent or speaks from the heart, but not both.": "is_sincere(Babe) → (is_transparent(Babe) ⊕ speaks_from_heart(Babe))",
      "Babe does not build relationships.": "¬builds_relationships(Babe)",
      "Duke does not inspire others.": "¬inspires_others(Duke)",
      "If Babe has good listening skills, then she shares her experiences and communicates effectively.": "has_good_listening_skills(Babe) → (shares_experiences(Babe) ∧ communicates_effectively(Babe))",
      "If Babe listens actively and speaks mindfully, then she will give honest opinions.": "(listens_actively(Babe) ∧ speaks_mindfully(Babe)) → gives_honest_opinions(Babe)",
      "Maci does not build relationships.": "¬builds_relationships(Maci)",
      "If Babe either tells true stories or sings soulfully (but not both), then she is authentic.": "(tells_true_stories(Babe) ⊕ sings_soulfully(Babe)) → is_authentic(Babe)",
      "Ryker has charisma.": "have_charisma(Ryker)",
      "Ryker creates original works.": "create_original_works(Ryker)",
      "Babe does not earn trust.": "¬earns_trust(Babe)",
      "Babe has charisma.": "has_charisma(Babe)",
      "Babe does not speak clearly.": "¬speaks_clearly(Babe)",
      "Ryker does not earn trust.": "¬earn_trust(Ryker)",
      "Everyone connects with others or shares experiences.": "∀x (connects_with_others(x) ∨ shares_experiences(x))",
      "All charismatic people are dedicated to their craft and value honesty.": "∀x (has_charisma(x) → (dedicated_to_craft(x) ∧ value_honesty(x)))",
      "Babe does not inspire others.": "¬inspires_others(Babe)",
      "If someone tells stories, then they have vulnerability and connect with others.": "∀x (tell_stories(x) → (has_vulnerability(x) ∧ connects_with_others(x)))",
      "Babe speaks clearly or gives honest opinions.": "speaks_clearly(Babe) ∨ gives_honest_opinions(Babe)",
      "Babe stays true to herself.": "stays_true_to_self(Babe)",
      "Anyone who gives honest opinions and is authentic will earn trust.": "∀x ((gives_honest_opinions(x) ∧ is_authentic(x)) → earns_trust(x))",
      "Anyone who speaks from the heart or stays true to themselves values honesty.": "∀x ((speaks_from_heart(x) ∨ stays_true_to_self(x)) → value_honesty(x))",
      "Anyone who shares experiences or builds relationships can inspire others.": "∀x ((shares_experiences(x) ∨ builds_relationships(x)) → inspires_others(x))",
      "Ryker expresses emotion.": "expresses_emotion(Ryker)",
      "Anyone who sets high standards or practices often is dedicated to their craft.": "∀x ((sets_high_standards(x) ∨ practices_often(x)) → dedicated_to_craft(x))",
      "Ryker respects the legacy.": "respects_legacy(Ryker)"
    },
    "conclusion_fol": "passionate_about_music(Babe) ∧ (preserve_tradition(Babe) ∧ create_original_works(Babe))"
  },
  {
    "id": 105,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ronan does not develop new techniques.",
    "reasoning": "fact1: Ronan diversifies his farm.\nrule: For all farmers, either they diversify their farm or improve their crops, but not necessarily both.\nconclusion: Ronan does not improve his crops.\n\nfact1: Ronan rotates fields.\nfact2: Ronan does not use crop rotation.\nrule: If Ronan either rotates fields or uses crop rotation (but not both), then he is dedicated.\nconclusion: Ronan is dedicated.\n\nfact1: Ronan is dedicated.\nfact2: Ronan does not improve his crops.\nrule: Every dedicated farmer either improves their crops or is experienced (or both).\nconclusion: Ronan is experienced.\n\nfact1: Ronan uses sustainable methods.\nrule: Ronan either uses sustainable methods or manages pests, but not both.\nconclusion: Ronan does not manage pests.\n\nfact1: Ronan does not manage pests.\nrule: Ronan either manages pests or increases crop yields.\nconclusion: Ronan is able to increase crop yields.\n\nfact1: Ronan is experienced.\nfact2: Ronan is able to increase crop yields.\nrule: If Ronan is experienced, then he can either increase crop yields or develop new techniques, but not both.\nconclusion: Ronan does not develop new techniques.\n\nTherefore, it is true that Ronan does not develop new techniques. The correct option is: A.",
    "context": "If a farmer works hard, then they value quality and are dedicated to their work. Anders does not use crop rotation. Every dedicated farmer either improves their crops or is experienced (or both). For all farmers, either they diversify their farm or improve their crops, but not necessarily both. Ronan either manages pests or increases crop yields. Ronan does not use crop rotation. Any farmer who uses quality seeds or optimizes soil conditions can increase crop yields. Every farmer monitors soil or manages pests. Ronan rotates fields. If Ronan is experienced, then he can either increase crop yields or develop new techniques, but not both. If Alyssa is experienced, then he can either increase crop yields or develop new techniques, but not both. If Bo either rotates fields or uses crop rotation (but not both), then he is dedicated. Ronan either uses sustainable methods or manages pests, but not both. If Ronan either rotates fields or uses crop rotation (but not both), then he is dedicated. Ronan diversifies his farm. Ronan uses sustainable methods. Bo diversifies his farm.",
    "nl2fol": {
      "If a farmer works hard, then they value quality and are dedicated to their work.": "∀x (works_hard(x) → (values_quality(x) ∧ dedicated(x)))",
      "Anders does not use crop rotation.": "¬uses_crop_rotation(Anders)",
      "Every dedicated farmer either improves their crops or is experienced (or both).": "∀x (dedicated(x) → (improve_crops(x) ∨ experienced(x)))",
      "For all farmers, either they diversify their farm or improve their crops, but not necessarily both.": "∀x (diversify_farm(x) ⊕ improve_crops(x))",
      "Ronan either manages pests or increases crop yields.": "manages_pests(Ronan) ∨ increase_crop_yields(Ronan)",
      "Ronan does not use crop rotation.": "¬uses_crop_rotation(Ronan)",
      "Any farmer who uses quality seeds or optimizes soil conditions can increase crop yields.": "∀x ((uses_quality_seeds(x) ∨ optimizes_soil_condition(x)) → increase_crop_yields(x))",
      "Every farmer monitors soil or manages pests.": "∀x (monitors_soil(x) ∨ manages_pests(x))",
      "Ronan rotates fields.": "rotates_fields(Ronan)",
      "If Ronan is experienced, then he can either increase crop yields or develop new techniques, but not both.": "experienced(Ronan) → (increase_crop_yields(Ronan) ⊕ develop_new_techniques(Ronan))",
      "If Alyssa is experienced, then he can either increase crop yields or develop new techniques, but not both.": "experienced(Alyssa) → (increase_crop_yields(Alyssa) ⊕ develop_new_techniques(Alyssa))",
      "If Bo either rotates fields or uses crop rotation (but not both), then he is dedicated.": "(rotates_fields(Bo) ⊕ uses_crop_rotation(Bo)) → dedicated(Bo)",
      "Ronan either uses sustainable methods or manages pests, but not both.": "uses_sustainable_methods(Ronan) ⊕ manages_pests(Ronan)",
      "If Ronan either rotates fields or uses crop rotation (but not both), then he is dedicated.": "(rotates_fields(Ronan) ⊕ uses_crop_rotation(Ronan)) → dedicated(Ronan)",
      "Ronan diversifies his farm.": "diversify_farm(Ronan)",
      "Ronan uses sustainable methods.": "uses_sustainable_methods(Ronan)",
      "Bo diversifies his farm.": "diversify_farm(Bo)"
    },
    "conclusion_fol": "¬develop_new_techniques(Ronan)"
  },
  {
    "id": 106,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kiddo does not participate in wassailing.",
    "reasoning": "fact1: Kiddo does not enjoy outdoor activities.\nrule: Kiddo either enjoys outdoor activities or has participated in parades.\nconclusion: Kiddo has participated in parades.\n\nfact1: Kiddo has participated in parades.\nrule: For Kiddo, either she has participated in parades or she wins competitions, but not necessarily both.\nconclusion: Kiddo does not win competitions.\n\nfact1: Kiddo works on a farm.\nrule: Kiddo either works on a farm or competes in shows, but not both.\nconclusion: Kiddo does not compete in shows.\n\nfact1: Kiddo has a good temperament.\nfact2: Kiddo does not win competitions.\nrule: If Kiddo has a good temperament, then she either wins competitions or is majestic (or both).\nconclusion: Kiddo is majestic.\n\nfact1: Kiddo is majestic.\nfact2: Kiddo does not compete in shows.\nrule: If Kiddo is majestic, then she either competes in shows or participates in wassailing, but not both.\nconclusion: Kiddo participates in wassailing.\n\nfact1: Kiddo participates in wassailing.\nrule: For every horse, either the horse participates in wassailing or the horse does not participate in wassailing, but not both.\nconclusion: Kiddo participates in wassailing.\n\nTherefore, it is false that Kiddo does not participate in wassailing. The correct option is: B.",
    "context": "For every horse, either the horse participates in wassailing or the horse does not participate in wassailing, but not both. Vada does not enjoy outdoor activities. Tessa either enjoys outdoor activities or has participated in parades. If Kiddo has a good temperament, then she either wins competitions or is majestic (or both). Kiddo either works on a farm or competes in shows, but not both. Vada works on a farm. Kiddo works on a farm. Kiddo does not enjoy outdoor activities. Kiddo has a good temperament. All horses with a noble appearance are majestic. Tessa either works on a farm or competes in shows, but not both. For Kiddo, either she has participated in parades or she wins competitions, but not necessarily both. If Tessa has a good temperament, then she either wins competitions or is majestic (or both). Any horse that leads processions has participated in parades. Kiddo either enjoys outdoor activities or has participated in parades. For Tessa, either she has participated in parades or she wins competitions, but not necessarily both. Tessa has a good temperament. If Kiddo is majestic, then she either competes in shows or participates in wassailing, but not both.",
    "nl2fol": {
      "For every horse, either the horse participates in wassailing or the horse does not participate in wassailing, but not both.": "∀x (participates_in_wassailing(x) ⊕ does_not_participate_in_wassailing(x))",
      "Vada does not enjoy outdoor activities.": "¬enjoys_outdoor_activities(Vada)",
      "Tessa either enjoys outdoor activities or has participated in parades.": "enjoys_outdoor_activities(Tessa) ∨ has_participated_in_parades(Tessa)",
      "If Kiddo has a good temperament, then she either wins competitions or is majestic (or both).": "has_good_temperament(Kiddo) → (wins_competitions(Kiddo) ∨ is_majestic(Kiddo))",
      "Kiddo either works on a farm or competes in shows, but not both.": "works_on_farm(Kiddo) ⊕ competes_in_shows(Kiddo)",
      "Vada works on a farm.": "works_on_farm(Vada)",
      "Kiddo works on a farm.": "works_on_farm(Kiddo)",
      "Kiddo does not enjoy outdoor activities.": "¬enjoys_outdoor_activities(Kiddo)",
      "Kiddo has a good temperament.": "has_good_temperament(Kiddo)",
      "All horses with a noble appearance are majestic.": "∀x (has_noble_appearance(x) → is_majestic(x))",
      "Tessa either works on a farm or competes in shows, but not both.": "works_on_farm(Tessa) ⊕ competes_in_shows(Tessa)",
      "For Kiddo, either she has participated in parades or she wins competitions, but not necessarily both.": "has_participated_in_parades(Kiddo) ⊕ wins_competitions(Kiddo)",
      "If Tessa has a good temperament, then she either wins competitions or is majestic (or both).": "has_good_temperament(Tessa) → (wins_competitions(Tessa) ∨ is_majestic(Tessa))",
      "Any horse that leads processions has participated in parades.": "∀x (leads_processions(x) → has_participated_in_parades(x))",
      "Kiddo either enjoys outdoor activities or has participated in parades.": "enjoys_outdoor_activities(Kiddo) ∨ has_participated_in_parades(Kiddo)",
      "For Tessa, either she has participated in parades or she wins competitions, but not necessarily both.": "has_participated_in_parades(Tessa) ⊕ wins_competitions(Tessa)",
      "Tessa has a good temperament.": "has_good_temperament(Tessa)",
      "If Kiddo is majestic, then she either competes in shows or participates in wassailing, but not both.": "is_majestic(Kiddo) → (competes_in_shows(Kiddo) ⊕ participates_in_wassailing(Kiddo))"
    },
    "conclusion_fol": "does_not_participate_in_wassailing(Kiddo)"
  },
  {
    "id": 107,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alana is free-spirited.",
    "reasoning": "fact1: Alana enjoys flexibility.\nfact2: Alana does not embrace improvisation.\nrule: If Alana enjoys flexibility, then she either values structure or embraces improvisation (or both).\nconclusion: Alana values structure.\n\nfact1: Alana values structure.\nrule: Alana either values structure or prioritizes creativity, but not both.\nconclusion: Alana does not prioritize creativity.\n\nfact1: Alana is detail-oriented.\nfact2: Alana does not prioritize creativity.\nrule: If Alana is detail-oriented, then she is either a perfectionist or prioritizes creativity, but not both.\nconclusion: Alana is a perfectionist.\n\nfact1: Alana is a perfectionist.\nfact2: Alana goes with her instinct.\nrule: If Alana is a perfectionist, then she either values planning or goes with her instinct, but not both.\nconclusion: Alana is not someone who values planning.\n\nfact1: Alana is not someone who values planning.\nrule: For Alana, she either values planning or is spontaneous, but not both.\nconclusion: Alana is spontaneous.\n\nfact1: Alana enjoys traveling.\nfact2: Alana is spontaneous.\nrule: If Alana enjoys traveling, then she is either adventurous or spontaneous (but not both).\nconclusion: Alana is not adventurous.\n\nfact1: Alana is not adventurous.\nfact2: Alana is artistic.\nrule: If Alana is either adventurous or artistic (but not both), then she is free-spirited.\nconclusion: Alana is free-spirited.\n\nTherefore, it is true that Alana is free-spirited. The correct option is: A.",
    "context": "Anyone who sets goals or makes lists values planning. If Alana enjoys flexibility, then she either values structure or embraces improvisation (or both). For Alana, she either values planning or is spontaneous, but not both. If Alana is either adventurous or artistic (but not both), then she is free-spirited. If Alana is detail-oriented, then she is either a perfectionist or prioritizes creativity, but not both. If Alana enjoys traveling, then she is either adventurous or spontaneous (but not both). Alana goes with her instinct. Alana is artistic. Alana enjoys traveling. Alana either values structure or prioritizes creativity, but not both. Alana enjoys flexibility. Alana does not embrace improvisation. If Alana is a perfectionist, then she either values planning or goes with her instinct, but not both. Alana is detail-oriented.",
    "nl2fol": {
      "Anyone who sets goals or makes lists values planning.": "∀x ((sets_goals(x) ∨ makes_lists(x)) → values_planning(x))",
      "If Alana enjoys flexibility, then she either values structure or embraces improvisation (or both).": "enjoys_flexibility(Alana) → (values_structure(Alana) ∨ embraces_improvisation(Alana))",
      "For Alana, she either values planning or is spontaneous, but not both.": "values_planning(Alana) ⊕ spontaneous(Alana)",
      "If Alana is either adventurous or artistic (but not both), then she is free-spirited.": "(adventurous(Alana) ⊕ artistic(Alana)) → free_spirited(Alana)",
      "If Alana is detail-oriented, then she is either a perfectionist or prioritizes creativity, but not both.": "is_detail_oriented(Alana) → (is_a_perfectionist(Alana) ⊕ prioritizes_creativity(Alana))",
      "If Alana enjoys traveling, then she is either adventurous or spontaneous (but not both).": "enjoys_traveling(Alana) → (adventurous(Alana) ⊕ spontaneous(Alana))",
      "Alana goes with her instinct.": "goes_with_instinct(Alana)",
      "Alana is artistic.": "artistic(Alana)",
      "Alana enjoys traveling.": "enjoys_traveling(Alana)",
      "Alana either values structure or prioritizes creativity, but not both.": "values_structure(Alana) ⊕ prioritizes_creativity(Alana)",
      "Alana enjoys flexibility.": "enjoys_flexibility(Alana)",
      "Alana does not embrace improvisation.": "¬embraces_improvisation(Alana)",
      "If Alana is a perfectionist, then she either values planning or goes with her instinct, but not both.": "is_a_perfectionist(Alana) → (values_planning(Alana) ⊕ goes_with_instinct(Alana))",
      "Alana is detail-oriented.": "is_detail_oriented(Alana)"
    },
    "conclusion_fol": "free_spirited(Alana)"
  },
  {
    "id": 108,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Iyla does not develop innovative remedies.",
    "reasoning": "fact1: Iyla discovers new properties.\nfact2: Iyla does not become an expert.\nrule: If Iyla discovers new properties and shares her findings, then she becomes an expert.\nconclusion: Iyla does not share her findings.\n\nfact1: Iyla does not achieve success.\nrule: If Iyla excels in experiments, then she will achieve success.\nconclusion: Iyla does not excel in experiments.\n\nfact1: Iyla conducts experiments.\nfact2: Iyla does not share her findings.\nrule: If Iyla conducts experiments, then she either shares her findings or keeps her notes private, but not both.\nconclusion: Iyla keeps her notes private.\n\nfact1: Iyla keeps her notes private.\nrule: Iyla either publishes her research or keeps her notes private, but not both.\nconclusion: Iyla does not publish research.\n\nfact1: Iyla does not excel in experiments.\nrule: A renowned alchemist excels in experiments.\nconclusion: Iyla is not a renowned alchemist.\n\nfact1: Iyla does not publish research.\nrule: Iyla gains recognition or publishes research (or both).\nconclusion: Iyla gains recognition.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Iyla does not develop innovative remedies. The correct option is: C.",
    "context": "Iyla does not become an expert. If Iyla excels in experiments, then she will achieve success. Iyla discovers new properties. Eloise conducts experiments. Christian gains recognition or publishes research (or both). Anyone who has an innovative mind or works hard can excel in experiments. Asher does not become an expert. If Iyla conducts experiments, then she either shares her findings or keeps her notes private, but not both. If Iyla pursues her passion, then she either gains recognition or improves people's lives (or both). Iyla conducts experiments. A renowned alchemist excels in experiments. Christian does not achieve success. Iyla does not achieve success. Iyla makes new findings or publishes research. If Asher excels in experiments, then she will achieve success. Asher discovers new properties. If Iyla discovers new properties and shares her findings, then she becomes an expert. Christian does not leave a lasting impact. Christian either publishes her research or keeps her notes private, but not both. Iyla either publishes her research or keeps her notes private, but not both. If Eloise discovers new properties and shares her findings, then she becomes an expert. Iyla gains recognition or publishes research (or both). If Iyla gathers data or analyzes results, then she will share her findings.",
    "nl2fol": {
      "Iyla does not become an expert.": "¬becomes_expert(Iyla)",
      "If Iyla excels in experiments, then she will achieve success.": "excel_in_experiments(Iyla) → achieve_success(Iyla)",
      "Iyla discovers new properties.": "discovers_new_properties(Iyla)",
      "Eloise conducts experiments.": "conduct_experiments(Eloise)",
      "Christian gains recognition or publishes research (or both).": "gain_recognition(Christian) ∨ publish_research(Christian)",
      "Anyone who has an innovative mind or works hard can excel in experiments.": "∀x ((has_innovative_mind(x) ∨ works_hard(x)) → excel_in_experiments(x))",
      "Asher does not become an expert.": "¬become_expert(Asher)",
      "If Iyla conducts experiments, then she either shares her findings or keeps her notes private, but not both.": "conduct_experiments(Iyla) → (share_findings(Iyla) ⊕ keep_private_notes(Iyla))",
      "If Iyla pursues her passion, then she either gains recognition or improves people's lives (or both).": "pursue_passion(Iyla) → (gain_recognition(Iyla) ∨ improve_people_lives(Iyla))",
      "Iyla conducts experiments.": "conduct_experiments(Iyla)",
      "A renowned alchemist excels in experiments.": "∀x (renowned_alchemist(x) → excel_in_experiments(x))",
      "Christian does not achieve success.": "¬achieves_success(Christian)",
      "Iyla does not achieve success.": "¬achieve_success(Iyla)",
      "Iyla makes new findings or publishes research.": "makes_new_findings(Iyla) ∨ publish_research(Iyla)",
      "If Asher excels in experiments, then she will achieve success.": "excel_in_experiments(Asher) → achieve_success(Asher)",
      "Asher discovers new properties.": "discovers_new_properties(Asher)",
      "If Iyla discovers new properties and shares her findings, then she becomes an expert.": "(discovers_new_properties(Iyla) ∧ share_findings(Iyla)) → becomes_expert(Iyla)",
      "Christian does not leave a lasting impact.": "¬leaves_lasting_impact(Christian)",
      "Christian either publishes her research or keeps her notes private, but not both.": "publish_research(Christian) ⊕ keep_private_notes(Christian)",
      "Iyla either publishes her research or keeps her notes private, but not both.": "publish_research(Iyla) ⊕ keep_private_notes(Iyla)",
      "If Eloise discovers new properties and shares her findings, then she becomes an expert.": "(discovers_new_properties(Eloise) ∧ share_findings(Eloise)) → becomes_expert(Eloise)",
      "Iyla gains recognition or publishes research (or both).": "gain_recognition(Iyla) ∨ publish_research(Iyla)",
      "If Iyla gathers data or analyzes results, then she will share her findings.": "(gather_data(Iyla) ∨ analyze_results(Iyla)) → share_findings(Iyla)"
    },
    "conclusion_fol": "¬develop_innovative_remedies(Iyla)"
  },
  {
    "id": 109,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Wyatt is not creative.",
    "reasoning": "fact1: Wyatt is reclusive.\nfact2: Wyatt has friends.\nrule: If Wyatt is reclusive, then he either has friends or has a family, but not both.\nconclusion: Wyatt does not have a family.\n\nfact1: Wyatt avoids crowds.\nfact2: Wyatt appreciates quiet.\nrule: Anyone who avoids crowds and appreciates quiet is likely to like being alone.\nconclusion: Wyatt likes being alone.\n\nfact1: Wyatt does not have a family.\nrule: Wyatt has a family or lives alone.\nconclusion: Wyatt lives alone.\n\nfact1: Wyatt likes being alone.\nrule: Wyatt either likes being alone or enjoys socializing, but not both.\nconclusion: Wyatt does not enjoy socializing.\n\nfact1: Wyatt lives alone.\nfact2: Wyatt does not enjoy socializing.\nrule: If Wyatt lives alone, then he either values solitude or enjoys socializing, but not both.\nconclusion: Wyatt values solitude.\n\nfact1: Wyatt values solitude.\nrule: Whoever values solitude, prefers privacy.\nconclusion: Wyatt prefers privacy.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Wyatt is not creative. The correct option is: C.",
    "context": "Wyatt is reclusive. If Wyatt is reclusive, then he either has friends or has a family, but not both. Wyatt seeks concentration or values solitude. Wyatt has a family or lives alone. Wyatt avoids crowds. Curtis is reclusive. Whoever values solitude, prefers privacy. Wyatt has friends. Wyatt either likes being alone or enjoys socializing, but not both. If Lila lives alone, then he either values solitude or enjoys socializing, but not both. Everyone who is introspective either has inner peace or likes being alone (or both). Ryatt either prefers privacy or is creative (or both). Ryatt either likes being alone or enjoys socializing, but not both. Lila appreciates quiet. Anyone who avoids crowds and appreciates quiet is likely to like being alone. If Wyatt is introspective, then he either enjoys socializing or finds inner peace (or both). If Wyatt lives alone, then he either values solitude or enjoys socializing, but not both. Wyatt appreciates quiet.",
    "nl2fol": {
      "Wyatt is reclusive.": "is_reclusive(Wyatt)",
      "If Wyatt is reclusive, then he either has friends or has a family, but not both.": "is_reclusive(Wyatt) → (has_friends(Wyatt) ⊕ has_family(Wyatt))",
      "Wyatt seeks concentration or values solitude.": "seeks_concentration(Wyatt) ∨ values_solitude(Wyatt)",
      "Wyatt has a family or lives alone.": "has_family(Wyatt) ∨ lives_alone(Wyatt)",
      "Wyatt avoids crowds.": "avoids_crowds(Wyatt)",
      "Curtis is reclusive.": "¬has_public_life(Curtis)",
      "Whoever values solitude, prefers privacy.": "∀x (values_solitude(x) → prefers_privacy(x))",
      "Wyatt has friends.": "has_friends(Wyatt)",
      "Wyatt either likes being alone or enjoys socializing, but not both.": "likes_being_alone(Wyatt) ⊕ enjoys_socializing(Wyatt)",
      "If Lila lives alone, then he either values solitude or enjoys socializing, but not both.": "lives_alone(Lila) → (values_solitude(Lila) ⊕ enjoys_socializing(Lila))",
      "Everyone who is introspective either has inner peace or likes being alone (or both).": "∀x (is_introspective(x) → (hasINNER_peace(x) ∨ likes_being_alone(x)))",
      "Ryatt either prefers privacy or is creative (or both).": "prefers_privacy(Ryatt) ∨ is_creative(Ryatt)",
      "Ryatt either likes being alone or enjoys socializing, but not both.": "likes_being_alone(Ryatt) ⊕ enjoys_socializing(Ryatt)",
      "Lila appreciates quiet.": "appreciates_quiet(Lila)",
      "Anyone who avoids crowds and appreciates quiet is likely to like being alone.": "∀x ((avoids_crowds(x) ∧ appreciates_quiet(x)) → likes_being_alone(x))",
      "If Wyatt is introspective, then he either enjoys socializing or finds inner peace (or both).": "is_introspective(Wyatt) → (enjoys_socializing(Wyatt) ∨ finds_inner_peace(Wyatt))",
      "If Wyatt lives alone, then he either values solitude or enjoys socializing, but not both.": "lives_alone(Wyatt) → (values_solitude(Wyatt) ⊕ enjoys_socializing(Wyatt))",
      "Wyatt appreciates quiet.": "appreciates_quiet(Wyatt)"
    },
    "conclusion_fol": "¬is_creative(Wyatt)"
  },
  {
    "id": 110,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Queenie is able to dominate the gut microbiome.",
    "reasoning": "fact1: Queenie breaks down food.\nfact2: Queenie colonizes intestines.\nrule: Any parasite that breaks down food and colonizes intestines will release waste products.\nconclusion: Queenie releases waste products.\n\nfact1: Queenie disrupts digestion.\nfact2: Queenie does not infest her host.\nrule: If Queenie either disrupts digestion or infests her host (but not both), then she causes chronic disease.\nconclusion: Queenie may cause chronic disease.\n\nfact1: Queenie may cause chronic disease.\nrule: A parasite may either cause chronic disease or multiply rapidly, but not necessarily both.\nconclusion: Queenie does not multiply rapidly.\n\nfact1: Queenie has flagella.\nfact2: Queenie releases waste products.\nrule: If Queenie has flagella, then she either releases waste products or produces toxins, but not both.\nconclusion: Queenie does not produce toxins.\n\nfact1: Queenie does not produce toxins.\nfact2: Queenie adapts to environments.\nrule: If Queenie either produces toxins or adapts to environments (but not both), then she can evade the immune system.\nconclusion: Queenie can evade the immune system.\n\nfact1: Queenie can evade the immune system.\nfact2: Queenie does not multiply rapidly.\nrule: If Queenie can evade the immune system, then she can either multiply rapidly or dominate the gut microbiome, but not both.\nconclusion: Queenie is able to dominate the gut microbiome.\n\nTherefore, it is true that Queenie is able to dominate the gut microbiome. The correct option is: A.",
    "context": "If Queenie has flagella, then she either releases waste products or produces toxins, but not both. If Queenie has a cell wall, then she can evade the immune system. Queenie colonizes intestines. If Queenie invades tissues, then she will produce toxins. Any parasite that breaks down food and colonizes intestines will release waste products. Queenie has flagella. Queenie disrupts digestion. If Queenie either produces toxins or adapts to environments (but not both), then she can evade the immune system. If Cora either produces toxins or adapts to environments (but not both), then she can evade the immune system. If Queenie can evade the immune system, then she can either multiply rapidly or dominate the gut microbiome, but not both. A parasite may either cause chronic disease or multiply rapidly, but not necessarily both. Queenie adapts to environments. If Queenie either disrupts digestion or infests her host (but not both), then she causes chronic disease. Cora adapts to environments. Queenie breaks down food. Leo has flagella. Queenie does not infest her host. Cora disrupts digestion.",
    "nl2fol": {
      "If Queenie has flagella, then she either releases waste products or produces toxins, but not both.": "has_flagella(Queenie) → (release_waste_products(Queenie) ⊕ produce_toxins(Queenie))",
      "If Queenie has a cell wall, then she can evade the immune system.": "has_cell_wall(Queenie) → evade_immune_system(Queenie)",
      "Queenie colonizes intestines.": "colonize_intestines(Queenie)",
      "If Queenie invades tissues, then she will produce toxins.": "invade_tissues(Queenie) → produce_toxins(Queenie)",
      "Any parasite that breaks down food and colonizes intestines will release waste products.": "∀x ((breaks_down_food(x) ∧ colonize_intestines(x)) → release_waste_products(x))",
      "Queenie has flagella.": "has_flagella(Queenie)",
      "Queenie disrupts digestion.": "disrupt_digestion(Queenie)",
      "If Queenie either produces toxins or adapts to environments (but not both), then she can evade the immune system.": "(produce_toxins(Queenie) ⊕ adapt_to_environments(Queenie)) → evade_immune_system(Queenie)",
      "If Cora either produces toxins or adapts to environments (but not both), then she can evade the immune system.": "(produce_toxins(Cora) ⊕ adapt_to_environments(Cora)) → evade_immune_system(Cora)",
      "If Queenie can evade the immune system, then she can either multiply rapidly or dominate the gut microbiome, but not both.": "evade_immune_system(Queenie) → (multiply_rapidly(Queenie) ⊕ dominate_gut_microbiome(Queenie))",
      "A parasite may either cause chronic disease or multiply rapidly, but not necessarily both.": "∀x (cause_chronic_disease(x) ⊕ multiply_rapidly(x))",
      "Queenie adapts to environments.": "adapt_to_environments(Queenie)",
      "If Queenie either disrupts digestion or infests her host (but not both), then she causes chronic disease.": "(disrupt_digestion(Queenie) ⊕ infest_host(Queenie)) → cause_chronic_disease(Queenie)",
      "Cora adapts to environments.": "adapt_to_environments(Cora)",
      "Queenie breaks down food.": "breaks_down_food(Queenie)",
      "Leo has flagella.": "has_flagella(Leo)",
      "Queenie does not infest her host.": "¬infest_host(Queenie)",
      "Cora disrupts digestion.": "disrupt_digestion(Cora)"
    },
    "conclusion_fol": "dominate_gut_microbiome(Queenie)"
  },
  {
    "id": 111,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kaia does not pray for rain.",
    "reasoning": "fact1: Kaia does not learn ancestral songs.\nfact2: Kaia does not feel connected to her roots.\nrule: If someone either learns ancestral songs or appreciates their heritage, then they feel connected to their roots.\nconclusion: Kaia does not appreciate her heritage.\n\nfact1: Kaia does not preserve history.\nfact2: Kaia does not appreciate her heritage.\nrule: For all people, if someone either preserves history or values their culture, then they appreciate their heritage.\nconclusion: Kaia does not value her culture.\n\nfact1: Kaia does not seek material wealth.\nrule: Kaia either seeks material wealth or shows devotion, but she cannot do both.\nconclusion: Kaia shows devotion.\n\nfact1: Kaia honors her family.\nfact2: Kaia does not value her culture.\nrule: If Kaia either respects her ancestors or honors her family (but not both), then she values her culture.\nconclusion: Kaia respects her ancestors.\n\nfact1: Kaia shows devotion.\nrule: If Kaia shows devotion, then she will get blessed.\nconclusion: Kaia will get blessed.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Kaia does not pray for rain. The correct option is: C.",
    "context": "Briar does not feel connected to her roots. Anyone who studies tribal history or participates in rites values their culture. For all people, if someone either preserves history or values their culture, then they appreciate their heritage. Briar keeps traditions alive. If someone believes in spirits and learns tribal dances, then they will show devotion. If Briar either respects her ancestors or honors her family (but not both), then she values her culture. Kaia does not learn ancestral songs. Briar does not preserve history. Kaia honors her family. If Carly shows devotion, then she will get blessed. If someone either learns ancestral songs or appreciates their heritage, then they feel connected to their roots. If Carly performs Katsina ceremonies and prays for rain, then she will get blessed. Anyone who studies tribal legends or participates in their community can appreciate their heritage. Carly honors her family. Briar does not learn ancestral songs. Celine does not seek material wealth. Kaia either seeks material wealth or shows devotion, but she cannot do both. If Kaia helps others or lives humbly, then she will get blessed. If Kaia either respects her ancestors or honors her family (but not both), then she values her culture. Kaia does not preserve history. Kaia does not seek material wealth. Kaia does not feel connected to her roots. If Kaia shows devotion, then she will get blessed.",
    "nl2fol": {
      "Briar does not feel connected to her roots.": "¬feel_connected(Briar)",
      "Anyone who studies tribal history or participates in rites values their culture.": "∀x ((study_tribal_history(x) ∨ participate_in_rites(x)) → value_culture(x))",
      "For all people, if someone either preserves history or values their culture, then they appreciate their heritage.": "∀x ((preserve_history(x) ⊕ value_culture(x)) → appreciate_heritage(x))",
      "Briar keeps traditions alive.": "keep_traditions_alive(Briar)",
      "If someone believes in spirits and learns tribal dances, then they will show devotion.": "∀x ((believes_in_spirits(x) ∧ learns_tribal_dances(x)) → show_devotion(x))",
      "If Briar either respects her ancestors or honors her family (but not both), then she values her culture.": "(respect_ancestors(Briar) ⊕ honor_family(Briar)) → value_culture(Briar)",
      "Kaia does not learn ancestral songs.": "¬learn_ancestral_songs(Kaia)",
      "Briar does not preserve history.": "¬preserve_history(Briar)",
      "Kaia honors her family.": "honor_family(Kaia)",
      "If Carly shows devotion, then she will get blessed.": "show_devotion(Carly) → get_blessed(Carly)",
      "If someone either learns ancestral songs or appreciates their heritage, then they feel connected to their roots.": "∀x ((learn_ancestral_songs(x) ⊕ appreciate_heritage(x)) → feel_connected(x))",
      "If Carly performs Katsina ceremonies and prays for rain, then she will get blessed.": "(perform_Katsina_ceremonies(Carly) ∧ pray_for_rain(Carly)) → get_blessed(Carly)",
      "Anyone who studies tribal legends or participates in their community can appreciate their heritage.": "∀x ((study_tribal_legends(x) ∨ participate_in_community(x)) → appreciate_heritage(x))",
      "Carly honors her family.": "honor_family(Carly)",
      "Briar does not learn ancestral songs.": "¬learn_ancestral_songs(Briar)",
      "Celine does not seek material wealth.": "¬seek_material_wealth(Celine)",
      "Kaia either seeks material wealth or shows devotion, but she cannot do both.": "seek_material_wealth(Kaia) ⊕ show_devotion(Kaia)",
      "If Kaia helps others or lives humbly, then she will get blessed.": "(help_others(Kaia) ∨ live_humbly(Kaia)) → get_blessed(Kaia)",
      "If Kaia either respects her ancestors or honors her family (but not both), then she values her culture.": "(respect_ancestors(Kaia) ⊕ honor_family(Kaia)) → value_culture(Kaia)",
      "Kaia does not preserve history.": "¬preserve_history(Kaia)",
      "Kaia does not seek material wealth.": "¬seek_material_wealth(Kaia)",
      "Kaia does not feel connected to her roots.": "¬feel_connected(Kaia)",
      "If Kaia shows devotion, then she will get blessed.": "show_devotion(Kaia) → get_blessed(Kaia)"
    },
    "conclusion_fol": "¬pray_for_rain(Kaia)"
  },
  {
    "id": 112,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Matilda does not explore her surroundings.",
    "reasoning": "fact1: Matilda lives in cold water.\nrule: If Matilda lives in cold water, then she has a slow metabolism and hibernates during winter.\nconclusion: Matilda hibernates during winter.\n\nfact1: Matilda has spatial awareness.\nfact2: Matilda cannot navigate the reef.\nrule: If a fish stays safe and has spatial awareness, then it can navigate the reef.\nconclusion: Matilda does not stay safe.\n\nfact1: Matilda does not stay safe.\nrule: Any fish that evades predators or dodges nets can stay safe.\nconclusion: Matilda cannot evade predators.\n\nfact1: Matilda hibernates during winter.\nrule: Matilda either hibernates during winter or gains energy, but not both.\nconclusion: Matilda does not gain energy.\n\nfact1: Matilda cannot evade predators.\nrule: All fish that are agile can evade predators.\nconclusion: Matilda does not have agility.\n\nfact1: Matilda is active during the night.\nrule: If Matilda is active during the night, then she follows currents and swims quickly.\nconclusion: Matilda swims quickly.\n\nfact1: Matilda swims quickly.\nfact2: Matilda does not gain energy.\nrule: Any fish that swims quickly and finds food will gain energy.\nconclusion: Matilda does not find food.\n\nfact1: Matilda does not have agility.\nfact2: Matilda cannot thrive in harmony with her surroundings.\nrule: Any fish that is agile or curious can thrive in harmony with their surroundings.\nconclusion: Matilda is not curious.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Matilda does not explore her surroundings. The correct option is: C.",
    "context": "Any fish that is agile or curious can thrive in harmony with their surroundings. Matilda lives in cold water. If Matilda lives in cold water, then she has a slow metabolism and hibernates during winter. If Matilda lives in cold areas and has low activity, then she hibernates during winter. Matilda either hibernates during winter or gains energy, but not both. If Matilda eats plankton, then she gains energy and has shiny scales. Every fish with good vision either finds food or socializes with its school (or both). Any fish that swims quickly and finds food will gain energy. All fish that are agile can evade predators. If a fish stays safe and has spatial awareness, then it can navigate the reef. Matilda cannot navigate the reef. Matilda cannot thrive in harmony with her surroundings. Any fish that evades predators or dodges nets can stay safe. Matilda is active during the night. If Matilda is active during the night, then she follows currents and swims quickly. Matilda has spatial awareness. If Matilda has good vision or enjoys discovery, then she is curious.",
    "nl2fol": {
      "Any fish that is agile or curious can thrive in harmony with their surroundings.": "∀x ((has_agility(x) ∨ curious(x)) → thrive_in_harmony(x))",
      "Matilda lives in cold water.": "lives_in_cold_water(Matilda)",
      "If Matilda lives in cold water, then she has a slow metabolism and hibernates during winter.": "lives_in_cold_water(Matilda) → (has_slow_metabolism(Matilda) ∧ hibernates_during_winter(Matilda))",
      "If Matilda lives in cold areas and has low activity, then she hibernates during winter.": "(lives_in_cold_areas(Matilda) ∧ has_low_activity(Matilda)) → hibernates_during_winter(Matilda)",
      "Matilda either hibernates during winter or gains energy, but not both.": "hibernates_during_winter(Matilda) ⊕ gains_energy(Matilda)",
      "If Matilda eats plankton, then she gains energy and has shiny scales.": "eats_plankton(Matilda) → (gains_energy(Matilda) ∧ has_shiny_scales(Matilda))",
      "Every fish with good vision either finds food or socializes with its school (or both).": "∀x (has_good_vision(x) → (find_food(x) ∨ socialize_with_school(x)))",
      "Any fish that swims quickly and finds food will gain energy.": "∀x ((swims_quickly(x) ∧ find_food(x)) → gains_energy(x))",
      "All fish that are agile can evade predators.": "∀x (has_agility(x) → evades_predators(x))",
      "If a fish stays safe and has spatial awareness, then it can navigate the reef.": "∀x ((stays_safe(x) ∧ has_spatial_awareness(x)) → navigates_reef(x))",
      "Matilda cannot navigate the reef.": "¬navigates_reef(Matilda)",
      "Matilda cannot thrive in harmony with her surroundings.": "¬thrive_in_harmony(Matilda)",
      "Any fish that evades predators or dodges nets can stay safe.": "∀x ((evades_predators(x) ∨ dodges_net(x)) → stays_safe(x))",
      "Matilda is active during the night.": "active_during_night(Matilda)",
      "If Matilda is active during the night, then she follows currents and swims quickly.": "active_during_night(Matilda) → (follow_currents(Matilda) ∧ swims_quickly(Matilda))",
      "Matilda has spatial awareness.": "has_spatial_awareness(Matilda)",
      "If Matilda has good vision or enjoys discovery, then she is curious.": "(has_good_vision(Matilda) ∨ enjoys_discovery(Matilda)) → curious(Matilda)"
    },
    "conclusion_fol": "¬explore(Matilda)"
  },
  {
    "id": 113,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Luv does not develop innovative techniques.",
    "reasoning": "fact1: Luv solves complex problems.\nrule: All chemical engineers who solve complex problems both enhance water treatment processes and improve public health.\nconclusion: Luv enhances water treatment processes.\n\nfact1: Luv does not conduct academic research.\nrule: A chemical engineer either designs ecofriendly products or conducts academic research, but not necessarily both.\nconclusion: Luv designs ecofriendly products.\n\nfact1: Luv designs ecofriendly products.\nrule: Luv either designs ecofriendly products or reduces pollution, but not necessarily both.\nconclusion: Luv cannot reduce pollution.\n\nfact1: Luv cannot reduce pollution.\nrule: Any chemical engineer who creates demulsifying agents or improves environmental sustainability can reduce pollution.\nconclusion: Luv does not improve environmental sustainability.\n\nfact1: Luv does not improve environmental sustainability.\nfact2: Luv does not advance industrial processes.\nrule: If Luv develops innovative techniques, then she can either improve environmental sustainability or advance industrial processes, but not both.\nconclusion: Luv does not develop innovative techniques.\n\nTherefore, it is true that Luv does not develop innovative techniques. The correct option is: A.",
    "context": "All chemical engineers who solve complex problems both enhance water treatment processes and improve public health. Luv does not advance industrial processes. Luv does not conduct academic research. Luv solves complex problems. Veronica does not conduct academic research. Anyone who can purify contaminated water will enhance water treatment processes. A chemical engineer either designs ecofriendly products or conducts academic research, but not necessarily both. Any chemical engineer who creates demulsifying agents or improves environmental sustainability can reduce pollution. If Luv studies emulsions or experiments with chemicals, then she can create demulsifying agents. Koen either creates demulsifying agents or enhances water treatment processes. Veronica solves complex problems. Luv either designs ecofriendly products or reduces pollution, but not necessarily both. If Luv develops innovative techniques, then she can either improve environmental sustainability or advance industrial processes, but not both.",
    "nl2fol": {
      "All chemical engineers who solve complex problems both enhance water treatment processes and improve public health.": "∀x (solve_complex_problems(x) → (enhance_water_treatment(x) ∧ improve_public_health(x)))",
      "Luv does not advance industrial processes.": "¬advance_industrial_processes(Luv)",
      "Luv does not conduct academic research.": "¬conduct_academic_research(Luv)",
      "Luv solves complex problems.": "solve_complex_problems(Luv)",
      "Veronica does not conduct academic research.": "¬conduct_academic_research(Veronica)",
      "Anyone who can purify contaminated water will enhance water treatment processes.": "∀x (purify_contaminated_water(x) → enhance_water_treatment(x))",
      "A chemical engineer either designs ecofriendly products or conducts academic research, but not necessarily both.": "∀x (design_ecofriendly_products(x) ⊕ conduct_academic_research(x))",
      "Any chemical engineer who creates demulsifying agents or improves environmental sustainability can reduce pollution.": "∀x ((create_demulsifying_agents(x) ∨ improve_environmental_sustainability(x)) → reduce_pollution(x))",
      "If Luv studies emulsions or experiments with chemicals, then she can create demulsifying agents.": "(study_emulsions(Luv) ∨ experiment_with_chemicals(Luv)) → create_demulsifying_agents(Luv)",
      "Koen either creates demulsifying agents or enhances water treatment processes.": "create_demulsifying_agents(Koen) ∨ enhance_water_treatment(Koen)",
      "Veronica solves complex problems.": "solve_complex_problems(Veronica)",
      "Luv either designs ecofriendly products or reduces pollution, but not necessarily both.": "design_ecofriendly_products(Luv) ⊕ reduce_pollution(Luv)",
      "If Luv develops innovative techniques, then she can either improve environmental sustainability or advance industrial processes, but not both.": "develop_innovative_techniques(Luv) → (improve_environmental_sustainability(Luv) ⊕ advance_industrial_processes(Luv))"
    },
    "conclusion_fol": "¬develop_innovative_techniques(Luv)"
  },
  {
    "id": 114,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Simba does not learn valuable lessons.",
    "reasoning": "fact1: Simba reacts fast.\nfact2: Simba stays alert.\nrule: Any lion that reacts fast and stays alert can have quick reflexes.\nconclusion: Simba has quick reflexes.\n\nfact1: Simba is not cautious.\nrule: Simba is cautious or has loyal friends.\nconclusion: Simba has loyal friends.\n\nfact1: Simba has a bold nature.\nfact2: Simba does not seek adventure.\nrule: If Simba has a bold nature or seeks adventure, then he will explore dangerous paths.\nconclusion: Simba explores dangerous paths.\n\nfact1: Simba has quick reflexes.\nfact2: Simba has loyal friends.\nrule: If Simba has quick reflexes and has loyal friends, then he can survive adversity.\nconclusion: Simba survives adversity.\n\nfact1: Simba survives adversity.\nrule: Simba will gain wisdom if he survives adversity.\nconclusion: Simba gains wisdom.\n\nfact1: Simba ventures into the unknown.\nfact2: Simba gains wisdom.\nrule: If Simba ventures into the unknown, then he either gets into trouble or gains wisdom, but not both.\nconclusion: Simba does not get into trouble.\n\nfact1: Simba explores dangerous paths.\nfact2: Simba does not get into trouble.\nrule: If Simba explores dangerous paths, then he either learns valuable lessons or gets into trouble, but not both.\nconclusion: Simba learns valuable lessons.\n\nTherefore, it is false that Simba does not learn valuable lessons. The correct option is: B.",
    "context": "Callum reacts fast. Elisabeth will gain wisdom if he survives adversity. Any lion that acts impulsively or disobeys rules can get into trouble. If Simba has quick reflexes and has loyal friends, then he can survive adversity. Elisabeth stays alert. Aubrielle does not seek adventure. If Aubrielle has quick reflexes and has loyal friends, then he can survive adversity. Simba will gain wisdom if he survives adversity. If Simba has a bold nature or seeks adventure, then he will explore dangerous paths. If Elisabeth has a bold nature or seeks adventure, then he will explore dangerous paths. Callum is not cautious. Elisabeth has a bold nature. Any lion that reacts fast and stays alert can have quick reflexes. Simba does not seek adventure. If Callum ventures into the unknown, then he either gets into trouble or gains wisdom, but not both. Simba has a bold nature. Simba reacts fast. Simba is not cautious. Aubrielle is cautious or has loyal friends. Simba has loyal friends if he protects his pride. Simba is cautious or has loyal friends. Simba stays alert. If Simba ventures into the unknown, then he either gets into trouble or gains wisdom, but not both. If Simba explores dangerous paths, then he either learns valuable lessons or gets into trouble, but not both. Simba ventures into the unknown. If Aubrielle explores dangerous paths, then he either learns valuable lessons or gets into trouble, but not both.",
    "nl2fol": {
      "Callum reacts fast.": "reacts_fast(Callum)",
      "Elisabeth will gain wisdom if he survives adversity.": "survive_adversity(Elisabeth) → gain_wisdom(Elisabeth)",
      "Any lion that acts impulsively or disobeys rules can get into trouble.": "∀x ((acts_impulsively(x) ∨ disobeys_rules(x)) → get_into_trouble(x))",
      "If Simba has quick reflexes and has loyal friends, then he can survive adversity.": "(has_quick_reflexes(Simba) ∧ has_loyal_friends(Simba)) → survive_adversity(Simba)",
      "Elisabeth stays alert.": "stays_alert(Elisabeth)",
      "Aubrielle does not seek adventure.": "¬seeks_adventure(Aubrielle)",
      "If Aubrielle has quick reflexes and has loyal friends, then he can survive adversity.": "(has_quick_reflexes(Aubrielle) ∧ has_loyal_friends(Aubrielle)) → survive_adversity(Aubrielle)",
      "Simba will gain wisdom if he survives adversity.": "survive_adversity(Simba) → gain_wisdom(Simba)",
      "If Simba has a bold nature or seeks adventure, then he will explore dangerous paths.": "(has_bold_nature(Simba) ∨ seeks_adventure(Simba)) → explore_dangerous_paths(Simba)",
      "If Elisabeth has a bold nature or seeks adventure, then he will explore dangerous paths.": "(has_bold_nature(Elisabeth) ∨ seeks_adventure(Elisabeth)) → explore_dangerous_paths(Elisabeth)",
      "Callum is not cautious.": "¬is_cautious(Callum)",
      "Elisabeth has a bold nature.": "has_bold_nature(Elisabeth)",
      "Any lion that reacts fast and stays alert can have quick reflexes.": "∀x ((reacts_fast(x) ∧ stays_alert(x)) → has_quick_reflexes(x))",
      "Simba does not seek adventure.": "¬seeks_adventure(Simba)",
      "If Callum ventures into the unknown, then he either gets into trouble or gains wisdom, but not both.": "venture_into_unknown(Callum) → (get_into_trouble(Callum) ⊕ gain_wisdom(Callum))",
      "Simba has a bold nature.": "has_bold_nature(Simba)",
      "Simba reacts fast.": "reacts_fast(Simba)",
      "Simba is not cautious.": "¬is_cautious(Simba)",
      "Aubrielle is cautious or has loyal friends.": "is_cautious(Aubrielle) ∨ has_loyal_friends(Aubrielle)",
      "Simba has loyal friends if he protects his pride.": "protects_pride(Simba) → has_loyal_friends(Simba)",
      "Simba is cautious or has loyal friends.": "is_cautious(Simba) ∨ has_loyal_friends(Simba)",
      "Simba stays alert.": "stays_alert(Simba)",
      "If Simba ventures into the unknown, then he either gets into trouble or gains wisdom, but not both.": "venture_into_unknown(Simba) → (get_into_trouble(Simba) ⊕ gain_wisdom(Simba))",
      "If Simba explores dangerous paths, then he either learns valuable lessons or gets into trouble, but not both.": "explore_dangerous_paths(Simba) → (learn_valuable_lessons(Simba) ⊕ get_into_trouble(Simba))",
      "Simba ventures into the unknown.": "venture_into_unknown(Simba)",
      "If Aubrielle explores dangerous paths, then he either learns valuable lessons or gets into trouble, but not both.": "explore_dangerous_paths(Aubrielle) → (learn_valuable_lessons(Aubrielle) ⊕ get_into_trouble(Aubrielle))"
    },
    "conclusion_fol": "¬learn_valuable_lessons(Simba)"
  },
  {
    "id": 115,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miracle is not self-centered.",
    "reasoning": "fact1: Miracle does not value harmony.\nrule: Miracle values harmony or prioritizes others.\nconclusion: Miracle is someone who prioritizes others.\n\nfact1: Miracle does not foster collaboration.\nrule: Miracle either fosters collaboration or is a leader, but not necessarily both.\nconclusion: Miracle is a leader.\n\nfact1: Miracle is someone who prioritizes others.\nrule: Miracle is either someone who prioritizes others or thinks of herself, but not both.\nconclusion: Miracle does not think of herself.\n\nfact1: Miracle is a leader.\nfact2: Miracle does not think of herself.\nrule: If Miracle is a leader, then she is either selfless or thinks of herself, but not both.\nconclusion: Miracle puts others first.\n\nfact1: Miracle puts others first.\nrule: Either Miracle puts others first or she is community-oriented, but she cannot be both.\nconclusion: Miracle is not community-oriented.\n\nfact1: Miracle is not community-oriented.\nrule: Either Miracle is community-oriented or self-centered, but not both.\nconclusion: Miracle is self-centered.\n\nTherefore, it is false that Miracle is not self-centered. The correct option is: B.",
    "context": "Miracle is either someone who prioritizes others or thinks of herself, but not both. Either Miracle is community-oriented or self-centered, but not both. Miracle either fosters collaboration or is a leader, but not necessarily both. Miracle does not value harmony. Either Miracle puts others first or she is community-oriented, but she cannot be both. If Miracle is a leader, then she is either selfless or thinks of herself, but not both. Miracle values harmony or prioritizes others. Miracle does not foster collaboration.",
    "nl2fol": {
      "Miracle is either someone who prioritizes others or thinks of herself, but not both.": "prioritizes_others(Miracle) ⊕ thinks_of_herself(Miracle)",
      "Either Miracle is community-oriented or self-centered, but not both.": "community_oriented(Miracle) ⊕ self_centered(Miracle)",
      "Miracle either fosters collaboration or is a leader, but not necessarily both.": "fosters_collaboration(Miracle) ⊕ is_leader(Miracle)",
      "Miracle does not value harmony.": "¬values_harmony(Miracle)",
      "Either Miracle puts others first or she is community-oriented, but she cannot be both.": "puts_others_first(Miracle) ⊕ community_oriented(Miracle)",
      "If Miracle is a leader, then she is either selfless or thinks of herself, but not both.": "is_leader(Miracle) → (puts_others_first(Miracle) ⊕ thinks_of_herself(Miracle))",
      "Miracle values harmony or prioritizes others.": "values_harmony(Miracle) ∨ prioritizes_others(Miracle)",
      "Miracle does not foster collaboration.": "¬fosters_collaboration(Miracle)"
    },
    "conclusion_fol": "¬self_centered(Miracle)"
  },
  {
    "id": 116,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stone is not organized.",
    "reasoning": "fact1: Stone faces challenges.\nfact2: Stone does not find creative solutions.\nrule: Anyone who faces challenges either finds creative solutions or is resourceful (or both).\nconclusion: Stone is resourceful.\n\nfact1: Stone has problem-solving skills.\nfact2: Stone is resourceful.\nrule: Everyone who has problem-solving skills either thinks critically or is resourceful.\nconclusion: Stone does not think critically.\n\nfact1: Stone does not think critically.\nrule: Stone thinks critically or makes intentional decisions.\nconclusion: Stone makes intentional decisions.\n\nfact1: Stone manages his time effectively.\nrule: Anyone who manages their time effectively is productive.\nconclusion: Stone is productive.\n\nfact1: Stone values simplicity.\nfact2: Stone makes intentional decisions.\nrule: If someone values simplicity, then they have clarity and make intentional decisions.\nconclusion: Stone has clarity.\n\nfact1: Stone has clarity.\nfact2: Stone does not live harmoniously.\nrule: If someone is stress-free and has clarity, then they can live harmoniously.\nconclusion: Stone is not stress-free.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Stone is not organized. The correct option is: C.",
    "context": "Pumpkin faces challenges. Everyone who is efficient either stays focused or is productive (or both). Everyone who has problem-solving skills either thinks critically or is resourceful. Stone does not live harmoniously. Anyone who manages their time effectively is productive. If Stone either adapts quickly or improvises well (but not both), then he is resourceful. Stone faces challenges. If someone is stress-free and has clarity, then they can live harmoniously. If Alexia is organized, then he is either productive or stress-free, but not both. If Stone practices reflection, then he either makes intentional decisions or is disciplined, but not both. Stone does not find creative solutions. Ishaan manages his time effectively. Stone has problem-solving skills. Stone values simplicity. If someone values simplicity, then they have clarity and make intentional decisions. Stone thinks critically or makes intentional decisions. Stone manages his time effectively. Anyone who faces challenges either finds creative solutions or is resourceful (or both).",
    "nl2fol": {
      "Pumpkin faces challenges.": "face_challenges(Pumpkin)",
      "Everyone who is efficient either stays focused or is productive (or both).": "∀x (efficient(x) → (focused(x) ∨ productive(x)))",
      "Everyone who has problem-solving skills either thinks critically or is resourceful.": "∀x (has_problem_solving_skills(x) → (thinks_critically(x) ⊕ is_resourceful(x)))",
      "Stone does not live harmoniously.": "¬lives_harmoniously(Stone)",
      "Anyone who manages their time effectively is productive.": "∀x (manages_time_effectively(x) → productive(x))",
      "If Stone either adapts quickly or improvises well (but not both), then he is resourceful.": "(adapts_quickly(Stone) ⊕ improvises_well(Stone)) → is_resourceful(Stone)",
      "Stone faces challenges.": "faces_challenges(Stone)",
      "If someone is stress-free and has clarity, then they can live harmoniously.": "∀x ((stress_free(x) ∧ has_clarity(x)) → lives_harmoniously(x))",
      "If Alexia is organized, then he is either productive or stress-free, but not both.": "organized(Alexia) → (productive(Alexia) ⊕ stress_free(Alexia))",
      "If Stone practices reflection, then he either makes intentional decisions or is disciplined, but not both.": "practices_reflection(Stone) → (makes_intentional_decisions(Stone) ⊕ is_disciplined(Stone))",
      "Stone does not find creative solutions.": "¬finds_creative_solutions(Stone)",
      "Ishaan manages his time effectively.": "manages_time_effectively(Ishaan)",
      "Stone has problem-solving skills.": "has_problem_solving_skills(Stone)",
      "Stone values simplicity.": "values_simplicity(Stone)",
      "If someone values simplicity, then they have clarity and make intentional decisions.": "∀x (values_simplicity(x) → (has_clarity(x) ∧ makes_intentional_decisions(x)))",
      "Stone thinks critically or makes intentional decisions.": "thinks_critically(Stone) ∨ makes_intentional_decisions(Stone)",
      "Stone manages his time effectively.": "manages_time_effectively(Stone)",
      "Anyone who faces challenges either finds creative solutions or is resourceful (or both).": "∀x (faces_challenges(x) → (finds_creative_solutions(x) ∨ is_resourceful(x)))"
    },
    "conclusion_fol": "¬organized(Stone)"
  },
  {
    "id": 117,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alice inspires others.",
    "reasoning": "fact1: Alice pursues personal interests.\nrule: If someone pursues personal interests, they may not always fight passionately for justice, and vice versa.\nconclusion: Alice does not passionately fight for justice.\n\nfact1: Alice listens actively.\nfact2: Alice empathizes with people.\nrule: For anyone who listens actively and empathizes with people, they are able to help others.\nconclusion: Alice helps others.\n\nfact1: Alice helps others.\nrule: If Alice cares deeply or helps others, then she can volunteer regularly.\nconclusion: Alice volunteers regularly.\n\nfact1: Alice is compassionate.\nfact2: Alice volunteers regularly.\nrule: If Alice is compassionate, then she either raises awareness or volunteers regularly, but not both.\nconclusion: Alice does not raise awareness.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Alice inspires others. The correct option is: C.",
    "context": "For anyone who listens actively and empathizes with people, they are able to help others. If Alice cares deeply or helps others, then she can volunteer regularly. Alice is compassionate. Zyaire pursues personal interests. Anyone who speaks out or organizes protests can raise awareness. Zyaire listens actively. If Alice sees injustice or speaks out, then she will passionately fight for justice. Zyaire empathizes with people. Emberlynn does not drive innovation. Alice empathizes with people. If someone pursues personal interests, they may not always fight passionately for justice, and vice versa. If Emberlynn cares deeply or helps others, then she can volunteer regularly. If Alice is compassionate, then she either raises awareness or volunteers regularly, but not both. Alice pursues personal interests. Emberlynn is compassionate. Alice listens actively.",
    "nl2fol": {
      "For anyone who listens actively and empathizes with people, they are able to help others.": "∀x ((listen_actively(x) ∧ empathize_with_people(x)) → help_others(x))",
      "If Alice cares deeply or helps others, then she can volunteer regularly.": "(care_deeply(Alice) ∨ help_others(Alice)) → volunteer_regularly(Alice)",
      "Alice is compassionate.": "is_compassionate(Alice)",
      "Zyaire pursues personal interests.": "pursues_personal_interests(Zyaire)",
      "Anyone who speaks out or organizes protests can raise awareness.": "∀x ((speak_out(x) ∨ organize_protests(x)) → raise_awareness(x))",
      "Zyaire listens actively.": "listens_actively(Zyaire)",
      "If Alice sees injustice or speaks out, then she will passionately fight for justice.": "(sees_injustice(Alice) ∨ speaks_out(Alice)) → passionately_fight_for_justice(Alice)",
      "Zyaire empathizes with people.": "empathize_with_people(Zyaire)",
      "Emberlynn does not drive innovation.": "¬drive_innovation(Emberlynn)",
      "Alice empathizes with people.": "empathize_with_people(Alice)",
      "If someone pursues personal interests, they may not always fight passionately for justice, and vice versa.": "∀x (pursue_personal_interests(x) ⊕ passionately_fight_for_justice(x))",
      "If Emberlynn cares deeply or helps others, then she can volunteer regularly.": "(care_deeply(Emberlynn) ∨ help_others(Emberlynn)) → volunteer_regularly(Emberlynn)",
      "If Alice is compassionate, then she either raises awareness or volunteers regularly, but not both.": "is_compassionate(Alice) → (raise_awareness(Alice) ⊕ volunteer_regularly(Alice))",
      "Alice pursues personal interests.": "pursue_personal_interests(Alice)",
      "Emberlynn is compassionate.": "is_compassionate(Emberlynn)",
      "Alice listens actively.": "listen_actively(Alice)"
    },
    "conclusion_fol": "inspire_others(Alice)"
  },
  {
    "id": 118,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alyssa makes breakthroughs.",
    "reasoning": "fact1: Alyssa enjoys hiking.\nfact2: Alyssa does not appreciate nature.\nrule: If Alyssa enjoys hiking, then she either appreciates nature or loves the outdoors (but not both).\nconclusion: Alyssa loves the outdoors.\n\nfact1: Alyssa loves the outdoors.\nrule: If Alyssa loves the outdoors, then she examines fossils and classifies minerals.\nconclusion: Alyssa examines fossils.\n\nfact1: Alyssa examines fossils.\nfact2: Alyssa does not map terrain.\nrule: If Alyssa either examines fossils or maps terrain (but not both), then she analyzes rock formations.\nconclusion: Alyssa analyzes rock formations.\n\nfact1: Alyssa analyzes rock formations.\nfact2: Alyssa does not uncover the secrets of the Earth.\nrule: Anyone who analyzes rock formations either studies geology or uncovers the secrets of the Earth (or both).\nconclusion: Alyssa studies geology.\n\nfact1: Alyssa studies geology.\nfact2: Alyssa does not gain recognition.\nrule: If Alyssa studies geology, then she can either make breakthroughs or gain recognition, but not both.\nconclusion: Alyssa makes breakthroughs.\n\nTherefore, it is true that Alyssa makes breakthroughs. The correct option is: A.",
    "context": "Jade does not map terrain. Alyssa does not map terrain. If Faith loves the outdoors, then she examines fossils and classifies minerals. Alyssa enjoys hiking. Alyssa does not appreciate nature. Faith does not gain recognition. If Twinkle enjoys hiking, then she either appreciates nature or loves the outdoors (but not both). Anyone who analyzes rock formations either studies geology or uncovers the secrets of the Earth (or both). Alyssa does not gain recognition. If Alyssa values exploration, then she loves the outdoors. If Alyssa studies geology, then she can either make breakthroughs or gain recognition, but not both. If Alyssa enjoys hiking, then she either appreciates nature or loves the outdoors (but not both). If Faith studies geology, then she can either make breakthroughs or gain recognition, but not both. Jade does not uncover the secrets of the Earth. If Alyssa loves the outdoors, then she examines fossils and classifies minerals. If Alyssa either finds fault lines or reads seismic data (but not both), then she studies geology. If Jade either examines fossils or maps terrain (but not both), then she analyzes rock formations. Jade enjoys hiking. If Twinkle collects rocks, then she will classify minerals. Alyssa does not uncover the secrets of the Earth. Faith does not collect rocks. If Alyssa either examines fossils or maps terrain (but not both), then she analyzes rock formations.",
    "nl2fol": {
      "Jade does not map terrain.": "¬map_terrain(Jade)",
      "Alyssa does not map terrain.": "¬map_terrain(Alyssa)",
      "If Faith loves the outdoors, then she examines fossils and classifies minerals.": "love_outdoors(Faith) → (examine_fossils(Faith) ∧ classify_minerals(Faith))",
      "Alyssa enjoys hiking.": "enjoys_hiking(Alyssa)",
      "Alyssa does not appreciate nature.": "¬appreciate_nature(Alyssa)",
      "Faith does not gain recognition.": "¬gain_recognition(Faith)",
      "If Twinkle enjoys hiking, then she either appreciates nature or loves the outdoors (but not both).": "enjoys_hiking(Twinkle) → (appreciate_nature(Twinkle) ⊕ love_outdoors(Twinkle))",
      "Anyone who analyzes rock formations either studies geology or uncovers the secrets of the Earth (or both).": "∀x (analyze_rock_formations(x) → (study_geology(x) ∨ uncover_earth_secrets(x)))",
      "Alyssa does not gain recognition.": "¬gain_recognition(Alyssa)",
      "If Alyssa values exploration, then she loves the outdoors.": "values_exploration(Alyssa) → love_outdoors(Alyssa)",
      "If Alyssa studies geology, then she can either make breakthroughs or gain recognition, but not both.": "study_geology(Alyssa) → (make_breakthroughs(Alyssa) ⊕ gain_recognition(Alyssa))",
      "If Alyssa enjoys hiking, then she either appreciates nature or loves the outdoors (but not both).": "enjoys_hiking(Alyssa) → (appreciate_nature(Alyssa) ⊕ love_outdoors(Alyssa))",
      "If Faith studies geology, then she can either make breakthroughs or gain recognition, but not both.": "study_geology(Faith) → (make_breakthroughs(Faith) ⊕ gain_recognition(Faith))",
      "Jade does not uncover the secrets of the Earth.": "¬uncover_earth_secrets(Jade)",
      "If Alyssa loves the outdoors, then she examines fossils and classifies minerals.": "love_outdoors(Alyssa) → (examine_fossils(Alyssa) ∧ classify_minerals(Alyssa))",
      "If Alyssa either finds fault lines or reads seismic data (but not both), then she studies geology.": "(find_fault_lines(Alyssa) ⊕ read_seismic_data(Alyssa)) → study_geology(Alyssa)",
      "If Jade either examines fossils or maps terrain (but not both), then she analyzes rock formations.": "(examine_fossils(Jade) ⊕ map_terrain(Jade)) → analyze_rock_formations(Jade)",
      "Jade enjoys hiking.": "enjoys_hiking(Jade)",
      "If Twinkle collects rocks, then she will classify minerals.": "collect_rocks(Twinkle) → classify_minerals(Twinkle)",
      "Alyssa does not uncover the secrets of the Earth.": "¬uncover_earth_secrets(Alyssa)",
      "Faith does not collect rocks.": "¬collect_rocks(Faith)",
      "If Alyssa either examines fossils or maps terrain (but not both), then she analyzes rock formations.": "(examine_fossils(Alyssa) ⊕ map_terrain(Alyssa)) → analyze_rock_formations(Alyssa)"
    },
    "conclusion_fol": "make_breakthroughs(Alyssa)"
  },
  {
    "id": 119,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Edward is selfless.",
    "reasoning": "fact1: Edward wins big.\nfact2: Edward does not invest wisely.\nrule: If Edward wins big, then he either invests wisely or donates generously (but not both).\nconclusion: Edward donates generously.\n\nfact1: Edward donates generously.\nrule: Anyone who donates generously is a philanthropist.\nconclusion: Edward is philanthropic.\n\nfact1: Edward has strong convictions.\nrule: If Edward has strong convictions and is willing to take risks, then he is altruistic.\nconclusion: Edward is altruistic.\n\nfact1: Edward is philanthropic.\nfact2: Edward is altruistic.\nrule: If Edward is philanthropic, then he is either altruistic or puts others first, but not both.\nconclusion: Edward is selfish.\n\nfact1: Edward is selfish.\nrule: Edward either puts others first or is selfish.\nconclusion: Edward is selfish.\n\nfact1: Edward is selfish.\nrule: Either Edward is selfish or selfless, but not both.\nconclusion: Edward is not selfless.\n\nTherefore, it is false that Edward is selfless. The correct option is: B.",
    "context": "Either Kiana is selfish or selfless, but not both. Marilyn either puts others first or is selfish. If Edward has strong convictions and is willing to take risks, then he is altruistic. If Edward is philanthropic, then he is either altruistic or puts others first, but not both. Edward wins big. Edward does not invest wisely. If Edward wins big, then he either invests wisely or donates generously (but not both). Lumlums speaks his mind. Edward has strong convictions. Anyone who has strong morals or cares deeply for others puts others first. Edward either cares for others or is selfish. Edward either puts others first or is selfish. Lumlums does not invest wisely. If Kiana has strong convictions and is willing to take risks, then he is altruistic. Anyone who prioritizes others' needs is altruistic. Anyone who donates generously is a philanthropist. If Kiana wins big, then he either invests wisely or donates generously (but not both). Either Edward is selfish or selfless, but not both. Marilyn wins big.",
    "nl2fol": {
      "Either Kiana is selfish or selfless, but not both.": "selfish(Kiana) ⊕ selfless(Kiana)",
      "Marilyn either puts others first or is selfish.": "puts_others_first(Marilyn) ∨ selfish(Marilyn)",
      "If Edward has strong convictions and is willing to take risks, then he is altruistic.": "has_strong_convictions(Edward) → (willing_to_take_risks(Edward) ∧ is_altruistic(Edward))",
      "If Edward is philanthropic, then he is either altruistic or puts others first, but not both.": "is_philanthropic(Edward) → (is_altruistic(Edward) ⊕ puts_others_first(Edward))",
      "Edward wins big.": "wins_big(Edward)",
      "Edward does not invest wisely.": "¬invests_wisely(Edward)",
      "If Edward wins big, then he either invests wisely or donates generously (but not both).": "wins_big(Edward) → (invests_wisely(Edward) ⊕ donates_generously(Edward))",
      "Lumlums speaks his mind.": "speaks_his_mind(Lumlums)",
      "Edward has strong convictions.": "has_strong_convictions(Edward)",
      "Anyone who has strong morals or cares deeply for others puts others first.": "∀x ((has_strong_morals(x) ∨ cares_deeply(x)) → puts_others_first(x))",
      "Edward either cares for others or is selfish.": "cares_for_others(Edward) ∨ selfish(Edward)",
      "Edward either puts others first or is selfish.": "puts_others_first(Edward) ∨ selfish(Edward)",
      "Lumlums does not invest wisely.": "¬invests_wisely(Lumlums)",
      "If Kiana has strong convictions and is willing to take risks, then he is altruistic.": "has_strong_convictions(Kiana) → (willing_to_take_risks(Kiana) ∧ is_altruistic(Kiana))",
      "Anyone who prioritizes others' needs is altruistic.": "∀x (prioritizes_others_needs(x) → is_altruistic(x))",
      "Anyone who donates generously is a philanthropist.": "∀x (donates_generously(x) → is_philanthropic(x))",
      "If Kiana wins big, then he either invests wisely or donates generously (but not both).": "wins_big(Kiana) → (invests_wisely(Kiana) ⊕ donates_generously(Kiana))",
      "Either Edward is selfish or selfless, but not both.": "selfish(Edward) ⊕ selfless(Edward)",
      "Marilyn wins big.": "wins_big(Marilyn)"
    },
    "conclusion_fol": "selfless(Edward)"
  },
  {
    "id": 120,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Elsa is insecure, then she is either manipulative or lonely, but not both.",
    "reasoning": "fact1: Elsa has high status.\nfact2: Elsa does not look down on others.\nrule: If Elsa has high status, then she either looks down on others or acts with empathy, but not both.\nconclusion: Elsa acts with empathy.\n\nfact1: Elsa builds real connections with others.\nrule: Elsa either builds real connections with others or fears rejection, but not both.\nconclusion: Elsa does not fear rejection.\n\nfact1: Elsa acts with empathy.\nrule: Elsa either craves validation or acts with empathy, but not both.\nconclusion: Elsa does not crave validation.\n\nfact1: Elsa does not fear rejection.\nfact2: Elsa needs approval.\nrule: If Elsa either fears rejection or needs approval (but not both), then she hides her true self.\nconclusion: Elsa hides her true self.\n\nfact1: Elsa hides her true self.\nfact2: Elsa does not crave validation.\nrule: If Elsa hides her true self, then she either values authenticity or craves validation (or both).\nconclusion: Elsa values authenticity.\n\nfact1: Elsa values authenticity.\nrule: For Elsa, valuing authenticity and seeking attention are mutually exclusive.\nconclusion: Elsa does not seek attention.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Elsa is insecure, then she is either manipulative or lonely, but not both. The correct option is: C.",
    "context": "If Dominick seeks attention, then she both masks her vulnerability and is insecure. Elsa does not look down on others. If Dominick either fears rejection or needs approval (but not both), then she hides her true self. Elsa needs approval. For Elsa, valuing authenticity and seeking attention are mutually exclusive. Elsa has high status. If Brayan has high status, then she either looks down on others or acts with empathy, but not both. Cherry is not lonely. Everyone who lacks confidence either seeks comfort or hides their true self (or both). If Elsa has high status, then she either looks down on others or acts with empathy, but not both. Cherry either craves validation or acts with empathy, but not both. Dominick either builds real connections with others or fears rejection, but not both. Elsa either builds real connections with others or fears rejection, but not both. Elsa either craves validation or acts with empathy, but not both. For any person, if they feel inadequate and criticize others, then they fear rejection. Brayan needs approval. Cherry has high status. Cherry does not look down on others. For Dominick, valuing authenticity and seeking attention are mutually exclusive. If Elsa either fears rejection or needs approval (but not both), then she hides her true self. Elsa builds real connections with others. If Dominick hides her true self, then she either values authenticity or craves validation (or both). If Elsa hides her true self, then she either values authenticity or craves validation (or both).",
    "nl2fol": {
      "If Dominick seeks attention, then she both masks her vulnerability and is insecure.": "seek_attention(Dominick) → (mask_vulnerability(Dominick) ∧ insecure(Dominick))",
      "Elsa does not look down on others.": "¬looks_down_on_others(Elsa)",
      "If Dominick either fears rejection or needs approval (but not both), then she hides her true self.": "(fears_rejection(Dominick) ⊕ needs_approval(Dominick)) → hide_true_self(Dominick)",
      "Elsa needs approval.": "needs_approval(Elsa)",
      "For Elsa, valuing authenticity and seeking attention are mutually exclusive.": "values_authenticity(Elsa) ⊕ seek_attention(Elsa)",
      "Elsa has high status.": "has_high_status(Elsa)",
      "If Brayan has high status, then she either looks down on others or acts with empathy, but not both.": "has_high_status(Brayan) → (looks_down_on_others(Brayan) ⊕ acts_with_empathy(Brayan))",
      "Cherry is not lonely.": "¬lonely(Cherry)",
      "Everyone who lacks confidence either seeks comfort or hides their true self (or both).": "∀x (lacks_confidence(x) → (seeks_comfort(x) ∨ hide_true_self(x)))",
      "If Elsa has high status, then she either looks down on others or acts with empathy, but not both.": "has_high_status(Elsa) → (looks_down_on_others(Elsa) ⊕ acts_with_empathy(Elsa))",
      "Cherry either craves validation or acts with empathy, but not both.": "acts_with_empathy(Cherry) ⊕ crave_validate(Cherry)",
      "Dominick either builds real connections with others or fears rejection, but not both.": "builds_real_connections(Dominick) ⊕ fears_rejection(Dominick)",
      "Elsa either builds real connections with others or fears rejection, but not both.": "builds_real_connections(Elsa) ⊕ fears_rejection(Elsa)",
      "Elsa either craves validation or acts with empathy, but not both.": "acts_with_empathy(Elsa) ⊕ crave_validate(Elsa)",
      "For any person, if they feel inadequate and criticize others, then they fear rejection.": "∀x ((feels_inadequate(x) ∧ criticizes_others(x)) → fears_rejection(x))",
      "Brayan needs approval.": "needs_approval(Brayan)",
      "Cherry has high status.": "has_high_status(Cherry)",
      "Cherry does not look down on others.": "¬looks_down_on_others(Cherry)",
      "For Dominick, valuing authenticity and seeking attention are mutually exclusive.": "values_authenticity(Dominick) ⊕ seek_attention(Dominick)",
      "If Elsa either fears rejection or needs approval (but not both), then she hides her true self.": "(fears_rejection(Elsa) ⊕ needs_approval(Elsa)) → hide_true_self(Elsa)",
      "Elsa builds real connections with others.": "builds_real_connections(Elsa)",
      "If Dominick hides her true self, then she either values authenticity or craves validation (or both).": "hide_true_self(Dominick) → (values_authenticity(Dominick) ∨ crave_validate(Dominick))",
      "If Elsa hides her true self, then she either values authenticity or craves validation (or both).": "hide_true_self(Elsa) → (values_authenticity(Elsa) ∨ crave_validate(Elsa))"
    },
    "conclusion_fol": "insecure(Elsa) → (manipulative(Elsa) ⊕ lonely(Elsa))"
  },
  {
    "id": 121,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Callen is efficient.",
    "reasoning": "fact1: Callen is thorough.\nfact2: Callen is not vigilant.\nrule: If Callen is thorough, then she is either vigilant or cautious, but not both.\nconclusion: Callen is cautious.\n\nfact1: Callen values accuracy.\nfact2: Callen does not strive for improvement.\nrule: All exacting individuals value accuracy and strive for improvement.\nconclusion: Callen is not exacting.\n\nfact1: Callen is cautious.\nfact2: Callen is not exacting.\nrule: For every human, if they are either a perfectionist or cautious, then they are exacting.\nconclusion: Callen is a perfectionist.\n\nfact1: Callen does not work diligently.\nfact2: Callen is not detail-oriented.\nrule: Anyone who achieves goals either works diligently or is detail-oriented (or both).\nconclusion: Callen does not achieve her goals.\n\nfact1: Callen does not achieve her goals.\nrule: Anyone who prioritizes tasks or manages their time can achieve their goals.\nconclusion: Callen does not manage her time.\n\nfact1: Callen does not manage her time.\nfact2: Callen does not meet deadlines.\nrule: Anyone who keeps track of things or manages their time can meet deadlines.\nconclusion: Callen does not keep track of things.\n\nfact1: Callen does not keep track of things.\nfact2: Callen has a system.\nrule: Anyone who keeps track of things or has a system can be organized.\nconclusion: Callen is organized.\n\nfact1: Callen is a perfectionist.\nfact2: Callen is not precise.\nrule: If Callen is a perfectionist, then she is either meticulous or precise (but not both).\nconclusion: Callen is meticulous.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Callen is efficient. The correct option is: C.",
    "context": "Anyone who keeps track of things or manages their time can meet deadlines. If someone avoids risks and thinks before acting, then they are cautious. Callen has a system. Callen is not precise. If Callen is a perfectionist, then she is either meticulous or precise (but not both). Callen does not work diligently. Anyone who achieves goals either works diligently or is detail-oriented (or both). Callen is not detail-oriented. If Callen is thorough, then she is either vigilant or cautious, but not both. For every human, if they are either a perfectionist or cautious, then they are exacting. Anyone who keeps track of things or has a system can be organized. Callen is thorough. Anyone who prioritizes tasks or manages their time can achieve their goals. Callen values accuracy. Callen is not vigilant. Callen does not meet deadlines. All exacting individuals value accuracy and strive for improvement. Callen does not strive for improvement.",
    "nl2fol": {
      "Anyone who keeps track of things or manages their time can meet deadlines.": "∀x ((keeps_track(x) ∨ manages_time(x)) → meets_deadlines(x))",
      "If someone avoids risks and thinks before acting, then they are cautious.": "∀x ((avoids_risks(x) ∧ thinks_before_acting(x)) → cautious(x))",
      "Callen has a system.": "has_system(Callen)",
      "Callen is not precise.": "¬precise(Callen)",
      "If Callen is a perfectionist, then she is either meticulous or precise (but not both).": "perfectionist(Callen) → (meticulous(Callen) ⊕ precise(Callen))",
      "Callen does not work diligently.": "¬works_diligently(Callen)",
      "Anyone who achieves goals either works diligently or is detail-oriented (or both).": "∀x (achieves_goals(x) → (works_diligently(x) ∨ is_detail_oriented(x)))",
      "Callen is not detail-oriented.": "¬is_detail_oriented(Callen)",
      "If Callen is thorough, then she is either vigilant or cautious, but not both.": "is_thorough(Callen) → (is_vigilant(Callen) ⊕ cautious(Callen))",
      "For every human, if they are either a perfectionist or cautious, then they are exacting.": "∀x ((perfectionist(x) ⊕ cautious(x)) → exacting(x))",
      "Anyone who keeps track of things or has a system can be organized.": "∀x ((keeps_track(x) ∨ has_system(x)) → organized(x))",
      "Callen is thorough.": "is_thorough(Callen)",
      "Anyone who prioritizes tasks or manages their time can achieve their goals.": "∀x ((prioritizes_tasks(x) ∨ manages_time(x)) → achieves_goals(x))",
      "Callen values accuracy.": "values_accuracy(Callen)",
      "Callen is not vigilant.": "¬is_vigilant(Callen)",
      "Callen does not meet deadlines.": "¬meets_deadlines(Callen)",
      "All exacting individuals value accuracy and strive for improvement.": "∀x (exacting(x) → (values_accuracy(x) ∧ strives_for_improvement(x)))",
      "Callen does not strive for improvement.": "¬strives_for_improvement(Callen)"
    },
    "conclusion_fol": "efficient(Callen)"
  },
  {
    "id": 122,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Taytum has an aquatic adaptation.",
    "reasoning": "fact1: Taytum eats insects.\nfact2: Taytum is not balanced.\nrule: If Taytum explores her environment and eats insects, then she is balanced.\nconclusion: Taytum does not explore her environments.\n\nfact1: Taytum has webbed feet.\nfact2: Taytum does not migrate long distances.\nrule: If Taytum has webbed feet, then she either migrates long distances or hibernates seasonally, but not both.\nconclusion: Taytum hibernates seasonally.\n\nfact1: Taytum does not explore her environments.\nfact2: Taytum regenerates quickly.\nrule: If Taytum is resilient, then she explores her environments and regenerates quickly.\nconclusion: Taytum is not resilient.\n\nfact1: Taytum is not resilient.\nrule: All thriving frogs are resilient.\nconclusion: Taytum does not thrive.\n\nfact1: Taytum hibernates seasonally.\nrule: Taytum either has terrestrial adaptation or hibernates seasonally, but not both.\nconclusion: Taytum does not have terrestrial adaptation.\n\nfact1: Taytum does not have terrestrial adaptation.\nfact2: Taytum does not thrive.\nrule: If Taytum has either aquatic adaptation or terrestrial adaptation (but not both), then she thrives.\nconclusion: Taytum has an aquatic adaptation.\n\nTherefore, it is false that Taytum has an aquatic adaptation. The correct option is: B.",
    "context": "Taytum eats insects. If Taytum has either aquatic adaptation or terrestrial adaptation (but not both), then she thrives. If Maximo is resilient, then she explores her environments and regenerates quickly. All thriving frogs are resilient. If Duke explores her environment and eats insects, then she is balanced. Taytum either lives in ponds or hibernates seasonally. Inaya either has terrestrial adaptation or hibernates seasonally, but not both. If Taytum has webbed feet, then she either migrates long distances or hibernates seasonally, but not both. If Taytum has strong skin, then she jumps far and explores her environments. If Taytum is resilient, then she explores her environments and regenerates quickly. Taytum does not migrate long distances. Taytum has webbed feet. Taytum either has terrestrial adaptation or hibernates seasonally, but not both. If Taytum explores her environment and eats insects, then she is balanced. Taytum is not balanced. Taytum regenerates quickly. If Taytum has gills or has lungs, then she can thrive.",
    "nl2fol": {
      "Taytum eats insects.": "eats_insects(Taytum)",
      "If Taytum has either aquatic adaptation or terrestrial adaptation (but not both), then she thrives.": "(aquatic_adaptation(Taytum) ⊕ terrestrial_adaptation(Taytum)) → thrives(Taytum)",
      "If Maximo is resilient, then she explores her environments and regenerates quickly.": "is_resilient(Maximo) → (explores_environments(Maximo) ∧ regenerates_quickly(Maximo))",
      "All thriving frogs are resilient.": "∀x (thrives(x) → is_resilient(x))",
      "If Duke explores her environment and eats insects, then she is balanced.": "(explores_environments(Duke) ∧ eats_insects(Duke)) → is_balanced(Duke)",
      "Taytum either lives in ponds or hibernates seasonally.": "lives_in_ponds(Taytum) ∨ hibernates_seasonally(Taytum)",
      "Inaya either has terrestrial adaptation or hibernates seasonally, but not both.": "terrestrial_adaptation(Inaya) ⊕ hibernates_seasonally(Inaya)",
      "If Taytum has webbed feet, then she either migrates long distances or hibernates seasonally, but not both.": "has_webbed_feet(Taytum) → (migrates_long_distance(Taytum) ⊕ hibernates_seasonally(Taytum))",
      "If Taytum has strong skin, then she jumps far and explores her environments.": "has_strong_skin(Taytum) → (jumps_far(Taytum) ∧ explores_environments(Taytum))",
      "If Taytum is resilient, then she explores her environments and regenerates quickly.": "is_resilient(Taytum) → (explores_environments(Taytum) ∧ regenerates_quickly(Taytum))",
      "Taytum does not migrate long distances.": "¬migrates_long_distance(Taytum)",
      "Taytum has webbed feet.": "has_webbed_feet(Taytum)",
      "Taytum either has terrestrial adaptation or hibernates seasonally, but not both.": "terrestrial_adaptation(Taytum) ⊕ hibernates_seasonally(Taytum)",
      "If Taytum explores her environment and eats insects, then she is balanced.": "(explores_environments(Taytum) ∧ eats_insects(Taytum)) → is_balanced(Taytum)",
      "Taytum is not balanced.": "¬is_balanced(Taytum)",
      "Taytum regenerates quickly.": "regenerates_quickly(Taytum)",
      "If Taytum has gills or has lungs, then she can thrive.": "(has_gills(Taytum) ∨ has_lungs(Taytum)) → thrives(Taytum)"
    },
    "conclusion_fol": "aquatic_adaptation(Taytum)"
  },
  {
    "id": 123,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rosalina is disloyal to the state.",
    "reasoning": "fact1: Rosalina builds strong relationships.\nrule: For everyone, either they gain influence or they build strong relationships, but not necessarily both.\nconclusion: Rosalina does not gain influence.\n\nfact1: Rosalina does not gain influence.\nrule: Rosalina either gains influence or makes key decisions.\nconclusion: Rosalina makes key decisions.\n\nfact1: Rosalina does not command respect.\nfact2: Rosalina makes key decisions.\nrule: If Rosalina either commands respect or makes key decisions (but not both), then she holds power.\nconclusion: Rosalina holds power.\n\nfact1: Rosalina holds power.\nfact2: Rosalina influences others.\nrule: If Rosalina holds power, then she influences others and challenges the status quo.\nconclusion: Rosalina challenges the status quo.\n\nfact1: Rosalina challenges the status quo.\nrule: Rosalina either challenges the status quo or obeys authority, but not both.\nconclusion: Rosalina does not obey authority.\n\nfact1: Rosalina does not obey authority.\nrule: Rosalina either obeys authority or is loyal to the state.\nconclusion: Rosalina is loyal to the state.\n\nfact1: Rosalina is loyal to the state.\nrule: Rosalina is either loyal to the state or disloyal to the state, but not both.\nconclusion: Rosalina is loyal to the state.\n\nTherefore, it is false that Rosalina is disloyal to the state. The correct option is: B.",
    "context": "Rosalina either obeys authority or is loyal to the state. Rosalina does not command respect. Rosalina is either loyal to the state or disloyal to the state, but not both. If Rosalina either questions policy or proposes reform (but not both), then she challenges the status quo. If Rosalina has strategic vision, then she either takes calculated risks or makes key decisions, but not both. For everyone, either they gain influence or they build strong relationships, but not necessarily both. Rosalina either gains influence or makes key decisions. Rosalina follows rules or obeys authority. If Haley either commands respect or makes key decisions (but not both), then she holds power. Rosalina influences others. Rosalina either challenges the status quo or obeys authority, but not both. If Rosalina either commands respect or makes key decisions (but not both), then she holds power. If Rosalina holds power, then she influences others and challenges the status quo. Rosalina builds strong relationships.",
    "nl2fol": {
      "Rosalina either obeys authority or is loyal to the state.": "obeys_authority(Rosalina) ∨ loyal_to_the_state(Rosalina)",
      "Rosalina does not command respect.": "¬commands_respect(Rosalina)",
      "Rosalina is either loyal to the state or disloyal to the state, but not both.": "loyal_to_the_state(Rosalina) ⊕ disloyal_to_the_state(Rosalina)",
      "If Rosalina either questions policy or proposes reform (but not both), then she challenges the status quo.": "(questions_policy(Rosalina) ⊕ proposes_reform(Rosalina)) → challenges_status_quo(Rosalina)",
      "If Rosalina has strategic vision, then she either takes calculated risks or makes key decisions, but not both.": "has_strategic_vision(Rosalina) → (takes_calculated_risks(Rosalina) ⊕ makes_key_decisions(Rosalina))",
      "For everyone, either they gain influence or they build strong relationships, but not necessarily both.": "∀x (builds_strong_relationships(x) ⊕ gains_influence(x))",
      "Rosalina either gains influence or makes key decisions.": "gains_influence(Rosalina) ∨ makes_key_decisions(Rosalina)",
      "Rosalina follows rules or obeys authority.": "follows_rules(Rosalina) ∨ obeys_authority(Rosalina)",
      "If Haley either commands respect or makes key decisions (but not both), then she holds power.": "(commands_respect(Haley) ⊕ makes_key_decisions(Haley)) → holds_power(Haley)",
      "Rosalina influences others.": "influences_others(Rosalina)",
      "Rosalina either challenges the status quo or obeys authority, but not both.": "challenges_status_quo(Rosalina) ⊕ obeys_authority(Rosalina)",
      "If Rosalina either commands respect or makes key decisions (but not both), then she holds power.": "(commands_respect(Rosalina) ⊕ makes_key_decisions(Rosalina)) → holds_power(Rosalina)",
      "If Rosalina holds power, then she influences others and challenges the status quo.": "holds_power(Rosalina) → (influences_others(Rosalina) ∧ challenges_status_quo(Rosalina))",
      "Rosalina builds strong relationships.": "builds_strong_relationships(Rosalina)"
    },
    "conclusion_fol": "disloyal_to_the_state(Rosalina)"
  },
  {
    "id": 124,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aila experiences tragedy.",
    "reasoning": "fact1: Aila takes art classes.\nfact2: Aila does not pursue music.\nrule: If Aila takes art classes, then she will either explore new interests or pursue music, but not both.\nconclusion: Aila explores new interests.\n\nfact1: Aila meets new people.\nfact2: Aila explores new interests.\nrule: If Aila meets new people, then she will rediscover her passion and explore new interests.\nconclusion: Aila rediscovers her passion.\n\nfact1: Aila rediscovers her passion.\nrule: Aila either rediscovers her passion or faces a personal crisis, but not both.\nconclusion: Aila does not face a personal crisis.\n\nfact1: Aila does not find inner strength.\nrule: Aila receives support or finds inner strength.\nconclusion: Aila receives support.\n\nfact1: Aila undergoes significant change.\nfact2: Aila does not face a personal crisis.\nrule: If Aila undergoes significant change, then she either loses a loved one or faces a personal crisis (but not both).\nconclusion: Aila loses a loved one.\n\nfact1: Aila loses a loved one.\nfact2: Aila does not need time to heal.\nrule: If Aila either loses a loved one or feels grief (but not both), then she will need time to heal.\nconclusion: Aila feels grief.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Aila experiences tragedy. The correct option is: C.",
    "context": "Dario either rediscovers her passion or faces a personal crisis, but not both. If someone hits rock bottom, then they face a personal crisis. Florence takes art classes. Aila either rediscovers her passion or faces a personal crisis, but not both. If Nelson meets new people, then she will rediscover her passion and explore new interests. Nelson does not find inner strength. Aila meets new people. Aila does not find inner strength. Dario receives support or finds inner strength. Aila undergoes significant change. Dario meets new people. Aila takes art classes. If Aila either loses a loved one or feels grief (but not both), then she will need time to heal. Aila receives support or finds inner strength. If Aila suffers loss and experiences pain, then she loses a loved one. Dario does not need time to heal. Nelson undergoes significant change. If Florence undergoes significant change, then she either loses a loved one or faces a personal crisis (but not both). If Aila takes art classes, then she will either explore new interests or pursue music, but not both. Aila does not need time to heal. If Aila undergoes significant change, then she either loses a loved one or faces a personal crisis (but not both). Aila does not pursue music. Anyone who creates again or finds new inspiration can rediscover their passion. Dario does not pursue music. If Aila either travels abroad or tries new hobbies (but not both), then she will explore new interests. If Aila meets new people, then she will rediscover her passion and explore new interests.",
    "nl2fol": {
      "Dario either rediscovers her passion or faces a personal crisis, but not both.": "rediscover_passion(Dario) ⊕ face_personal_crisis(Dario)",
      "If someone hits rock bottom, then they face a personal crisis.": "∀x (hit_rock_bottom(x) → face_personal_crisis(x))",
      "Florence takes art classes.": "take_art_classes(Florence)",
      "Aila either rediscovers her passion or faces a personal crisis, but not both.": "rediscover_passion(Aila) ⊕ face_personal_crisis(Aila)",
      "If Nelson meets new people, then she will rediscover her passion and explore new interests.": "meet_new_people(Nelson) → (rediscover_passion(Nelson) ∧ explore_new_interests(Nelson))",
      "Nelson does not find inner strength.": "¬find_inner_strength(Nelson)",
      "Aila meets new people.": "meet_new_people(Aila)",
      "Aila does not find inner strength.": "¬find_inner_strength(Aila)",
      "Dario receives support or finds inner strength.": "receive_support(Dario) ∨ find_inner_strength(Dario)",
      "Aila undergoes significant change.": "undergo_significant_change(Aila)",
      "Dario meets new people.": "meet_new_people(Dario)",
      "Aila takes art classes.": "take_art_classes(Aila)",
      "If Aila either loses a loved one or feels grief (but not both), then she will need time to heal.": "(lose_a_loved_one(Aila) ⊕ feel_grief(Aila)) → need_time_to_heal(Aila)",
      "Aila receives support or finds inner strength.": "receive_support(Aila) ∨ find_inner_strength(Aila)",
      "If Aila suffers loss and experiences pain, then she loses a loved one.": "(suffer_loss(Aila) ∧ experience_pain(Aila)) → lose_a_loved_one(Aila)",
      "Dario does not need time to heal.": "¬need_time_to_heal(Dario)",
      "Nelson undergoes significant change.": "undergo_significant_change(Nelson)",
      "If Florence undergoes significant change, then she either loses a loved one or faces a personal crisis (but not both).": "undergo_significant_change(Florence) → (lose_a_loved_one(Florence) ⊕ face_personal_crisis(Florence))",
      "If Aila takes art classes, then she will either explore new interests or pursue music, but not both.": "take_art_classes(Aila) → (explore_new_interests(Aila) ⊕ pursue_music(Aila))",
      "Aila does not need time to heal.": "¬need_time_to_heal(Aila)",
      "If Aila undergoes significant change, then she either loses a loved one or faces a personal crisis (but not both).": "undergo_significant_change(Aila) → (lose_a_loved_one(Aila) ⊕ face_personal_crisis(Aila))",
      "Aila does not pursue music.": "¬pursue_music(Aila)",
      "Anyone who creates again or finds new inspiration can rediscover their passion.": "∀x ((create_again(x) ∨ find_new_inspiration(x)) → rediscover_passion(x))",
      "Dario does not pursue music.": "¬pursue_music(Dario)",
      "If Aila either travels abroad or tries new hobbies (but not both), then she will explore new interests.": "(travel_abroad(Aila) ⊕ try_new_hobbies(Aila)) → explore_new_interests(Aila)",
      "If Aila meets new people, then she will rediscover her passion and explore new interests.": "meet_new_people(Aila) → (rediscover_passion(Aila) ∧ explore_new_interests(Aila))"
    },
    "conclusion_fol": "experience_tragedy(Aila)"
  },
  {
    "id": 125,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Augustine is a famous scientist.",
    "reasoning": "fact1: Augustine earns recognition.\nfact2: Augustine gains respect.\nrule: If Augustine wins awards, then he either earns recognition or gains respect (but not both).\nconclusion: Augustine does not win awards.\n\nfact1: Augustine does not explore ideas.\nrule: Everyone explores ideas or is curious.\nconclusion: Augustine is curious.\n\nfact1: Augustine is curious.\nfact2: Augustine solves puzzles.\nrule: If Augustine is curious, then he either seeks knowledge or solves puzzles (but not both).\nconclusion: Augustine does not seek knowledge.\n\nfact1: Augustine does not win awards.\nfact2: Augustine does not inspire others.\nrule: Anyone who makes a breakthrough or wins awards inspires others.\nconclusion: Augustine does not make a breakthrough.\n\nfact1: Augustine does not analyze results.\nrule: Augustine either analyzes results or collects data, but not both.\nconclusion: Augustine collects data.\n\nfact1: Augustine collects data.\nfact2: Augustine does not seek knowledge.\nrule: If Augustine either conducts research or collects data (but not both), then he seeks knowledge.\nconclusion: Augustine conducts research.\n\nfact1: Augustine conducts research.\nfact2: Augustine does not make a breakthrough.\nrule: If Augustine conducts research, then he is either an unknown scientist or makes a breakthrough (or both).\nconclusion: Augustine is an unknown scientist.\n\nfact1: Augustine is an unknown scientist.\nrule: Augustine is either a famous scientist or an unknown scientist, but not both.\nconclusion: Augustine is a famous scientist.\n\nTherefore, it is false that Augustine is a famous scientist. The correct option is: B.",
    "context": "If Augustine works hard, then he is either making breakthroughs or publishing papers (but not both). If Augustine exemplifies excellence, then he will win awards. If Augustine either conducts research or collects data (but not both), then he seeks knowledge. Augustine is either a famous scientist or an unknown scientist, but not both. Augustine does not explore ideas. Augustine gains respect. If Augustine wins awards, then he either earns recognition or gains respect (but not both). If Augustine conducts research, then he is either an unknown scientist or makes a breakthrough (or both). If Augustine works alone and avoids media, then he is an unknown scientist. Augustine solves puzzles. Augustine does not inspire others. Augustine does not analyze results. If Augustine is curious, then he either seeks knowledge or solves puzzles (but not both). Augustine earns recognition. Everyone explores ideas or is curious. Anyone who makes a breakthrough or wins awards inspires others. If someone monitors experiments, then they collect data. Augustine either analyzes results or collects data, but not both.",
    "nl2fol": {
      "If Augustine works hard, then he is either making breakthroughs or publishing papers (but not both).": "works_hard(Augustine) → (make_breakthrough(Augustine) ⊕ publish_papers(Augustine))",
      "If Augustine exemplifies excellence, then he will win awards.": "exemplify_excellence(Augustine) → win_awards(Augustine)",
      "If Augustine either conducts research or collects data (but not both), then he seeks knowledge.": "(conduct_research(Augustine) ⊕ collect_data(Augustine)) → seek_knowledge(Augustine)",
      "Augustine is either a famous scientist or an unknown scientist, but not both.": "famous_scientist(Augustine) ⊕ unknown_scientist(Augustine)",
      "Augustine does not explore ideas.": "¬explores_ideas(Augustine)",
      "Augustine gains respect.": "gain_respect(Augustine)",
      "If Augustine wins awards, then he either earns recognition or gains respect (but not both).": "win_awards(Augustine) → (earn_recognition(Augustine) ⊕ gain_respect(Augustine))",
      "If Augustine conducts research, then he is either an unknown scientist or makes a breakthrough (or both).": "conduct_research(Augustine) → (unknown_scientist(Augustine) ∨ make_breakthrough(Augustine))",
      "If Augustine works alone and avoids media, then he is an unknown scientist.": "(works_alone(Augustine) ∧ avoids_media(Augustine)) → unknown_scientist(Augustine)",
      "Augustine solves puzzles.": "solve_puzzles(Augustine)",
      "Augustine does not inspire others.": "¬inspire_others(Augustine)",
      "Augustine does not analyze results.": "¬analyze_results(Augustine)",
      "If Augustine is curious, then he either seeks knowledge or solves puzzles (but not both).": "is_curious(Augustine) → (seek_knowledge(Augustine) ⊕ solve_puzzles(Augustine))",
      "Augustine earns recognition.": "earn_recognition(Augustine)",
      "Everyone explores ideas or is curious.": "∀x (explores_ideas(x) ∨ is_curious(x))",
      "Anyone who makes a breakthrough or wins awards inspires others.": "∀x ((make_breakthrough(x) ∨ win_awards(x)) → inspire_others(x))",
      "If someone monitors experiments, then they collect data.": "∀x (monitor_experiments(x) → collect_data(x))",
      "Augustine either analyzes results or collects data, but not both.": "analyze_results(Augustine) ⊕ collect_data(Augustine)"
    },
    "conclusion_fol": "famous_scientist(Augustine)"
  },
  {
    "id": 126,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Andy does not oppose terraforming.",
    "reasoning": "fact1: Andy does not have practical skills.\nrule: Andy either has practical skills or has innovative ideas, but not both.\nconclusion: Andy has innovative ideas.\n\nfact1: Andy cares about nature.\nrule: If Andy cares about nature, then he will pursue sustainable living.\nconclusion: Andy pursues sustainable living.\n\nfact1: Andy has innovative ideas.\nrule: If Andy has innovative ideas, then he believes in space exploration and is curious about ecosystems.\nconclusion: Andy believes in space exploration.\n\nfact1: Andy pursues sustainable living.\nrule: Andy either pursues sustainable living or values environmental engineering, but not both.\nconclusion: Andy does not value environmental engineering.\n\nfact1: Andy believes in space exploration.\nfact2: Andy does not value environmental engineering.\nrule: If Andy believes in space exploration or values environmental engineering, then he supports terraforming.\nconclusion: Andy supports terraforming.\n\nfact1: Andy supports terraforming.\nrule: Andy either supports terraforming or opposes it, but not both.\nconclusion: Andy does not oppose terraforming.\n\nTherefore, it is true that Andy does not oppose terraforming. The correct option is: A.",
    "context": "Heath either has practical skills or has innovative ideas, but not both. If Andy studies planetary science or develops new technology, then he supports terraforming. Kabir cares about nature. Andy cares about nature. If Andy believes in space exploration or values environmental engineering, then he supports terraforming. If Andy has a passion, then he pursues sustainable living and learns quickly. If Cassidy has innovative ideas, then he believes in space exploration and is curious about ecosystems. If Cassidy believes in space exploration or values environmental engineering, then he supports terraforming. Heath either pursues sustainable living or values environmental engineering, but not both. Andy does not have practical skills. If Andy has innovative ideas, then he believes in space exploration and is curious about ecosystems. If Andy enjoys astrophysics, then he is either adventurous or believes in space exploration (but not both). Andy either has practical skills or has innovative ideas, but not both. Heath either supports terraforming or opposes it, but not both. If Andy is visionary, then he works hard and values environmental engineering. If Andy cares about nature, then he will pursue sustainable living. Andy either pursues sustainable living or values environmental engineering, but not both. Andy either supports terraforming or opposes it, but not both.",
    "nl2fol": {
      "Heath either has practical skills or has innovative ideas, but not both.": "has_practical_skills(Heath) ⊕ has_innovative_ideas(Heath)",
      "If Andy studies planetary science or develops new technology, then he supports terraforming.": "(studies_planetary_science(Andy) ∨ develops_new_technology(Andy)) → supports_terraforming(Andy)",
      "Kabir cares about nature.": "care_about_nature(Kabir)",
      "Andy cares about nature.": "cares_about_nature(Andy)",
      "If Andy believes in space exploration or values environmental engineering, then he supports terraforming.": "(believes_in_space_exploration(Andy) ∨ values_environmental_engineering(Andy)) → supports_terraforming(Andy)",
      "If Andy has a passion, then he pursues sustainable living and learns quickly.": "has_passion(Andy) → (pursues_sustainable_living(Andy) ∧ learns_quickly(Andy))",
      "If Cassidy has innovative ideas, then he believes in space exploration and is curious about ecosystems.": "has_innovative_ideas(Cassidy) → (believes_in_space_exploration(Cassidy) ∧ is_curious_about_ecosystems(Cassidy))",
      "If Cassidy believes in space exploration or values environmental engineering, then he supports terraforming.": "(believes_in_space_exploration(Cassidy) ∨ values_environmental_engineering(Cassidy)) → supports_terraforming(Cassidy)",
      "Heath either pursues sustainable living or values environmental engineering, but not both.": "pursues_sustainable_living(Heath) ⊕ values_environmental_engineering(Heath)",
      "Andy does not have practical skills.": "¬has_practical_skills(Andy)",
      "If Andy has innovative ideas, then he believes in space exploration and is curious about ecosystems.": "has_innovative_ideas(Andy) → (believes_in_space_exploration(Andy) ∧ is_curious_about_ecosystems(Andy))",
      "If Andy enjoys astrophysics, then he is either adventurous or believes in space exploration (but not both).": "enjoys_astrophysics(Andy) → (has_adventurous_spirit(Andy) ⊕ believes_in_space_exploration(Andy))",
      "Andy either has practical skills or has innovative ideas, but not both.": "has_practical_skills(Andy) ⊕ has_innovative_ideas(Andy)",
      "Heath either supports terraforming or opposes it, but not both.": "supports_terraforming(Heath) ⊕ opposes_terraforming(Heath)",
      "If Andy is visionary, then he works hard and values environmental engineering.": "is_visionary(Andy) → (works_hard(Andy) ∧ values_environmental_engineering(Andy))",
      "If Andy cares about nature, then he will pursue sustainable living.": "cares_about_nature(Andy) → pursues_sustainable_living(Andy)",
      "Andy either pursues sustainable living or values environmental engineering, but not both.": "pursues_sustainable_living(Andy) ⊕ values_environmental_engineering(Andy)",
      "Andy either supports terraforming or opposes it, but not both.": "supports_terraforming(Andy) ⊕ opposes_terraforming(Andy)"
    },
    "conclusion_fol": "¬opposes_terraforming(Andy)"
  },
  {
    "id": 127,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sapphire does not revolutionize magical practices.",
    "reasoning": "fact1: Sapphire summons fire energy.\nrule: Sapphire either summons fire energy or weaves protection spells, but not both.\nconclusion: Sapphire does not weave protection spells.\n\nfact1: Sapphire does not weave protection spells.\nrule: Sapphire either crafts innovative jewelry or weaves protection spells, but not both.\nconclusion: Sapphire is able to craft innovative jewelry.\n\nfact1: Sapphire does not control water elements.\nrule: Sapphire either controls water elements or harnesses air magic, but not both.\nconclusion: Sapphire harnesses air magic.\n\nfact1: Sapphire is attuned to elements.\nfact2: Sapphire is able to craft innovative jewelry.\nrule: If Sapphire is attuned to elements, then she is either able to craft innovative jewelry or forge powerful talismans, but not both.\nconclusion: Sapphire cannot forge powerful talismans.\n\nfact1: Sapphire harnesses air magic.\nrule: If Sapphire wields earth energy or harnesses air magic, then she can master elemental magic.\nconclusion: Sapphire masters elemental magic.\n\nfact1: Sapphire masters elemental magic.\nfact2: Sapphire cannot forge powerful talismans.\nrule: If Sapphire masters elemental magic, then she is either a skilled crystalweaver or can forge powerful talismans, but not both.\nconclusion: Sapphire is a skilled crystalweaver.\n\nfact1: Sapphire is a skilled crystalweaver.\nfact2: Sapphire does not create legendary artifacts.\nrule: If Sapphire is a skilled crystalweaver, then she can either create legendary artifacts or revolutionize magical practices, but not both.\nconclusion: Sapphire revolutionizes magical practices.\n\nTherefore, it is false that Sapphire does not revolutionize magical practices. The correct option is: B.",
    "context": "Sapphire is attuned to elements. If Sapphire masters elemental magic, then she is either a skilled crystalweaver or can forge powerful talismans, but not both. Sapphire either crafts innovative jewelry or weaves protection spells, but not both. Sapphire does not control water elements. Sapphire does not create legendary artifacts. If Sapphire wields earth energy or harnesses air magic, then she can master elemental magic. If Sapphire is attuned to elements, then she is either able to craft innovative jewelry or forge powerful talismans, but not both. Sapphire summons fire energy. Sapphire either summons fire energy or weaves protection spells, but not both. If Sapphire is a skilled crystalweaver, then she can either create legendary artifacts or revolutionize magical practices, but not both. Sapphire either controls water elements or harnesses air magic, but not both.",
    "nl2fol": {
      "Sapphire is attuned to elements.": "attuned_to_elements(Sapphire)",
      "If Sapphire masters elemental magic, then she is either a skilled crystalweaver or can forge powerful talismans, but not both.": "master_elemental_magic(Sapphire) → (forge_powerful_talismans(Sapphire) ⊕ skilled_crystalweaver(Sapphire))",
      "Sapphire either crafts innovative jewelry or weaves protection spells, but not both.": "weaves_protection_spells(Sapphire) ⊕ craft_innovative_jewelry(Sapphire)",
      "Sapphire does not control water elements.": "¬controls_water_elements(Sapphire)",
      "Sapphire does not create legendary artifacts.": "¬create_legendary_artifacts(Sapphire)",
      "If Sapphire wields earth energy or harnesses air magic, then she can master elemental magic.": "(wields_earth_energy(Sapphire) ∨ harnesses_air_magic(Sapphire)) → master_elemental_magic(Sapphire)",
      "If Sapphire is attuned to elements, then she is either able to craft innovative jewelry or forge powerful talismans, but not both.": "attuned_to_elements(Sapphire) → (craft_innovative_jewelry(Sapphire) ⊕ forge_powerful_talismans(Sapphire))",
      "Sapphire summons fire energy.": "summons_fire_energy(Sapphire)",
      "Sapphire either summons fire energy or weaves protection spells, but not both.": "summons_fire_energy(Sapphire) ⊕ weaves_protection_spells(Sapphire)",
      "If Sapphire is a skilled crystalweaver, then she can either create legendary artifacts or revolutionize magical practices, but not both.": "skilled_crystalweaver(Sapphire) → (create_legendary_artifacts(Sapphire) ⊕ revolutionize_magical_practices(Sapphire))",
      "Sapphire either controls water elements or harnesses air magic, but not both.": "controls_water_elements(Sapphire) ⊕ harnesses_air_magic(Sapphire)"
    },
    "conclusion_fol": "¬revolutionize_magical_practices(Sapphire)"
  },
  {
    "id": 128,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nathalia is not fearless.",
    "reasoning": "fact1: Nathalia goes hiking.\nfact2: Nathalia does not practice camping.\nrule: If someone either goes hiking or practices camping (but not both), then they have outdoor hobbies.\nconclusion: Nathalia has outdoor hobbies.\n\nfact1: Nathalia has outdoor hobbies.\nfact2: Nathalia does not appreciate scenic views.\nrule: Everyone who has outdoor hobbies either loves nature or appreciates scenic views (or both).\nconclusion: Nathalia loves nature.\n\nfact1: Nathalia is an explorer.\nfact2: Nathalia loves nature.\nrule: If someone is an explorer, then they are either adventurous or love nature.\nconclusion: Nathalia is not adventurous.\n\nfact1: Nathalia values humility.\nrule: For Nathalia, achieving success and valuing humility are mutually exclusive.\nconclusion: Nathalia does not achieve success.\n\nfact1: Nathalia does not push her limits.\nfact2: Nathalia does not achieve success.\nrule: If Nathalia either pushes her limits or develops her skills (but not both), then she achieves success.\nconclusion: Nathalia does not develop her skills.\n\nfact1: Nathalia enjoys challenges.\nfact2: Nathalia does not develop her skills.\nrule: If Nathalia enjoys challenges and seeks thrills, then she will develop her skills.\nconclusion: Nathalia does not seek thrills.\n\nfact1: Nathalia does not seek thrills.\nrule: Nathalia takes risks or seeks thrills.\nconclusion: Nathalia takes risks.\n\nfact1: Nathalia takes risks.\nfact2: Nathalia is not adventurous.\nrule: If Nathalia is either timid or takes risks, then she is adventurous.\nconclusion: Nathalia is timid.\n\nfact1: Nathalia is timid.\nrule: Nathalia is either fearless or timid, but not both.\nconclusion: Nathalia is not fearless.\n\nTherefore, it is true that Nathalia is not fearless. The correct option is: A.",
    "context": "Nathalia does not appreciate scenic views. Mae goes hiking. Nathalia is an explorer. Nathalia is either cautious or timid. Everyone who has outdoor hobbies either loves nature or appreciates scenic views (or both). Nathalia is either fearless or timid, but not both. If Nathalia enjoys challenges and seeks thrills, then she will develop her skills. Nathalia does not practice camping. If Nathalia is either timid or takes risks, then she is adventurous. For Nathalia, achieving success and valuing humility are mutually exclusive. Nathalia enjoys challenges. If Zainab either pushes her limits or develops her skills (but not both), then she achieves success. Nathalia takes risks or seeks thrills. If Nathalia trusts her instincts, then she either calculates her moves or takes risks (or both). Zainab does not appreciate scenic views. Mae is either fearless or timid, but not both. Nathalia enjoys adventure or seeks thrills. For Owen, achieving success and valuing humility are mutually exclusive. If Nathalia either pushes her limits or develops her skills (but not both), then she achieves success. If someone is an explorer, then they are either adventurous or love nature. Nathalia values humility. Zainab values humility. If someone either goes hiking or practices camping (but not both), then they have outdoor hobbies. Anyone who has an outdoor job either loves nature or understands their environment. Nathalia goes hiking. Nathalia does not push her limits. Zainab is an explorer. Zainab enjoys challenges. If Mae enjoys challenges and seeks thrills, then she will develop her skills. Zainab does not practice camping.",
    "nl2fol": {
      "Nathalia does not appreciate scenic views.": "¬appreciates_scenic_views(Nathalia)",
      "Mae goes hiking.": "goes_hiking(Mae)",
      "Nathalia is an explorer.": "is_explorer(Nathalia)",
      "Nathalia is either cautious or timid.": "cautious(Nathalia) ∨ timid(Nathalia)",
      "Everyone who has outdoor hobbies either loves nature or appreciates scenic views (or both).": "∀x (has_outdoor_hobbies(x) → (loves_nature(x) ∨ appreciates_scenic_views(x)))",
      "Nathalia is either fearless or timid, but not both.": "fearless(Nathalia) ⊕ timid(Nathalia)",
      "If Nathalia enjoys challenges and seeks thrills, then she will develop her skills.": "(enjoys_challenges(Nathalia) ∧ seeks_thrills(Nathalia)) → develops_skills(Nathalia)",
      "Nathalia does not practice camping.": "¬practices_camping(Nathalia)",
      "If Nathalia is either timid or takes risks, then she is adventurous.": "(takes_risks(Nathalia) ⊕ timid(Nathalia)) → adventurous(Nathalia)",
      "For Nathalia, achieving success and valuing humility are mutually exclusive.": "achieves_success(Nathalia) ⊕ values_humility(Nathalia)",
      "Nathalia enjoys challenges.": "enjoys_challenges(Nathalia)",
      "If Zainab either pushes her limits or develops her skills (but not both), then she achieves success.": "(pushes_limits(Zainab) ⊕ develops_skills(Zainab)) → achieves_success(Zainab)",
      "Nathalia takes risks or seeks thrills.": "takes_risks(Nathalia) ∨ seeks_thrills(Nathalia)",
      "If Nathalia trusts her instincts, then she either calculates her moves or takes risks (or both).": "trusts_instincts(Nathalia) → (calculates_moves(Nathalia) ∨ takes_risks(Nathalia))",
      "Zainab does not appreciate scenic views.": "¬appreciates_scenic_views(Zainab)",
      "Mae is either fearless or timid, but not both.": "fearless(Mae) ⊕ timid(Mae)",
      "Nathalia enjoys adventure or seeks thrills.": "enjoys_adventure(Nathalia) ∨ seeks_thrills(Nathalia)",
      "For Owen, achieving success and valuing humility are mutually exclusive.": "achieves_success(Owen) ⊕ values_humility(Owen)",
      "If Nathalia either pushes her limits or develops her skills (but not both), then she achieves success.": "(pushes_limits(Nathalia) ⊕ develops_skills(Nathalia)) → achieves_success(Nathalia)",
      "If someone is an explorer, then they are either adventurous or love nature.": "∀x (is_explorer(x) → (adventurous(x) ⊕ loves_nature(x)))",
      "Nathalia values humility.": "values_humility(Nathalia)",
      "Zainab values humility.": "values_humility(Zainab)",
      "If someone either goes hiking or practices camping (but not both), then they have outdoor hobbies.": "∀x ((goes_hiking(x) ⊕ practices_camping(x)) → has_outdoor_hobbies(x))",
      "Anyone who has an outdoor job either loves nature or understands their environment.": "∀x (has_outdoor_job(x) → (loves_nature(x) ∨ understands_environment(x)))",
      "Nathalia goes hiking.": "goes_hiking(Nathalia)",
      "Nathalia does not push her limits.": "¬pushes_limits(Nathalia)",
      "Zainab is an explorer.": "is_explorer(Zainab)",
      "Zainab enjoys challenges.": "enjoys_challenges(Zainab)",
      "If Mae enjoys challenges and seeks thrills, then she will develop her skills.": "(enjoys_challenges(Mae) ∧ seeks_thrills(Mae)) → develops_skills(Mae)",
      "Zainab does not practice camping.": "¬practices_camping(Zainab)"
    },
    "conclusion_fol": "¬fearless(Nathalia)"
  },
  {
    "id": 129,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gavin breaks barriers.",
    "reasoning": "fact1: Gavin does not investigate social issues.\nfact2: Gavin exposes injustice.\nrule: If Gavin either investigates social issues or exposes injustice (but not both), then he raises awareness.\nconclusion: Gavin raises awareness.\n\nfact1: Gavin sets goals.\nfact2: Gavin thinks critically.\nrule: If Gavin sets goals, then he is either result-oriented or thinks critically, but not both.\nconclusion: Gavin is not result-oriented.\n\nfact1: Gavin tells impactful stories.\nfact2: Gavin does not build trust.\nrule: Everyone who tells impactful stories either builds trust or is dedicated (or both).\nconclusion: Gavin is dedicated.\n\nfact1: Gavin does not take calculated risks.\nfact2: Gavin is not result-oriented.\nrule: Everyone who either takes calculated risks or is strategic is result-oriented.\nconclusion: Gavin is not strategic.\n\nfact1: Gavin covers underreported topics.\nfact2: Gavin does not have integrity.\nrule: If Gavin either covers underreported topics or reports investigatively (but not both), then he has integrity.\nconclusion: Gavin reports investigatively.\n\nfact1: Gavin is dedicated.\nfact2: Gavin is not strategic.\nrule: If Gavin is dedicated, then he is either passionate or strategic (but not both).\nconclusion: Gavin has passion.\n\nfact1: Gavin raises awareness.\nfact2: Gavin does not challenge the status quo.\nrule: If Gavin either raises awareness or challenges the status quo (but not both), then he sparks crucial conversations.\nconclusion: Gavin sparks crucial conversations.\n\nfact1: Gavin has passion.\nfact2: Gavin reports investigatively.\nrule: If Gavin has passion, then he is tenacious and reports investigatively.\nconclusion: Gavin is tenacious.\n\nfact1: Gavin is tenacious.\nfact2: Gavin sparks crucial conversations.\nrule: If Gavin is tenacious, then he either breaks barriers or sparks crucial conversations, but not both.\nconclusion: Gavin breaks barriers.\n\nTherefore, it is false that Gavin breaks barriers. The correct option is: B.",
    "context": "If Gavin has experience, then he is both strategic and values accuracy. Antonio does not challenge the status quo. Gavin does not investigate social issues. Gavin sets goals. Everyone who either takes calculated risks or is strategic is result-oriented. Gavin does not challenge the status quo. If Brayan is dedicated, then he is either passionate or strategic (but not both). If Gavin is tenacious, then he either breaks barriers or sparks crucial conversations, but not both. If Gavin is dedicated, then he is either passionate or strategic (but not both). Everyone who tells impactful stories either builds trust or is dedicated (or both). Gavin covers underreported topics. Gavin thinks critically. Gavin either investigates truth or raises awareness. Antonio exposes injustice. If Gavin sets goals, then he is either result-oriented or thinks critically, but not both. If Gavin pursues truth, then he is tenacious. Eduardo tells impactful stories. If Gavin either covers underreported topics or reports investigatively (but not both), then he has integrity. If Gavin either investigates social issues or exposes injustice (but not both), then he raises awareness. Gavin exposes injustice. Antonio does not investigate social issues. Antonio sets goals. Gavin does not have integrity. Antonio does not take calculated risks. If Gavin has passion, then he is tenacious and reports investigatively. Antonio covers underreported topics. Gavin tells impactful stories. If Eduardo has passion, then he is tenacious and reports investigatively. If Antonio either raises awareness or challenges the status quo (but not both), then he sparks crucial conversations. Gavin does not take calculated risks. Gavin either generates discussion or sparks crucial conversations. Gavin does not build trust. Antonio does not build trust. Eduardo thinks critically. If Gavin either raises awareness or challenges the status quo (but not both), then he sparks crucial conversations.",
    "nl2fol": {
      "If Gavin has experience, then he is both strategic and values accuracy.": "has_experience(Gavin) → (is_strategic(Gavin) ∧ value_accuracy(Gavin))",
      "Antonio does not challenge the status quo.": "¬challenges_status_quo(Antonio)",
      "Gavin does not investigate social issues.": "¬investigate_social_issues(Gavin)",
      "Gavin sets goals.": "set_goals(Gavin)",
      "Everyone who either takes calculated risks or is strategic is result-oriented.": "∀x ((takes_calculated_risks(x) ⊕ is_strategic(x)) → is_result_oriented(x))",
      "Gavin does not challenge the status quo.": "¬challenge_status_quo(Gavin)",
      "If Brayan is dedicated, then he is either passionate or strategic (but not both).": "is_dedicated(Brayan) → (has_passion(Brayan) ⊕ is_strategic(Brayan))",
      "If Gavin is tenacious, then he either breaks barriers or sparks crucial conversations, but not both.": "tenacious(Gavin) → (break_barriers(Gavin) ⊕ spark_crucial_conversations(Gavin))",
      "If Gavin is dedicated, then he is either passionate or strategic (but not both).": "is_dedicated(Gavin) → (has_passion(Gavin) ⊕ is_strategic(Gavin))",
      "Everyone who tells impactful stories either builds trust or is dedicated (or both).": "∀x (tell_impactful_stories(x) → (build_trust(x) ∨ is_dedicated(x)))",
      "Gavin covers underreported topics.": "covers_underreported_topics(Gavin)",
      "Gavin thinks critically.": "think_critically(Gavin)",
      "Gavin either investigates truth or raises awareness.": "investigate_truth(Gavin) ∨ raise_awareness(Gavin)",
      "Antonio exposes injustice.": "expose_injustice(Antonio)",
      "If Gavin sets goals, then he is either result-oriented or thinks critically, but not both.": "set_goals(Gavin) → (is_result_oriented(Gavin) ⊕ think_critically(Gavin))",
      "If Gavin pursues truth, then he is tenacious.": "persecute_truth(Gavin) → tenacious(Gavin)",
      "Eduardo tells impactful stories.": "tell_impactful_stories(Eduardo)",
      "If Gavin either covers underreported topics or reports investigatively (but not both), then he has integrity.": "(covers_underreported_topics(Gavin) ⊕ report_investigatively(Gavin)) → has_integrity(Gavin)",
      "If Gavin either investigates social issues or exposes injustice (but not both), then he raises awareness.": "(investigate_social_issues(Gavin) ⊕ expose_injustice(Gavin)) → raise_awareness(Gavin)",
      "Gavin exposes injustice.": "expose_injustice(Gavin)",
      "Antonio does not investigate social issues.": "¬investigates_social_issues(Antonio)",
      "Antonio sets goals.": "sets_goals(Antonio)",
      "Gavin does not have integrity.": "¬has_integrity(Gavin)",
      "Antonio does not take calculated risks.": "¬takes_calculated_risks(Antonio)",
      "If Gavin has passion, then he is tenacious and reports investigatively.": "has_passion(Gavin) → (tenacious(Gavin) ∧ report_investigatively(Gavin))",
      "Antonio covers underreported topics.": "covers_underreported_topics(Antonio)",
      "Gavin tells impactful stories.": "tell_impactful_stories(Gavin)",
      "If Eduardo has passion, then he is tenacious and reports investigatively.": "has_passion(Eduardo) → (tenacious(Eduardo) ∧ report_investigatively(Eduardo))",
      "If Antonio either raises awareness or challenges the status quo (but not both), then he sparks crucial conversations.": "(raise_awareness(Antonio) ⊕ challenge_status_quo(Antonio)) → spark_crucial_conversations(Antonio)",
      "Gavin does not take calculated risks.": "¬takes_calculated_risks(Gavin)",
      "Gavin either generates discussion or sparks crucial conversations.": "generates_discussion(Gavin) ∨ spark_crucial_conversations(Gavin)",
      "Gavin does not build trust.": "¬build_trust(Gavin)",
      "Antonio does not build trust.": "¬builds_trust(Antonio)",
      "Eduardo thinks critically.": "thinks_critically(Eduardo)",
      "If Gavin either raises awareness or challenges the status quo (but not both), then he sparks crucial conversations.": "(raise_awareness(Gavin) ⊕ challenge_status_quo(Gavin)) → spark_crucial_conversations(Gavin)"
    },
    "conclusion_fol": "break_barriers(Gavin)"
  },
  {
    "id": 130,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Waylen does not find true acceptance.",
    "reasoning": "fact1: Waylen takes risks.\nrule: Waylen either seeks social approval or takes risks, but not both.\nconclusion: Waylen does not seek social approval.\n\nfact1: Waylen is open-minded.\nfact2: Waylen does not challenge the status quo.\nrule: If Waylen is open-minded, then he either challenges the status quo or rejects stereotypes, but not both.\nconclusion: Waylen rejects stereotypes.\n\nfact1: Waylen does not seek social approval.\nrule: Waylen either seeks social approval or values uniqueness, but not both.\nconclusion: Waylen values uniqueness.\n\nfact1: Waylen values uniqueness.\nfact2: Waylen rejects stereotypes.\nrule: Anyone who values uniqueness and rejects stereotypes can embrace their individuality.\nconclusion: Waylen embraces his individuality.\n\nfact1: Waylen embraces his individuality.\nrule: For Waylen, either he conforms to social norms or he embraces his individuality, but these two paths are mutually exclusive.\nconclusion: Waylen does not conform to social norms.\n\nfact1: Waylen does not conform to social norms.\nrule: For Waylen, either he conforms to social norms or he expresses himself authentically, but these two paths are mutually exclusive.\nconclusion: Waylen expresses himself authentically.\n\nfact1: Waylen expresses himself authentically.\nrule: If Waylen expresses himself authentically, then he finds true acceptance.\nconclusion: Waylen finds true acceptance.\n\nTherefore, it is false that Waylen does not find true acceptance. The correct option is: B.",
    "context": "For Waylen, either he conforms to social norms or he expresses himself authentically, but these two paths are mutually exclusive. Laylani either seeks social approval or takes risks, but not both. Waylen takes risks. Waylen does not challenge the status quo. If Waylen expresses himself authentically, then he finds true acceptance. Anyone who craves praise will seek social approval. Anyone who values uniqueness and rejects stereotypes can embrace their individuality. If someone follows traditions and obeys authority, then they conform to social norms. Waylen speaks his mind or expresses himself authentically. Waylen is open-minded. If Waylen is open-minded, then he either challenges the status quo or rejects stereotypes, but not both. Waylen either seeks social approval or takes risks, but not both. For Waylen, either he conforms to social norms or he embraces his individuality, but these two paths are mutually exclusive. Waylen either seeks social approval or values uniqueness, but not both.",
    "nl2fol": {
      "For Waylen, either he conforms to social norms or he expresses himself authentically, but these two paths are mutually exclusive.": "conforms_to_social_norms(Waylen) ⊕ expresses_themselves_authentically(Waylen)",
      "Laylani either seeks social approval or takes risks, but not both.": "takes_risks(Laylani) ⊕ seeks_social_approval(Laylani)",
      "Waylen takes risks.": "takes_risks(Waylen)",
      "Waylen does not challenge the status quo.": "¬challenges_status_quo(Waylen)",
      "If Waylen expresses himself authentically, then he finds true acceptance.": "expresses_themselves_authentically(Waylen) → finds_true_acceptance(Waylen)",
      "Anyone who craves praise will seek social approval.": "∀x (craves_praise(x) → seeks_social_approval(x))",
      "Anyone who values uniqueness and rejects stereotypes can embrace their individuality.": "∀x ((values_uniqueness(x) ∧ rejects_stereotypes(x)) → embraces_individuality(x))",
      "If someone follows traditions and obeys authority, then they conform to social norms.": "∀x ((follows_traditions(x) ∧ obeys_authority(x)) → conforms_to_social_norms(x))",
      "Waylen speaks his mind or expresses himself authentically.": "speaks_their_mind(Waylen) ∨ expresses_themselves_authentically(Waylen)",
      "Waylen is open-minded.": "is_open_minded(Waylen)",
      "If Waylen is open-minded, then he either challenges the status quo or rejects stereotypes, but not both.": "is_open_minded(Waylen) → (challenges_status_quo(Waylen) ⊕ rejects_stereotypes(Waylen))",
      "Waylen either seeks social approval or takes risks, but not both.": "takes_risks(Waylen) ⊕ seeks_social_approval(Waylen)",
      "For Waylen, either he conforms to social norms or he embraces his individuality, but these two paths are mutually exclusive.": "embraces_individuality(Waylen) ⊕ conforms_to_social_norms(Waylen)",
      "Waylen either seeks social approval or values uniqueness, but not both.": "seeks_social_approval(Waylen) ⊕ values_uniqueness(Waylen)"
    },
    "conclusion_fol": "¬finds_true_acceptance(Waylen)"
  },
  {
    "id": 131,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cupcake is non-venomous.",
    "reasoning": "fact1: Cupcake has sharp fangs.\nfact2: Cupcake is not carnivorous.\nrule: All snakes that have a coiled body and sharp fangs are carnivorous.\nconclusion: Cupcake does not have a coiled body.\n\nfact1: Cupcake does not have a coiled body.\nfact2: Cupcake is not large.\nrule: If Cupcake has black scales, then she either has a coiled body or is large.\nconclusion: Cupcake is a snake without black scales.\n\nfact1: Cupcake does not strike quickly.\nrule: Cupcake either has deadly precision or strikes quickly.\nconclusion: Cupcake has deadly precision.\n\nfact1: Cupcake has golden eyes.\nfact2: Cupcake is a snake without black scales.\nrule: If Cupcake has golden eyes, then she is either a snake that lives in the rainforest or a snake with black scales, but not both.\nconclusion: Cupcake lives in the rainforest.\n\nfact1: Cupcake lives in the rainforest.\nfact2: Cupcake has deadly precision.\nrule: If Cupcake lives in the rainforest, then she is either fierce or has deadly precision, but not both.\nconclusion: Cupcake is not fierce.\n\nfact1: Cupcake is wild.\nfact2: Cupcake is not fierce.\nrule: If Cupcake is a wild snake and harmless, then she is not fierce.\nconclusion: Cupcake is not harmless.\n\nfact1: Cupcake is not harmless.\nrule: Every snake is either harmless or venomous.\nconclusion: Cupcake is venomous.\n\nfact1: Cupcake is venomous.\nrule: For every snake, it is either venomous or non-venomous, but not both.\nconclusion: Cupcake is non-venomous.\n\nTherefore, it is false that Cupcake is non-venomous. The correct option is: B.",
    "context": "Cupcake has golden eyes. If Cupcake is a solitary snake, then she lives in the rainforest. Cupcake is wild. Cupcake either has deadly precision or strikes quickly. Cupcake is not large. Cupcake is not carnivorous. If Cupcake is a wild snake and harmless, then she is not fierce. If Cupcake is aggressive, then she is venomous and dominates her territory. Cupcake has sharp fangs. If Cupcake has black scales, then she either has a coiled body or is large. If Cupcake lives in the rainforest, then she is either fierce or has deadly precision, but not both. For every snake, it is either venomous or non-venomous, but not both. Cupcake does not strike quickly. All snakes that have sharp teeth and attack preys are fierce. All snakes that have a coiled body and sharp fangs are carnivorous. If Cupcake has golden eyes, then she is either a snake that lives in the rainforest or a snake with black scales, but not both. Every snake is either harmless or venomous.",
    "nl2fol": {
      "Cupcake has golden eyes.": "has_golden_eyes(Cupcake)",
      "If Cupcake is a solitary snake, then she lives in the rainforest.": "is_solitary(Cupcake) → lives_in_rainforest(Cupcake)",
      "Cupcake is wild.": "is_wild(Cupcake)",
      "Cupcake either has deadly precision or strikes quickly.": "has_deadly_precision(Cupcake) ∨ strikes_quickly(Cupcake)",
      "Cupcake is not large.": "¬is_large(Cupcake)",
      "Cupcake is not carnivorous.": "¬is_carnivorous(Cupcake)",
      "If Cupcake is a wild snake and harmless, then she is not fierce.": "(is_wild(Cupcake) ∧ harmless(Cupcake)) → is_fierce(Cupcake)",
      "If Cupcake is aggressive, then she is venomous and dominates her territory.": "aggressive(Cupcake) → (venomous(Cupcake) ∧ dominates_territory(Cupcake))",
      "Cupcake has sharp fangs.": "has_sharp_fangs(Cupcake)",
      "If Cupcake has black scales, then she either has a coiled body or is large.": "has_black_scales(Cupcake) → (has_coiled_body(Cupcake) ∨ is_large(Cupcake))",
      "If Cupcake lives in the rainforest, then she is either fierce or has deadly precision, but not both.": "lives_in_rainforest(Cupcake) → (has_deadly_precision(Cupcake) ⊕ is_fierce(Cupcake))",
      "For every snake, it is either venomous or non-venomous, but not both.": "∀x (venomous(x) ⊕ non_venomous(x))",
      "Cupcake does not strike quickly.": "¬strikes_quickly(Cupcake)",
      "All snakes that have sharp teeth and attack preys are fierce.": "∀x ((has_sharp_teeth(x) ∧ attacks_preys(x)) → is_fierce(x))",
      "All snakes that have a coiled body and sharp fangs are carnivorous.": "∀x ((has_coiled_body(x) ∧ has_sharp_fangs(x)) → is_carnivorous(x))",
      "If Cupcake has golden eyes, then she is either a snake that lives in the rainforest or a snake with black scales, but not both.": "has_golden_eyes(Cupcake) → (has_black_scales(Cupcake) ⊕ lives_in_rainforest(Cupcake))",
      "Every snake is either harmless or venomous.": "∀x (harmless(x) ∨ venomous(x))"
    },
    "conclusion_fol": "non_venomous(Cupcake)"
  },
  {
    "id": 132,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Samantha is not skilled.",
    "reasoning": "fact1: Samantha works hard.\nrule: Anyone who has natural talent or works hard can learn through practice.\nconclusion: Samantha learns through practice.\n\nfact1: Samantha learns through practice.\nfact2: Samantha does not develop creative solutions.\nrule: Everyone who learns through practice either develops creative solutions or has vocational training (or both).\nconclusion: Samantha has vocational training.\n\nfact1: Samantha is not self-taught.\nfact2: Samantha has vocational training.\nrule: If Samantha is either self-taught or has vocational training (but not both), then she is a mechanic.\nconclusion: Samantha is a mechanic.\n\nfact1: Samantha does not troubleshoot well.\nfact2: Samantha fixes problems.\nrule: Anyone who troubleshoots well or fixes problems can gain hands-on experience.\nconclusion: Samantha has hands-on experience.\n\nfact1: Samantha is a mechanic.\nfact2: Samantha has apprenticeship training.\nrule: If Samantha is a mechanic, then she either has formal education or apprenticeship training, but not both.\nconclusion: Samantha does not have formal education.\n\nfact1: Samantha does not have formal education.\nfact2: Samantha has hands-on experience.\nrule: If Samantha has either formal education or hands-on experience (but not both), then she is skilled.\nconclusion: Samantha is skilled.\n\nTherefore, it is false that Samantha is not skilled. The correct option is: B.",
    "context": "If Samantha is either self-taught or has vocational training (but not both), then she is a mechanic. Samantha does not troubleshoot well. Samantha does not develop creative solutions. Anyone who has natural talent or works hard can learn through practice. If Samantha is a mechanic, then she either has formal education or apprenticeship training, but not both. If Samantha has either formal education or hands-on experience (but not both), then she is skilled. Samantha has apprenticeship training. Samantha fixes problems. Anyone who troubleshoots well or fixes problems can gain hands-on experience. Samantha works hard. Samantha is not self-taught. Everyone who learns through practice either develops creative solutions or has vocational training (or both). If Samantha either participates in courses or reads manuals (but not both), then she has vocational training.",
    "nl2fol": {
      "If Samantha is either self-taught or has vocational training (but not both), then she is a mechanic.": "(self_taught(Samantha) ⊕ vocational_training(Samantha)) → mechanic(Samantha)",
      "Samantha does not troubleshoot well.": "¬troubleshoots_well(Samantha)",
      "Samantha does not develop creative solutions.": "¬develop_creative_solutions(Samantha)",
      "Anyone who has natural talent or works hard can learn through practice.": "∀x ((has_natural_talent(x) ∨ works_hard(x)) → learn_through_practice(x))",
      "If Samantha is a mechanic, then she either has formal education or apprenticeship training, but not both.": "mechanic(Samantha) → (formal_education(Samantha) ⊕ apprenticeship(Samantha))",
      "If Samantha has either formal education or hands-on experience (but not both), then she is skilled.": "(formal_education(Samantha) ⊕ hands_on_experience(Samantha)) → skilled(Samantha)",
      "Samantha has apprenticeship training.": "apprenticeship(Samantha)",
      "Samantha fixes problems.": "fixes_problems(Samantha)",
      "Anyone who troubleshoots well or fixes problems can gain hands-on experience.": "∀x ((troubleshoots_well(x) ∨ fixes_problems(x)) → hands_on_experience(x))",
      "Samantha works hard.": "works_hard(Samantha)",
      "Samantha is not self-taught.": "¬self_taught(Samantha)",
      "Everyone who learns through practice either develops creative solutions or has vocational training (or both).": "∀x (learn_through_practice(x) → (develop_creative_solutions(x) ∨ vocational_training(x)))",
      "If Samantha either participates in courses or reads manuals (but not both), then she has vocational training.": "(participates_in_courses(Samantha) ⊕ reads_manuals(Samantha)) → vocational_training(Samantha)"
    },
    "conclusion_fol": "¬skilled(Samantha)"
  },
  {
    "id": 133,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rudy does not write influential books.",
    "reasoning": "fact1: Rudy ponders questions.\nfact2: Rudy seeks truth.\nrule: If a philosopher ponders questions and seeks truth, then they delve into concepts.\nconclusion: Rudy delves into concepts.\n\nfact1: Rudy investigates human nature.\nfact2: Rudy does not examine sociology.\nrule: If Rudy investigates human nature, then he either studies anthropology or examines sociology, but not both.\nconclusion: Rudy studies anthropology.\n\nfact1: Rudy delves into concepts.\nfact2: Rudy does not shape minds.\nrule: Every philosopher who delves into concepts either inspires others or shapes minds (or both).\nconclusion: Rudy inspires others.\n\nfact1: Rudy studies anthropology.\nrule: Rudy either studies anthropology or teaches philosophy, but not both.\nconclusion: Rudy does not teach philosophy.\n\nfact1: Rudy publishes research.\nfact2: Rudy does not teach philosophy.\nrule: If Rudy publishes research, then he is either teaching philosophy or exploring metaphysics, but not both.\nconclusion: Rudy explores metaphysics.\n\nfact1: Rudy does not study cosmology.\nfact2: Rudy explores metaphysics.\nrule: If Rudy either studies cosmology or explores metaphysics (but not both), then he understands the mysteries of existence.\nconclusion: Rudy understands the mysteries of existence.\n\nfact1: Rudy understands the mysteries of existence.\nfact2: Rudy inspires others.\nrule: If Rudy understands the mysteries of existence, then he can either inspire others or write influential books, but not both.\nconclusion: Rudy does not write influential books.\n\nTherefore, it is true that Rudy does not write influential books. The correct option is: A.",
    "context": "Rudy does not examine sociology. Kitten investigates human nature. Paislee does not shape minds. Paislee either studies anthropology or teaches philosophy, but not both. Rudy does not study cosmology. If Rudy develops theories, then he will teach philosophy. If Rudy either studies cosmology or explores metaphysics (but not both), then he understands the mysteries of existence. If a philosopher ponders questions and seeks truth, then they delve into concepts. Paislee does not examine sociology. Every philosopher who delves into concepts either inspires others or shapes minds (or both). If Rudy investigates human nature, then he either studies anthropology or examines sociology, but not both. If Paislee publishes research, then he is either teaching philosophy or exploring metaphysics, but not both. If Kitten investigates human nature, then he either studies anthropology or examines sociology, but not both. Rudy either studies anthropology or teaches philosophy, but not both. Briggs publishes research. Rudy publishes research. If Rudy publishes research, then he is either teaching philosophy or exploring metaphysics, but not both. If Paislee understands the mysteries of existence, then he can either inspire others or write influential books, but not both. If Briggs either studies cosmology or explores metaphysics (but not both), then he understands the mysteries of existence. Paislee does not study cosmology. Kitten ponders questions. If Rudy understands the mysteries of existence, then he can either inspire others or write influential books, but not both. Rudy seeks truth. Rudy does not shape minds. If Rudy reads ancient texts, then he either studies anthropology or develops theories (or both). Rudy ponders questions. Any philosopher who investigates reality either explores metaphysics or analyzes consciousness (or both). Rudy investigates human nature.",
    "nl2fol": {
      "Rudy does not examine sociology.": "¬examine_sociology(Rudy)",
      "Kitten investigates human nature.": "investigate_human_nature(Kitten)",
      "Paislee does not shape minds.": "¬shape_minds(Paislee)",
      "Paislee either studies anthropology or teaches philosophy, but not both.": "study_anthropology(Paislee) ⊕ teach_philosophy(Paislee)",
      "Rudy does not study cosmology.": "¬study_cosmology(Rudy)",
      "If Rudy develops theories, then he will teach philosophy.": "develop_theories(Rudy) → teach_philosophy(Rudy)",
      "If Rudy either studies cosmology or explores metaphysics (but not both), then he understands the mysteries of existence.": "(study_cosmology(Rudy) ⊕ explore_metaphysics(Rudy)) → understand_existence(Rudy)",
      "If a philosopher ponders questions and seeks truth, then they delve into concepts.": "∀x ((ponder_questions(x) ∧ seek_truth(x)) → delve_into_concepts(x))",
      "Paislee does not examine sociology.": "¬examine_sociology(Paislee)",
      "Every philosopher who delves into concepts either inspires others or shapes minds (or both).": "∀x (delve_into_concepts(x) → (shape_minds(x) ∨ inspire_others(x)))",
      "If Rudy investigates human nature, then he either studies anthropology or examines sociology, but not both.": "investigate_human_nature(Rudy) → (examine_sociology(Rudy) ⊕ study_anthropology(Rudy))",
      "If Paislee publishes research, then he is either teaching philosophy or exploring metaphysics, but not both.": "publish_research(Paislee) → (teach_philosophy(Paislee) ⊕ explore_metaphysics(Paislee))",
      "If Kitten investigates human nature, then he either studies anthropology or examines sociology, but not both.": "investigate_human_nature(Kitten) → (examine_sociology(Kitten) ⊕ study_anthropology(Kitten))",
      "Rudy either studies anthropology or teaches philosophy, but not both.": "study_anthropology(Rudy) ⊕ teach_philosophy(Rudy)",
      "Briggs publishes research.": "publish_research(Briggs)",
      "Rudy publishes research.": "publish_research(Rudy)",
      "If Rudy publishes research, then he is either teaching philosophy or exploring metaphysics, but not both.": "publish_research(Rudy) → (teach_philosophy(Rudy) ⊕ explore_metaphysics(Rudy))",
      "If Paislee understands the mysteries of existence, then he can either inspire others or write influential books, but not both.": "understand_existence(Paislee) → (inspire_others(Paislee) ⊕ write_influential_books(Paislee))",
      "If Briggs either studies cosmology or explores metaphysics (but not both), then he understands the mysteries of existence.": "(study_cosmology(Briggs) ⊕ explore_metaphysics(Briggs)) → understand_existence(Briggs)",
      "Paislee does not study cosmology.": "¬study_cosmology(Paislee)",
      "Kitten ponders questions.": "ponder_questions(Kitten)",
      "If Rudy understands the mysteries of existence, then he can either inspire others or write influential books, but not both.": "understand_existence(Rudy) → (inspire_others(Rudy) ⊕ write_influential_books(Rudy))",
      "Rudy seeks truth.": "seek_truth(Rudy)",
      "Rudy does not shape minds.": "¬shape_minds(Rudy)",
      "If Rudy reads ancient texts, then he either studies anthropology or develops theories (or both).": "read_ancient_texts(Rudy) → (develop_theories(Rudy) ∨ study_anthropology(Rudy))",
      "Rudy ponders questions.": "ponder_questions(Rudy)",
      "Any philosopher who investigates reality either explores metaphysics or analyzes consciousness (or both).": "∀x (investigate_reality(x) → (explore_metaphysics(x) ∨ analyze_consciousness(x)))",
      "Rudy investigates human nature.": "investigate_human_nature(Rudy)"
    },
    "conclusion_fol": "¬write_influential_books(Rudy)"
  },
  {
    "id": 134,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ensley is a nature lover.",
    "reasoning": "fact1: Ensley is an entrepreneur.\nfact2: Ensley does not support sustainability.\nrule: If Ensley is an entrepreneur, then she is either environmentally conscious or supports sustainability (but not both).\nconclusion: Ensley is environmentally conscious.\n\nfact1: Ensley is a local business owner.\nfact2: Ensley is environmentally conscious.\nrule: If Ensley is a local business owner, then she is either environmentally conscious or lives in the suburbs, but not both.\nconclusion: Ensley is not living in the suburbs.\n\nfact1: Ensley is not living in the suburbs.\nfact2: Ensley is not community oriented.\nrule: If Ensley is either an urban dweller or living in the suburbs (but not both), then she is community oriented.\nconclusion: Ensley is not an urban dweller.\n\nfact1: Ensley is not an urban dweller.\nrule: Ensley is either an urban dweller or a rural resident.\nconclusion: Ensley is a rural resident.\n\nfact1: Ensley is a rural resident.\nrule: Ensley is either a city enthusiast or a rural resident, but not both.\nconclusion: Ensley is not a city enthusiast.\n\nfact1: Ensley is not a city enthusiast.\nrule: Ensley is either a nature lover or a city enthusiast, but not both.\nconclusion: Ensley is a nature lover.\n\nTherefore, it is true that Ensley is a nature lover. The correct option is: A.",
    "context": "If Ensley either conserves water or reduces waste (but not both), then she is environmentally conscious. Ensley is either a city enthusiast or a rural resident, but not both. If Ensley prefers a simple life, then she is either a rural resident or a city native, but not both. Ensley does not support sustainability. Ensley is an entrepreneur. If Marianna is a local business owner, then she is either environmentally conscious or lives in the suburbs, but not both. Ensley is not community oriented. If Ensley is an entrepreneur, then she is either environmentally conscious or supports sustainability (but not both). Ensley is either a nature lover or a city enthusiast, but not both. If Ensley is a local business owner, then she is either environmentally conscious or lives in the suburbs, but not both. Ensley is a local business owner. If Ensley is either an urban dweller or living in the suburbs (but not both), then she is community oriented. Ensley is either an urban dweller or a rural resident. If Ensley either attends street festivals or visits local landmarks (but not both), then she is a city enthusiast. If Kenzie is an entrepreneur, then she is either environmentally conscious or supports sustainability (but not both).",
    "nl2fol": {
      "If Ensley either conserves water or reduces waste (but not both), then she is environmentally conscious.": "(conserves_water(Ensley) ⊕ reduces_waste(Ensley)) → environmentally_conscious(Ensley)",
      "Ensley is either a city enthusiast or a rural resident, but not both.": "city_enthusiast(Ensley) ⊕ rural_resident(Ensley)",
      "If Ensley prefers a simple life, then she is either a rural resident or a city native, but not both.": "prefers_simple_life(Ensley) → (rural_resident(Ensley) ⊕ city_native(Ensley))",
      "Ensley does not support sustainability.": "¬supports_sustainability(Ensley)",
      "Ensley is an entrepreneur.": "entrepreneur(Ensley)",
      "If Marianna is a local business owner, then she is either environmentally conscious or lives in the suburbs, but not both.": "local_business_owner(Marianna) → (environmentally_conscious(Marianna) ⊕ suburban_living(Marianna))",
      "Ensley is not community oriented.": "¬community_oriented(Ensley)",
      "If Ensley is an entrepreneur, then she is either environmentally conscious or supports sustainability (but not both).": "entrepreneur(Ensley) → (supports_sustainability(Ensley) ⊕ environmentally_conscious(Ensley))",
      "Ensley is either a nature lover or a city enthusiast, but not both.": "nature_lover(Ensley) ⊕ city_enthusiast(Ensley)",
      "If Ensley is a local business owner, then she is either environmentally conscious or lives in the suburbs, but not both.": "local_business_owner(Ensley) → (environmentally_conscious(Ensley) ⊕ suburban_living(Ensley))",
      "Ensley is a local business owner.": "local_business_owner(Ensley)",
      "If Ensley is either an urban dweller or living in the suburbs (but not both), then she is community oriented.": "(urban_dweller(Ensley) ⊕ suburban_living(Ensley)) → community_oriented(Ensley)",
      "Ensley is either an urban dweller or a rural resident.": "urban_dweller(Ensley) ∨ rural_resident(Ensley)",
      "If Ensley either attends street festivals or visits local landmarks (but not both), then she is a city enthusiast.": "(attends_street_festivals(Ensley) ⊕ visits_local_landmarks(Ensley)) → city_enthusiast(Ensley)",
      "If Kenzie is an entrepreneur, then she is either environmentally conscious or supports sustainability (but not both).": "entrepreneur(Kenzie) → (supports_sustainability(Kenzie) ⊕ environmentally_conscious(Kenzie))"
    },
    "conclusion_fol": "nature_lover(Ensley)"
  },
  {
    "id": 135,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Johanna is a renowned designer.",
    "reasoning": "fact1: Johanna puts in extra effort.\nrule: Anyone who puts in extra effort is a diligent worker.\nconclusion: Johanna is a diligent worker.\n\nfact1: Johanna is a diligent worker.\nfact2: Johanna has high standards.\nrule: If someone is a diligent worker, then they have high standards and are passionate.\nconclusion: Johanna is passionate.\n\nfact1: Johanna does not value tradition.\nrule: Johanna either has an experimental approach or values tradition.\nconclusion: Johanna has an experimental approach.\n\nfact1: Johanna is passionate.\nfact2: Johanna has an experimental approach.\nrule: If someone is passionate, then they push boundaries and have an experimental approach.\nconclusion: Johanna pushes boundaries.\n\nfact1: Johanna does not influence others.\nfact2: Johanna pushes boundaries.\nrule: If Johanna either influences others or pushes boundaries (but not both), then she sets style standards.\nconclusion: Johanna sets style standards.\n\nfact1: Johanna sets style standards.\nfact2: Johanna is not creative.\nrule: If Johanna either sets style standards or follows trends (but not both), then she is creative.\nconclusion: Johanna follows trends.\n\nfact1: Johanna follows trends.\nrule: Johanna either follows trends or creates unique pieces, but not both.\nconclusion: Johanna does not create unique pieces.\n\nfact1: Johanna does not create unique pieces.\nfact2: Johanna does not gain widespread recognition.\nrule: For all humans, if someone is a renowned designer, then they create unique pieces and gain widespread recognition.\nconclusion: Johanna is a renowned designer.\n\nTherefore, it is false that Johanna is a renowned designer. The correct option is: B.",
    "context": "If someone is passionate, then they push boundaries and have an experimental approach. Johanna is not creative. If someone is a diligent worker, then they have high standards and are passionate. Johanna does not gain widespread recognition. Johanna either has an experimental approach or values tradition. Anyone who puts in extra effort is a diligent worker. If Johanna is talented, then she either pushes boundaries or takes risks, but not both. Johanna puts in extra effort. Johanna does not influence others. Johanna either follows trends or creates unique pieces, but not both. If Johanna either sets style standards or follows trends (but not both), then she is creative. Johanna has high standards. For all humans, if someone is a renowned designer, then they create unique pieces and gain widespread recognition. Johanna does not value tradition. If Johanna either influences others or pushes boundaries (but not both), then she sets style standards. Johanna develops skills or creates unique pieces.",
    "nl2fol": {
      "If someone is passionate, then they push boundaries and have an experimental approach.": "∀x (passionate(x) → (pushes_boundaries(x) ∧ experimental_approach(x)))",
      "Johanna is not creative.": "¬is_creative(Johanna)",
      "If someone is a diligent worker, then they have high standards and are passionate.": "∀x (diligent_worker(x) → (has_high_standards(x) ∧ passionate(x)))",
      "Johanna does not gain widespread recognition.": "¬gain_widespread_recognition(Johanna)",
      "Johanna either has an experimental approach or values tradition.": "experimental_approach(Johanna) ∨ values_tradition(Johanna)",
      "Anyone who puts in extra effort is a diligent worker.": "∀x (puts_in_extra_effort(x) → diligent_worker(x))",
      "If Johanna is talented, then she either pushes boundaries or takes risks, but not both.": "is_talented(Johanna) → (pushes_boundaries(Johanna) ⊕ takes_risks(Johanna))",
      "Johanna puts in extra effort.": "puts_in_extra_effort(Johanna)",
      "Johanna does not influence others.": "¬influences_others(Johanna)",
      "Johanna either follows trends or creates unique pieces, but not both.": "follows_trends(Johanna) ⊕ create_unique_pieces(Johanna)",
      "If Johanna either sets style standards or follows trends (but not both), then she is creative.": "(sets_style_standards(Johanna) ⊕ follows_trends(Johanna)) → is_creative(Johanna)",
      "Johanna has high standards.": "has_high_standards(Johanna)",
      "For all humans, if someone is a renowned designer, then they create unique pieces and gain widespread recognition.": "∀x (renowned_designer(x) → (create_unique_pieces(x) ∧ gain_widespread_recognition(x)))",
      "Johanna does not value tradition.": "¬values_tradition(Johanna)",
      "If Johanna either influences others or pushes boundaries (but not both), then she sets style standards.": "(influences_others(Johanna) ⊕ pushes_boundaries(Johanna)) → sets_style_standards(Johanna)",
      "Johanna develops skills or creates unique pieces.": "develops_skills(Johanna) ∨ create_unique_pieces(Johanna)"
    },
    "conclusion_fol": "renowned_designer(Johanna)"
  },
  {
    "id": 136,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bellamy creates emotional connections.",
    "reasoning": "fact1: Bellamy has a creative soul.\nfact2: Bellamy does not appreciate poetry.\nrule: If Bellamy has a creative soul or appreciates poetry, then he can compose music.\nconclusion: Bellamy composes music.\n\nfact1: Bellamy shares legends.\nfact2: Bellamy does not have charisma.\nrule: If Bellamy either shares legends or tells stories (but not both), then he has charisma.\nconclusion: Bellamy tells stories.\n\nfact1: Bellamy composes music.\nfact2: Bellamy understands harmony.\nrule: If Bellamy composes music, then he is either a master of an instrument or understands harmony, but not both.\nconclusion: Bellamy does not master an instrument.\n\nfact1: Bellamy tells stories.\nfact2: Bellamy does not entertain crowds.\nrule: Anyone who tells stories either entertains crowds or performs art (or both).\nconclusion: Bellamy performs art.\n\nfact1: Bellamy performs art.\nfact2: Bellamy does not master an instrument.\nrule: Any person who performs art is either dedicated to their craft or masters an instrument (or both).\nconclusion: Bellamy is dedicated to his craft.\n\nfact1: Bellamy is dedicated to his craft.\nrule: Bellamy is either dedicated to his craft or a passionate musician, but not necessarily both.\nconclusion: Bellamy is not a passionate musician.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Bellamy creates emotional connections. The correct option is: C.",
    "context": "Bellamy shares legends. If Bellamy has a creative soul or appreciates poetry, then he can compose music. Anyone who has talent or practices regularly can perform art. Any person who performs art is either dedicated to their craft or masters an instrument (or both). If Bellamy has creative flair, then he either composes music or writes poetry, but not both. If Bellamy values tradition, then he is dedicated to his craft. Bellamy understands harmony. If Bellamy either shares legends or tells stories (but not both), then he has charisma. Love does not appreciate poetry. If Bellamy either has an original style or inspires others (but not both), then he is a passionate musician. Bellamy does not have charisma. Dani has a creative soul. Anyone who practices regularly or studies music theory can master an instrument. Bellamy is either dedicated to his craft or a passionate musician, but not necessarily both. Love shares legends. Anyone who tells stories either entertains crowds or performs art (or both). If Bellamy composes music, then he is either a master of an instrument or understands harmony, but not both. Bellamy does not appreciate poetry. Bellamy has a creative soul. Bellamy does not entertain crowds.",
    "nl2fol": {
      "Bellamy shares legends.": "share_legends(Bellamy)",
      "If Bellamy has a creative soul or appreciates poetry, then he can compose music.": "(has_creative_soul(Bellamy) ∨ appreciate_poetry(Bellamy)) → compose_music(Bellamy)",
      "Anyone who has talent or practices regularly can perform art.": "∀x ((has_talent(x) ∨ practices_regularly(x)) → perform_art(x))",
      "Any person who performs art is either dedicated to their craft or masters an instrument (or both).": "∀x (perform_art(x) → (dedicated_to_craft(x) ∨ master_instrument(x)))",
      "If Bellamy has creative flair, then he either composes music or writes poetry, but not both.": "has_creative_flair(Bellamy) → (compose_music(Bellamy) ⊕ write_poetry(Bellamy))",
      "If Bellamy values tradition, then he is dedicated to his craft.": "values_tradition(Bellamy) → dedicated_to_craft(Bellamy)",
      "Bellamy understands harmony.": "understand_harmony(Bellamy)",
      "If Bellamy either shares legends or tells stories (but not both), then he has charisma.": "(share_legends(Bellamy) ⊕ tell_stories(Bellamy)) → has_charisma(Bellamy)",
      "Love does not appreciate poetry.": "¬appreciate_poetry(Love)",
      "If Bellamy either has an original style or inspires others (but not both), then he is a passionate musician.": "(has_original_style(Bellamy) ⊕ inspires_others(Bellamy)) → passionate_musician(Bellamy)",
      "Bellamy does not have charisma.": "¬has_charisma(Bellamy)",
      "Dani has a creative soul.": "has_creative_soul(Dani)",
      "Anyone who practices regularly or studies music theory can master an instrument.": "∀x ((practice_regularly(x) ∨ study_music_theory(x)) → master_instrument(x))",
      "Bellamy is either dedicated to his craft or a passionate musician, but not necessarily both.": "dedicated_to_craft(Bellamy) ⊕ passionate_musician(Bellamy)",
      "Love shares legends.": "share_legends(Love)",
      "Anyone who tells stories either entertains crowds or performs art (or both).": "∀x (tell_stories(x) → (entertain_crowds(x) ∨ perform_art(x)))",
      "If Bellamy composes music, then he is either a master of an instrument or understands harmony, but not both.": "compose_music(Bellamy) → (understand_harmony(Bellamy) ⊕ master_instrument(Bellamy))",
      "Bellamy does not appreciate poetry.": "¬appreciate_poetry(Bellamy)",
      "Bellamy has a creative soul.": "has_creative_soul(Bellamy)",
      "Bellamy does not entertain crowds.": "¬entertain_crowds(Bellamy)"
    },
    "conclusion_fol": "create_emotional_connections(Bellamy)"
  },
  {
    "id": 137,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Coraline does not inspire new generations.",
    "reasoning": "fact1: Coraline does not work independently.\nrule: Coraline either works independently or collaborates with colleagues, but not both.\nconclusion: Coraline collaborates with colleagues.\n\nfact1: Coraline is a botanist.\nfact2: Coraline focuses on flora.\nrule: If Coraline is a botanist, then she either focuses on flora or explores deserts, but not both.\nconclusion: Coraline does not explore deserts.\n\nfact1: Coraline collaborates with colleagues.\nrule: Coraline either collaborates with colleagues or publishes research papers, but not both.\nconclusion: Coraline does not publish research papers.\n\nfact1: Coraline does not publish research papers.\nrule: Coraline either publishes research papers or develops new technologies, but not both.\nconclusion: Coraline develops new technologies.\n\nfact1: Coraline does not explore deserts.\nrule: If someone explores deserts, then they do not necessarily study cacti, and if someone studies cacti, then they do not necessarily explore deserts.\nconclusion: Coraline studies cacti.\n\nfact1: Coraline studies cacti.\nfact2: Coraline develops new technologies.\nrule: If Coraline studies cacti, then she can either develop new technologies or inspire new generations, but not both.\nconclusion: Coraline does not inspire new generations.\n\nTherefore, it is true that Coraline does not inspire new generations. The correct option is: A.",
    "context": "If Coraline is a botanist, then she either focuses on flora or explores deserts, but not both. Coraline either publishes research papers or develops new technologies, but not both. If someone explores deserts, then they do not necessarily study cacti, and if someone studies cacti, then they do not necessarily explore deserts. Coraline either works independently or collaborates with colleagues, but not both. Coraline teaches students or publishes research papers. Coraline is a botanist. If Coraline studies cacti, then she can either develop new technologies or inspire new generations, but not both. Coraline either collaborates with colleagues or publishes research papers, but not both. Coraline does not work independently. Coraline focuses on flora.",
    "nl2fol": {
      "If Coraline is a botanist, then she either focuses on flora or explores deserts, but not both.": "is_botanist(Coraline) → (focus_on_flora(Coraline) ⊕ explore_deserts(Coraline))",
      "Coraline either publishes research papers or develops new technologies, but not both.": "publish_research_papers(Coraline) ⊕ develop_new_technologies(Coraline)",
      "If someone explores deserts, then they do not necessarily study cacti, and if someone studies cacti, then they do not necessarily explore deserts.": "∀x (explore_deserts(x) ⊕ study_cacti(x))",
      "Coraline either works independently or collaborates with colleagues, but not both.": "work_independently(Coraline) ⊕ collaborate_with_colleagues(Coraline)",
      "Coraline teaches students or publishes research papers.": "teach_students(Coraline) ∨ publish_research_papers(Coraline)",
      "Coraline is a botanist.": "is_botanist(Coraline)",
      "If Coraline studies cacti, then she can either develop new technologies or inspire new generations, but not both.": "study_cacti(Coraline) → (develop_new_technologies(Coraline) ⊕ inspire_new_generations(Coraline))",
      "Coraline either collaborates with colleagues or publishes research papers, but not both.": "collaborate_with_colleagues(Coraline) ⊕ publish_research_papers(Coraline)",
      "Coraline does not work independently.": "¬work_independently(Coraline)",
      "Coraline focuses on flora.": "focus_on_flora(Coraline)"
    },
    "conclusion_fol": "¬inspire_new_generations(Coraline)"
  },
  {
    "id": 138,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Koa shares local knowledge.",
    "reasoning": "fact1: Koa studies abroad.\nfact2: Koa does not broaden his perspective.\nrule: If Koa either studies abroad or immerses himself in a foreign culture (but not both), then he will broaden his perspective.\nconclusion: Koa immerses himself in a foreign culture.\n\nfact1: Koa collects ethnic artifacts.\nfact2: Koa patronizes local businesses.\nrule: If Koa collects ethnic artifacts, then he either patronizes local businesses or supports local artisans (but not both).\nconclusion: Koa does not support local artisans.\n\nfact1: Koa immerses himself in a foreign culture.\nfact2: Koa does not value native traditions.\nrule: If Koa immerses himself in a foreign culture, then he either appreciates indigenous history or values native traditions (or both).\nconclusion: Koa appreciates indigenous history.\n\nfact1: Koa appreciates indigenous history.\nfact2: Koa does not support local artisans.\nrule: Anyone who appreciates indigenous history either respects local culture or supports local artisans (or both).\nconclusion: Koa respects local culture.\n\nfact1: Koa does not become a community leader.\nrule: If Koa masters traditional crafts or learns the local language, then he can become a community leader.\nconclusion: Koa does not master traditional crafts.\n\nfact1: Koa respects local culture.\nfact2: Koa does not master traditional crafts.\nrule: If Koa respects local culture, then he either masters traditional crafts or shares local knowledge (or both).\nconclusion: Koa shares local knowledge.\n\nTherefore, it is true that Koa shares local knowledge. The correct option is: A.",
    "context": "Koa enjoys local food or appreciates indigenous history. Koa does not broaden his perspective. If Koa explores abroad, then he will immerse himself in a foreign culture. Anyone who listens to elders or preserves heritage respects local culture. If Koa collects ethnic artifacts, then he either patronizes local businesses or supports local artisans (but not both). Koa patronizes local businesses. If Koa masters traditional crafts or learns the local language, then he can become a community leader. Koa studies abroad. Koa does not become a community leader. If Koa appreciates local customs, then he either masters traditional crafts or creates cultural exchange (or both). Jaiden studies abroad. Koa collects ethnic artifacts. River does not become a community leader. If Koa immerses himself in a foreign culture, then he either appreciates indigenous history or values native traditions (or both). Koa does not value native traditions. If Jaiden masters traditional crafts or learns the local language, then he can become a community leader. Anyone who appreciates indigenous history either respects local culture or supports local artisans (or both). If Koa either studies abroad or immerses himself in a foreign culture (but not both), then he will broaden his perspective. If Koa respects local culture, then he either masters traditional crafts or shares local knowledge (or both). Jaiden does not broaden his perspective.",
    "nl2fol": {
      "Koa enjoys local food or appreciates indigenous history.": "enjoy_local_food(Koa) ∨ appreciate_indigenous_history(Koa)",
      "Koa does not broaden his perspective.": "¬broaden_perspective(Koa)",
      "If Koa explores abroad, then he will immerse himself in a foreign culture.": "explore_abroad(Koa) → immerse_in_foreign_culture(Koa)",
      "Anyone who listens to elders or preserves heritage respects local culture.": "∀x ((listen_to_elders(x) ∨ preserve_heritage(x)) → respect_local_culture(x))",
      "If Koa collects ethnic artifacts, then he either patronizes local businesses or supports local artisans (but not both).": "collect_ethnic_artifacts(Koa) → (patronize_local_business(Koa) ⊕ support_local_artisans(Koa))",
      "Koa patronizes local businesses.": "patronize_local_business(Koa)",
      "If Koa masters traditional crafts or learns the local language, then he can become a community leader.": "(master_traditional_crafts(Koa) ∨ learn_local_language(Koa)) → become_community_leader(Koa)",
      "Koa studies abroad.": "study_abroad(Koa)",
      "Koa does not become a community leader.": "¬become_community_leader(Koa)",
      "If Koa appreciates local customs, then he either masters traditional crafts or creates cultural exchange (or both).": "appreciate_local_customs(Koa) → (master_traditional_crafts(Koa) ∨ create_cultural_exchange(Koa))",
      "Jaiden studies abroad.": "study_abroad(Jaiden)",
      "Koa collects ethnic artifacts.": "collect_ethnic_artifacts(Koa)",
      "River does not become a community leader.": "¬become_community_leader(River)",
      "If Koa immerses himself in a foreign culture, then he either appreciates indigenous history or values native traditions (or both).": "immerse_in_foreign_culture(Koa) → (appreciate_indigenous_history(Koa) ∨ value_native_traditions(Koa))",
      "Koa does not value native traditions.": "¬value_native_traditions(Koa)",
      "If Jaiden masters traditional crafts or learns the local language, then he can become a community leader.": "(master_traditional_crafts(Jaiden) ∨ learn_local_language(Jaiden)) → become_community_leader(Jaiden)",
      "Anyone who appreciates indigenous history either respects local culture or supports local artisans (or both).": "∀x (appreciate_indigenous_history(x) → (respect_local_culture(x) ∨ support_local_artisans(x)))",
      "If Koa either studies abroad or immerses himself in a foreign culture (but not both), then he will broaden his perspective.": "(study_abroad(Koa) ⊕ immerse_in_foreign_culture(Koa)) → broaden_perspective(Koa)",
      "If Koa respects local culture, then he either masters traditional crafts or shares local knowledge (or both).": "respect_local_culture(Koa) → (master_traditional_crafts(Koa) ∨ share_local_knowledge(Koa))",
      "Jaiden does not broaden his perspective.": "¬broaden_perspective(Jaiden)"
    },
    "conclusion_fol": "share_local_knowledge(Koa)"
  },
  {
    "id": 139,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Griffin becomes a master distiller.",
    "reasoning": "fact1: Griffin seeks knowledge.\nfact2: Griffin does not read widely.\nrule: Everyone who seeks knowledge either reads widely or asks questions (or both).\nconclusion: Griffin asks questions.\n\nfact1: Griffin asks questions.\nfact2: Griffin enjoys learning.\nrule: Anyone who asks questions and enjoys learning is curious.\nconclusion: Griffin is curious.\n\nfact1: Griffin does not follow traditions.\nrule: Griffin either follows traditions or explores cultures, but not both.\nconclusion: Griffin explores cultures.\n\nfact1: Griffin is curious.\nrule: If someone is curious, then they seek new experiences and value independence.\nconclusion: Griffin seeks new experiences.\n\nfact1: Griffin explores cultures.\nfact2: Griffin does not create unique blends.\nrule: If Griffin explores cultures, then he either samples local spirits or creates unique blends (or both).\nconclusion: Griffin samples local spirits.\n\nfact1: Griffin seeks new experiences.\nrule: If Griffin seeks new experiences, then he will travel extensively.\nconclusion: Griffin travels extensively.\n\nfact1: Griffin travels extensively.\nfact2: Griffin samples local spirits.\nrule: If Griffin travels extensively and samples local spirits, then he becomes a master distiller.\nconclusion: Griffin becomes a master distiller.\n\nTherefore, it is true that Griffin becomes a master distiller. The correct option is: A.",
    "context": "If Vivian travels extensively and samples local spirits, then he becomes a master distiller. Griffin does not read widely. Vivian seeks knowledge. Griffin seeks knowledge. Griffin does not create unique blends. Anyone who asks questions and enjoys learning is curious. If Griffin seeks new experiences, then he will travel extensively. Pierce enjoys learning. If someone visits breweries and learns distillation techniques, then they can sample local spirits. If someone has doubts and seeks answers, then they ask questions. Everyone who seeks knowledge either reads widely or asks questions (or both). If Griffin travels extensively and samples local spirits, then he becomes a master distiller. Adeline either follows traditions or explores cultures, but not both. Vivian does not read widely. Griffin either follows traditions or explores cultures, but not both. Griffin enjoys learning. Griffin does not follow traditions. If someone is curious, then they seek new experiences and value independence. If Griffin is open-minded, then he either learns from others or travels extensively, but not both. Vivian does not create unique blends. If Griffin explores cultures, then he either samples local spirits or creates unique blends (or both).",
    "nl2fol": {
      "If Vivian travels extensively and samples local spirits, then he becomes a master distiller.": "(travel_extensively(Vivian) ∧ sample_local_spirits(Vivian)) → become_a_master_distiller(Vivian)",
      "Griffin does not read widely.": "¬read_widely(Griffin)",
      "Vivian seeks knowledge.": "seek_knowledge(Vivian)",
      "Griffin seeks knowledge.": "seek_knowledge(Griffin)",
      "Griffin does not create unique blends.": "¬create_unique_blends(Griffin)",
      "Anyone who asks questions and enjoys learning is curious.": "∀x ((ask_questions(x) ∧ enjoy_learning(x)) → be_curious(x))",
      "If Griffin seeks new experiences, then he will travel extensively.": "seek_new_experiences(Griffin) → travel_extensively(Griffin)",
      "Pierce enjoys learning.": "enjoys_learning(Pierce)",
      "If someone visits breweries and learns distillation techniques, then they can sample local spirits.": "∀x ((visit_breweries(x) ∧ learn_distillation_techniques(x)) → sample_local_spirits(x))",
      "If someone has doubts and seeks answers, then they ask questions.": "∀x ((has_doubts(x) ∧ seeks_answers(x)) → ask_questions(x))",
      "Everyone who seeks knowledge either reads widely or asks questions (or both).": "∀x (seek_knowledge(x) → (read_widely(x) ∨ ask_questions(x)))",
      "If Griffin travels extensively and samples local spirits, then he becomes a master distiller.": "(travel_extensively(Griffin) ∧ sample_local_spirits(Griffin)) → become_a_master_distiller(Griffin)",
      "Adeline either follows traditions or explores cultures, but not both.": "follow_traditions(Adeline) ⊕ explore_cultures(Adeline)",
      "Vivian does not read widely.": "¬reads_widely(Vivian)",
      "Griffin either follows traditions or explores cultures, but not both.": "follow_traditions(Griffin) ⊕ explore_cultures(Griffin)",
      "Griffin enjoys learning.": "enjoy_learning(Griffin)",
      "Griffin does not follow traditions.": "¬follow_traditions(Griffin)",
      "If someone is curious, then they seek new experiences and value independence.": "∀x (be_curious(x) → (seek_new_experiences(x) ∧ value_independence(x)))",
      "If Griffin is open-minded, then he either learns from others or travels extensively, but not both.": "is_open_minded(Griffin) → (learn_from_others(Griffin) ⊕ travel_extensively(Griffin))",
      "Vivian does not create unique blends.": "¬create_unique_blends(Vivian)",
      "If Griffin explores cultures, then he either samples local spirits or creates unique blends (or both).": "explore_cultures(Griffin) → (sample_local_spirits(Griffin) ∨ create_unique_blends(Griffin))"
    },
    "conclusion_fol": "become_a_master_distiller(Griffin)"
  },
  {
    "id": 140,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aileen is culturally appreciative, or she is both artistically talented and community oriented.",
    "reasoning": "fact1: Aileen has formal training.\nfact2: Aileen is not naturally talented.\nrule: If Aileen has formal training, then she is either naturally talented or an experienced artist, but not both.\nconclusion: Aileen is an experienced artist.\n\nfact1: Aileen is an experienced artist.\nfact2: Aileen uses unconventional materials.\nrule: If Aileen is an experienced artist, then she is either skilled at drawing intricate details or uses unconventional materials, but not both.\nconclusion: Aileen does not draw intricate details.\n\nfact1: Aileen develops a unique style.\nfact2: Aileen masters color techniques.\nrule: If someone develops a unique style and masters color techniques, then they can paint professionally.\nconclusion: Aileen paints professionally.\n\nfact1: Aileen paints professionally.\nfact2: Aileen does not draw intricate details.\nrule: If Aileen paints professionally, then she is either skilled at drawing intricate details or creating vibrant pieces, but not both.\nconclusion: Aileen creates vibrant pieces.\n\nfact1: Aileen is globally influenced.\nrule: Aileen is either globally influenced or culturally appreciative, but not both.\nconclusion: Aileen is not culturally appreciative.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Aileen is culturally appreciative, or she is both artistically talented and community oriented. The correct option is: C.",
    "context": "If Aileen loves beauty and practices regularly, then she can paint professionally. Aileen is globally influenced. Aileen develops a unique style. Aileen is not naturally talented. Aileen is either globally influenced or culturally appreciative, but not both. Aileen values tradition or is artistically talented. If Aileen either uses fine brushes or works with small shapes (but not both), then she is skilled at drawing intricate details. If Aileen either experiments with techniques or studies art history (but not both), then she is an experienced artist. If someone develops a unique style and masters color techniques, then they can paint professionally. Aileen has formal training. If Aileen is an experienced artist, then she is either skilled at drawing intricate details or uses unconventional materials, but not both. Aileen uses unconventional materials. If Aileen has formal training, then she is either naturally talented or an experienced artist, but not both. If Aileen paints professionally, then she is either skilled at drawing intricate details or creating vibrant pieces, but not both. Dear develops a unique style. Aileen masters color techniques.",
    "nl2fol": {
      "If Aileen loves beauty and practices regularly, then she can paint professionally.": "(loves_beauty(Aileen) ∧ practices_regularly(Aileen)) → paints_professionally(Aileen)",
      "Aileen is globally influenced.": "globally_influenced(Aileen)",
      "Aileen develops a unique style.": "develops_unique_style(Aileen)",
      "Aileen is not naturally talented.": "¬has_natural_talent(Aileen)",
      "Aileen is either globally influenced or culturally appreciative, but not both.": "globally_influenced(Aileen) ⊕ culturally_appreciative(Aileen)",
      "Aileen values tradition or is artistically talented.": "values_tradition(Aileen) ∨ artistically_talented(Aileen)",
      "If Aileen either uses fine brushes or works with small shapes (but not both), then she is skilled at drawing intricate details.": "(uses_fine_brushes(Aileen) ⊕ works_with_small_shapes(Aileen)) → draws_intricate_details(Aileen)",
      "If Aileen either experiments with techniques or studies art history (but not both), then she is an experienced artist.": "(experiments_with_techniques(Aileen) ⊕ studies_art_history(Aileen)) → is_experience_artist(Aileen)",
      "If someone develops a unique style and masters color techniques, then they can paint professionally.": "∀x ((develops_unique_style(x) ∧ masters_color_techniques(x)) → paints_professionally(x))",
      "Aileen has formal training.": "has_formal_training(Aileen)",
      "If Aileen is an experienced artist, then she is either skilled at drawing intricate details or uses unconventional materials, but not both.": "is_experience_artist(Aileen) → (uses_unconventional_materials(Aileen) ⊕ draws_intricate_details(Aileen))",
      "Aileen uses unconventional materials.": "uses_unconventional_materials(Aileen)",
      "If Aileen has formal training, then she is either naturally talented or an experienced artist, but not both.": "has_formal_training(Aileen) → (has_natural_talent(Aileen) ⊕ is_experience_artist(Aileen))",
      "If Aileen paints professionally, then she is either skilled at drawing intricate details or creating vibrant pieces, but not both.": "paints_professionally(Aileen) → (draws_intricate_details(Aileen) ⊕ creates_vibrant_pieces(Aileen))",
      "Dear develops a unique style.": "develops_unique_style(Dear)",
      "Aileen masters color techniques.": "masters_color_techniques(Aileen)"
    },
    "conclusion_fol": "culturally_appreciative(Aileen) ∨ (artistically_talented(Aileen) ∧ community_oriented(Aileen))"
  },
  {
    "id": 141,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Violeta does not receive Violeta's treatment.",
    "reasoning": "fact1: Violeta does not have medical knowledge.\nfact2: Violeta cannot make accurate diagnoses.\nrule: If Violeta has medical knowledge or helps patients, then she can make accurate diagnoses.\nconclusion: Violeta does not help patients.\n\nfact1: Violeta takes prescription drugs.\nfact2: Violeta sees a specialist.\nrule: If Violeta takes prescription drugs, then she will either see a specialist or visit a doctor, but not both.\nconclusion: Violeta does not visit a doctor.\n\nfact1: Violeta does not visit a doctor.\nrule: If Violeta experiences symptoms or takes hormonal medications, then she will visit a doctor.\nconclusion: Violeta does not take hormonal medications.\n\nfact1: Violeta practices medicine.\nfact2: Violeta does not help patients.\nrule: Everyone who practices medicine either helps patients or is in good health (or both).\nconclusion: Violeta is in good health.\n\nfact1: Violeta does not require specialized care.\nfact2: Violeta does not take hormonal medications.\nrule: If someone has a hormonal imbalance, then they require specialized care and take hormonal medications.\nconclusion: Violeta does not have a hormonal imbalance.\n\nfact1: Violeta is in good health.\nfact2: Violeta follows fertility treatment.\nrule: If Violeta is in good health and follows fertility treatment, then she can get pregnant.\nconclusion: Violeta is likely to get pregnant.\n\nfact1: Violeta does not have a hormonal imbalance.\nfact2: Violeta does not need medical attention.\nrule: Any person who has a hormonal imbalance or struggles with infertility needs medical attention.\nconclusion: Violeta does not struggle with infertility.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Violeta does not receive Violeta's treatment. The correct option is: C.",
    "context": "If Violeta delays childbirth, then she feels emotionally stressed and struggles with infertility. Violeta follows fertility treatment. If Violeta's patients conceive after treatment, they will get pregnant. Violeta does not have medical knowledge. Everyone who practices medicine either helps patients or is in good health (or both). If Violeta leads a stressful life, then she has a hormonal imbalance and requires rest. Violeta does not need medical attention. If Violeta is in good health and follows fertility treatment, then she can get pregnant. Violeta does not require specialized care. Violeta practices medicine. If someone has a hormonal imbalance, then they require specialized care and take hormonal medications. Any person who has a hormonal imbalance or struggles with infertility needs medical attention. Violeta cannot make accurate diagnoses. If Violeta takes prescription drugs, then she will either see a specialist or visit a doctor, but not both. Alex cannot make accurate diagnoses. Alex practices medicine. Violeta sees a specialist. If Alex is in good health and follows fertility treatment, then she can get pregnant. Quinton does not need medical attention. Violeta takes prescription drugs. Giggles takes prescription drugs. If Violeta has medical knowledge or helps patients, then she can make accurate diagnoses. If Violeta experiences symptoms or takes hormonal medications, then she will visit a doctor.",
    "nl2fol": {
      "If Violeta delays childbirth, then she feels emotionally stressed and struggles with infertility.": "delay_childbirth(Violeta) → (feel_emotionally_stressed(Violeta) ∧ struggle_with_infertility(Violeta))",
      "Violeta follows fertility treatment.": "follows_fertility_treatment(Violeta)",
      "If Violeta's patients conceive after treatment, they will get pregnant.": "conceive_after_treatment(Violeta) → get_pregnant(Violeta)",
      "Violeta does not have medical knowledge.": "¬has_medical_knowledge(Violeta)",
      "Everyone who practices medicine either helps patients or is in good health (or both).": "∀x (practices_medicine(x) → (helps_patients(x) ∨ is_in_good_health(x)))",
      "If Violeta leads a stressful life, then she has a hormonal imbalance and requires rest.": "lead_stressful_life(Violeta) → (have_hormonal_imbalance(Violeta) ∧ require_rest(Violeta))",
      "Violeta does not need medical attention.": "¬need_medical_attention(Violeta)",
      "If Violeta is in good health and follows fertility treatment, then she can get pregnant.": "(is_in_good_health(Violeta) ∧ follows_fertility_treatment(Violeta)) → get_pregnant(Violeta)",
      "Violeta does not require specialized care.": "¬require_specialized_care(Violeta)",
      "Violeta practices medicine.": "practices_medicine(Violeta)",
      "If someone has a hormonal imbalance, then they require specialized care and take hormonal medications.": "∀x (have_hormonal_imbalance(x) → (require_specialized_care(x) ∧ take_hormonal_medications(x)))",
      "Any person who has a hormonal imbalance or struggles with infertility needs medical attention.": "∀x ((have_hormonal_imbalance(x) ∨ struggle_with_infertility(x)) → need_medical_attention(x))",
      "Violeta cannot make accurate diagnoses.": "¬makes_accurate_diagnosis(Violeta)",
      "If Violeta takes prescription drugs, then she will either see a specialist or visit a doctor, but not both.": "take_prescription_drugs(Violeta) → (see_specialist(Violeta) ⊕ visit_doctor(Violeta))",
      "Alex cannot make accurate diagnoses.": "¬makes_accurate_diagnosis(Alex)",
      "Alex practices medicine.": "practices_medicine(Alex)",
      "Violeta sees a specialist.": "see_specialist(Violeta)",
      "If Alex is in good health and follows fertility treatment, then she can get pregnant.": "(is_in_good_health(Alex) ∧ follows_fertility_treatment(Alex)) → get_pregnant(Alex)",
      "Quinton does not need medical attention.": "¬need_medical_attention(Quinton)",
      "Violeta takes prescription drugs.": "take_prescription_drugs(Violeta)",
      "Giggles takes prescription drugs.": "take_prescription_drugs(Giggles)",
      "If Violeta has medical knowledge or helps patients, then she can make accurate diagnoses.": "(has_medical_knowledge(Violeta) ∨ helps_patients(Violeta)) → makes_accurate_diagnosis(Violeta)",
      "If Violeta experiences symptoms or takes hormonal medications, then she will visit a doctor.": "(experience_symptoms(Violeta) ∨ take_hormonal_medications(Violeta)) → visit_doctor(Violeta)"
    },
    "conclusion_fol": "¬receive_Violeta_treatment(Violeta)"
  },
  {
    "id": 142,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kyro revolutionizes our understanding of the universe.",
    "reasoning": "fact1: Kyro does not push boundaries.\nrule: Anyone who thinks creatively or makes discoveries will push boundaries.\nconclusion: Kyro does not make discoveries.\n\nfact1: Kyro seeks answers.\nfact2: Kyro does not make discoveries.\nrule: If Kyro either embraces curiosity or seeks answers (but not both), then he makes discoveries.\nconclusion: Kyro is someone who embraces curiosity.\n\nfact1: Kyro is someone who embraces curiosity.\nfact2: Kyro does not achieve breakthroughs.\nrule: If someone embraces curiosity and paves new paths, then they can achieve breakthroughs.\nconclusion: Kyro does not pave new paths.\n\nfact1: Kyro does not make history.\nfact2: Kyro does not pave new paths.\nrule: Anyone who inspires innovation either makes history or paves new paths (or both).\nconclusion: Kyro does not inspire innovation.\n\nfact1: Kyro does not gain recognition.\nfact2: Kyro does not inspire innovation.\nrule: Anyone who opens up new possibilities either gains recognition or inspires innovation (or both).\nconclusion: Kyro does not open up new possibilities.\n\nfact1: Kyro explores cosmology.\nrule: Kyro either explores cosmology or studies physics, but not both.\nconclusion: Kyro does not study physics.\n\nfact1: Kyro does not study physics.\nrule: Kyro studies physics or pursues interdimensional travel.\nconclusion: Kyro pursues interdimensional travel.\n\nfact1: Kyro pursues interdimensional travel.\nrule: If Kyro pursues interdimensional travel, then he will visit a parallel dimension.\nconclusion: Kyro visits a parallel dimension.\n\nfact1: Kyro visits a parallel dimension.\nfact2: Kyro does not open up new possibilities.\nrule: If Kyro visits a parallel dimension, then he will either revolutionize our understanding of the universe or open up new possibilities, but not both.\nconclusion: Kyro revolutionizes our understanding of the universe.\n\nTherefore, it is true that Kyro revolutionizes our understanding of the universe. The correct option is: A.",
    "context": "Kyro explores cosmology. Kyro does not achieve breakthroughs. If Nash pursues interdimensional travel, then he will visit a parallel dimension. Amelia does not make history. If someone embraces curiosity and paves new paths, then they can achieve breakthroughs. Kyro either explores cosmology or studies physics, but not both. Kyro does not gain recognition. Kyro studies physics or pursues interdimensional travel. If Kyro pursues interdimensional travel, then he will visit a parallel dimension. If Kyro visits a parallel dimension, then he will either revolutionize our understanding of the universe or open up new possibilities, but not both. Anyone who thinks outside the box or dreams big can pave new paths. All people who read widely and ask questions will embrace curiosity. Anyone who opens up new possibilities either gains recognition or inspires innovation (or both). Kyro does not push boundaries. Kyro does not make history. Anyone who thinks outside the box will open up new possibilities. Anyone who thinks creatively or makes discoveries will push boundaries. Anyone who inspires innovation either makes history or paves new paths (or both). If Kyro either embraces curiosity or seeks answers (but not both), then he makes discoveries. If Kyro solves complex equations or conducts experiments, then he studies physics. Kyro seeks answers.",
    "nl2fol": {
      "Kyro explores cosmology.": "explore_cosmology(Kyro)",
      "Kyro does not achieve breakthroughs.": "¬achieves_breakthroughs(Kyro)",
      "If Nash pursues interdimensional travel, then he will visit a parallel dimension.": "pursue_interdimensional_travel(Nash) → visit_parallel_dimension(Nash)",
      "Amelia does not make history.": "¬makes_history(Amelia)",
      "If someone embraces curiosity and paves new paths, then they can achieve breakthroughs.": "∀x ((embraces_curiosity(x) ∧ pave_new_paths(x)) → achieves_breakthroughs(x))",
      "Kyro either explores cosmology or studies physics, but not both.": "explore_cosmology(Kyro) ⊕ study_physics(Kyro)",
      "Kyro does not gain recognition.": "¬gain_recognition(Kyro)",
      "Kyro studies physics or pursues interdimensional travel.": "study_physics(Kyro) ∨ pursue_interdimensional_travel(Kyro)",
      "If Kyro pursues interdimensional travel, then he will visit a parallel dimension.": "pursue_interdimensional_travel(Kyro) → visit_parallel_dimension(Kyro)",
      "If Kyro visits a parallel dimension, then he will either revolutionize our understanding of the universe or open up new possibilities, but not both.": "visit_parallel_dimension(Kyro) → (revolutionize_understanding(Kyro) ⊕ open_new_possibilities(Kyro))",
      "Anyone who thinks outside the box or dreams big can pave new paths.": "∀x ((think_outside_box(x) ∨ dream_big(x)) → pave_new_paths(x))",
      "All people who read widely and ask questions will embrace curiosity.": "∀x ((reads_widely(x) ∧ asks_questions(x)) → embraces_curiosity(x))",
      "Anyone who opens up new possibilities either gains recognition or inspires innovation (or both).": "∀x (open_new_possibilities(x) → (gain_recognition(x) ∨ inspire_innovation(x)))",
      "Kyro does not push boundaries.": "¬pushes_boundaries(Kyro)",
      "Kyro does not make history.": "¬make_history(Kyro)",
      "Anyone who thinks outside the box will open up new possibilities.": "∀x (think_outside_box(x) → open_new_possibilities(x))",
      "Anyone who thinks creatively or makes discoveries will push boundaries.": "∀x ((thinks_creatively(x) ∨ makes_discoveries(x)) → pushes_boundaries(x))",
      "Anyone who inspires innovation either makes history or paves new paths (or both).": "∀x (inspire_innovation(x) → (make_history(x) ∨ pave_new_paths(x)))",
      "If Kyro either embraces curiosity or seeks answers (but not both), then he makes discoveries.": "(embraces_curiosity(Kyro) ⊕ seeks_answers(Kyro)) → makes_discoveries(Kyro)",
      "If Kyro solves complex equations or conducts experiments, then he studies physics.": "(solve_complex_equations(Kyro) ∨ conduct_experiments(Kyro)) → study_physics(Kyro)",
      "Kyro seeks answers.": "seeks_answers(Kyro)"
    },
    "conclusion_fol": "revolutionize_understanding(Kyro)"
  },
  {
    "id": 143,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cayden is a successful restaurateur.",
    "reasoning": "fact1: Cayden understands flavors.\nfact2: Cayden masters techniques.\nrule: Anyone who understands flavors and masters techniques has culinary skills.\nconclusion: Cayden has culinary skills.\n\nfact1: Cayden has culinary skills.\nfact2: Cayden cannot create unique dishes.\nrule: If someone has culinary skills and collects recipes, then they can create unique dishes.\nconclusion: Cayden does not collect recipes.\n\nfact1: Cayden does not collect recipes.\nfact2: Cayden does not host dining events.\nrule: If Cayden values cuisine, then he either collects recipes or hosts dining events (or both).\nconclusion: Cayden does not value cuisine.\n\nfact1: Cayden does not value cuisine.\nfact2: Cayden does not explore cultures.\nrule: Everyone who appreciates flavors either values cuisine or explores cultures (or both).\nconclusion: Cayden does not appreciate flavors.\n\nfact1: Cayden does not appreciate flavors.\nfact2: Cayden does not enjoy experiments.\nrule: If someone has a good palate, then they appreciate flavors and enjoy experiments.\nconclusion: Cayden does not have a good palate.\n\nfact1: Cayden does not have a good palate.\nrule: Cayden is either a skilled food critique or has a good palate, but not both.\nconclusion: Cayden is a skilled food critique.\n\nfact1: Cayden is culturally aware.\nfact2: Cayden is a skilled food critique.\nrule: If Cayden is culturally aware, then he is either an experienced chef or a skilled food critique, but not both.\nconclusion: Cayden is not an experienced chef.\n\nfact1: Cayden is well traveled.\nfact2: Cayden is not an experienced chef.\nrule: If Cayden is well traveled, then he is either an experienced chef or a successful restaurateur, but not both.\nconclusion: Cayden is a successful restaurateur.\n\nTherefore, it is true that Cayden is a successful restaurateur. The correct option is: A.",
    "context": "If someone has culinary skills and collects recipes, then they can create unique dishes. Cayden does not enjoy experiments. Sebastian is either a skilled food critique or has a good palate, but not both. Everyone who appreciates flavors either values cuisine or explores cultures (or both). If Sebastian is culturally aware, then he is either an experienced chef or a skilled food critique, but not both. If someone keeps a cookbook, then they collect recipes. Sebastian does not host dining events. Cayden is culturally aware. Cayden does not explore cultures. Sebastian does not explore cultures. If Cayden is well traveled, then he is either an experienced chef or a successful restaurateur, but not both. Tobias does not enjoy experiments. If Cayden values cuisine, then he either collects recipes or hosts dining events (or both). Cayden masters techniques. Cayden is either a skilled food critique or has a good palate, but not both. If Cayden is culturally aware, then he is either an experienced chef or a skilled food critique, but not both. Anyone who understands flavors and masters techniques has culinary skills. Cayden cannot create unique dishes. If someone has a good palate, then they appreciate flavors and enjoy experiments. Cayden does not host dining events. Sebastian cannot create unique dishes. Sebastian is culturally aware. If Cayden owns a restaurant, then he either has culinary skills or specializes in baking, but not both. Cayden is well traveled. Braden masters techniques. Cayden understands flavors. If Cayden understands nutrition and knows food history, then he can be a skilled food critique.",
    "nl2fol": {
      "If someone has culinary skills and collects recipes, then they can create unique dishes.": "∀x ((has_culinary_skills(x) ∧ collect_recipes(x)) → create_unique_dishes(x))",
      "Cayden does not enjoy experiments.": "¬enjoy_experiments(Cayden)",
      "Sebastian is either a skilled food critique or has a good palate, but not both.": "skilled_food_critique(Sebastian) ⊕ has_good_palate(Sebastian)",
      "Everyone who appreciates flavors either values cuisine or explores cultures (or both).": "∀x (appreciate_flavors(x) → (value_cuisine(x) ∨ explore_cultures(x)))",
      "If Sebastian is culturally aware, then he is either an experienced chef or a skilled food critique, but not both.": "culturally_aware(Sebastian) → (skilled_food_critique(Sebastian) ⊕ experienced_chef(Sebastian))",
      "If someone keeps a cookbook, then they collect recipes.": "∀x (keeps_cookbook(x) → collect_recipes(x))",
      "Sebastian does not host dining events.": "¬host_dining_events(Sebastian)",
      "Cayden is culturally aware.": "culturally_aware(Cayden)",
      "Cayden does not explore cultures.": "¬explore_cultures(Cayden)",
      "Sebastian does not explore cultures.": "¬explore_cultures(Sebastian)",
      "If Cayden is well traveled, then he is either an experienced chef or a successful restaurateur, but not both.": "well_traveled(Cayden) → (experienced_chef(Cayden) ⊕ successful_restaurateur(Cayden))",
      "Tobias does not enjoy experiments.": "¬enjoy_experiments(Tobias)",
      "If Cayden values cuisine, then he either collects recipes or hosts dining events (or both).": "value_cuisine(Cayden) → (collect_recipes(Cayden) ∨ host_dining_events(Cayden))",
      "Cayden masters techniques.": "masters_techniques(Cayden)",
      "Cayden is either a skilled food critique or has a good palate, but not both.": "skilled_food_critique(Cayden) ⊕ has_good_palate(Cayden)",
      "If Cayden is culturally aware, then he is either an experienced chef or a skilled food critique, but not both.": "culturally_aware(Cayden) → (skilled_food_critique(Cayden) ⊕ experienced_chef(Cayden))",
      "Anyone who understands flavors and masters techniques has culinary skills.": "∀x ((understands_flavors(x) ∧ masters_techniques(x)) → has_culinary_skills(x))",
      "Cayden cannot create unique dishes.": "¬create_unique_dishes(Cayden)",
      "If someone has a good palate, then they appreciate flavors and enjoy experiments.": "∀x (has_good_palate(x) → (appreciate_flavors(x) ∧ enjoy_experiments(x)))",
      "Cayden does not host dining events.": "¬host_dining_events(Cayden)",
      "Sebastian cannot create unique dishes.": "¬create_unique_dishes(Sebastian)",
      "Sebastian is culturally aware.": "culturally_aware(Sebastian)",
      "If Cayden owns a restaurant, then he either has culinary skills or specializes in baking, but not both.": "owns_restaurant(Cayden) → (has_culinary_skills(Cayden) ⊕ specializes_in_baking(Cayden))",
      "Cayden is well traveled.": "well_traveled(Cayden)",
      "Braden masters techniques.": "masters_techniques(Braden)",
      "Cayden understands flavors.": "understands_flavors(Cayden)",
      "If Cayden understands nutrition and knows food history, then he can be a skilled food critique.": "(understands_nutrition(Cayden) ∧ knows_food_history(Cayden)) → skilled_food_critique(Cayden)"
    },
    "conclusion_fol": "successful_restaurateur(Cayden)"
  },
  {
    "id": 144,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Selah builds a successful business.",
    "reasoning": "fact1: Selah advocates for social causes.\nrule: Selah either cares for her community or advocates for social causes, but these two actions are mutually exclusive.\nconclusion: Selah does not care for her community.\n\nfact1: Selah does not care for her community.\nfact2: Selah minimizes waste.\nrule: If someone prioritizes sustainability, then they care for their community and minimize waste.\nconclusion: Selah does not prioritize sustainability.\n\nfact1: Selah sources locally.\nfact2: Selah does not prioritize sustainability.\nrule: For all humans, if they either value quality ingredients or source locally, then they prioritize sustainability.\nconclusion: Selah values quality ingredients.\n\nfact1: Selah does not share recipes.\nrule: Selah shares recipes or respects tradition.\nconclusion: Selah respects tradition.\n\nfact1: Selah values quality ingredients.\nfact2: Selah respects tradition.\nrule: If Selah values quality ingredients, then she either appreciates flavors or respects tradition (but not both).\nconclusion: Selah does not appreciate flavors.\n\nfact1: Selah does not appreciate flavors.\nrule: If someone enjoys food, then they appreciate flavors.\nconclusion: Selah does not enjoy food.\n\nfact1: Selah does not enjoy food.\nrule: Selah enjoys food or is passionate about cooking.\nconclusion: Selah is passionate about cooking.\n\nfact1: Selah is passionate about cooking.\nfact2: Selah creates unique recipes.\nrule: If Selah is passionate about cooking, then she creates unique recipes and builds a successful business.\nconclusion: Selah builds a successful business.\n\nTherefore, it is true that Selah builds a successful business. The correct option is: A.",
    "context": "For all humans, if they either value quality ingredients or source locally, then they prioritize sustainability. Selah sources locally. Selah creates unique recipes. Peach sources locally. Selah either cares for her community or advocates for social causes, but these two actions are mutually exclusive. If Selah runs a small business, then she either supports local producers or values quality ingredients (or both). If someone prioritizes sustainability, then they care for their community and minimize waste. Peach advocates for social causes. If Selah either supports local farmers or volunteers regularly (but not both), then she cares for her community. Owen enjoys food or is passionate about cooking. Owen shares recipes or respects tradition. Selah shares recipes or respects tradition. Anyone who loves feasting enjoys food. Selah minimizes waste. Selah does not share recipes. If Selah is passionate about cooking, then she creates unique recipes and builds a successful business. Anyone who learns from their ancestors or honors their family legacy respects tradition. Duncan minimizes waste. Selah advocates for social causes. Duncan either cares for her community or advocates for social causes, but these two actions are mutually exclusive. Selah enjoys food or is passionate about cooking. If someone enjoys food, then they appreciate flavors. If Selah values quality ingredients, then she either appreciates flavors or respects tradition (but not both).",
    "nl2fol": {
      "For all humans, if they either value quality ingredients or source locally, then they prioritize sustainability.": "∀x ((values_quality_ingredients(x) ⊕ sourcing_locally(x)) → prioritizes_sustainability(x))",
      "Selah sources locally.": "sourcing_locally(Selah)",
      "Selah creates unique recipes.": "create_unique_recipes(Selah)",
      "Peach sources locally.": "sourcing_locally(Peach)",
      "Selah either cares for her community or advocates for social causes, but these two actions are mutually exclusive.": "advocates_for_social_causes(Selah) ⊕ cares_for_community(Selah)",
      "If Selah runs a small business, then she either supports local producers or values quality ingredients (or both).": "runs_small_business(Selah) → (supports_local_producers(Selah) ∨ values_quality_ingredients(Selah))",
      "If someone prioritizes sustainability, then they care for their community and minimize waste.": "∀x (prioritizes_sustainability(x) → (cares_for_community(x) ∧ minimizes_waste(x)))",
      "Peach advocates for social causes.": "advocates_for_social_causes(Peach)",
      "If Selah either supports local farmers or volunteers regularly (but not both), then she cares for her community.": "(supports_local_farmers(Selah) ⊕ volunteers_regularly(Selah)) → cares_for_community(Selah)",
      "Owen enjoys food or is passionate about cooking.": "enjoys_food(Owen) ∨ passionate_about_cooking(Owen)",
      "Owen shares recipes or respects tradition.": "shares_recipes(Owen) ∨ respects_tradition(Owen)",
      "Selah shares recipes or respects tradition.": "shares_recipes(Selah) ∨ respects_tradition(Selah)",
      "Anyone who loves feasting enjoys food.": "∀x (loves_feasting(x) → enjoys_food(x))",
      "Selah minimizes waste.": "minimizes_waste(Selah)",
      "Selah does not share recipes.": "¬shares_recipes(Selah)",
      "If Selah is passionate about cooking, then she creates unique recipes and builds a successful business.": "passionate_about_cooking(Selah) → (create_unique_recipes(Selah) ∧ build_successful_business(Selah))",
      "Anyone who learns from their ancestors or honors their family legacy respects tradition.": "∀x ((learns_from_ancestors(x) ∨ honors_family_legacy(x)) → respects_tradition(x))",
      "Duncan minimizes waste.": "minimizes_waste(Duncan)",
      "Selah advocates for social causes.": "advocates_for_social_causes(Selah)",
      "Duncan either cares for her community or advocates for social causes, but these two actions are mutually exclusive.": "advocates_for_social_causes(Duncan) ⊕ cares_for_community(Duncan)",
      "Selah enjoys food or is passionate about cooking.": "enjoys_food(Selah) ∨ passionate_about_cooking(Selah)",
      "If someone enjoys food, then they appreciate flavors.": "∀x (enjoys_food(x) → appreciates_flavors(x))",
      "If Selah values quality ingredients, then she either appreciates flavors or respects tradition (but not both).": "values_quality_ingredients(Selah) → (appreciates_flavors(Selah) ⊕ respects_tradition(Selah))"
    },
    "conclusion_fol": "build_successful_business(Selah)"
  },
  {
    "id": 145,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Margot is not determined.",
    "reasoning": "fact1: Margot avoids uncertainty.\nrule: Margot is either resilient or avoids uncertainty, but not both.\nconclusion: Margot is not resilient.\n\nfact1: Margot does not have experience.\nrule: Margot is adaptable or has experience.\nconclusion: Margot is adaptable.\n\nfact1: Margot does not take risks.\nrule: For all humans, if someone seeks adventure, then they take risks and push their limits.\nconclusion: Margot does not seek adventures.\n\nfact1: Margot does not seek adventures.\nfact2: Margot is not resilient.\nrule: For all humans, if they either overcome challenges or seek adventures, then they are resilient.\nconclusion: Margot cannot overcome challenges.\n\nfact1: Margot faces challenges.\nfact2: Margot learns lessons.\nrule: If Margot faces challenges, then she thinks critically and learns lessons.\nconclusion: Margot thinks critically.\n\nfact1: Margot is adaptable.\nfact2: Margot stays calm.\nrule: If Margot is adaptable, then she either stays calm or acts quickly (but not both).\nconclusion: Margot does not act quickly.\n\nfact1: Margot thinks critically.\nfact2: Margot does not act quickly.\nrule: If Margot either thinks critically or acts quickly (but not both), then she has resourcefulness.\nconclusion: Margot has resourcefulness.\n\nfact1: Margot has resourcefulness.\nfact2: Margot cannot overcome challenges.\nrule: For all humans, if they are determined and have resourcefulness, then they can overcome challenges.\nconclusion: Margot is not determined.\n\nTherefore, it is true that Margot is not determined. The correct option is: A.",
    "context": "Margot is adaptable or has experience. If Margot either thinks critically or acts quickly (but not both), then she has resourcefulness. Margot faces challenges. If Margot travels alone, then she is either adaptable or follows plans, but not both. For all humans, if they are determined and have resourcefulness, then they can overcome challenges. Margot learns lessons. Margot does not have experience. For all humans, if someone seeks adventure, then they take risks and push their limits. For all humans, if they either overcome challenges or seek adventures, then they are resilient. Everyone who handles uncertainty either stays focused or thinks critically (or both). If Margot faces challenges, then she thinks critically and learns lessons. Anyone who tries new things and enjoys freedom seeks adventure. If Margot is adaptable, then she either stays calm or acts quickly (but not both). Margot avoids uncertainty. Margot stays calm. Margot does not take risks. Margot is either resilient or avoids uncertainty, but not both.",
    "nl2fol": {
      "Margot is adaptable or has experience.": "is_adaptable(Margot) ∨ has_experience(Margot)",
      "If Margot either thinks critically or acts quickly (but not both), then she has resourcefulness.": "(thinks_critically(Margot) ⊕ acts_quickly(Margot)) → has_resourcefulness(Margot)",
      "Margot faces challenges.": "face_challenges(Margot)",
      "If Margot travels alone, then she is either adaptable or follows plans, but not both.": "travels_alone(Margot) → (is_adaptable(Margot) ⊕ follows_plans(Margot))",
      "For all humans, if they are determined and have resourcefulness, then they can overcome challenges.": "∀x ((is_determined(x) ∧ has_resourcefulness(x)) → overcome_challenges(x))",
      "Margot learns lessons.": "learns_lessons(Margot)",
      "Margot does not have experience.": "¬has_experience(Margot)",
      "For all humans, if someone seeks adventure, then they take risks and push their limits.": "∀x (seeks_adventure(x) → (takes_risks(x) ∧ pushes_limits(x)))",
      "For all humans, if they either overcome challenges or seek adventures, then they are resilient.": "∀x ((overcome_challenges(x) ⊕ seeks_adventure(x)) → is_resilient(x))",
      "Everyone who handles uncertainty either stays focused or thinks critically (or both).": "∀x (handles_uncertainty(x) → (stays_focused(x) ∨ thinks_critically(x)))",
      "If Margot faces challenges, then she thinks critically and learns lessons.": "face_challenges(Margot) → (thinks_critically(Margot) ∧ learns_lessons(Margot))",
      "Anyone who tries new things and enjoys freedom seeks adventure.": "∀x ((tries_new_things(x) ∧ enjoys_freedom(x)) → seeks_adventure(x))",
      "If Margot is adaptable, then she either stays calm or acts quickly (but not both).": "is_adaptable(Margot) → (stays_calm(Margot) ⊕ acts_quickly(Margot))",
      "Margot avoids uncertainty.": "avoids_uncertainty(Margot)",
      "Margot stays calm.": "stays_calm(Margot)",
      "Margot does not take risks.": "¬takes_risks(Margot)",
      "Margot is either resilient or avoids uncertainty, but not both.": "is_resilient(Margot) ⊕ avoids_uncertainty(Margot)"
    },
    "conclusion_fol": "¬is_determined(Margot)"
  },
  {
    "id": 146,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Madeleine possesses cognitive skills and uses language to communicate.",
    "reasoning": "fact1: Madeleine lacks focus.\nrule: Madeleine either retains knowledge or lacks focus, but not both.\nconclusion: Madeleine cannot retain knowledge.\n\nfact1: Madeleine is attentive.\nfact2: Madeleine is not intuitive.\nrule: If Madeleine is attentive, then she either has good memory or is intuitive (but not both).\nconclusion: Madeleine has good memory.\n\nfact1: Madeleine cares for others.\nrule: If someone cares for others, then they show empathy.\nconclusion: Madeleine shows empathy.\n\nfact1: Madeleine shows empathy.\nrule: Madeleine either understands others or shows empathy, but not both.\nconclusion: Madeleine does not understand others.\n\nfact1: Madeleine has good memory.\nfact2: Madeleine cannot retain knowledge.\nrule: If someone learns quickly and has good memory, then they can retain knowledge.\nconclusion: Madeleine does not learn quickly.\n\nfact1: Madeleine does not understand others.\nrule: Everyone either uses language to communicate or understands others.\nconclusion: Madeleine uses language to communicate.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Madeleine possesses cognitive skills and uses language to communicate. The correct option is: C.",
    "context": "Dilan either understands others or shows empathy, but not both. Madeleine either retains knowledge or lacks focus, but not both. If someone learns quickly and has good memory, then they can retain knowledge. Madeleine is attentive. Madeleine is not intuitive. Everyone either uses language to communicate or understands others. Dilan is attentive. Juliette cares for others. If someone is erudite, then they possess cognitive skills. Juliette either retains knowledge or lacks focus, but not both. Madeleine either understands others or shows empathy, but not both. If Madeleine is attentive, then she either has good memory or is intuitive (but not both). If Sweetum is attentive, then she either has good memory or is intuitive (but not both). If someone cares for others, then they show empathy. If Madeleine either expresses her thoughts or conveys her emotions (but not both), then she uses language to communicate. Madeleine lacks focus. Juliette is not intuitive. Madeleine cares for others.",
    "nl2fol": {
      "Dilan either understands others or shows empathy, but not both.": "understand_others(Dilan) ⊕ show_empathy(Dilan)",
      "Madeleine either retains knowledge or lacks focus, but not both.": "retain_knowledge(Madeleine) ⊕ lack_focus(Madeleine)",
      "If someone learns quickly and has good memory, then they can retain knowledge.": "∀x ((learn_quickly(x) ∧ has_good_memory(x)) → retain_knowledge(x))",
      "Madeleine is attentive.": "is_attentive(Madeleine)",
      "Madeleine is not intuitive.": "¬is_intuitive(Madeleine)",
      "Everyone either uses language to communicate or understands others.": "∀x (use_language_to_communicate(x) ∨ understand_others(x))",
      "Dilan is attentive.": "be_attentive(Dilan)",
      "Juliette cares for others.": "cares_for_others(Juliette)",
      "If someone is erudite, then they possess cognitive skills.": "∀x (is_erudite(x) → possess_cognitive_skills(x))",
      "Juliette either retains knowledge or lacks focus, but not both.": "retain_knowledge(Juliette) ⊕ lack_focus(Juliette)",
      "Madeleine either understands others or shows empathy, but not both.": "understand_others(Madeleine) ⊕ show_empathy(Madeleine)",
      "If Madeleine is attentive, then she either has good memory or is intuitive (but not both).": "is_attentive(Madeleine) → (has_good_memory(Madeleine) ⊕ is_intuitive(Madeleine))",
      "If Sweetum is attentive, then she either has good memory or is intuitive (but not both).": "is_attentive(Sweetum) → (has_good_memory(Sweetum) ⊕ is_intuitive(Sweetum))",
      "If someone cares for others, then they show empathy.": "∀x (care_for_others(x) → show_empathy(x))",
      "If Madeleine either expresses her thoughts or conveys her emotions (but not both), then she uses language to communicate.": "(express_thoughts(Madeleine) ⊕ convey_emotions(Madeleine)) → use_language_to_communicate(Madeleine)",
      "Madeleine lacks focus.": "lack_focus(Madeleine)",
      "Juliette is not intuitive.": "¬is_intuitive(Juliette)",
      "Madeleine cares for others.": "care_for_others(Madeleine)"
    },
    "conclusion_fol": "possess_cognitive_skills(Madeleine) ∧ use_language_to_communicate(Madeleine)"
  },
  {
    "id": 147,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ashton does not enable exploration.",
    "reasoning": "fact1: Ashton has good instincts.\nfact2: Ashton attacks problems.\nrule: Anyone who has good instincts or attacks problems can think creatively.\nconclusion: Ashton thinks creatively.\n\nfact1: Ashton does not stay calm.\nrule: For Ashton, being able to stay calm and working well under pressure are mutually exclusive.\nconclusion: Ashton works well under pressure.\n\nfact1: Ashton works well under pressure.\nfact2: Ashton thinks creatively.\nrule: If Ashton is adaptable, then he either works well under pressure or thinks creatively (but not both).\nconclusion: Ashton is not adaptable.\n\nfact1: Ashton is resourceful.\nfact2: Ashton is not adaptable.\nrule: If Ashton is resourceful, then he is either adaptable or experienced (but not both).\nconclusion: Ashton has experience.\n\nfact1: Ashton has experience.\nfact2: Ashton cannot overcome obstacles.\nrule: For anyone, embracing challenges and having experience leads to overcoming obstacles.\nconclusion: Ashton does not embrace challenges.\n\nfact1: Ashton does not embrace challenges.\nrule: Ashton either respects nature or embraces challenges, but not both.\nconclusion: Ashton respects nature.\n\nfact1: Ashton respects nature.\nrule: Ashton either respects nature or is innovative, but not both.\nconclusion: Ashton is not innovative.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Ashton does not enable exploration. The correct option is: C.",
    "context": "Ashton is resourceful. Anyone who has good instincts or attacks problems can think creatively. If Ashton is resourceful, then he is either adaptable or experienced (but not both). If Ashton is adaptable, then he either works well under pressure or thinks creatively (but not both). Ashton attacks problems. Ashton either respects nature or is innovative, but not both. Ashton either respects nature or embraces challenges, but not both. For Ashton, being able to stay calm and working well under pressure are mutually exclusive. Ashton does not stay calm. Ashton has good instincts. For anyone, embracing challenges and having experience leads to overcoming obstacles. Ashton cannot overcome obstacles.",
    "nl2fol": {
      "Ashton is resourceful.": "is_resourceful(Ashton)",
      "Anyone who has good instincts or attacks problems can think creatively.": "∀x ((has_good_instincts(x) ∨ attacks_problems(x)) → thinks_creatively(x))",
      "If Ashton is resourceful, then he is either adaptable or experienced (but not both).": "is_resourceful(Ashton) → (is_adaptable(Ashton) ⊕ has_experience(Ashton))",
      "If Ashton is adaptable, then he either works well under pressure or thinks creatively (but not both).": "is_adaptable(Ashton) → (works_well_under_pressure(Ashton) ⊕ thinks_creatively(Ashton))",
      "Ashton attacks problems.": "attacks_problems(Ashton)",
      "Ashton either respects nature or is innovative, but not both.": "respects_nature(Ashton) ⊕ innovative(Ashton)",
      "Ashton either respects nature or embraces challenges, but not both.": "respects_nature(Ashton) ⊕ embraces_challenges(Ashton)",
      "For Ashton, being able to stay calm and working well under pressure are mutually exclusive.": "stays_calm(Ashton) ⊕ works_well_under_pressure(Ashton)",
      "Ashton does not stay calm.": "¬stays_calm(Ashton)",
      "Ashton has good instincts.": "has_good_instincts(Ashton)",
      "For anyone, embracing challenges and having experience leads to overcoming obstacles.": "∀x ((embraces_challenges(x) ∧ has_experience(x)) → overcomes_obstacles(x))",
      "Ashton cannot overcome obstacles.": "¬overcomes_obstacles(Ashton)"
    },
    "conclusion_fol": "¬enable_exploration(Ashton)"
  },
  {
    "id": 148,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emmy appreciates cultural heritage.",
    "reasoning": "fact1: Emmy does not appreciate fine wine.\nrule: Anyone who is a sommelier or has wine knowledge appreciates fine wine.\nconclusion: Emmy is not a sommelier.\n\nfact1: Emmy is a discerning diner.\nfact2: Emmy is not a sommelier.\nrule: If Emmy is a discerning diner, then she is either a sommelier or has refined taste, but not both.\nconclusion: Emmy has refined taste.\n\nfact1: Emmy pioneers new recipes.\nrule: Anyone who pioneers new recipes is a culinary innovator.\nconclusion: Emmy is a culinary innovator.\n\nfact1: Emmy has refined taste.\nfact2: Emmy is a culinary innovator.\nrule: If Emmy has refined taste, then she is either a food critic or a culinary innovator, but not both.\nconclusion: Emmy is not a food critique.\n\nfact1: Emmy does not experiment with ingredients.\nfact2: Emmy does not create masterpieces.\nrule: If Emmy either experiments with ingredients or understands flavors (but not both), then she creates masterpieces.\nconclusion: Emmy does not understand flavors.\n\nfact1: Emmy is not a food critique.\nfact2: Emmy does not understand flavors.\nrule: If Emmy is either a culinary expert or a food critique (but not both), then she understands flavors.\nconclusion: Emmy is not a culinary expert.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Emmy appreciates cultural heritage. The correct option is: C.",
    "context": "If Emmy has refined taste, then she is either a food critic or a culinary innovator, but not both. If Emmy studies wine and knows vintages, then she can be a sommelier. Kenneth is a discerning diner. Emmy does not appreciate fine wine. If Emmy either experiments with ingredients or understands flavors (but not both), then she creates masterpieces. If someone masters cooking techniques and sources high-quality ingredients, then they are a culinary expert. Emmy pioneers new recipes. Anyone who pioneers new recipes is a culinary innovator. Anyone who is a sommelier or has wine knowledge appreciates fine wine. Emmy is a discerning diner. If Emmy is either a culinary expert or a food critique (but not both), then she understands flavors. Joel does not create masterpieces. If Emmy is a discerning diner, then she is either a sommelier or has refined taste, but not both. Emmy does not experiment with ingredients. Emmy does not create masterpieces.",
    "nl2fol": {
      "If Emmy has refined taste, then she is either a food critic or a culinary innovator, but not both.": "has_refined_taste(Emmy) → (food_critique(Emmy) ⊕ is_culinary_innovator(Emmy))",
      "If Emmy studies wine and knows vintages, then she can be a sommelier.": "(studies_wine(Emmy) ∧ knows_vintages(Emmy)) → is_sommelier(Emmy)",
      "Kenneth is a discerning diner.": "is_discerning_diner(Kenneth)",
      "Emmy does not appreciate fine wine.": "¬appreciates_fine_wine(Emmy)",
      "If Emmy either experiments with ingredients or understands flavors (but not both), then she creates masterpieces.": "(experiment_with_ingredients(Emmy) ⊕ understand_flavors(Emmy)) → create_masterpieces(Emmy)",
      "If someone masters cooking techniques and sources high-quality ingredients, then they are a culinary expert.": "∀x ((masters_cooking_techniques(x) ∧ sources_high_quality_ingredients(x)) → culinary_expert(x))",
      "Emmy pioneers new recipes.": "pioneers_new_recipes(Emmy)",
      "Anyone who pioneers new recipes is a culinary innovator.": "∀x (pioneers_new_recipes(x) → is_culinary_innovator(x))",
      "Anyone who is a sommelier or has wine knowledge appreciates fine wine.": "∀x ((is_sommelier(x) ∨ has_wine_knowledge(x)) → appreciates_fine_wine(x))",
      "Emmy is a discerning diner.": "is_discerning_diner(Emmy)",
      "If Emmy is either a culinary expert or a food critique (but not both), then she understands flavors.": "(culinary_expert(Emmy) ⊕ food_critique(Emmy)) → understand_flavors(Emmy)",
      "Joel does not create masterpieces.": "¬create_masterpieces(Joel)",
      "If Emmy is a discerning diner, then she is either a sommelier or has refined taste, but not both.": "is_discerning_diner(Emmy) → (is_sommelier(Emmy) ⊕ has_refined_taste(Emmy))",
      "Emmy does not experiment with ingredients.": "¬experiment_with_ingredients(Emmy)",
      "Emmy does not create masterpieces.": "¬create_masterpieces(Emmy)"
    },
    "conclusion_fol": "appreciate_cultural_heritage(Emmy)"
  },
  {
    "id": 149,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mckenzie handles elephants.",
    "reasoning": "fact1: Mckenzie has a scientific background.\nrule: Mckenzie either has a scientific background or is an ecologist, but not both.\nconclusion: Mckenzie is not an ecologist.\n\nfact1: Mckenzie protects the environment.\nfact2: Mckenzie is not an ecologist.\nrule: If Mckenzie protects the environment, then she is either a conservationist or an ecologist, but not both.\nconclusion: Mckenzie is a conservationist.\n\nfact1: Mckenzie understands animal behavior.\nrule: If Mckenzie studies wildlife or understands animal behavior, then she can be a zoologist.\nconclusion: Mckenzie is a zoologist.\n\nfact1: Mckenzie is a zoologist.\nfact2: Mckenzie is an animal researcher.\nrule: If Mckenzie is a zoologist, then she is either a veterinarian or an animal researcher, but not both.\nconclusion: Mckenzie is not a veterinarian.\n\nfact1: Mckenzie is a conservationist.\nfact2: Mckenzie is not a veterinarian.\nrule: If Mckenzie is a conservationist, then she is either a veterinarian or works with animals, but not both.\nconclusion: Mckenzie works with animals.\n\nfact1: Mckenzie works with animals.\nrule: If Mckenzie works with animals, then she is an elephant handler.\nconclusion: Mckenzie handles elephants.\n\nfact1: Mckenzie handles elephants.\nrule: For every human, either they are an elephant handler or they are not an elephant handler, but not both.\nconclusion: Mckenzie handles elephants.\n\nTherefore, it is true that Mckenzie handles elephants. The correct option is: A.",
    "context": "If Kiaan is a conservationist, then she is either a veterinarian or works with animals, but not both. Mckenzie either has a scientific background or is an ecologist, but not both. For every human, either they are an elephant handler or they are not an elephant handler, but not both. If Emberly protects the environment, then she is either a conservationist or an ecologist, but not both. Mckenzie protects the environment. Mckenzie has a scientific background. Xiomara protects the environment. If Mckenzie heals animals, then she is a veterinarian. If Mckenzie works with animals, then she is an elephant handler. If Mckenzie protects the environment, then she is either a conservationist or an ecologist, but not both. If Mckenzie is a conservationist, then she is either a veterinarian or works with animals, but not both. If Xiomara studies wildlife or understands animal behavior, then she can be a zoologist. If Kiaan is a zoologist, then she is either a veterinarian or an animal researcher, but not both. If Mckenzie loves nature, then she is an ecologist. If someone either cares for pets or trains horses (but not both), then they work with animals. If Emberly works with animals, then she is an elephant handler. If Mckenzie studies wildlife or understands animal behavior, then she can be a zoologist. If Mckenzie is a zoologist, then she is either a veterinarian or an animal researcher, but not both. Mckenzie is an animal researcher. Mckenzie understands animal behavior. Emberly understands animal behavior.",
    "nl2fol": {
      "If Kiaan is a conservationist, then she is either a veterinarian or works with animals, but not both.": "is_conservationist(Kiaan) → (is_veterinarian(Kiaan) ⊕ works_with_animals(Kiaan))",
      "Mckenzie either has a scientific background or is an ecologist, but not both.": "has_scientific_background(Mckenzie) ⊕ is_ecologist(Mckenzie)",
      "For every human, either they are an elephant handler or they are not an elephant handler, but not both.": "∀x (elephant_handler(x) ⊕ not_elephant_handler(x))",
      "If Emberly protects the environment, then she is either a conservationist or an ecologist, but not both.": "protects_environment(Emberly) → (is_conservationist(Emberly) ⊕ is_ecologist(Emberly))",
      "Mckenzie protects the environment.": "protects_environment(Mckenzie)",
      "Mckenzie has a scientific background.": "has_scientific_background(Mckenzie)",
      "Xiomara protects the environment.": "protects_environment(Xiomara)",
      "If Mckenzie heals animals, then she is a veterinarian.": "heals_animals(Mckenzie) → is_veterinarian(Mckenzie)",
      "If Mckenzie works with animals, then she is an elephant handler.": "works_with_animals(Mckenzie) → elephant_handler(Mckenzie)",
      "If Mckenzie protects the environment, then she is either a conservationist or an ecologist, but not both.": "protects_environment(Mckenzie) → (is_conservationist(Mckenzie) ⊕ is_ecologist(Mckenzie))",
      "If Mckenzie is a conservationist, then she is either a veterinarian or works with animals, but not both.": "is_conservationist(Mckenzie) → (is_veterinarian(Mckenzie) ⊕ works_with_animals(Mckenzie))",
      "If Xiomara studies wildlife or understands animal behavior, then she can be a zoologist.": "(study_wildlife(Xiomara) ∨ understand_animal_behavior(Xiomara)) → is_zoologist(Xiomara)",
      "If Kiaan is a zoologist, then she is either a veterinarian or an animal researcher, but not both.": "is_zoologist(Kiaan) → (is_veterinarian(Kiaan) ⊕ is_animal_researcher(Kiaan))",
      "If Mckenzie loves nature, then she is an ecologist.": "loves_nature(Mckenzie) → is_ecologist(Mckenzie)",
      "If someone either cares for pets or trains horses (but not both), then they work with animals.": "∀x ((cares_for_pets(x) ⊕ trains_horses(x)) → works_with_animals(x))",
      "If Emberly works with animals, then she is an elephant handler.": "works_with_animals(Emberly) → elephant_handler(Emberly)",
      "If Mckenzie studies wildlife or understands animal behavior, then she can be a zoologist.": "(study_wildlife(Mckenzie) ∨ understand_animal_behavior(Mckenzie)) → is_zoologist(Mckenzie)",
      "If Mckenzie is a zoologist, then she is either a veterinarian or an animal researcher, but not both.": "is_zoologist(Mckenzie) → (is_veterinarian(Mckenzie) ⊕ is_animal_researcher(Mckenzie))",
      "Mckenzie is an animal researcher.": "is_animal_researcher(Mckenzie)",
      "Mckenzie understands animal behavior.": "understand_animal_behavior(Mckenzie)",
      "Emberly understands animal behavior.": "understand_animal_behavior(Emberly)"
    },
    "conclusion_fol": "¬not_elephant_handler(Mckenzie)"
  },
  {
    "id": 150,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Monroe is not impulsive.",
    "reasoning": "fact1: Monroe remains calm.\nrule: If Monroe remains calm and communicates clearly, then he has leadership skills.\nconclusion: Monroe has leadership skills.\n\nfact1: Monroe does not have emotional intelligence.\nrule: Monroe either speaks multiple languages or has emotional intelligence, but not both.\nconclusion: Monroe speaks multiple languages.\n\nfact1: Monroe has leadership skills.\nfact2: Monroe negotiates effectively.\nrule: If Monroe has leadership skills, then he either resolves conflicts or negotiates effectively, but not both.\nconclusion: Monroe cannot resolve conflicts.\n\nfact1: Monroe listens actively.\nfact2: Monroe does not find common ground.\nrule: Everyone who listens actively either builds strong relationships or finds common ground (or both).\nconclusion: Monroe builds strong relationships.\n\nfact1: Monroe does not think critically.\nrule: If Monroe builds trust, then he understands cultures and thinks critically.\nconclusion: Monroe does not build trust.\n\nfact1: Monroe does not build trust.\nfact2: Monroe cannot resolve conflicts.\nrule: Anyone who is diplomatic or builds trust can resolve conflicts.\nconclusion: Monroe is not diplomatic.\n\nfact1: Monroe is not diplomatic.\nrule: Monroe is either diplomatic or impulsive, but not both.\nconclusion: Monroe is not impulsive.\n\nTherefore, it is false that Monroe is not impulsive. The correct option is: B.",
    "context": "Monroe listens actively. Monroe is either diplomatic or impulsive, but not both. If Monroe builds trust, then he understands cultures and thinks critically. Monroe does not think critically. Monroe negotiates effectively. Anyone who is diplomatic or builds trust can resolve conflicts. Monroe does not have emotional intelligence. Monroe does not find common ground. Everyone who listens actively either builds strong relationships or finds common ground (or both). If Monroe has leadership skills, then he either resolves conflicts or negotiates effectively, but not both. Monroe either speaks multiple languages or has emotional intelligence, but not both. Monroe remains calm. If Monroe remains calm and communicates clearly, then he has leadership skills.",
    "nl2fol": {
      "Monroe listens actively.": "listens_active(Monroe)",
      "Monroe is either diplomatic or impulsive, but not both.": "diplomatic(Monroe) ⊕ impulsive(Monroe)",
      "If Monroe builds trust, then he understands cultures and thinks critically.": "builds_trust(Monroe) → (understands_cultures(Monroe) ∧ thinks_critically(Monroe))",
      "Monroe does not think critically.": "¬thinks_critically(Monroe)",
      "Monroe negotiates effectively.": "negotiates_effectively(Monroe)",
      "Anyone who is diplomatic or builds trust can resolve conflicts.": "∀x ((diplomatic(x) ∨ builds_trust(x)) → resolves_conflicts(x))",
      "Monroe does not have emotional intelligence.": "¬has_emotional_intelligence(Monroe)",
      "Monroe does not find common ground.": "¬finds_common_ground(Monroe)",
      "Everyone who listens actively either builds strong relationships or finds common ground (or both).": "∀x (listens_active(x) → (builds_strong_relationships(x) ∨ finds_common_ground(x)))",
      "If Monroe has leadership skills, then he either resolves conflicts or negotiates effectively, but not both.": "has_leadership_skills(Monroe) → (resolves_conflicts(Monroe) ⊕ negotiates_effectively(Monroe))",
      "Monroe either speaks multiple languages or has emotional intelligence, but not both.": "speaks_multiple_languages(Monroe) ⊕ has_emotional_intelligence(Monroe)",
      "Monroe remains calm.": "remains_calm(Monroe)",
      "If Monroe remains calm and communicates clearly, then he has leadership skills.": "remains_calm(Monroe) → (communicates_clearly(Monroe) ∧ has_leadership_skills(Monroe))"
    },
    "conclusion_fol": "¬impulsive(Monroe)"
  },
  {
    "id": 151,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mia is not highly skilled.",
    "reasoning": "fact1: Mia communicates effectively with her clients.\nrule: Everyone either navigates complex financial markets or communicates effectively with their clients, but not both is not a requirement.\nconclusion: Mia does not adeptly navigate complex markets.\n\nfact1: Mia manages risk.\nrule: Mia either manages risk or serves clients, but not necessarily both.\nconclusion: Mia does not serve her clients well.\n\nfact1: Mia does not serve her clients well.\nfact2: Mia does not adeptly navigate complex markets.\nrule: Anyone who has expertise in their field either serves clients well or adeptly navigates complex markets (or both).\nconclusion: Mia is not an expert in her field.\n\nfact1: Mia is not an expert in her field.\nfact2: Mia is not charismatic.\nrule: If Mia is highly respected, then she is either an expert in her field or charismatic, but not both.\nconclusion: Mia is not highly respected.\n\nfact1: Mia builds trust.\nfact2: Mia does not achieve success.\nrule: If someone has high integrity, then they build trust and achieve success.\nconclusion: Mia is not of high integrity.\n\nfact1: Mia is not of high integrity.\nfact2: Mia is not highly respected.\nrule: If Mia is either of high integrity or highly skilled (but not both), then she is highly respected.\nconclusion: Mia is not highly skilled.\n\nTherefore, it is true that Mia is not highly skilled. The correct option is: A.",
    "context": "If Mia is highly respected, then she is either an expert in her field or charismatic, but not both. Mia is not charismatic. Anyone who has expertise in their field either serves clients well or adeptly navigates complex markets (or both). If someone has high integrity, then they build trust and achieve success. Mia either manages risk or serves clients, but not necessarily both. If Mia is either of high integrity or highly skilled (but not both), then she is highly respected. Mia builds trust. Mia communicates effectively with her clients. Mia does not achieve success. Everyone either navigates complex financial markets or communicates effectively with their clients, but not both is not a requirement. Mia manages risk.",
    "nl2fol": {
      "If Mia is highly respected, then she is either an expert in her field or charismatic, but not both.": "highly_respected(Mia) → (has_expertise(Mia) ⊕ is_charismatic(Mia))",
      "Mia is not charismatic.": "¬is_charismatic(Mia)",
      "Anyone who has expertise in their field either serves clients well or adeptly navigates complex markets (or both).": "∀x (has_expertise(x) → (serves_clients(x) ∨ navigates_markets(x)))",
      "If someone has high integrity, then they build trust and achieve success.": "∀x (high_integrity(x) → (builds_trust(x) ∧ achieves_success(x)))",
      "Mia either manages risk or serves clients, but not necessarily both.": "manages_risk(Mia) ⊕ serves_clients(Mia)",
      "If Mia is either of high integrity or highly skilled (but not both), then she is highly respected.": "(high_integrity(Mia) ⊕ highly_skilled(Mia)) → highly_respected(Mia)",
      "Mia builds trust.": "builds_trust(Mia)",
      "Mia communicates effectively with her clients.": "communicates_effectively(Mia)",
      "Mia does not achieve success.": "¬achieves_success(Mia)",
      "Everyone either navigates complex financial markets or communicates effectively with their clients, but not both is not a requirement.": "∀x (navigates_markets(x) ⊕ communicates_effectively(x))",
      "Mia manages risk.": "manages_risk(Mia)"
    },
    "conclusion_fol": "¬highly_skilled(Mia)"
  },
  {
    "id": 152,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sylvia will make groundbreaking discoveries.",
    "reasoning": "fact1: Sylvia collects data.\nfact2: Sylvia understands wave theory.\nrule: If someone collects data and understands wave theory, then they can analyze signal patterns.\nconclusion: Sylvia analyzes signal patterns.\n\nfact1: Sylvia does not collaborate with others.\nfact2: Sylvia does not advance her field.\nrule: If Sylvia explores new ideas, then she either collaborates with others or advances her field.\nconclusion: Sylvia does not explore new ideas.\n\nfact1: Sylvia does not explore new ideas.\nrule: Sylvia explores new ideas or conducts innovative experiments.\nconclusion: Sylvia conducts innovative experiments.\n\nfact1: Sylvia builds on existing research.\nrule: For Sylvia, pioneering new technologies and building on existing research are mutually exclusive.\nconclusion: Sylvia does not pioneer new technologies.\n\nfact1: Sylvia analyzes signal patterns.\nfact2: Sylvia does not pioneer new technologies.\nrule: If Sylvia either analyzes signal patterns or studies electromagnetic waves (but not both), then she pioneers new technologies.\nconclusion: Sylvia studies electromagnetic waves.\n\nfact1: Sylvia studies electromagnetic waves.\nfact2: Sylvia conducts innovative experiments.\nrule: If Sylvia studies electromagnetic waves and conducts innovative experiments, then she will make groundbreaking discoveries.\nconclusion: Sylvia will make groundbreaking discoveries.\n\nTherefore, it is true that Sylvia will make groundbreaking discoveries. The correct option is: A.",
    "context": "If Sylvia studies electromagnetic waves and conducts innovative experiments, then she will make groundbreaking discoveries. Sylvia understands wave theory. If Sylvia explores new ideas, then she either collaborates with others or advances her field. If someone collects data and understands wave theory, then they can analyze signal patterns. Sylvia does not advance her field. Sylvia explores new ideas or conducts innovative experiments. Sylvia builds on existing research. If Sylvia has a PhD, then she either analyzes signal patterns or specializes in acoustics, but not both. Sylvia collects data. If someone has curiosity, then they explore new ideas and solve complex problems. If Sylvia either analyzes signal patterns or studies electromagnetic waves (but not both), then she pioneers new technologies. For Sylvia, pioneering new technologies and building on existing research are mutually exclusive. Sylvia does not collaborate with others.",
    "nl2fol": {
      "If Sylvia studies electromagnetic waves and conducts innovative experiments, then she will make groundbreaking discoveries.": "(study_electromagnetic_waves(Sylvia) ∧ conduct_innovative_experiments(Sylvia)) → make_groundbreaking_discoveries(Sylvia)",
      "Sylvia understands wave theory.": "understands_wave_theory(Sylvia)",
      "If Sylvia explores new ideas, then she either collaborates with others or advances her field.": "explore_new_ideas(Sylvia) → (collaborate_with_others(Sylvia) ∨ advance_the_field(Sylvia))",
      "If someone collects data and understands wave theory, then they can analyze signal patterns.": "∀x ((collects_data(x) ∧ understands_wave_theory(x)) → analyze_signal_patterns(x))",
      "Sylvia does not advance her field.": "¬advance_the_field(Sylvia)",
      "Sylvia explores new ideas or conducts innovative experiments.": "explore_new_ideas(Sylvia) ∨ conduct_innovative_experiments(Sylvia)",
      "Sylvia builds on existing research.": "build_on_existing_research(Sylvia)",
      "If Sylvia has a PhD, then she either analyzes signal patterns or specializes in acoustics, but not both.": "has_phd(Sylvia) → (analyze_signal_patterns(Sylvia) ⊕ specialize_in_acoustics(Sylvia))",
      "Sylvia collects data.": "collects_data(Sylvia)",
      "If someone has curiosity, then they explore new ideas and solve complex problems.": "∀x (has_curiosity(x) → (explore_new_ideas(x) ∧ solve_complex_problems(x)))",
      "If Sylvia either analyzes signal patterns or studies electromagnetic waves (but not both), then she pioneers new technologies.": "(analyze_signal_patterns(Sylvia) ⊕ study_electromagnetic_waves(Sylvia)) → pioneer_new_technologies(Sylvia)",
      "For Sylvia, pioneering new technologies and building on existing research are mutually exclusive.": "pioneer_new_technologies(Sylvia) ⊕ build_on_existing_research(Sylvia)",
      "Sylvia does not collaborate with others.": "¬collaborate_with_others(Sylvia)"
    },
    "conclusion_fol": "make_groundbreaking_discoveries(Sylvia)"
  },
  {
    "id": 153,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Evelyn does not develop resilience.",
    "reasoning": "fact1: Evelyn has a positive outlook.\nfact2: Evelyn appreciates beauty.\nrule: If Evelyn has a positive outlook, then she either appreciates beauty or enjoys life, but not both.\nconclusion: Evelyn does not enjoy life.\n\nfact1: Evelyn cherishes memories.\nrule: Evelyn either loves unconditionally or cherishes memories, but not both.\nconclusion: Evelyn does not love unconditionally.\n\nfact1: Evelyn does not enjoy life.\nrule: Everyone enjoys life or pursues happiness.\nconclusion: Evelyn pursues happiness.\n\nfact1: Evelyn pursues happiness.\nrule: Evelyn either pursues happiness or finds inner peace, but not both.\nconclusion: Evelyn does not find inner peace.\n\nfact1: Evelyn does not find inner peace.\nrule: Evelyn either finds inner peace or experiences hardship, but not both.\nconclusion: Evelyn experiences hardship.\n\nfact1: Evelyn experiences hardship.\nfact2: Evelyn does not love unconditionally.\nrule: For all humans, if they experience hardship or love unconditionally (or both), then they develop resilience.\nconclusion: Evelyn develops resilience.\n\nTherefore, it is false that Evelyn does not develop resilience. The correct option is: B.",
    "context": "Evelyn either loves unconditionally or cherishes memories, but not both. Evelyn has a positive outlook. Evelyn either finds inner peace or experiences hardship, but not both. If Evelyn has a positive outlook, then she either appreciates beauty or enjoys life, but not both. Anyone who values connections or puts others first can love unconditionally. Evelyn either pursues happiness or finds inner peace, but not both. Evelyn cherishes memories. Evelyn appreciates beauty. For all humans, if they experience hardship or love unconditionally (or both), then they develop resilience. Everyone enjoys life or pursues happiness.",
    "nl2fol": {
      "Evelyn either loves unconditionally or cherishes memories, but not both.": "cherish_memories(Evelyn) ⊕ love_unconditionally(Evelyn)",
      "Evelyn has a positive outlook.": "has_positive_outlook(Evelyn)",
      "Evelyn either finds inner peace or experiences hardship, but not both.": "find_inner_peace(Evelyn) ⊕ experience_hardship(Evelyn)",
      "If Evelyn has a positive outlook, then she either appreciates beauty or enjoys life, but not both.": "has_positive_outlook(Evelyn) → (appreciate_beauty(Evelyn) ⊕ enjoy_life(Evelyn))",
      "Anyone who values connections or puts others first can love unconditionally.": "∀x ((value_connections(x) ∨ put_others_first(x)) → love_unconditionally(x))",
      "Evelyn either pursues happiness or finds inner peace, but not both.": "pursue_happiness(Evelyn) ⊕ find_inner_peace(Evelyn)",
      "Evelyn cherishes memories.": "cherish_memories(Evelyn)",
      "Evelyn appreciates beauty.": "appreciate_beauty(Evelyn)",
      "For all humans, if they experience hardship or love unconditionally (or both), then they develop resilience.": "∀x ((experience_hardship(x) ∨ love_unconditionally(x)) → develop_resilience(x))",
      "Everyone enjoys life or pursues happiness.": "∀x (enjoy_life(x) ∨ pursue_happiness(x))"
    },
    "conclusion_fol": "¬develop_resilience(Evelyn)"
  },
  {
    "id": 154,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Presley values artistic expression.",
    "reasoning": "fact1: Presley works outdoors.\nfact2: Presley enjoys gardening.\nrule: If Presley works outdoors or enjoys gardening, then he specializes in landscaping.\nconclusion: Presley specializes in landscaping.\n\nfact1: Presley specializes in landscaping.\nrule: Presley either specializes in landscaping or designs interiors, but not both.\nconclusion: Presley does not design interiors.\n\nfact1: Presley does not engage in engineering.\nrule: Presley is either an architect or engages in engineering, but not both.\nconclusion: Presley is an architect.\n\nfact1: Presley does not design interiors.\nrule: Presley either designs interiors or builds structures, but not both.\nconclusion: Presley builds structures.\n\nfact1: Presley builds structures.\nrule: If Presley builds structures, then he understands physics.\nconclusion: Presley understands physics.\n\nfact1: Presley is an architect.\nfact2: Presley understands physics.\nrule: If Presley is an architect, then he either understands physics or appreciates mathematics, but not both.\nconclusion: Presley does not appreciate mathematics.\n\nfact1: Presley does not appreciate mathematics.\nrule: Presley either appreciates mathematics or values artistic expression (or both).\nconclusion: Presley values artistic expression.\n\nTherefore, it is true that Presley values artistic expression. The correct option is: A.",
    "context": "Presley enjoys gardening. Presley is either an architect or engages in engineering, but not both. Presley does not engage in engineering. Presley either designs interiors or builds structures, but not both. Isaac works outdoors. If Presley works outdoors or enjoys gardening, then he specializes in landscaping. Presley either appreciates mathematics or values artistic expression (or both). If Presley is an architect, then he either understands physics or appreciates mathematics, but not both. If Presley builds structures, then he understands physics. Presley either specializes in landscaping or designs interiors, but not both. If Presley loves plants or creates outdoor spaces, then he specializes in landscaping. Presley works outdoors. If Presley loves puzzles, then he creates innovative solutions and appreciates mathematics.",
    "nl2fol": {
      "Presley enjoys gardening.": "enjoys_gardening(Presley)",
      "Presley is either an architect or engages in engineering, but not both.": "engages_in_engineering(Presley) ⊕ is_architect(Presley)",
      "Presley does not engage in engineering.": "¬engages_in_engineering(Presley)",
      "Presley either designs interiors or builds structures, but not both.": "designs_interiors(Presley) ⊕ builds_structures(Presley)",
      "Isaac works outdoors.": "work_outdoors(Isaac)",
      "If Presley works outdoors or enjoys gardening, then he specializes in landscaping.": "(works_outdoors(Presley) ∨ enjoys_gardening(Presley)) → specializes_in_landscaping(Presley)",
      "Presley either appreciates mathematics or values artistic expression (or both).": "appreciate_mathematics(Presley) ∨ value_artistic_expression(Presley)",
      "If Presley is an architect, then he either understands physics or appreciates mathematics, but not both.": "is_architect(Presley) → (understand_physics(Presley) ⊕ appreciate_mathematics(Presley))",
      "If Presley builds structures, then he understands physics.": "builds_structures(Presley) → understand_physics(Presley)",
      "Presley either specializes in landscaping or designs interiors, but not both.": "specializes_in_landscaping(Presley) ⊕ designs_interiors(Presley)",
      "If Presley loves plants or creates outdoor spaces, then he specializes in landscaping.": "(loves_plants(Presley) ∨ creates_outdoor_spaces(Presley)) → specializes_in_landscaping(Presley)",
      "Presley works outdoors.": "works_outdoors(Presley)",
      "If Presley loves puzzles, then he creates innovative solutions and appreciates mathematics.": "love_puzzles(Presley) → (create_innovative_solutions(Presley) ∧ appreciate_mathematics(Presley))"
    },
    "conclusion_fol": "value_artistic_expression(Presley)"
  },
  {
    "id": 155,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elina does not master extreme sports.",
    "reasoning": "fact1: Elina does not stay motivated.\nfact2: Elina does not perform well.\nrule: If someone either achieves success or stays motivated, then they perform well.\nconclusion: Elina does not achieve success.\n\nfact1: Elina learns from her failures.\nrule: Elina either tracks her progress or learns from her failures, but not both.\nconclusion: Elina does not track her progress.\n\nfact1: Elina does not track her progress.\nfact2: Elina does not achieve success.\nrule: If Elina either tracks her progress or sets goals (but not both), then she achieves success.\nconclusion: Elina does not set goals.\n\nfact1: Elina does not set goals.\nrule: Elina sets goals or stays disciplined.\nconclusion: Elina stays disciplined.\n\nfact1: Elina loves reading.\nrule: Elina either enjoys the outdoors or loves reading, but not both.\nconclusion: Elina is a professional athlete.\n\nfact1: Elina is a professional athlete.\nrule: Elina enjoys the outdoors or is a professional athlete.\nconclusion: Elina is a professional athlete.\n\nfact1: Elina is a professional athlete.\nfact2: Elina stays disciplined.\nrule: If Elina is a professional athlete, then she either overcomes fear or stays disciplined, but not both.\nconclusion: Elina cannot overcome fear.\n\nfact1: Elina cannot overcome fear.\nrule: If Elina masters extreme sports, then she can overcome fear.\nconclusion: Elina does not master extreme sports.\n\nTherefore, it is true that Elina does not master extreme sports. The correct option is: A.",
    "context": "Elina loves reading. Elina sets goals or stays disciplined. Elina either enjoys the outdoors or loves reading, but not both. If Elina either monitors her performance or evaluates her results (but not both), then she tracks her progress. Stella does not stay motivated. Elina learns from her failures. Bridget does not perform well. Bridget either enjoys the outdoors or loves reading, but not both. Elina does not perform well. Everyone faces challenges or overcomes fear. If someone either achieves success or stays motivated, then they perform well. If someone visualizes success, then they build strategies and set goals. Elina does not stay motivated. If Bridget is a professional athlete, then she either overcomes fear or stays disciplined, but not both. Elina either tracks her progress or learns from her failures, but not both. Remington sets goals or stays disciplined. If Elina masters extreme sports, then she can overcome fear. If Elina either tracks her progress or sets goals (but not both), then she achieves success. If Elina is a professional athlete, then she either overcomes fear or stays disciplined, but not both. Remington enjoys the outdoors or is a professional athlete. Elina enjoys the outdoors or is a professional athlete. If Elina lives in a rural area, then she either has an adventurous spirit or enjoys the outdoors, but not both.",
    "nl2fol": {
      "Elina loves reading.": "loves_reading(Elina)",
      "Elina sets goals or stays disciplined.": "sets_goals(Elina) ∨ stay_disciplined(Elina)",
      "Elina either enjoys the outdoors or loves reading, but not both.": "enjoys_outdoors(Elina) ⊕ loves_reading(Elina)",
      "If Elina either monitors her performance or evaluates her results (but not both), then she tracks her progress.": "(monitors_performance(Elina) ⊕ evaluates_results(Elina)) → tracks_progress(Elina)",
      "Stella does not stay motivated.": "¬stays_motivated(Stella)",
      "Elina learns from her failures.": "learns_from_failure(Elina)",
      "Bridget does not perform well.": "¬performs_well(Bridget)",
      "Bridget either enjoys the outdoors or loves reading, but not both.": "enjoys_outdoors(Bridget) ⊕ loves_reading(Bridget)",
      "Elina does not perform well.": "¬performs_well(Elina)",
      "Everyone faces challenges or overcomes fear.": "∀x (face_challenges(x) ∨ overcome_fear(x))",
      "If someone either achieves success or stays motivated, then they perform well.": "∀x ((achieves_success(x) ⊕ stays_motivated(x)) → performs_well(x))",
      "If someone visualizes success, then they build strategies and set goals.": "∀x (visualize_success(x) → (build_strategies(x) ∧ sets_goals(x)))",
      "Elina does not stay motivated.": "¬stays_motivated(Elina)",
      "If Bridget is a professional athlete, then she either overcomes fear or stays disciplined, but not both.": "professional_athlete(Bridget) → (overcome_fear(Bridget) ⊕ stay_disciplined(Bridget))",
      "Elina either tracks her progress or learns from her failures, but not both.": "tracks_progress(Elina) ⊕ learns_from_failure(Elina)",
      "Remington sets goals or stays disciplined.": "sets_goals(Remington) ∨ stay_disciplined(Remington)",
      "If Elina masters extreme sports, then she can overcome fear.": "master_extreme_sports(Elina) → overcome_fear(Elina)",
      "If Elina either tracks her progress or sets goals (but not both), then she achieves success.": "(tracks_progress(Elina) ⊕ sets_goals(Elina)) → achieves_success(Elina)",
      "If Elina is a professional athlete, then she either overcomes fear or stays disciplined, but not both.": "professional_athlete(Elina) → (overcome_fear(Elina) ⊕ stay_disciplined(Elina))",
      "Remington enjoys the outdoors or is a professional athlete.": "enjoys_outdoors(Remington) ∨ professional_athlete(Remington)",
      "Elina enjoys the outdoors or is a professional athlete.": "enjoys_outdoors(Elina) ∨ professional_athlete(Elina)",
      "If Elina lives in a rural area, then she either has an adventurous spirit or enjoys the outdoors, but not both.": "lives_in_rural_area(Elina) → (has_adventurous_spirit(Elina) ⊕ enjoys_outdoors(Elina))"
    },
    "conclusion_fol": "¬master_extreme_sports(Elina)"
  },
  {
    "id": 156,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jaxton needs medical attention.",
    "reasoning": "fact1: Jaxton gets enough sleep.\nrule: Everyone either gets enough sleep or stays hydrated, but it's possible for someone to do both or neither.\nconclusion: Jaxton does not stay hydrated.\n\nfact1: Jaxton does not stay hydrated.\nrule: Jaxton stays hydrated or eats nutrient-rich food.\nconclusion: Jaxton eats nutrient-rich food.\n\nfact1: Jaxton values physical health.\nrule: Anyone who values physical health exercises regularly.\nconclusion: Jaxton exercises regularly.\n\nfact1: Jaxton eats nutrient-rich food.\nfact2: Jaxton exercises regularly.\nrule: For any person, if they eat nutrient-rich food and exercise regularly, then they have a healthy diet.\nconclusion: Jaxton has a healthy diet.\n\nfact1: Jaxton has a healthy diet.\nrule: For Jaxton, either he has a healthy diet or he has anemia, but it's not necessarily the case that both occur together.\nconclusion: Jaxton does not have anemia.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Jaxton needs medical attention. The correct option is: C.",
    "context": "Alaina values physical health. Everyone either gets enough sleep or stays hydrated, but it's possible for someone to do both or neither. Jaxton gets enough sleep. Anyone who manages their medical condition stays hydrated or takes supplements. Jaxton values physical health. Alaina gets enough sleep. For any person, if they eat nutrient-rich food and exercise regularly, then they have a healthy diet. Jaxton stays hydrated or eats nutrient-rich food. If Jaxton has high energy, then he either engages in physical activities or eats nutrient-rich food, but not both. Chanel does not have low iron levels. For Jaxton, either he has a healthy diet or he has anemia, but it's not necessarily the case that both occur together. Anyone who values physical health exercises regularly.",
    "nl2fol": {
      "Alaina values physical health.": "values_physical_health(Alaina)",
      "Everyone either gets enough sleep or stays hydrated, but it's possible for someone to do both or neither.": "∀x (gets_enough_sleep(x) ⊕ stays_hydrated(x))",
      "Jaxton gets enough sleep.": "gets_enough_sleep(Jaxton)",
      "Anyone who manages their medical condition stays hydrated or takes supplements.": "∀x (manages_condition(x) → (stays_hydrated(x) ∨ takes_supplements(x)))",
      "Jaxton values physical health.": "values_physical_health(Jaxton)",
      "Alaina gets enough sleep.": "gets_enough_sleep(Alaina)",
      "For any person, if they eat nutrient-rich food and exercise regularly, then they have a healthy diet.": "∀x ((eats_nutrient_rich_food(x) ∧ exercises_regularly(x)) → has_healthy_diet(x))",
      "Jaxton stays hydrated or eats nutrient-rich food.": "stays_hydrated(Jaxton) ∨ eats_nutrient_rich_food(Jaxton)",
      "If Jaxton has high energy, then he either engages in physical activities or eats nutrient-rich food, but not both.": "has_high_energy(Jaxton) → (engages_in_physical_activities(Jaxton) ⊕ eats_nutrient_rich_food(Jaxton))",
      "Chanel does not have low iron levels.": "¬has_low_iron_levels(Chanel)",
      "For Jaxton, either he has a healthy diet or he has anemia, but it's not necessarily the case that both occur together.": "has_healthy_diet(Jaxton) ⊕ has_anemia(Jaxton)",
      "Anyone who values physical health exercises regularly.": "∀x (values_physical_health(x) → exercises_regularly(x))"
    },
    "conclusion_fol": "needs_medical_attention(Jaxton)"
  },
  {
    "id": 157,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rosalia has a calm mind.",
    "reasoning": "fact1: Rosalia does not rely on intuition.\nrule: For Rosalia, she is either logical or relies on intuition, but not both.\nconclusion: Rosalia is logical.\n\nfact1: Rosalia conducts experiments.\nrule: If someone conducts experiments, then they value precision.\nconclusion: Rosalia values precision.\n\nfact1: Rosalia is attentive.\nfact2: Rosalia values precision.\nrule: If Rosalia is attentive, then she is either detail-oriented or can appreciate beauty, but not both.\nconclusion: Rosalia cannot appreciate beauty.\n\nfact1: Rosalia does not have keen observation.\nfact2: Rosalia cannot appreciate beauty.\nrule: Anyone who has keen observation or loves nature can appreciate beauty.\nconclusion: Rosalia does not love nature.\n\nfact1: Rosalia is creative.\nfact2: Rosalia is logical.\nrule: If Rosalia can solve complex problems, then she is either creative or logical (but not both).\nconclusion: Rosalia cannot solve complex problems.\n\nfact1: Rosalia does not think outside the box.\nfact2: Rosalia cannot solve complex problems.\nrule: If Rosalia either thinks outside the box or has innovative thoughts (but not both), then she can solve complex problems.\nconclusion: Rosalia does not have innovative thoughts.\n\nfact1: Rosalia does not publish research.\nfact2: Rosalia does not have innovative thoughts.\nrule: If Rosalia either makes groundbreaking discoveries or publishes research (but not both), then she has innovative thoughts.\nconclusion: Rosalia is unlikely to make groundbreaking discoveries.\n\nfact1: Rosalia does not love nature.\nfact2: Rosalia is unlikely to make groundbreaking discoveries.\nrule: If Rosalia loves nature or has a calm mind, then she is likely to make groundbreaking discoveries.\nconclusion: Rosalia has a calm mind.\n\nTherefore, it is false that Rosalia has a calm mind. The correct option is: B.",
    "context": "Anyone who reads widely and thinks critically can have innovative thoughts. Rosalia is creative. Anyone who keeps detailed notes or measures carefully can value precision. Rosalia is attentive. Rosalia does not rely on intuition. Rosalia conducts experiments. For Rosalia, she is either logical or relies on intuition, but not both. Rosalia does not publish research. If Rosalia can solve complex problems, then she is either creative or logical (but not both). If Rosalia is attentive, then she is either detail-oriented or can appreciate beauty, but not both. If Rosalia loves nature or has a calm mind, then she is likely to make groundbreaking discoveries. Rosalia does not have keen observation. Rosalia does not think outside the box. If Rosalia either makes groundbreaking discoveries or publishes research (but not both), then she has innovative thoughts. If someone conducts experiments, then they value precision. Anyone who has keen observation or loves nature can appreciate beauty. If Rosalia either thinks outside the box or has innovative thoughts (but not both), then she can solve complex problems.",
    "nl2fol": {
      "Anyone who reads widely and thinks critically can have innovative thoughts.": "∀x ((read_widely(x) ∧ think_critically(x)) → have_innovative_thoughts(x))",
      "Rosalia is creative.": "be_creative(Rosalia)",
      "Anyone who keeps detailed notes or measures carefully can value precision.": "∀x ((keep_detailed_notes(x) ∨ measure_carefully(x)) → value_precision(x))",
      "Rosalia is attentive.": "be_attentive(Rosalia)",
      "Rosalia does not rely on intuition.": "¬rely_on_intuition(Rosalia)",
      "Rosalia conducts experiments.": "conduct_experiments(Rosalia)",
      "For Rosalia, she is either logical or relies on intuition, but not both.": "be_logical(Rosalia) ⊕ rely_on_intuition(Rosalia)",
      "Rosalia does not publish research.": "¬publish_research(Rosalia)",
      "If Rosalia can solve complex problems, then she is either creative or logical (but not both).": "solve_complex_problems(Rosalia) → (be_creative(Rosalia) ⊕ be_logical(Rosalia))",
      "If Rosalia is attentive, then she is either detail-oriented or can appreciate beauty, but not both.": "be_attentive(Rosalia) → (value_precision(Rosalia) ⊕ appreciate_beauty(Rosalia))",
      "If Rosalia loves nature or has a calm mind, then she is likely to make groundbreaking discoveries.": "(love_nature(Rosalia) ∨ have_a_calm_mind(Rosalia)) → make_groundbreaking_discoveries(Rosalia)",
      "Rosalia does not have keen observation.": "¬have_keen_observation(Rosalia)",
      "Rosalia does not think outside the box.": "¬think_outside_box(Rosalia)",
      "If Rosalia either makes groundbreaking discoveries or publishes research (but not both), then she has innovative thoughts.": "(make_groundbreaking_discoveries(Rosalia) ⊕ publish_research(Rosalia)) → have_innovative_thoughts(Rosalia)",
      "If someone conducts experiments, then they value precision.": "∀x (conduct_experiments(x) → value_precision(x))",
      "Anyone who has keen observation or loves nature can appreciate beauty.": "∀x ((have_keen_observation(x) ∨ love_nature(x)) → appreciate_beauty(x))",
      "If Rosalia either thinks outside the box or has innovative thoughts (but not both), then she can solve complex problems.": "(think_outside_box(Rosalia) ⊕ have_innovative_thoughts(Rosalia)) → solve_complex_problems(Rosalia)"
    },
    "conclusion_fol": "have_a_calm_mind(Rosalia)"
  },
  {
    "id": 158,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Apollo has a big ego.",
    "reasoning": "fact1: Apollo achieves success.\nrule: If Apollo achieves success, then he expects recognition.\nconclusion: Apollo expects recognition.\n\nfact1: Apollo dislikes criticism.\nfact2: Apollo expects recognition.\nrule: If Apollo dislikes criticism or expects recognition, then he acts superior.\nconclusion: Apollo acts superior.\n\nfact1: Apollo is talented.\nfact2: Apollo is not modest.\nrule: If Apollo is talented, then he is either famous or modest, but not both.\nconclusion: Apollo is famous.\n\nfact1: Apollo does not take risks.\nrule: Anyone who pursues excellence or strives for perfection takes risks.\nconclusion: Apollo does not strive for perfection.\n\nfact1: Apollo values creativity.\nfact2: Apollo does not strive for perfection.\nrule: If Apollo values creativity or strives for perfection, then he believes in his own genius.\nconclusion: Apollo believes in his own genius.\n\nfact1: Apollo acts superior.\nfact2: Apollo is not conceited.\nrule: If someone either acts superior or demands attention (but not both), then they are conceited.\nconclusion: Apollo demands attention.\n\nfact1: Apollo demands attention.\nfact2: Apollo believes in his own genius.\nrule: Anyone who demands attention or believes in their own genius is arrogant.\nconclusion: Apollo is arrogant.\n\nfact1: Apollo is famous.\nfact2: Apollo is arrogant.\nrule: If Apollo is famous, then he is either arrogant or humble, but not both.\nconclusion: Apollo is not humble.\n\nfact1: Apollo is not humble.\nrule: Apollo either has a big ego or is humble, but not both.\nconclusion: Apollo has a big ego.\n\nTherefore, it is true that Apollo has a big ego. The correct option is: A.",
    "context": "Apollo does not take risks. Dakota values creativity. Dakota is not modest. Apollo is not modest. Apollo dislikes criticism. Mackenzie dislikes criticism. Krew does not take risks. Anyone who demands attention or believes in their own genius is arrogant. If Apollo values creativity or strives for perfection, then he believes in his own genius. Krew is talented. Apollo is not conceited. If Apollo has high standards, then he either needs control or expects recognition, but not both. If Apollo dislikes criticism or expects recognition, then he acts superior. Apollo either has a big ego or is humble, but not both. Anyone who sets high goals or focuses on details strives for perfection. If Apollo achieves success, then he expects recognition. Apollo values creativity. If someone either acts superior or demands attention (but not both), then they are conceited. If Krew is famous, then he is either arrogant or humble, but not both. If Apollo is famous, then he is either arrogant or humble, but not both. If Apollo is talented, then he is either famous or modest, but not both. Krew achieves success. If Krew values creativity or strives for perfection, then he believes in his own genius. Apollo is talented. Apollo achieves success. If Apollo has high standards, then he craves admiration and is arrogant. If Apollo either thinks externally or trusts his intuition (but not both), then he believes in his own genius. If Dakota dislikes criticism or expects recognition, then he acts superior. Anyone who pursues excellence or strives for perfection takes risks. If Krew achieves success, then he expects recognition. If Krew is talented, then he is either famous or modest, but not both.",
    "nl2fol": {
      "Apollo does not take risks.": "¬takes_risks(Apollo)",
      "Dakota values creativity.": "values_creativity(Dakota)",
      "Dakota is not modest.": "¬is_modest(Dakota)",
      "Apollo is not modest.": "¬is_modest(Apollo)",
      "Apollo dislikes criticism.": "dislikes_criticism(Apollo)",
      "Mackenzie dislikes criticism.": "dislikes_criticism(Mackenzie)",
      "Krew does not take risks.": "¬takes_risks(Krew)",
      "Anyone who demands attention or believes in their own genius is arrogant.": "∀x ((demands_attention(x) ∨ believes_in_genius(x)) → is_arrogant(x))",
      "If Apollo values creativity or strives for perfection, then he believes in his own genius.": "(values_creativity(Apollo) ∨ strives_for_perfection(Apollo)) → believes_in_genius(Apollo)",
      "Krew is talented.": "is_talented(Krew)",
      "Apollo is not conceited.": "¬is_conceited(Apollo)",
      "If Apollo has high standards, then he either needs control or expects recognition, but not both.": "has_high_standards(Apollo) → (needs_control(Apollo) ⊕ expects_recognition(Apollo))",
      "If Apollo dislikes criticism or expects recognition, then he acts superior.": "(dislikes_criticism(Apollo) ∨ expects_recognition(Apollo)) → acts_superior(Apollo)",
      "Apollo either has a big ego or is humble, but not both.": "has_a_big_ego(Apollo) ⊕ is_humble(Apollo)",
      "Anyone who sets high goals or focuses on details strives for perfection.": "∀x ((sets_high_goals(x) ∨ focuses_on_details(x)) → strives_for_perfection(x))",
      "If Apollo achieves success, then he expects recognition.": "achieves_success(Apollo) → expects_recognition(Apollo)",
      "Apollo values creativity.": "values_creativity(Apollo)",
      "If someone either acts superior or demands attention (but not both), then they are conceited.": "∀x ((acts_superior(x) ⊕ demands_attention(x)) → is_conceited(x))",
      "If Krew is famous, then he is either arrogant or humble, but not both.": "is_famous(Krew) → (is_arrogant(Krew) ⊕ is_humble(Krew))",
      "If Apollo is famous, then he is either arrogant or humble, but not both.": "is_famous(Apollo) → (is_arrogant(Apollo) ⊕ is_humble(Apollo))",
      "If Apollo is talented, then he is either famous or modest, but not both.": "is_talented(Apollo) → (is_modest(Apollo) ⊕ is_famous(Apollo))",
      "Krew achieves success.": "achieve_success(Krew)",
      "If Krew values creativity or strives for perfection, then he believes in his own genius.": "(values_creativity(Krew) ∨ strives_for_perfection(Krew)) → believes_in_genius(Krew)",
      "Apollo is talented.": "is_talented(Apollo)",
      "Apollo achieves success.": "achieves_success(Apollo)",
      "If Apollo has high standards, then he craves admiration and is arrogant.": "has_high_standards(Apollo) → (craves_admiration(Apollo) ∧ is_arrogant(Apollo))",
      "If Apollo either thinks externally or trusts his intuition (but not both), then he believes in his own genius.": "(thinks_externally(Apollo) ⊕ trusts_intuition(Apollo)) → believes_in_genius(Apollo)",
      "If Dakota dislikes criticism or expects recognition, then he acts superior.": "(dislikes_criticism(Dakota) ∨ expects_recognition(Dakota)) → acts_superior(Dakota)",
      "Anyone who pursues excellence or strives for perfection takes risks.": "∀x ((pursues_excellence(x) ∨ strives_for_perfection(x)) → takes_risks(x))",
      "If Krew achieves success, then he expects recognition.": "achieves_success(Krew) → expects_recognition(Krew)",
      "If Krew is talented, then he is either famous or modest, but not both.": "is_talented(Krew) → (is_modest(Krew) ⊕ is_famous(Krew))"
    },
    "conclusion_fol": "has_a_big_ego(Apollo)"
  },
  {
    "id": 159,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas studies the elands.",
    "reasoning": "fact1: Thomas does not support conservation.\nrule: Thomas supports conservation or pursues academic research.\nconclusion: Thomas pursues academic research.\n\nfact1: Thomas pursues personal gain.\nrule: Thomas either makes a social impact or pursues personal gain, but not both.\nconclusion: Thomas does not make a social impact.\n\nfact1: Thomas pursues academic research.\nrule: Thomas either pursues academic research or educates others, but not both.\nconclusion: Thomas does not educate others.\n\nfact1: Thomas does not understand animal behavior.\nrule: If Thomas has ecological knowledge, then he understands animal behavior.\nconclusion: Thomas does not have ecological knowledge.\n\nfact1: Thomas does not educate others.\nfact2: Thomas does not make a social impact.\nrule: If Thomas either takes community action or educates others (but not both), then he makes a social impact.\nconclusion: Thomas does not take community action.\n\nfact1: Thomas does not have ecological knowledge.\nfact2: Thomas does not take community action.\nrule: If Thomas contributes to wildlife conservation, then he either has ecological knowledge or takes community action, but not both.\nconclusion: Thomas does not contribute to wildlife conservation.\n\nfact1: Thomas does not love nature.\nrule: Everyone who protects the environment loves nature.\nconclusion: Thomas does not protect the environment.\n\nfact1: Thomas does not work with animals.\nfact2: Thomas does not protect the environment.\nrule: If Thomas either lives in the savannah or works with animals (but not both), then he protects the environment.\nconclusion: Thomas does not live in the savannah.\n\nfact1: Thomas does not live in the savannah.\nfact2: Thomas does not contribute to wildlife conservation.\nrule: If Thomas studies the elands or lives in the savannah (or both), then he contributes to wildlife conservation.\nconclusion: Thomas studies the elands.\n\nTherefore, it is false that Thomas studies the elands. The correct option is: B.",
    "context": "Thomas either makes a social impact or pursues personal gain, but not both. If Thomas contributes to wildlife conservation, then he either has ecological knowledge or takes community action, but not both. If someone possesses expertise and shares knowledge, then they can educate others. If Thomas either lives in the savannah or works with animals (but not both), then he protects the environment. Thomas supports conservation or pursues academic research. Thomas pursues personal gain. Thomas either pursues academic research or educates others, but not both. Everyone who protects the environment loves nature. If Thomas either takes community action or educates others (but not both), then he makes a social impact. If Thomas studies the elands or lives in the savannah (or both), then he contributes to wildlife conservation. Thomas does not love nature. If Thomas either tracks wildlife or explores rural areas (but not both), then he lives in the savannah. Thomas does not understand animal behavior. Thomas values biodiversity or has ecological knowledge. If Thomas has ecological knowledge, then he understands animal behavior. Thomas does not work with animals. Thomas does not support conservation.",
    "nl2fol": {
      "Thomas either makes a social impact or pursues personal gain, but not both.": "makes_social_impact(Thomas) ⊕ pursues_personal_gain(Thomas)",
      "If Thomas contributes to wildlife conservation, then he either has ecological knowledge or takes community action, but not both.": "contribute_to_wildlife_conservation(Thomas) → (has_ecological_knowledge(Thomas) ⊕ takes_community_action(Thomas))",
      "If someone possesses expertise and shares knowledge, then they can educate others.": "∀x ((possesses_expertise(x) ∧ shares_knowledge(x)) → educates_others(x))",
      "If Thomas either lives in the savannah or works with animals (but not both), then he protects the environment.": "(live_in_the_savannah(Thomas) ⊕ work_with_animals(Thomas)) → protect_the_environment(Thomas)",
      "Thomas supports conservation or pursues academic research.": "supports_conservation(Thomas) ∨ pursues_academic_research(Thomas)",
      "Thomas pursues personal gain.": "pursues_personal_gain(Thomas)",
      "Thomas either pursues academic research or educates others, but not both.": "pursues_academic_research(Thomas) ⊕ educates_others(Thomas)",
      "Everyone who protects the environment loves nature.": "∀x (protect_the_environment(x) → love_nature(x))",
      "If Thomas either takes community action or educates others (but not both), then he makes a social impact.": "(takes_community_action(Thomas) ⊕ educates_others(Thomas)) → makes_social_impact(Thomas)",
      "If Thomas studies the elands or lives in the savannah (or both), then he contributes to wildlife conservation.": "(study_the_elands(Thomas) ∨ live_in_the_savannah(Thomas)) → contribute_to_wildlife_conservation(Thomas)",
      "Thomas does not love nature.": "¬love_nature(Thomas)",
      "If Thomas either tracks wildlife or explores rural areas (but not both), then he lives in the savannah.": "(track_wildlife(Thomas) ⊕ explore_rural_areas(Thomas)) → live_in_the_savannah(Thomas)",
      "Thomas does not understand animal behavior.": "¬understands_animal_behavior(Thomas)",
      "Thomas values biodiversity or has ecological knowledge.": "values_biodiversity(Thomas) ∨ has_ecological_knowledge(Thomas)",
      "If Thomas has ecological knowledge, then he understands animal behavior.": "has_ecological_knowledge(Thomas) → understands_animal_behavior(Thomas)",
      "Thomas does not work with animals.": "¬work_with_animals(Thomas)",
      "Thomas does not support conservation.": "¬supports_conservation(Thomas)"
    },
    "conclusion_fol": "study_the_elands(Thomas)"
  },
  {
    "id": 160,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Queenie multiplies rapidly.",
    "reasoning": "fact1: Queenie is resilient.\nfact2: Queenie forms complex relationships.\nrule: If Queenie is resilient, then she reproduces rapidly and forms complex relationships.\nconclusion: Queenie reproduces rapidly.\n\nfact1: Queenie dominates her host.\nfact2: Queenie responds to stimuli.\nrule: If Queenie dominates her host, then she either manipulates her environment or responds to stimuli.\nconclusion: Queenie does not manipulate her environment.\n\nfact1: Queenie does not manipulate her environment.\nrule: Every parasitic organism either manipulates its environment or is adaptable.\nconclusion: Queenie is adaptable.\n\nfact1: Queenie reproduces rapidly.\nfact2: Queenie does not evade detection.\nrule: Every parasitic organism that reproduces rapidly either evades detection or feeds efficiently (or both).\nconclusion: Queenie feeds efficiently.\n\nfact1: Queenie is adaptable.\nfact2: Queenie feeds efficiently.\nrule: If Queenie is adaptable, then she either thrives in her host or feeds efficiently, but not both.\nconclusion: Queenie does not thrive in her host.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Queenie multiplies rapidly. The correct option is: C.",
    "context": "Every parasitic organism either manipulates its environment or is adaptable. If Queenie dominates her host, then she either manipulates her environment or responds to stimuli. If Queenie is adaptable, then she either thrives in her host or feeds efficiently, but not both. If Queenie is resilient, then she reproduces rapidly and forms complex relationships. Queenie does not evade detection. Queenie is resilient. Every parasitic organism that reproduces rapidly either evades detection or feeds efficiently (or both). Queenie dominates her host. Queenie responds to stimuli. Queenie forms complex relationships.",
    "nl2fol": {
      "Every parasitic organism either manipulates its environment or is adaptable.": "∀x (manipulates_environment(x) ∨ is_adaptable(x))",
      "If Queenie dominates her host, then she either manipulates her environment or responds to stimuli.": "dominate_host(Queenie) → (manipulates_environment(Queenie) ⊕ respond_to_stimuli(Queenie))",
      "If Queenie is adaptable, then she either thrives in her host or feeds efficiently, but not both.": "is_adaptable(Queenie) → (thrive_in_host(Queenie) ⊕ feed_efficiently(Queenie))",
      "If Queenie is resilient, then she reproduces rapidly and forms complex relationships.": "is_resilient(Queenie) → (reproduce_rapidly(Queenie) ∧ form_complex_relationships(Queenie))",
      "Queenie does not evade detection.": "¬evade_detection(Queenie)",
      "Queenie is resilient.": "is_resilient(Queenie)",
      "Every parasitic organism that reproduces rapidly either evades detection or feeds efficiently (or both).": "∀x (reproduce_rapidly(x) → (evade_detection(x) ∨ feed_efficiently(x)))",
      "Queenie dominates her host.": "dominate_host(Queenie)",
      "Queenie responds to stimuli.": "respond_to_stimuli(Queenie)",
      "Queenie forms complex relationships.": "form_complex_relationships(Queenie)"
    },
    "conclusion_fol": "multiply_rapidly(Queenie)"
  },
  {
    "id": 161,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Theo is not innovative.",
    "reasoning": "fact1: Theo does not deserve awards.\nrule: If Theo improves lives, then he deserves awards.\nconclusion: Theo does not improve lives.\n\nfact1: Theo does not achieve success.\nrule: If Theo values precision, then he achieves success.\nconclusion: Theo does not value precision.\n\nfact1: Theo does not value precision.\nrule: Theo is either detail-oriented and values precision, or he is curious, but not both.\nconclusion: Theo is curious.\n\nfact1: Theo is curious.\nfact2: Theo takes risks.\nrule: If Theo is curious, then he either thinks outside the box or takes risks (but not both).\nconclusion: Theo does not think outside the box.\n\nfact1: Theo does not think outside the box.\nrule: If someone pursues creativity, then they think outside the box.\nconclusion: Theo does not pursue creativity.\n\nfact1: Theo does not pursue creativity.\nrule: Theo either pursues creativity or revolutionizes industries.\nconclusion: Theo revolutionizes industries.\n\nfact1: Theo does not improve lives.\nrule: If Theo gains recognition, then he improves lives.\nconclusion: Theo does not gain recognition.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Theo is not innovative. The correct option is: C.",
    "context": "If Theo values precision, then he achieves success. Theo either pursues creativity or revolutionizes industries. If Theo improves lives, then he deserves awards. Theo takes risks. If Theo is curious, then he either thinks outside the box or takes risks (but not both). If Theo gains recognition, then he improves lives. If Theo is ambitious, then he is either detail-oriented or values precision, but not both. Theo is either detail-oriented and values precision, or he is curious, but not both. Theo does not deserve awards. If someone pursues creativity, then they think outside the box. Theo does not achieve success.",
    "nl2fol": {
      "If Theo values precision, then he achieves success.": "values_precision(Theo) → achieves_success(Theo)",
      "Theo either pursues creativity or revolutionizes industries.": "pursue_creativity(Theo) ∨ revolutionize_industries(Theo)",
      "If Theo improves lives, then he deserves awards.": "improve_lives(Theo) → deserves_awards(Theo)",
      "Theo takes risks.": "take_risks(Theo)",
      "If Theo is curious, then he either thinks outside the box or takes risks (but not both).": "is_curious(Theo) → (think_outside_box(Theo) ⊕ take_risks(Theo))",
      "If Theo gains recognition, then he improves lives.": "gain_recognition(Theo) → improve_lives(Theo)",
      "If Theo is ambitious, then he is either detail-oriented or values precision, but not both.": "has_ambition(Theo) → (values_precision(Theo) ⊕ is_detail_oriented(Theo))",
      "Theo is either detail-oriented and values precision, or he is curious, but not both.": "values_precision(Theo) ⊕ is_curious(Theo)",
      "Theo does not deserve awards.": "¬deserves_awards(Theo)",
      "If someone pursues creativity, then they think outside the box.": "∀x (pursue_creativity(x) → think_outside_box(x))",
      "Theo does not achieve success.": "¬achieves_success(Theo)"
    },
    "conclusion_fol": "¬innovative(Theo)"
  },
  {
    "id": 162,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sweetie is not ridden by a novice rider.",
    "reasoning": "fact1: Sweetie requires intensive care.\nrule: Sweetie either makes a good companion or requires intensive care, but not both.\nconclusion: Sweetie does not make a good companion.\n\nfact1: Sweetie does not make a good companion.\nrule: If Sweetie is high-strung or has good breeding, then she makes a good companion.\nconclusion: Sweetie is not high-strung.\n\nfact1: Sweetie has a trusting nature.\nfact2: Sweetie has strong instincts.\nrule: If Sweetie has a trusting nature, then she has strong instincts and is naturally calm.\nconclusion: Sweetie is naturally calm.\n\nfact1: Sweetie is well-trained.\nfact2: Sweetie is naturally calm.\nrule: If Sweetie is an experienced mount, then she is either well-trained or naturally calm, but not both.\nconclusion: Sweetie is not an experienced mount.\n\nfact1: Sweetie is not high-strung.\nrule: Sweetie is either calm and patient or high-strung, but not both.\nconclusion: Sweetie is patient.\n\nfact1: Sweetie is not an experienced mount.\nrule: Sweetie is either ridden by a skilled rider or an experienced mount, but not both.\nconclusion: Sweetie is ridden by a skilled rider.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Sweetie is not ridden by a novice rider. The correct option is: C.",
    "context": "Sweetie is well-trained. If Sweetie is a therapeutic horse, then she is either high-strung or has a gentle temper, but not both. If Sweetie is high-strung or has good breeding, then she makes a good companion. Sweetie is either ridden by a skilled rider or an experienced mount, but not both. Sweetie either makes a good companion or requires intensive care, but not both. If Sweetie is an experienced mount, then she is either well-trained or naturally calm, but not both. If Sweetie has a trusting nature, then she has strong instincts and is naturally calm. Sweetie requires intensive care. Sweetie has a trusting nature. Sweetie has strong instincts. Sweetie is either calm and patient or high-strung, but not both.",
    "nl2fol": {
      "Sweetie is well-trained.": "well_trained(Sweetie)",
      "If Sweetie is a therapeutic horse, then she is either high-strung or has a gentle temper, but not both.": "therapeutic_horse(Sweetie) → (gentle_temper(Sweetie) ⊕ high_strung(Sweetie))",
      "If Sweetie is high-strung or has good breeding, then she makes a good companion.": "(high_strung(Sweetie) ∨ has_good_breeding(Sweetie)) → makes_good_companion(Sweetie)",
      "Sweetie is either ridden by a skilled rider or an experienced mount, but not both.": "skilled_rider(Sweetie) ⊕ experienced_mount(Sweetie)",
      "Sweetie either makes a good companion or requires intensive care, but not both.": "makes_good_companion(Sweetie) ⊕ requires_intensive_care(Sweetie)",
      "If Sweetie is an experienced mount, then she is either well-trained or naturally calm, but not both.": "experienced_mount(Sweetie) → (well_trained(Sweetie) ⊕ naturally_calm(Sweetie))",
      "If Sweetie has a trusting nature, then she has strong instincts and is naturally calm.": "trusting_nature(Sweetie) → (strong_instincts(Sweetie) ∧ naturally_calm(Sweetie))",
      "Sweetie requires intensive care.": "requires_intensive_care(Sweetie)",
      "Sweetie has a trusting nature.": "trusting_nature(Sweetie)",
      "Sweetie has strong instincts.": "strong_instincts(Sweetie)",
      "Sweetie is either calm and patient or high-strung, but not both.": "patient(Sweetie) ⊕ high_strung(Sweetie)"
    },
    "conclusion_fol": "¬novice_rider(Sweetie)"
  },
  {
    "id": 163,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Enoch pays attention to detail.",
    "reasoning": "fact1: Enoch sets high goals.\nrule: If Enoch sets high goals, then he has a strong work ethic and learns quickly.\nconclusion: Enoch has a strong work ethic.\n\nfact1: Enoch pursues hobbies.\nrule: For every person, either they pursue hobbies or they can earn a good reputation, but these are not necessarily related.\nconclusion: Enoch does not earn a good reputation.\n\nfact1: Enoch has a strong work ethic.\nfact2: Enoch does not earn a good reputation.\nrule: Anyone who meets high standards and has a strong work ethic can earn a good reputation.\nconclusion: Enoch does not meet high standards.\n\nfact1: Enoch does not meet high standards.\nrule: If someone works with precision, then they take pride in their work and meet high standards.\nconclusion: Enoch does not work with precision.\n\nfact1: Enoch appreciates beauty.\nrule: If Enoch appreciates beauty and has a patient nature, then he is a skilled plasterer.\nconclusion: Enoch is a skilled plasterer.\n\nfact1: Enoch does not work with precision.\nfact2: Enoch does not craft beautiful pieces.\nrule: If Enoch either works with precision or creates intricate designs (but not both), then he crafts beautiful pieces.\nconclusion: Enoch does not create intricate designs.\n\nfact1: Enoch is a skilled plasterer.\nfact2: Enoch does not create intricate designs.\nrule: For all humans, if someone is a skilled plasterer, then they either create intricate designs or pay attention to detail (or both).\nconclusion: Enoch pays attention to detail.\n\nTherefore, it is true that Enoch pays attention to detail. The correct option is: A.",
    "context": "Enoch appreciates beauty. If Nikolai either works with precision or creates intricate designs (but not both), then he crafts beautiful pieces. Pet does not strive for perfection. Anyone who meets high standards and has a strong work ethic can earn a good reputation. Pet sets high goals. If Enoch either works with precision or creates intricate designs (but not both), then he crafts beautiful pieces. Enoch does not craft beautiful pieces. Enoch pursues hobbies. Enoch either makes artistic pieces or creates intricate designs (or both). Raphael appreciates beauty. For every person, either they pursue hobbies or they can earn a good reputation, but these are not necessarily related. Enoch sets high goals. If Raphael appreciates beauty and has a patient nature, then he is a skilled plasterer. If someone works with precision, then they take pride in their work and meet high standards. If Enoch appreciates beauty and has a patient nature, then he is a skilled plasterer. Raphael does not craft beautiful pieces. For all humans, if someone is a skilled plasterer, then they either create intricate designs or pay attention to detail (or both). Anyone who works diligently either earns a good reputation or builds a client base. If Enoch sets high goals, then he has a strong work ethic and learns quickly.",
    "nl2fol": {
      "Enoch appreciates beauty.": "appreciate_beauty(Enoch)",
      "If Nikolai either works with precision or creates intricate designs (but not both), then he crafts beautiful pieces.": "(work_with_precision(Nikolai) ⊕ create_intricate_designs(Nikolai)) → craft_beautiful_pieces(Nikolai)",
      "Pet does not strive for perfection.": "¬strive_for_perfection(Pet)",
      "Anyone who meets high standards and has a strong work ethic can earn a good reputation.": "∀x ((meet_high_standards(x) ∧ has_strong_work_ethic(x)) → earn_good_reputation(x))",
      "Pet sets high goals.": "set_high_goals(Pet)",
      "If Enoch either works with precision or creates intricate designs (but not both), then he crafts beautiful pieces.": "(work_with_precision(Enoch) ⊕ create_intricate_designs(Enoch)) → craft_beautiful_pieces(Enoch)",
      "Enoch does not craft beautiful pieces.": "¬craft_beautiful_pieces(Enoch)",
      "Enoch pursues hobbies.": "pursue_hobbies(Enoch)",
      "Enoch either makes artistic pieces or creates intricate designs (or both).": "make_artistic_pieces(Enoch) ∨ create_intricate_designs(Enoch)",
      "Raphael appreciates beauty.": "appreciate_beauty(Raphael)",
      "For every person, either they pursue hobbies or they can earn a good reputation, but these are not necessarily related.": "∀x (pursue_hobbies(x) ⊕ earn_good_reputation(x))",
      "Enoch sets high goals.": "set_high_goals(Enoch)",
      "If Raphael appreciates beauty and has a patient nature, then he is a skilled plasterer.": "appreciate_beauty(Raphael) → (have_patient_nature(Raphael) ∧ skilled_plasterer(Raphael))",
      "If someone works with precision, then they take pride in their work and meet high standards.": "∀x (work_with_precision(x) → (take_pride_in_work(x) ∧ meet_high_standards(x)))",
      "If Enoch appreciates beauty and has a patient nature, then he is a skilled plasterer.": "appreciate_beauty(Enoch) → (have_patient_nature(Enoch) ∧ skilled_plasterer(Enoch))",
      "Raphael does not craft beautiful pieces.": "¬craft_beautiful_pieces(Raphael)",
      "For all humans, if someone is a skilled plasterer, then they either create intricate designs or pay attention to detail (or both).": "∀x (skilled_plasterer(x) → (create_intricate_designs(x) ∨ pay_attention_to_detail(x)))",
      "Anyone who works diligently either earns a good reputation or builds a client base.": "∀x (work_diligently(x) → (earn_good_reputation(x) ∨ build_client_base(x)))",
      "If Enoch sets high goals, then he has a strong work ethic and learns quickly.": "set_high_goals(Enoch) → (learn_quickly(Enoch) ∧ has_strong_work_ethic(Enoch))"
    },
    "conclusion_fol": "pay_attention_to_detail(Enoch)"
  },
  {
    "id": 164,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Caroline reduces genetic disorders.",
    "reasoning": "fact1: Caroline does not seek a global perspective.\nfact2: Caroline fosters social connections.\nrule: If Caroline either seeks a global perspective or fosters social connections (but not both), then she rejects inbreeding.\nconclusion: Caroline rejects inbreeding.\n\nfact1: Caroline seeks change.\nfact2: Caroline does not value open-mindedness.\nrule: If Caroline seeks change, then she either values open-mindedness or prioritizes inclusivity (or both).\nconclusion: Caroline prioritizes inclusivity.\n\nfact1: Caroline does not appreciate culture.\nrule: Caroline appreciates culture or values diversity.\nconclusion: Caroline values diversity.\n\nfact1: Caroline rejects inbreeding.\nfact2: Caroline prioritizes inclusivity.\nrule: If Caroline rejects inbreeding, then she either prioritizes inclusivity or embraces cultural exchange (but not both).\nconclusion: Caroline does not embrace cultural exchange.\n\nfact1: Caroline does not embrace cultural exchange.\nrule: Caroline either embraces cultural exchange or seeks global connections.\nconclusion: Caroline seeks global connections.\n\nfact1: Caroline values diversity.\nfact2: Caroline seeks global connections.\nrule: If Caroline values diversity and seeks global connections, then she is likely to marry outside her family.\nconclusion: Caroline marries outside her family.\n\nfact1: Caroline marries outside her family.\nfact2: Caroline improves her health prospects.\nrule: For all humans, if they marry outside their family, then they reduce genetic disorders and improve their health prospects.\nconclusion: Caroline reduces genetic disorders.\n\nTherefore, it is true that Caroline reduces genetic disorders. The correct option is: A.",
    "context": "If Kennedi rejects inbreeding, then she either prioritizes inclusivity or embraces cultural exchange (but not both). If Caroline either respects all backgrounds or values social mixing (but not both), then she prioritizes inclusivity. Caroline seeks change. Caroline does not seek a global perspective. Caroline will marry outside her family if she rejects tradition. If Lakelyn values diversity and seeks global connections, then she is likely to marry outside her family. If Caroline seeks change, then she either values open-mindedness or prioritizes inclusivity (or both). If Reece either seeks a global perspective or fosters social connections (but not both), then she rejects inbreeding. If Caroline rejects inbreeding, then she either prioritizes inclusivity or embraces cultural exchange (but not both). If Caroline values diversity and seeks global connections, then she is likely to marry outside her family. Reece appreciates culture or values diversity. If Caroline either seeks a global perspective or fosters social connections (but not both), then she rejects inbreeding. Caroline appreciates culture or values diversity. If Caroline desires personal growth, then she seeks global connections and embraces new experiences. Lakelyn does not seek a global perspective. For all humans, if they marry outside their family, then they reduce genetic disorders and improve their health prospects. Caroline either embraces cultural exchange or seeks global connections. Caroline does not appreciate culture. Caroline improves her health prospects. Caroline fosters social connections. Caroline does not value open-mindedness.",
    "nl2fol": {
      "If Kennedi rejects inbreeding, then she either prioritizes inclusivity or embraces cultural exchange (but not both).": "rejects_inbreeding(Kennedi) → (prioritizes_inclusivity(Kennedi) ⊕ embraces_culture_exchange(Kennedi))",
      "If Caroline either respects all backgrounds or values social mixing (but not both), then she prioritizes inclusivity.": "(respects_all_backgrounds(Caroline) ⊕ values_social_mixing(Caroline)) → prioritizes_inclusivity(Caroline)",
      "Caroline seeks change.": "seeks_change(Caroline)",
      "Caroline does not seek a global perspective.": "¬seeks_global_perspective(Caroline)",
      "Caroline will marry outside her family if she rejects tradition.": "rejects_tradition(Caroline) → marry_outside_family(Caroline)",
      "If Lakelyn values diversity and seeks global connections, then she is likely to marry outside her family.": "(values_diversity(Lakelyn) ∧ seeks_global_connections(Lakelyn)) → marry_outside_family(Lakelyn)",
      "If Caroline seeks change, then she either values open-mindedness or prioritizes inclusivity (or both).": "seeks_change(Caroline) → (values_open_mindedness(Caroline) ∨ prioritizes_inclusivity(Caroline))",
      "If Reece either seeks a global perspective or fosters social connections (but not both), then she rejects inbreeding.": "(seeks_global_perspective(Reece) ⊕ fosters_social_connections(Reece)) → rejects_inbreeding(Reece)",
      "If Caroline rejects inbreeding, then she either prioritizes inclusivity or embraces cultural exchange (but not both).": "rejects_inbreeding(Caroline) → (prioritizes_inclusivity(Caroline) ⊕ embraces_culture_exchange(Caroline))",
      "If Caroline values diversity and seeks global connections, then she is likely to marry outside her family.": "(values_diversity(Caroline) ∧ seeks_global_connections(Caroline)) → marry_outside_family(Caroline)",
      "Reece appreciates culture or values diversity.": "appreciates_culture(Reece) ∨ values_diversity(Reece)",
      "If Caroline either seeks a global perspective or fosters social connections (but not both), then she rejects inbreeding.": "(seeks_global_perspective(Caroline) ⊕ fosters_social_connections(Caroline)) → rejects_inbreeding(Caroline)",
      "Caroline appreciates culture or values diversity.": "appreciates_culture(Caroline) ∨ values_diversity(Caroline)",
      "If Caroline desires personal growth, then she seeks global connections and embraces new experiences.": "desires_personal_growth(Caroline) → (seeks_global_connections(Caroline) ∧ embracing_new_experiences(Caroline))",
      "Lakelyn does not seek a global perspective.": "¬seeks_global_perspective(Lakelyn)",
      "For all humans, if they marry outside their family, then they reduce genetic disorders and improve their health prospects.": "∀x (marry_outside_family(x) → (reduce_genetic_disorders(x) ∧ improve_health_prospects(x)))",
      "Caroline either embraces cultural exchange or seeks global connections.": "embraces_culture_exchange(Caroline) ∨ seeks_global_connections(Caroline)",
      "Caroline does not appreciate culture.": "¬appreciates_culture(Caroline)",
      "Caroline improves her health prospects.": "improve_health_prospects(Caroline)",
      "Caroline fosters social connections.": "fosters_social_connections(Caroline)",
      "Caroline does not value open-mindedness.": "¬values_open_mindedness(Caroline)"
    },
    "conclusion_fol": "reduce_genetic_disorders(Caroline)"
  },
  {
    "id": 165,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jon has experienced laryngospasm, then he will either quit singing or learn methods to prevent future episodes, but not both.",
    "reasoning": "fact1: Jon does not have an office job.\nrule: Jon is either a performer or has an office job, but not both.\nconclusion: Jon is a performer.\n\nfact1: Jon is a performer.\nfact2: Jon maintains good health.\nrule: If Jon is a performer, then he either has vocal problems or maintains good health, but not both.\nconclusion: Jon does not have vocal problems.\n\nfact1: Jon experiences a health scare.\nfact2: Jon does not seek medical attention.\nrule: Everyone who experiences a health scare either seeks medical attention or has a medical condition (or both).\nconclusion: Jon has a medical condition.\n\nfact1: Jon has a medical condition.\nfact2: Jon changes his lifestyle.\nrule: If Jon has a medical condition, then he will either change his lifestyle or learn methods to prevent future episodes, but not both.\nconclusion: Jon does not learn methods to prevent future episodes of laryngospasm.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Jon has experienced laryngospasm, then he will either quit singing or learn methods to prevent future episodes, but not both. The correct option is: C.",
    "context": "Jon does not seek medical attention. If Jon has a medical condition, then he will either change his lifestyle or learn methods to prevent future episodes, but not both. Tootsie will prioritize his vocal health. Jon maintains good health. Jon does not have an office job. Ayden does not seek medical attention. Jon is either a performer or has an office job, but not both. Everyone who experiences a health scare either seeks medical attention or has a medical condition (or both). If Jon fears public performance, then he will either quit singing or seek vocal coaching, but not both. Jon experiences a health scare. Ayden experiences a health scare. Julio is either a performer or has an office job, but not both. If Jon is a performer, then he either has vocal problems or maintains good health, but not both. Jon changes his lifestyle.",
    "nl2fol": {
      "Jon does not seek medical attention.": "¬seek_medical_attention(Jon)",
      "If Jon has a medical condition, then he will either change his lifestyle or learn methods to prevent future episodes, but not both.": "has_medical_condition(Jon) → (change_lifestyle(Jon) ⊕ learn_prevention_methods(Jon))",
      "Tootsie will prioritize his vocal health.": "prioritize_vocal_health(Tootsie)",
      "Jon maintains good health.": "maintain_good_health(Jon)",
      "Jon does not have an office job.": "¬has_office_job(Jon)",
      "Ayden does not seek medical attention.": "¬seek_medical_attention(Ayden)",
      "Jon is either a performer or has an office job, but not both.": "is_performer(Jon) ⊕ has_office_job(Jon)",
      "Everyone who experiences a health scare either seeks medical attention or has a medical condition (or both).": "∀x (experience_health_scare(x) → (seek_medical_attention(x) ∨ has_medical_condition(x)))",
      "If Jon fears public performance, then he will either quit singing or seek vocal coaching, but not both.": "fear_public_performance(Jon) → (quit_singing(Jon) ⊕ seek_vocal_coaching(Jon))",
      "Jon experiences a health scare.": "experience_health_scare(Jon)",
      "Ayden experiences a health scare.": "experience_health_scare(Ayden)",
      "Julio is either a performer or has an office job, but not both.": "is_performer(Julio) ⊕ has_office_job(Julio)",
      "If Jon is a performer, then he either has vocal problems or maintains good health, but not both.": "is_performer(Jon) → (has_vocal_problems(Jon) ⊕ maintain_good_health(Jon))",
      "Jon changes his lifestyle.": "change_lifestyle(Jon)"
    },
    "conclusion_fol": "experienced_laryngospasm(Jon) → (quit_singing(Jon) ⊕ learn_prevention_methods(Jon))"
  },
  {
    "id": 166,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rocco values social justice.",
    "reasoning": "fact1: Rocco works with his local community.\nrule: Rocco either works with his local community or exposes corruption, but not both.\nconclusion: Rocco does not expose corruption.\n\nfact1: Rocco does not raise awareness.\nrule: Rocco either raises awareness or speaks against discrimination.\nconclusion: Rocco speaks against discrimination.\n\nfact1: Rocco speaks against discrimination.\nfact2: Rocco does not expose corruption.\nrule: If Rocco either speaks against discrimination or exposes corruption (but not both), then he challenges unfair systems.\nconclusion: Rocco challenges unfair systems.\n\nfact1: Rocco is outspoken.\nfact2: Rocco does not support human rights.\nrule: If Rocco is outspoken, then he either supports human rights or stands up for others, but not both.\nconclusion: Rocco stands up for others.\n\nfact1: Rocco stands up for others.\nfact2: Rocco challenges unfair systems.\nrule: Anyone who stands up for others and challenges unfair systems fights for equality.\nconclusion: Rocco fights for equality.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Rocco values social justice. The correct option is: C.",
    "context": "Henrik either works with his local community or exposes corruption, but not both. Rocco either works with his local community or exposes corruption, but not both. If Rocco is outspoken, then he either supports human rights or stands up for others, but not both. Rocco either raises awareness or speaks against discrimination. Anyone who stands up for others and challenges unfair systems fights for equality. Rocco either helps those in need or challenges unfair systems. If Ivanna either speaks against discrimination or exposes corruption (but not both), then he challenges unfair systems. Rocco does not support human rights. Kylie either fights for equality or values social justice (or both). Anyone who believes in fairness and respects all people fights for equality. Henrik does not raise awareness. Rocco does not raise awareness. Rocco is outspoken. If Rocco either speaks against discrimination or exposes corruption (but not both), then he challenges unfair systems. Rocco works with his local community.",
    "nl2fol": {
      "Henrik either works with his local community or exposes corruption, but not both.": "works_with_local_community(Henrik) ⊕ exposes_corruption(Henrik)",
      "Rocco either works with his local community or exposes corruption, but not both.": "works_with_local_community(Rocco) ⊕ exposes_corruption(Rocco)",
      "If Rocco is outspoken, then he either supports human rights or stands up for others, but not both.": "is_outspoken(Rocco) → (supports_human_rights(Rocco) ⊕ stands_up_for_others(Rocco))",
      "Rocco either raises awareness or speaks against discrimination.": "raises_awareness(Rocco) ∨ speaks_against_discrimination(Rocco)",
      "Anyone who stands up for others and challenges unfair systems fights for equality.": "∀x ((stands_up_for_others(x) ∧ challenges_unfair_systems(x)) → fights_for_equality(x))",
      "Rocco either helps those in need or challenges unfair systems.": "helps_those_in_need(Rocco) ∨ challenges_unfair_systems(Rocco)",
      "If Ivanna either speaks against discrimination or exposes corruption (but not both), then he challenges unfair systems.": "(speaks_against_discrimination(Ivanna) ⊕ exposes_corruption(Ivanna)) → challenges_unfair_systems(Ivanna)",
      "Rocco does not support human rights.": "¬supports_human_rights(Rocco)",
      "Kylie either fights for equality or values social justice (or both).": "fights_for_equality(Kylie) ∨ values_social_justice(Kylie)",
      "Anyone who believes in fairness and respects all people fights for equality.": "∀x ((believes_in_fairness(x) ∧ respects_all_people(x)) → fights_for_equality(x))",
      "Henrik does not raise awareness.": "¬raises_awareness(Henrik)",
      "Rocco does not raise awareness.": "¬raises_awareness(Rocco)",
      "Rocco is outspoken.": "is_outspoken(Rocco)",
      "If Rocco either speaks against discrimination or exposes corruption (but not both), then he challenges unfair systems.": "(speaks_against_discrimination(Rocco) ⊕ exposes_corruption(Rocco)) → challenges_unfair_systems(Rocco)",
      "Rocco works with his local community.": "works_with_local_community(Rocco)"
    },
    "conclusion_fol": "values_social_justice(Rocco)"
  },
  {
    "id": 167,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kevin discovers new species.",
    "reasoning": "fact1: Kevin is a professor.\nfact2: Kevin conducts research.\nrule: If Kevin is a professor, then he either conducts research or educates students, but not both.\nconclusion: Kevin does not educate students.\n\nfact1: Kevin does not investigate ecosystems.\nrule: Kevin either investigates ecosystems or pursues space research.\nconclusion: Kevin pursues space research.\n\nfact1: Kevin does not educate students.\nrule: If someone educates students, then they do not necessarily inspire others, and vice versa.\nconclusion: Kevin inspires others.\n\nfact1: Kevin pursues space research.\nrule: Kevin either pursues space research or explores terrestrial ecosystems, but not both.\nconclusion: Kevin does not explore terrestrial ecosystems.\n\nfact1: Kevin does not explore terrestrial ecosystems.\nrule: Kevin either explores terrestrial ecosystems or studies the ocean, but not both.\nconclusion: Kevin studies the ocean.\n\nfact1: Kevin studies the ocean.\nfact2: Kevin inspires others.\nrule: If Kevin studies the ocean, then he can either discover new species or inspire others, but not both.\nconclusion: Kevin does not discover new species.\n\nTherefore, it is false that Kevin discovers new species. The correct option is: B.",
    "context": "Kevin protects marine life or studies the ocean. Vida either explores terrestrial ecosystems or studies the ocean, but not both. Kevin either investigates ecosystems or pursues space research. Kevin conducts research. If Kevin has a backpack or enjoys hiking, then he can explore terrestrial ecosystems. Kevin is a professor. If someone educates students, then they do not necessarily inspire others, and vice versa. If Kevin has passion, then he can either inspire others or develop innovative solutions, but not both. Kevin does not investigate ecosystems. Kevin either explores terrestrial ecosystems or studies the ocean, but not both. If Kevin studies the ocean, then he can either discover new species or inspire others, but not both. If Kevin is a professor, then he either conducts research or educates students, but not both. Kevin either pursues space research or explores terrestrial ecosystems, but not both.",
    "nl2fol": {
      "Kevin protects marine life or studies the ocean.": "protect_marine_life(Kevin) ∨ study_ocean(Kevin)",
      "Vida either explores terrestrial ecosystems or studies the ocean, but not both.": "explore_terra(Vida) ⊕ study_ocean(Vida)",
      "Kevin either investigates ecosystems or pursues space research.": "investigate_ecosystems(Kevin) ∨ pursue_space_research(Kevin)",
      "Kevin conducts research.": "conduct_research(Kevin)",
      "If Kevin has a backpack or enjoys hiking, then he can explore terrestrial ecosystems.": "(has_backpack(Kevin) ∨ enjoys_hiking(Kevin)) → explore_terra(Kevin)",
      "Kevin is a professor.": "is_professor(Kevin)",
      "If someone educates students, then they do not necessarily inspire others, and vice versa.": "∀x (educate_students(x) ⊕ inspire_others(x))",
      "If Kevin has passion, then he can either inspire others or develop innovative solutions, but not both.": "has_passion(Kevin) → (inspire_others(Kevin) ⊕ develop_innovative_solutions(Kevin))",
      "Kevin does not investigate ecosystems.": "¬investigate_ecosystems(Kevin)",
      "Kevin either explores terrestrial ecosystems or studies the ocean, but not both.": "explore_terra(Kevin) ⊕ study_ocean(Kevin)",
      "If Kevin studies the ocean, then he can either discover new species or inspire others, but not both.": "study_ocean(Kevin) → (discover_new_species(Kevin) ⊕ inspire_others(Kevin))",
      "If Kevin is a professor, then he either conducts research or educates students, but not both.": "is_professor(Kevin) → (conduct_research(Kevin) ⊕ educate_students(Kevin))",
      "Kevin either pursues space research or explores terrestrial ecosystems, but not both.": "pursue_space_research(Kevin) ⊕ explore_terra(Kevin)"
    },
    "conclusion_fol": "discover_new_species(Kevin)"
  },
  {
    "id": 168,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eugene does not develop expertise in plants.",
    "reasoning": "fact1: Eugene does not read botany books.\nfact2: Eugene visits gardens.\nrule: If Eugene either reads botany books or visits gardens (but not both), then he collects seeds.\nconclusion: Eugene collects seeds.\n\nfact1: Eugene values serenity.\nfact2: Eugene does not cultivate beauty.\nrule: If Eugene values serenity, then he either cultivates beauty or loves gardening (or both).\nconclusion: Eugene loves gardening.\n\nfact1: Eugene collects seeds.\nfact2: Eugene does not nurture plants.\nrule: For all humans, if they either collect seeds or have a greenhouse (but not both), then they nurture plants.\nconclusion: Eugene has a greenhouse.\n\nfact1: Eugene loves gardening.\nfact2: Eugene has a greenhouse.\nrule: If someone loves gardening and has a greenhouse, then they can work outdoors.\nconclusion: Eugene works outdoors.\n\nfact1: Eugene travels extensively.\nfact2: Eugene does not discover rare species.\nrule: If Eugene travels extensively, then he either enjoys hiking or discovers rare species (or both).\nconclusion: Eugene enjoys hiking.\n\nfact1: Eugene works outdoors.\nfact2: Eugene enjoys hiking.\nrule: If Eugene works outdoors, then he either enjoys hiking or appreciates nature (but not both).\nconclusion: Eugene does not appreciate nature.\n\nfact1: Eugene does not participate in ecological projects.\nfact2: Eugene does not appreciate nature.\nrule: Everyone who either dedicates time to botany or participates in ecological projects (but not both) appreciates nature.\nconclusion: Eugene does not dedicate time to botany.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Eugene does not develop expertise in plants. The correct option is: C.",
    "context": "If Eugene is curious, then he collects seeds. Rachel does not nurture plants. If Eugene travels extensively, then he either enjoys hiking or discovers rare species (or both). Eugene does not participate in ecological projects. If someone loves gardening and has a greenhouse, then they can work outdoors. If Ian works outdoors, then he either enjoys hiking or appreciates nature (but not both). If Eugene values serenity, then he either cultivates beauty or loves gardening (or both). If Ian travels extensively, then he either enjoys hiking or discovers rare species (or both). Eugene does not nurture plants. Leonidas does not discover rare species. Eugene does not discover rare species. Rachel does not read botany books. Anyone who admires flora or grows their own plants can love gardening. If Rachel either reads botany books or visits gardens (but not both), then he collects seeds. If Eugene either joins botany clubs or attends arboretums (but not both), then he dedicates time to botany. Rachel does not participate in ecological projects. Eugene values serenity. Everyone who either dedicates time to botany or participates in ecological projects (but not both) appreciates nature. Eugene does not read botany books. Eugene does not cultivate beauty. Ian travels extensively. Eugene travels extensively. Rachel does not cultivate beauty. If Eugene works outdoors, then he either enjoys hiking or appreciates nature (but not both). Eugene visits gardens. For all humans, if they either collect seeds or have a greenhouse (but not both), then they nurture plants. If Eugene either reads botany books or visits gardens (but not both), then he collects seeds.",
    "nl2fol": {
      "If Eugene is curious, then he collects seeds.": "is_curious(Eugene) → collects_seeds(Eugene)",
      "Rachel does not nurture plants.": "¬nurture_plant(Rachel)",
      "If Eugene travels extensively, then he either enjoys hiking or discovers rare species (or both).": "travel_extensively(Eugene) → (discover_rare_species(Eugene) ∨ enjoy_hiking(Eugene))",
      "Eugene does not participate in ecological projects.": "¬participate_in_ecological_projects(Eugene)",
      "If someone loves gardening and has a greenhouse, then they can work outdoors.": "∀x ((loves_gardening(x) ∧ has_greenhouse(x)) → work_outdoors(x))",
      "If Ian works outdoors, then he either enjoys hiking or appreciates nature (but not both).": "work_outdoors(Ian) → (enjoy_hiking(Ian) ⊕ appreciate_nature(Ian))",
      "If Eugene values serenity, then he either cultivates beauty or loves gardening (or both).": "values_serenity(Eugene) → (cultivate_beauty(Eugene) ∨ loves_gardening(Eugene))",
      "If Ian travels extensively, then he either enjoys hiking or discovers rare species (or both).": "travel_extensively(Ian) → (discover_rare_species(Ian) ∨ enjoy_hiking(Ian))",
      "Eugene does not nurture plants.": "¬nurture_plants(Eugene)",
      "Leonidas does not discover rare species.": "¬discover_rare_species(Leonidas)",
      "Eugene does not discover rare species.": "¬discover_rare_species(Eugene)",
      "Rachel does not read botany books.": "¬reads_botany_books(Rachel)",
      "Anyone who admires flora or grows their own plants can love gardening.": "∀x ((admires_flora(x) ∨ grows_own_plants(x)) → loves_gardening(x))",
      "If Rachel either reads botany books or visits gardens (but not both), then he collects seeds.": "(reads_botany_books(Rachel) ⊕ visits_gardens(Rachel)) → collects_seeds(Rachel)",
      "If Eugene either joins botany clubs or attends arboretums (but not both), then he dedicates time to botany.": "(joins_botany_clubs(Eugene) ⊕ attends_arboretums(Eugene)) → dedicate_time_to_botany(Eugene)",
      "Rachel does not participate in ecological projects.": "¬participate_in_ecological_projects(Rachel)",
      "Eugene values serenity.": "values_serenity(Eugene)",
      "Everyone who either dedicates time to botany or participates in ecological projects (but not both) appreciates nature.": "∀x ((dedicate_time_to_botany(x) ⊕ participate_in_ecological_projects(x)) → appreciate_nature(x))",
      "Eugene does not read botany books.": "¬reads_botany_books(Eugene)",
      "Eugene does not cultivate beauty.": "¬cultivate_beauty(Eugene)",
      "Ian travels extensively.": "travels_extensively(Ian)",
      "Eugene travels extensively.": "travel_extensively(Eugene)",
      "Rachel does not cultivate beauty.": "¬cultivate_beauty(Rachel)",
      "If Eugene works outdoors, then he either enjoys hiking or appreciates nature (but not both).": "work_outdoors(Eugene) → (enjoy_hiking(Eugene) ⊕ appreciate_nature(Eugene))",
      "Eugene visits gardens.": "visits_gardens(Eugene)",
      "For all humans, if they either collect seeds or have a greenhouse (but not both), then they nurture plants.": "∀x ((collects_seeds(x) ⊕ has_greenhouse(x)) → nurture_plants(x))",
      "If Eugene either reads botany books or visits gardens (but not both), then he collects seeds.": "(reads_botany_books(Eugene) ⊕ visits_gardens(Eugene)) → collects_seeds(Eugene)"
    },
    "conclusion_fol": "¬develop_expertise_in_plants(Eugene)"
  },
  {
    "id": 169,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Avah cannot solve complex cases.",
    "reasoning": "fact1: Avah has strong attention to detail.\nfact2: Avah thinks critically.\nrule: All individuals who have strong attention to detail think critically and interpret results.\nconclusion: Avah interprets results.\n\nfact1: Avah conducts experiments.\nfact2: Avah interprets results.\nrule: If someone conducts experiments and interprets results, then they can publish papers.\nconclusion: Avah publishes papers.\n\nfact1: Avah pursues new fields.\nrule: Avah either gains expertise in forensic chemistry or pursues new fields, but not both.\nconclusion: Avah does not gain expertise.\n\nfact1: Avah becomes a public figure.\nrule: Avah either advances her field or becomes a public figure, but not both.\nconclusion: Avah does not advance her field.\n\nfact1: Avah publishes papers.\nfact2: Avah does not advance her field.\nrule: For all humans, if someone is a researcher and publishes papers, then they advance their field.\nconclusion: Avah is not a researcher.\n\nfact1: Avah works diligently.\nfact2: Avah does not gain expertise.\nrule: If someone works diligently and makes key discoveries, then they will gain expertise.\nconclusion: Avah does not make key discoveries.\n\nfact1: Avah has a PhD.\nfact2: Avah is not a researcher.\nrule: If Avah has a PhD, then she is either a researcher or a skilled forensic scientist, but not both.\nconclusion: Avah is a skilled forensic scientist.\n\nfact1: Avah is a skilled forensic scientist.\nrule: For all humans, if someone is a skilled forensic scientist, then they can solve complex cases and earn professional recognition.\nconclusion: Avah cannot solve complex cases.\n\nTherefore, it is false that Avah cannot solve complex cases. The correct option is: B.",
    "context": "Avah either advances her field or becomes a public figure, but not both. If Avah either reads academic papers or attends conferences (but not both), then she is a researcher. Avah has strong attention to detail. For all humans, if someone is a skilled forensic scientist, then they can solve complex cases and earn professional recognition. If Yareli makes key discoveries, then she will earn professional recognition. Avah has a PhD. If someone works diligently and makes key discoveries, then they will gain expertise. Avah thinks critically. Ariana pursues new fields. Yareli has strong attention to detail. Anyone who has sharp insight or develops new techniques can earn professional recognition. If Avah has a PhD, then she is either a researcher or a skilled forensic scientist, but not both. If Lily has a PhD, then she is either a researcher or a skilled forensic scientist, but not both. If someone conducts experiments and interprets results, then they can publish papers. Avah pursues new fields. If Avah analyzes evidence, then she is either a skilled forensic scientist or can crack codes. Avah works diligently. Avah either gains expertise in forensic chemistry or pursues new fields, but not both. Yareli becomes a public figure. Avah shares knowledge or publishes papers. Lily either gains expertise in forensic chemistry or pursues new fields, but not both. Avah becomes a public figure. Ariana either advances her field or becomes a public figure, but not both. Yareli thinks critically. For all humans, if someone is a researcher and publishes papers, then they advance their field. All individuals who have strong attention to detail think critically and interpret results. Avah conducts experiments. Ariana has a PhD.",
    "nl2fol": {
      "Avah either advances her field or becomes a public figure, but not both.": "advances_field(Avah) ⊕ is_public_figure(Avah)",
      "If Avah either reads academic papers or attends conferences (but not both), then she is a researcher.": "(reads_academic_papers(Avah) ⊕ attends_conferences(Avah)) → is_researcher(Avah)",
      "Avah has strong attention to detail.": "has_strong_attention(Avah)",
      "For all humans, if someone is a skilled forensic scientist, then they can solve complex cases and earn professional recognition.": "∀x (skilled_forensic_scientist(x) → (solve_complex_cases(x) ∧ earn_professional_recognition(x)))",
      "If Yareli makes key discoveries, then she will earn professional recognition.": "make_key_discoveries(Yareli) → earn_professional_recognition(Yareli)",
      "Avah has a PhD.": "has_phd(Avah)",
      "If someone works diligently and makes key discoveries, then they will gain expertise.": "∀x ((works_diligently(x) ∧ make_key_discoveries(x)) → gains_expertise(x))",
      "Avah thinks critically.": "thinks_critically(Avah)",
      "Ariana pursues new fields.": "pursues_new_fields(Ariana)",
      "Yareli has strong attention to detail.": "has_strong_attention(Yareli)",
      "Anyone who has sharp insight or develops new techniques can earn professional recognition.": "∀x ((has_sharp_insight(x) ∨ develops_new_techniques(x)) → earn_professional_recognition(x))",
      "If Avah has a PhD, then she is either a researcher or a skilled forensic scientist, but not both.": "has_phd(Avah) → (is_researcher(Avah) ⊕ skilled_forensic_scientist(Avah))",
      "If Lily has a PhD, then she is either a researcher or a skilled forensic scientist, but not both.": "has_phd(Lily) → (is_researcher(Lily) ⊕ skilled_forensic_scientist(Lily))",
      "If someone conducts experiments and interprets results, then they can publish papers.": "∀x ((conducts_experiments(x) ∧ interprets_results(x)) → publishes_papers(x))",
      "Avah pursues new fields.": "pursues_new_fields(Avah)",
      "If Avah analyzes evidence, then she is either a skilled forensic scientist or can crack codes.": "analyze_evidence(Avah) → (skilled_forensic_scientist(Avah) ∨ crack_codes(Avah))",
      "Avah works diligently.": "works_diligently(Avah)",
      "Avah either gains expertise in forensic chemistry or pursues new fields, but not both.": "gains_expertise(Avah) ⊕ pursues_new_fields(Avah)",
      "Yareli becomes a public figure.": "is_public_figure(Yareli)",
      "Avah shares knowledge or publishes papers.": "shares_knowledge(Avah) ∨ publishes_papers(Avah)",
      "Lily either gains expertise in forensic chemistry or pursues new fields, but not both.": "gains_expertise(Lily) ⊕ pursues_new_fields(Lily)",
      "Avah becomes a public figure.": "is_public_figure(Avah)",
      "Ariana either advances her field or becomes a public figure, but not both.": "advances_field(Ariana) ⊕ is_public_figure(Ariana)",
      "Yareli thinks critically.": "thinks_critically(Yareli)",
      "For all humans, if someone is a researcher and publishes papers, then they advance their field.": "∀x ((is_researcher(x) ∧ publishes_papers(x)) → advances_field(x))",
      "All individuals who have strong attention to detail think critically and interpret results.": "∀x (has_strong_attention(x) → (thinks_critically(x) ∧ interprets_results(x)))",
      "Avah conducts experiments.": "conducts_experiments(Avah)",
      "Ariana has a PhD.": "has_phd(Ariana)"
    },
    "conclusion_fol": "¬solve_complex_cases(Avah)"
  },
  {
    "id": 170,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kyler is not charming.",
    "reasoning": "fact1: Kyler does not make an impact.\nrule: Anyone who is creative or takes risks will make an impact.\nconclusion: Kyler is not creative.\n\nfact1: Kyler is not creative.\nfact2: Kyler does not earn recognition.\nrule: If Kyler is creative or stands out, then he will earn recognition.\nconclusion: Kyler does not stand out.\n\nfact1: Kyler does not provide good service.\nfact2: Kyler does not run a successful business.\nrule: If Kyler either provides good service or attracts devoted customers (but not both), then he runs a successful business.\nconclusion: Kyler does not attract devoted customers.\n\nfact1: Kyler does not stand out.\nrule: If someone develops a unique style, then they will stand out.\nconclusion: Kyler does not develop a unique style.\n\nfact1: Kyler does not develop a unique style.\nfact2: Kyler does not build a loyal following.\nrule: Everyone who gains critics' acclaim either develops a unique style or builds a loyal following (or both).\nconclusion: Kyler does not gain critics' acclaim.\n\nfact1: Kyler does not gain critics' acclaim.\nfact2: Kyler does not attract devoted customers.\nrule: If Kyler is charming, then he can either gain critics' acclaim or attract devoted customers, but not both.\nconclusion: Kyler is not charming.\n\nTherefore, it is true that Kyler is not charming. The correct option is: A.",
    "context": "Kyler does not earn recognition. If Kyler either provides good service or attracts devoted customers (but not both), then he runs a successful business. Kyler does not run a successful business. Kyler does not provide good service. Zayla does not run a successful business. Anyone who is creative or takes risks will make an impact. Kyler does not make an impact. Everyone who gains critics' acclaim either develops a unique style or builds a loyal following (or both). Zayla does not provide good service. Kyler does not build a loyal following. If Kyler is creative or stands out, then he will earn recognition. Anyone who tries new recipes or is authentic can gain critics' acclaim. If someone develops a unique style, then they will stand out. If Zayla is charming, then he can either gain critics' acclaim or attract devoted customers, but not both. If someone either breaks conventions or experiments with flavors (but not both), then they develop a unique style. If Kyler is charming, then he can either gain critics' acclaim or attract devoted customers, but not both.",
    "nl2fol": {
      "Kyler does not earn recognition.": "¬earn_recognition(Kyler)",
      "If Kyler either provides good service or attracts devoted customers (but not both), then he runs a successful business.": "(provide_good_service(Kyler) ⊕ attract_devoted_customers(Kyler)) → run_successful_business(Kyler)",
      "Kyler does not run a successful business.": "¬run_successful_business(Kyler)",
      "Kyler does not provide good service.": "¬provide_good_service(Kyler)",
      "Zayla does not run a successful business.": "¬run_successful_business(Zayla)",
      "Anyone who is creative or takes risks will make an impact.": "∀x ((be_creative(x) ∨ take_risks(x)) → make_impact(x))",
      "Kyler does not make an impact.": "¬make_impact(Kyler)",
      "Everyone who gains critics' acclaim either develops a unique style or builds a loyal following (or both).": "∀x (gain_critics_acclaim(x) → (develop_unique_style(x) ∨ build_loyal_following(x)))",
      "Zayla does not provide good service.": "¬provide_good_service(Zayla)",
      "Kyler does not build a loyal following.": "¬build_loyal_following(Kyler)",
      "If Kyler is creative or stands out, then he will earn recognition.": "(be_creative(Kyler) ∨ stand_out(Kyler)) → earn_recognition(Kyler)",
      "Anyone who tries new recipes or is authentic can gain critics' acclaim.": "∀x ((try_new_recipes(x) ∨ be_authentic(x)) → gain_critics_acclaim(x))",
      "If someone develops a unique style, then they will stand out.": "∀x (develop_unique_style(x) → stand_out(x))",
      "If Zayla is charming, then he can either gain critics' acclaim or attract devoted customers, but not both.": "charming(Zayla) → (gain_critics_acclaim(Zayla) ⊕ attract_devoted_customers(Zayla))",
      "If someone either breaks conventions or experiments with flavors (but not both), then they develop a unique style.": "∀x ((break_conventions(x) ⊕ experiment_flavors(x)) → develop_unique_style(x))",
      "If Kyler is charming, then he can either gain critics' acclaim or attract devoted customers, but not both.": "charming(Kyler) → (gain_critics_acclaim(Kyler) ⊕ attract_devoted_customers(Kyler))"
    },
    "conclusion_fol": "¬charming(Kyler)"
  },
  {
    "id": 171,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alyssa is environmentally negligent.",
    "reasoning": "fact1: Alyssa lives near mountains.\nrule: Alyssa enjoys hiking if she lives near mountains.\nconclusion: Alyssa enjoys hiking.\n\nfact1: Alyssa enjoys hiking.\nfact2: Alyssa studies rock formations.\nrule: If someone enjoys hiking and studies rock formations, then they explore the wild.\nconclusion: Alyssa explores the wild.\n\nfact1: Alyssa explores the wild.\nrule: If someone explores the wild, then they appreciate landscapes and love the outdoors.\nconclusion: Alyssa loves the outdoors.\n\nfact1: Alyssa loves the outdoors.\nfact2: Alyssa values sustainability.\nrule: If Alyssa loves the outdoors, then she respects nature and values sustainability.\nconclusion: Alyssa respects nature.\n\nfact1: Alyssa respects nature.\nrule: If someone respects nature, then they are environmentally conscious.\nconclusion: Alyssa is environmentally conscious.\n\nfact1: Alyssa is environmentally conscious.\nrule: Alyssa is either environmentally conscious or environmentally negligent, but not both.\nconclusion: Alyssa is not environmentally negligent.\n\nTherefore, it is false that Alyssa is environmentally negligent. The correct option is: B.",
    "context": "Alyssa is either environmentally conscious or environmentally negligent, but not both. If Alyssa conserves resources, then she is environmentally conscious. Alyssa values sustainability. Alyssa studies rock formations. Zayd values sustainability. If Alyssa loves the outdoors, then she respects nature and values sustainability. If someone enjoys hiking and studies rock formations, then they explore the wild. If someone respects nature, then they are environmentally conscious. Zayd enjoys hiking if she lives near mountains. Alyssa enjoys hiking if she lives near mountains. Alyssa lives near mountains. If someone explores the wild, then they appreciate landscapes and love the outdoors.",
    "nl2fol": {
      "Alyssa is either environmentally conscious or environmentally negligent, but not both.": "environmentally_conscious(Alyssa) ⊕ environmentally_negligent(Alyssa)",
      "If Alyssa conserves resources, then she is environmentally conscious.": "conserves_resources(Alyssa) → environmentally_conscious(Alyssa)",
      "Alyssa values sustainability.": "values_sustainability(Alyssa)",
      "Alyssa studies rock formations.": "studies_rock_formations(Alyssa)",
      "Zayd values sustainability.": "values_sustainability(Zayd)",
      "If Alyssa loves the outdoors, then she respects nature and values sustainability.": "loves_outdoors(Alyssa) → (respects_nature(Alyssa) ∧ values_sustainability(Alyssa))",
      "If someone enjoys hiking and studies rock formations, then they explore the wild.": "∀x ((enjoys_hiking(x) ∧ studies_rock_formations(x)) → explores_wild(x))",
      "If someone respects nature, then they are environmentally conscious.": "∀x (respects_nature(x) → environmentally_conscious(x))",
      "Zayd enjoys hiking if she lives near mountains.": "lives_near_mountains(Zayd) → enjoys_hiking(Zayd)",
      "Alyssa enjoys hiking if she lives near mountains.": "lives_near_mountains(Alyssa) → enjoys_hiking(Alyssa)",
      "Alyssa lives near mountains.": "lives_near_mountains(Alyssa)",
      "If someone explores the wild, then they appreciate landscapes and love the outdoors.": "∀x (explores_wild(x) → (appreciates_landscapes(x) ∧ loves_outdoors(x)))"
    },
    "conclusion_fol": "environmentally_negligent(Alyssa)"
  },
  {
    "id": 172,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lucian does not work hard.",
    "reasoning": "fact1: Lucian communicates openly.\nfact2: Lucian does not trust others.\nrule: If Lucian either communicates openly or trusts others (but not both), then he has a supportive network.\nconclusion: Lucian has a supportive network.\n\nfact1: Lucian does not set goals.\nrule: Lucian either sets goals or stays focused.\nconclusion: Lucian stays focused.\n\nfact1: Lucian has a supportive network.\nrule: If someone has a supportive network, they may not necessarily build confidence, and vice versa.\nconclusion: Lucian does not build confidence.\n\nfact1: Lucian does not build confidence.\nfact2: Lucian does not gain recognition.\nrule: Anyone who performs under pressure either builds confidence or gains recognition (or both).\nconclusion: Lucian does not perform under pressure.\n\nfact1: Lucian is disciplined.\nfact2: Lucian leads teams.\nrule: If Lucian is disciplined, then he either wins competitions or leads teams (but not both).\nconclusion: Lucian does not win competitions.\n\nfact1: Lucian stays focused.\nfact2: Lucian does not win competitions.\nrule: If Lucian either stays focused or makes strategic moves (but not both), then he wins competitions.\nconclusion: Lucian makes strategic moves.\n\nfact1: Lucian does not perform under pressure.\nfact2: Lucian makes strategic moves.\nrule: If Lucian either performs under pressure or makes strategic moves (but not both), then he achieves success.\nconclusion: Lucian achieves success.\n\nfact1: Lucian achieves success.\nrule: Lucian either has natural talent or achieves success, but not necessarily the same way.\nconclusion: Lucian does not have natural talent.\n\nfact1: Lucian does not have natural talent.\nrule: Everyone either has natural talent or works hard (or both).\nconclusion: Lucian does not work hard.\n\nTherefore, it is false that Lucian does not work hard. The correct option is: B.",
    "context": "Lucian does not trust others. If Lucian is disciplined, then he either wins competitions or leads teams (but not both). Lucian does not set goals. Everyone who thinks critically either makes strategic moves or adapts to situations (or both). If Watson either stays focused or makes strategic moves (but not both), then he wins competitions. Anyone who performs under pressure either builds confidence or gains recognition (or both). Lucian either has natural talent or achieves success, but not necessarily the same way. If Watson either performs under pressure or makes strategic moves (but not both), then he achieves success. Everyone who becomes a professional athlete either has natural talent or practices regularly (or both). Lucian either sets goals or stays focused. If someone has a supportive network, they may not necessarily build confidence, and vice versa. Adonis does not set goals. Anyone who remains calm or thinks quickly can perform under pressure. Adonis does not trust others. Everyone either has natural talent or works hard (or both). Lucian is disciplined. Lucian communicates openly. If Lucian either performs under pressure or makes strategic moves (but not both), then he achieves success. If Lucian either communicates openly or trusts others (but not both), then he has a supportive network. Lucian does not gain recognition. Lucian leads teams. If Lucian either stays focused or makes strategic moves (but not both), then he wins competitions. If someone values relationships and nurtures connections, then they have a supportive network. If someone has a good coach, then they practice regularly and stay focused.",
    "nl2fol": {
      "Lucian does not trust others.": "¬trusts_others(Lucian)",
      "If Lucian is disciplined, then he either wins competitions or leads teams (but not both).": "is_disciplined(Lucian) → (wins_competitions(Lucian) ⊕ leads_teams(Lucian))",
      "Lucian does not set goals.": "¬sets_goals(Lucian)",
      "Everyone who thinks critically either makes strategic moves or adapts to situations (or both).": "∀x (thinks_critically(x) → (adapts_to_situations(x) ∨ makes_strategic_moves(x)))",
      "If Watson either stays focused or makes strategic moves (but not both), then he wins competitions.": "(stays_focused(Watson) ⊕ makes_strategic_moves(Watson)) → wins_competitions(Watson)",
      "Anyone who performs under pressure either builds confidence or gains recognition (or both).": "∀x (performs_under_pressure(x) → (builds_confidence(x) ∨ gains_recognition(x)))",
      "Lucian either has natural talent or achieves success, but not necessarily the same way.": "has_natural_talent(Lucian) ⊕ achieves_success(Lucian)",
      "If Watson either performs under pressure or makes strategic moves (but not both), then he achieves success.": "(performs_under_pressure(Watson) ⊕ makes_strategic_moves(Watson)) → achieves_success(Watson)",
      "Everyone who becomes a professional athlete either has natural talent or practices regularly (or both).": "∀x (becomes_professional(x) → (has_natural_talent(x) ∨ practices_regularly(x)))",
      "Lucian either sets goals or stays focused.": "sets_goals(Lucian) ∨ stays_focused(Lucian)",
      "If someone has a supportive network, they may not necessarily build confidence, and vice versa.": "∀x (builds_confidence(x) ⊕ has_supportive_network(x))",
      "Adonis does not set goals.": "¬set_goals(Adonis)",
      "Anyone who remains calm or thinks quickly can perform under pressure.": "∀x ((remains_calm(x) ∨ thinks_quickly(x)) → performs_under_pressure(x))",
      "Adonis does not trust others.": "¬trusts_others(Adonis)",
      "Everyone either has natural talent or works hard (or both).": "∀x (has_natural_talent(x) ∨ works_hard(x))",
      "Lucian is disciplined.": "is_disciplined(Lucian)",
      "Lucian communicates openly.": "communicates_openly(Lucian)",
      "If Lucian either performs under pressure or makes strategic moves (but not both), then he achieves success.": "(performs_under_pressure(Lucian) ⊕ makes_strategic_moves(Lucian)) → achieves_success(Lucian)",
      "If Lucian either communicates openly or trusts others (but not both), then he has a supportive network.": "(communicates_openly(Lucian) ⊕ trusts_others(Lucian)) → has_supportive_network(Lucian)",
      "Lucian does not gain recognition.": "¬gains_recognition(Lucian)",
      "Lucian leads teams.": "leads_teams(Lucian)",
      "If Lucian either stays focused or makes strategic moves (but not both), then he wins competitions.": "(stays_focused(Lucian) ⊕ makes_strategic_moves(Lucian)) → wins_competitions(Lucian)",
      "If someone values relationships and nurtures connections, then they have a supportive network.": "∀x ((values_relationships(x) ∧ nurtures_connections(x)) → has_supportive_network(x))",
      "If someone has a good coach, then they practice regularly and stay focused.": "∀x (has_good_coach(x) → (practices_regularly(x) ∧ stays_focused(x)))"
    },
    "conclusion_fol": "¬works_hard(Lucian)"
  },
  {
    "id": 173,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Uriah is not environmentally conscious.",
    "reasoning": "fact1: Uriah designs innovative buildings.\nrule: If Uriah designs innovative buildings, then he uses local materials and advocates for climate action.\nconclusion: Uriah advocates for climate action.\n\nfact1: Uriah creates eco-friendly spaces.\nfact2: Uriah advocates for climate action.\nrule: If Uriah conserves water, then he either creates eco-friendly spaces or advocates for climate action (but not both).\nconclusion: Uriah does not conserve water.\n\nfact1: Uriah does not respect nature.\nrule: If someone reduces waste, then they respect nature.\nconclusion: Uriah does not reduce waste.\n\nfact1: Uriah does not support conservation.\nfact2: Uriah does not protect endangered species.\nrule: If Uriah cares about wildlife, then he either supports conservation or protects endangered species, but not both.\nconclusion: Uriah does not care about wildlife.\n\nfact1: Uriah does not use renewable energy.\nfact2: Uriah does not reduce waste.\nrule: If Uriah values sustainability, then he either uses renewable energy or reduces waste, but not both.\nconclusion: Uriah does not value sustainability.\n\nfact1: Uriah does not conserve water.\nfact2: Uriah does not value sustainability.\nrule: For everyone, if they either make green choices or conserve water, then they value sustainability.\nconclusion: Uriah does not make green choices.\n\nfact1: Uriah does not care about wildlife.\nfact2: Uriah does not make green choices.\nrule: If Uriah is either environmentally negligent or cares about wildlife (but not both), then he makes green choices.\nconclusion: Uriah is not environmentally negligent.\n\nfact1: Uriah is not environmentally negligent.\nrule: Either Uriah is environmentally conscious or environmentally negligent, but not both.\nconclusion: Uriah is not environmentally conscious.\n\nTherefore, it is false that Uriah is not environmentally conscious. The correct option is: B.",
    "context": "Either Amaris is environmentally conscious or environmentally negligent, but not both. Yehuda does not use renewable energy. If someone reduces waste, then they respect nature. Uriah creates eco-friendly spaces. Uriah designs innovative buildings. Amaris creates eco-friendly spaces. Uriah does not protect endangered species. Uriah does not support conservation. If Uriah designs innovative buildings, then he uses local materials and advocates for climate action. For everyone, if they either make green choices or conserve water, then they value sustainability. All who embrace global citizenship build resilient communities and advocate for climate action. If Yehuda cares about wildlife, then he either supports conservation or protects endangered species, but not both. If Uriah is an architect, then he either makes green choices or prioritizes human health, but not both. If Uriah conserves water, then he either creates eco-friendly spaces or advocates for climate action (but not both). Uriah does not respect nature. Either Uriah is environmentally conscious or environmentally negligent, but not both. Uriah does not use renewable energy. Amaris does not support conservation. If Uriah builds structures, then he either values sustainability or prioritizes public health, but not both. Meilani designs innovative buildings. If Uriah has good design skills, then he either builds lasting structures or conserves water. Uriah prioritizes public health or is environmentally negligent. If Uriah is either environmentally negligent or cares about wildlife (but not both), then he makes green choices. If Uriah cares about wildlife, then he either supports conservation or protects endangered species, but not both. If Uriah values sustainability, then he either uses renewable energy or reduces waste, but not both. If Meilani values sustainability, then he either uses renewable energy or reduces waste, but not both. If Amaris is either environmentally negligent or cares about wildlife (but not both), then he makes green choices.",
    "nl2fol": {
      "Either Amaris is environmentally conscious or environmentally negligent, but not both.": "environmentally_conscious(Amaris) ⊕ environmentally_negligent(Amaris)",
      "Yehuda does not use renewable energy.": "¬uses_renewable_energy(Yehuda)",
      "If someone reduces waste, then they respect nature.": "∀x (reduces_waste(x) → respects_nature(x))",
      "Uriah creates eco-friendly spaces.": "creates_eco_spaces(Uriah)",
      "Uriah designs innovative buildings.": "designs_innovative_buildings(Uriah)",
      "Amaris creates eco-friendly spaces.": "creates_eco_spaces(Amaris)",
      "Uriah does not protect endangered species.": "¬protects_endangered_species(Uriah)",
      "Uriah does not support conservation.": "¬supports_conservation(Uriah)",
      "If Uriah designs innovative buildings, then he uses local materials and advocates for climate action.": "designs_innovative_buildings(Uriah) → (uses_local_materials(Uriah) ∧ advocates_climate_action(Uriah))",
      "For everyone, if they either make green choices or conserve water, then they value sustainability.": "∀x ((makes_green_choices(x) ⊕ conserves_water(x)) → values_sustainability(x))",
      "All who embrace global citizenship build resilient communities and advocate for climate action.": "∀x (embracing_global_citizenship(x) → (builds_resilient_communities(x) ∧ advocates_climate_action(x)))",
      "If Yehuda cares about wildlife, then he either supports conservation or protects endangered species, but not both.": "cares_about_wildlife(Yehuda) → (supports_conservation(Yehuda) ⊕ protects_endangered_species(Yehuda))",
      "If Uriah is an architect, then he either makes green choices or prioritizes human health, but not both.": "is_architect(Uriah) → (makes_green_choices(Uriah) ⊕ prioritizes_human_health(Uriah))",
      "If Uriah conserves water, then he either creates eco-friendly spaces or advocates for climate action (but not both).": "conserves_water(Uriah) → (creates_eco_spaces(Uriah) ⊕ advocates_climate_action(Uriah))",
      "Uriah does not respect nature.": "¬respects_nature(Uriah)",
      "Either Uriah is environmentally conscious or environmentally negligent, but not both.": "environmentally_conscious(Uriah) ⊕ environmentally_negligent(Uriah)",
      "Uriah does not use renewable energy.": "¬uses_renewable_energy(Uriah)",
      "Amaris does not support conservation.": "¬support_conservation(Amaris)",
      "If Uriah builds structures, then he either values sustainability or prioritizes public health, but not both.": "builds_structures(Uriah) → (values_sustainability(Uriah) ⊕ prioritizes_public_health(Uriah))",
      "Meilani designs innovative buildings.": "designs_innovative_buildings(Meilani)",
      "If Uriah has good design skills, then he either builds lasting structures or conserves water.": "has_good_design_skills(Uriah) → (builds_lasting_structures(Uriah) ∨ conserves_water(Uriah))",
      "Uriah prioritizes public health or is environmentally negligent.": "prioritizes_public_health(Uriah) ∨ environmentally_negligent(Uriah)",
      "If Uriah is either environmentally negligent or cares about wildlife (but not both), then he makes green choices.": "(environmentally_negligent(Uriah) ⊕ cares_about_wildlife(Uriah)) → makes_green_choices(Uriah)",
      "If Uriah cares about wildlife, then he either supports conservation or protects endangered species, but not both.": "cares_about_wildlife(Uriah) → (supports_conservation(Uriah) ⊕ protects_endangered_species(Uriah))",
      "If Uriah values sustainability, then he either uses renewable energy or reduces waste, but not both.": "values_sustainability(Uriah) → (uses_renewable_energy(Uriah) ⊕ reduces_waste(Uriah))",
      "If Meilani values sustainability, then he either uses renewable energy or reduces waste, but not both.": "values_sustainability(Meilani) → (uses_renewable_energy(Meilani) ⊕ reduces_waste(Meilani))",
      "If Amaris is either environmentally negligent or cares about wildlife (but not both), then he makes green choices.": "(environmentally_negligent(Amaris) ⊕ cares_about_wildlife(Amaris)) → makes_green_choices(Amaris)"
    },
    "conclusion_fol": "¬environmentally_conscious(Uriah)"
  },
  {
    "id": 174,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nicholas does not take pride in his appearance.",
    "reasoning": "fact1: Nicholas does not possess inner beauty.\nrule: Nicholas either wears fine attire or possesses inner beauty, but not both.\nconclusion: Nicholas wears fine attire.\n\nfact1: Nicholas lives lavishly.\nfact2: Nicholas does not own expensive items.\nrule: If Nicholas possesses great wealth, then he lives lavishly and owns expensive items.\nconclusion: Nicholas does not possess great wealth.\n\nfact1: Nicholas does not have a noble title.\nfact2: Nicholas does not possess great wealth.\nrule: If Nicholas gains a reputation, then he either has a noble title or possesses great wealth (or both).\nconclusion: Nicholas does not gain a reputation.\n\nfact1: Nicholas achieves success.\nfact2: Nicholas does not gain a reputation.\nrule: For all people, if they either earn recognition or achieve success, then they will gain a reputation.\nconclusion: Nicholas will earn recognition.\n\nfact1: Nicholas does not become legendary.\nrule: If Nicholas takes pride in his appearance, then he will command respect and become legendary.\nconclusion: Nicholas does not take pride in his appearance.\n\nTherefore, it is true that Nicholas does not take pride in his appearance. The correct option is: A.",
    "context": "If Nicholas possesses great wealth, then he lives lavishly and owns expensive items. Nicholas does not possess inner beauty. Nicholas either wears fine attire or possesses inner beauty, but not both. Any person who excels in battle or demonstrates courage will gain a reputation. Nicholas does not own expensive items. Nicholas achieves success. Nicholas does not become legendary. Nicholas lives lavishly. For all people, if they either earn recognition or achieve success, then they will gain a reputation. If Nicholas gains a reputation, then he either has a noble title or possesses great wealth (or both). If someone leads armies, then they possess great wealth and hold power. If Nicholas takes pride in his appearance, then he will command respect and become legendary. Nicholas does not have a noble title.",
    "nl2fol": {
      "If Nicholas possesses great wealth, then he lives lavishly and owns expensive items.": "possess_great_wealth(Nicholas) → (live_lavishly(Nicholas) ∧ own_expensive_items(Nicholas))",
      "Nicholas does not possess inner beauty.": "¬possess_inner_beauty(Nicholas)",
      "Nicholas either wears fine attire or possesses inner beauty, but not both.": "wear_fine_attire(Nicholas) ⊕ possess_inner_beauty(Nicholas)",
      "Any person who excels in battle or demonstrates courage will gain a reputation.": "∀x ((excel_in_battle(x) ∨ demonstrate_courage(x)) → gain_reputation(x))",
      "Nicholas does not own expensive items.": "¬own_expensive_items(Nicholas)",
      "Nicholas achieves success.": "achieve_success(Nicholas)",
      "Nicholas does not become legendary.": "¬become_legendary(Nicholas)",
      "Nicholas lives lavishly.": "live_lavishly(Nicholas)",
      "For all people, if they either earn recognition or achieve success, then they will gain a reputation.": "∀x ((earn_recognition(x) ⊕ achieve_success(x)) → gain_reputation(x))",
      "If Nicholas gains a reputation, then he either has a noble title or possesses great wealth (or both).": "gain_reputation(Nicholas) → (have_noble_title(Nicholas) ∨ possess_great_wealth(Nicholas))",
      "If someone leads armies, then they possess great wealth and hold power.": "∀x (lead_armies(x) → (possess_great_wealth(x) ∧ hold_power(x)))",
      "If Nicholas takes pride in his appearance, then he will command respect and become legendary.": "take_pride_in_appearance(Nicholas) → (command_respect(Nicholas) ∧ become_legendary(Nicholas))",
      "Nicholas does not have a noble title.": "¬have_noble_title(Nicholas)"
    },
    "conclusion_fol": "¬take_pride_in_appearance(Nicholas)"
  },
  {
    "id": 175,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Zachary does not retain his original identity.",
    "reasoning": "fact1: Zachary relies on intuition.\nrule: For Zachary, relying on intuition and seeking local guidance are mutually exclusive approaches to navigating unfamiliar situations.\nconclusion: Zachary does not seek local guidance.\n\nfact1: Zachary faces a cultural barrier.\nfact2: Zachary does not seek local guidance.\nrule: Anyone who faces a cultural barrier either feels lost or seeks local guidance (or both).\nconclusion: Zachary feels lost.\n\nfact1: Zachary feels lost.\nfact2: Zachary does not explore new places.\nrule: If Zachary feels lost, then he is either someone who immigrated recently or someone who explores new places (but not both).\nconclusion: Zachary immigrated recently.\n\nfact1: Zachary immigrated recently.\nfact2: Zachary does not learn local practices.\nrule: If Zachary immigrated recently, then he either values diversity or learns local practices (or both).\nconclusion: Zachary values diversity.\n\nfact1: Zachary speaks multiple languages.\nfact2: Zachary values diversity.\nrule: If Zachary speaks multiple languages, then he works internationally and values diversity.\nconclusion: Zachary works internationally.\n\nfact1: Zachary works internationally.\nrule: If Zachary works internationally, then he lives abroad.\nconclusion: Zachary lives abroad.\n\nfact1: Zachary does not respect traditions.\nfact2: Zachary does not build new connections.\nrule: Anyone who adapts to their environment either respects traditions or builds new connections (or both).\nconclusion: Zachary does not adapt to his environment.\n\nfact1: Zachary lives abroad.\nfact2: Zachary does not adapt to his environment.\nrule: Everyone who lives abroad either adapts to their environment or embraces local customs (or both).\nconclusion: Zachary embraces local customs.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Zachary does not retain his original identity. The correct option is: C.",
    "context": "If Zachary immigrated recently, then he either values diversity or learns local practices (or both). Atticus does not learn local practices. If Zachary speaks multiple languages, then he works internationally and values diversity. Zachary does not respect traditions. Zachary relies on intuition. Zachary does not learn local practices. Anyone who adapts to their environment either respects traditions or builds new connections (or both). Zachary speaks multiple languages. Zachary does not explore new places. If someone has global skills and thrives in new places, then they work internationally. Zachary does not build new connections. If Zachary feels lost, then he is either someone who immigrated recently or someone who explores new places (but not both). Anyone who is curious or open-minded can adapt to their environment. Everyone either knows their direction or feels lost. If Scott immigrated recently, then he either values diversity or learns local practices (or both). Everyone who lives abroad either adapts to their environment or embraces local customs (or both). Amanda does not build new connections. If Zachary is open-minded, then he either lives abroad or is embracing new experiences (or both). If Zachary studies abroad, then he either values diversity or appreciates culture, but not both. Atticus faces a cultural barrier. Zachary faces a cultural barrier. If Zachary works internationally, then he lives abroad. Scott does not explore new places. For Zachary, relying on intuition and seeking local guidance are mutually exclusive approaches to navigating unfamiliar situations. Anyone who faces a cultural barrier either feels lost or seeks local guidance (or both).",
    "nl2fol": {
      "If Zachary immigrated recently, then he either values diversity or learns local practices (or both).": "immigrated_recently(Zachary) → (values_diversity(Zachary) ∨ learns_local_practices(Zachary))",
      "Atticus does not learn local practices.": "¬learns_local_practices(Atticus)",
      "If Zachary speaks multiple languages, then he works internationally and values diversity.": "speaks_multiple_languages(Zachary) → (works_internationally(Zachary) ∧ values_diversity(Zachary))",
      "Zachary does not respect traditions.": "¬respects_traditions(Zachary)",
      "Zachary relies on intuition.": "relies_on_intuition(Zachary)",
      "Zachary does not learn local practices.": "¬learns_local_practices(Zachary)",
      "Anyone who adapts to their environment either respects traditions or builds new connections (or both).": "∀x (adapts_to_environment(x) → (respects_traditions(x) ∨ builds_new_connections(x)))",
      "Zachary speaks multiple languages.": "speaks_multiple_languages(Zachary)",
      "Zachary does not explore new places.": "¬explores_new_places(Zachary)",
      "If someone has global skills and thrives in new places, then they work internationally.": "∀x ((has_global_skills(x) ∧ thrives_in_new_places(x)) → works_internationally(x))",
      "Zachary does not build new connections.": "¬builds_new_connections(Zachary)",
      "If Zachary feels lost, then he is either someone who immigrated recently or someone who explores new places (but not both).": "feels_lost(Zachary) → (immigrated_recently(Zachary) ⊕ explores_new_places(Zachary))",
      "Anyone who is curious or open-minded can adapt to their environment.": "∀x ((is_curious(x) ∨ is_open_minded(x)) → adapts_to_environment(x))",
      "Everyone either knows their direction or feels lost.": "∀x (knows_direction(x) ∨ feels_lost(x))",
      "If Scott immigrated recently, then he either values diversity or learns local practices (or both).": "immigrated_recently(Scott) → (values_diversity(Scott) ∨ learns_local_practices(Scott))",
      "Everyone who lives abroad either adapts to their environment or embraces local customs (or both).": "∀x (lives_abroad(x) → (adapts_to_environment(x) ∨ embracing_local_customs(x)))",
      "Amanda does not build new connections.": "¬builds_new_connections(Amanda)",
      "If Zachary is open-minded, then he either lives abroad or is embracing new experiences (or both).": "is_open_minded(Zachary) → (lives_abroad(Zachary) ∨ embracing_new_experiences(Zachary))",
      "If Zachary studies abroad, then he either values diversity or appreciates culture, but not both.": "studies_abroad(Zachary) → (values_diversity(Zachary) ⊕ appreciates_culture(Zachary))",
      "Atticus faces a cultural barrier.": "faces_cultural_barrier(Atticus)",
      "Zachary faces a cultural barrier.": "faces_cultural_barrier(Zachary)",
      "If Zachary works internationally, then he lives abroad.": "works_internationally(Zachary) → lives_abroad(Zachary)",
      "Scott does not explore new places.": "¬explores_new_places(Scott)",
      "For Zachary, relying on intuition and seeking local guidance are mutually exclusive approaches to navigating unfamiliar situations.": "relies_on_intuition(Zachary) ⊕ seeks_local_guidance(Zachary)",
      "Anyone who faces a cultural barrier either feels lost or seeks local guidance (or both).": "∀x (faces_cultural_barrier(x) → (feels_lost(x) ∨ seeks_local_guidance(x)))"
    },
    "conclusion_fol": "¬retaining_original_identity(Zachary)"
  },
  {
    "id": 176,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Madden is not effective in critical situations.",
    "reasoning": "fact1: Madden practices critical thinking.\nrule: If Madden practices critical thinking, then he will solve complex problems.\nconclusion: Madden solves complex problems.\n\nfact1: Madden solves complex problems.\nfact2: Madden has formal training.\nrule: If Madden solves complex problems, then he is either self-taught or has formal training, but not both.\nconclusion: Madden is not self-taught.\n\nfact1: Madden is not self-taught.\nrule: Madden is either self-taught or demonstrates expertise, but not necessarily both.\nconclusion: Madden demonstrates expertise.\n\nfact1: Madden thinks creatively.\nrule: For Madden, either he thinks creatively or is strategic, but not both.\nconclusion: Madden is not strategic.\n\nfact1: Madden demonstrates expertise.\nfact2: Madden cannot handle pressure.\nrule: Anyone who demonstrates expertise is either respected by their peers or can handle pressure (or both).\nconclusion: Madden is respected by his peers.\n\nfact1: Madden does not have good instincts.\nrule: Madden is either a skilled problem solver or has good instincts.\nconclusion: Madden is a skilled problem solver.\n\nfact1: Madden is respected by his peers.\nfact2: Madden is not strategic.\nrule: If Madden is respected by his peers, then he either has leadership skills or is strategic, but not both.\nconclusion: Madden has leadership skills.\n\nfact1: Madden is a skilled problem solver.\nrule: For all people, if someone is a skilled problem solver, then they are effective in critical situations and valued by others.\nconclusion: Madden is not effective in critical situations.\n\nTherefore, it is false that Madden is not effective in critical situations. The correct option is: B.",
    "context": "Madden does not have good instincts. If Shay is respected by his peers, then he either has leadership skills or is strategic, but not both. Anyone who demonstrates expertise is either respected by their peers or can handle pressure (or both). Madden is either self-taught or demonstrates expertise, but not necessarily both. If Madden practices critical thinking, then he will solve complex problems. Madden practices critical thinking. Madden has formal training. For all people, if someone is a skilled problem solver, then they are effective in critical situations and valued by others. If Madden solves complex problems, then he is either self-taught or has formal training, but not both. Madden either works hard or has leadership skills. Madden is either a skilled problem solver or has good instincts. If Madden is respected by his peers, then he either has leadership skills or is strategic, but not both. For Madden, either he thinks creatively or is strategic, but not both. Madden cannot handle pressure. Anyone who identifies patterns and thinks logically can solve complex problems. If Langston practices critical thinking, then he will solve complex problems. If Madden either works efficiently or stays calm under stress (but not both), then he demonstrates expertise. Shay is not loyal. Madden thinks creatively.",
    "nl2fol": {
      "Madden does not have good instincts.": "¬has_good_instincts(Madden)",
      "If Shay is respected by his peers, then he either has leadership skills or is strategic, but not both.": "respected_by_peers(Shay) → (has_leadership_skills(Shay) ⊕ is_strategic(Shay))",
      "Anyone who demonstrates expertise is either respected by their peers or can handle pressure (or both).": "∀x (demonstrates_expertise(x) → (respected_by_peers(x) ∨ handles_pressure(x)))",
      "Madden is either self-taught or demonstrates expertise, but not necessarily both.": "is_self_taught(Madden) ⊕ demonstrates_expertise(Madden)",
      "If Madden practices critical thinking, then he will solve complex problems.": "practices_critical_thinking(Madden) → solves_complex_problems(Madden)",
      "Madden practices critical thinking.": "practices_critical_thinking(Madden)",
      "Madden has formal training.": "has_formal_training(Madden)",
      "For all people, if someone is a skilled problem solver, then they are effective in critical situations and valued by others.": "∀x (skilled_problem_solver(x) → (effective_in_critical_situations(x) ∧ valued_by_others(x)))",
      "If Madden solves complex problems, then he is either self-taught or has formal training, but not both.": "solves_complex_problems(Madden) → (is_self_taught(Madden) ⊕ has_formal_training(Madden))",
      "Madden either works hard or has leadership skills.": "works_hard(Madden) ∨ has_leadership_skills(Madden)",
      "Madden is either a skilled problem solver or has good instincts.": "skilled_problem_solver(Madden) ∨ has_good_instincts(Madden)",
      "If Madden is respected by his peers, then he either has leadership skills or is strategic, but not both.": "respected_by_peers(Madden) → (has_leadership_skills(Madden) ⊕ is_strategic(Madden))",
      "For Madden, either he thinks creatively or is strategic, but not both.": "thinks_creatively(Madden) ⊕ is_strategic(Madden)",
      "Madden cannot handle pressure.": "¬handles_pressure(Madden)",
      "Anyone who identifies patterns and thinks logically can solve complex problems.": "∀x ((identifies_patterns(x) ∧ thinks_logically(x)) → solves_complex_problems(x))",
      "If Langston practices critical thinking, then he will solve complex problems.": "practices_critical_thinking(Langston) → solves_complex_problems(Langston)",
      "If Madden either works efficiently or stays calm under stress (but not both), then he demonstrates expertise.": "(works_efficiently(Madden) ⊕ stays_calm_under_stress(Madden)) → demonstrates_expertise(Madden)",
      "Shay is not loyal.": "¬is_loyal(Shay)",
      "Madden thinks creatively.": "thinks_creatively(Madden)"
    },
    "conclusion_fol": "¬effective_in_critical_situations(Madden)"
  },
  {
    "id": 177,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Queenie is beneficial to her raccoon host.",
    "reasoning": "fact1: Queenie thrives in the dark.\nfact2: Queenie multiplies quickly.\nrule: If Queenie thrives in the dark, then she responds to changes and multiplies quickly.\nconclusion: Queenie responds to changes.\n\nfact1: Queenie monitors her environment.\nfact2: Queenie responds to changes.\nrule: If a parasite monitors its environment and responds to changes, then it can sense its host's status.\nconclusion: Queenie senses her host's status.\n\nfact1: Queenie senses her host's status.\nfact2: Queenie adapts her behavior.\nrule: If Queenie senses her host's status and adapts her behavior, then she will limit her consumption.\nconclusion: Queenie limits her consumption.\n\nfact1: Queenie does not control her growth.\nfact2: Queenie limits her consumption.\nrule: If Queenie either controls her growth or limits her consumption (but not both), then she will regulate her feeding.\nconclusion: Queenie regulates her feeding.\n\nfact1: Queenie regulates her feeding.\nrule: If Queenie regulates her feeding, then she will coexist with her host.\nconclusion: Queenie coexists with her raccoon host.\n\nfact1: Queenie coexists with her raccoon host.\nrule: Queenie either coexists with her raccoon host or is harmful to her raccoon host, but not both.\nconclusion: Queenie is not harmful to her raccoon host.\n\nfact1: Queenie is not harmful to her raccoon host.\nrule: Queenie is either harmful to her raccoon host or beneficial to her raccoon host, but not both.\nconclusion: Queenie is beneficial to her raccoon host.\n\nTherefore, it is true that Queenie is beneficial to her raccoon host. The correct option is: A.",
    "context": "If Queenie either controls her growth or limits her consumption (but not both), then she will regulate her feeding. Queenie multiplies quickly. Queenie does not control her growth. Darling monitors her environment. Queenie monitors her environment. Queenie either coexists with her raccoon host or is harmful to her raccoon host, but not both. Queenie thrives in the dark. If Queenie thrives in the dark, then she responds to changes and multiplies quickly. If Queenie senses her host's status and adapts her behavior, then she will limit her consumption. Queenie adapts her behavior. Sophie adapts her behavior. Bumpkin is either harmful to her raccoon host or beneficial to her raccoon host, but not both. Every parasite that lives in a host either evades the immune system or responds to changes in its environment (or both). If Queenie regulates her feeding, then she will coexist with her host. Darling thrives in the dark. Queenie is either harmful to her raccoon host or beneficial to her raccoon host, but not both. If Sophie regulates her feeding, then she will coexist with her host. All parasites that evade the immune system regulate their feeding and feed on nutrients. Bumpkin either coexists with her raccoon host or is harmful to her raccoon host, but not both. If a parasite monitors its environment and responds to changes, then it can sense its host's status. Darling multiplies quickly. If a parasite either destroys tissues or disrupts digestion (but not both), then it is harmful to its host.",
    "nl2fol": {
      "If Queenie either controls her growth or limits her consumption (but not both), then she will regulate her feeding.": "(controls_growth(Queenie) ⊕ limits_consumption(Queenie)) → regulates_feeding(Queenie)",
      "Queenie multiplies quickly.": "multiply_quickly(Queenie)",
      "Queenie does not control her growth.": "¬controls_growth(Queenie)",
      "Darling monitors her environment.": "monitors_environment(Darling)",
      "Queenie monitors her environment.": "monitors_environment(Queenie)",
      "Queenie either coexists with her raccoon host or is harmful to her raccoon host, but not both.": "coexists_with_host(Queenie) ⊕ harmful_to_host(Queenie)",
      "Queenie thrives in the dark.": "thrives_in_dark(Queenie)",
      "If Queenie thrives in the dark, then she responds to changes and multiplies quickly.": "thrives_in_dark(Queenie) → (responds_to_changes(Queenie) ∧ multiples_quickly(Queenie))",
      "If Queenie senses her host's status and adapts her behavior, then she will limit her consumption.": "(senses_host_status(Queenie) ∧ adapts_behavior(Queenie)) → limits_consumption(Queenie)",
      "Queenie adapts her behavior.": "adapts_behavior(Queenie)",
      "Sophie adapts her behavior.": "adapts_behavior(Sophie)",
      "Bumpkin is either harmful to her raccoon host or beneficial to her raccoon host, but not both.": "harmful_to_host(Bumpkin) ⊕ beneficial_to_host(Bumpkin)",
      "Every parasite that lives in a host either evades the immune system or responds to changes in its environment (or both).": "∀x (lives_in_host(x) → (evades_immune_system(x) ∨ responds_to_changes(x)))",
      "If Queenie regulates her feeding, then she will coexist with her host.": "regulates_feeding(Queenie) → coexists_with_host(Queenie)",
      "Darling thrives in the dark.": "thrives_in_dark(Darling)",
      "Queenie is either harmful to her raccoon host or beneficial to her raccoon host, but not both.": "harmful_to_host(Queenie) ⊕ beneficial_to_host(Queenie)",
      "If Sophie regulates her feeding, then she will coexist with her host.": "regulates_feeding(Sophie) → coexists_with_host(Sophie)",
      "All parasites that evade the immune system regulate their feeding and feed on nutrients.": "∀x (evades_immune_system(x) → (regulates_feeding(x) ∧ feeds_on_nutrients(x)))",
      "Bumpkin either coexists with her raccoon host or is harmful to her raccoon host, but not both.": "coexists_with_host(Bumpkin) ⊕ harmful_to_host(Bumpkin)",
      "If a parasite monitors its environment and responds to changes, then it can sense its host's status.": "∀x ((monitors_environment(x) ∧ responds_to_changes(x)) → senses_host_status(x))",
      "Darling multiplies quickly.": "multiply_quickly(Darling)",
      "If a parasite either destroys tissues or disrupts digestion (but not both), then it is harmful to its host.": "∀x ((destroys_tissues(x) ⊕ disrupts_digestion(x)) → harmful_to_host(x))"
    },
    "conclusion_fol": "beneficial_to_host(Queenie)"
  },
  {
    "id": 178,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Brendan is passionate about plants.",
    "reasoning": "fact1: Brendan is a professor.\nfact2: Brendan teaches students.\nrule: If Brendan is a professor, then he either teaches students or shares research findings, but not both.\nconclusion: Brendan does not share research findings.\n\nfact1: Brendan publishes papers.\nfact2: Brendan receives invitations.\nrule: If someone publishes papers and receives invitations, then they attend conferences.\nconclusion: Brendan attends conferences.\n\nfact1: Brendan does not share research findings.\nfact2: Brendan attends conferences.\nrule: If Brendan either shares research findings or attends conferences (but not both), then he collaborates with experts.\nconclusion: Brendan collaborates with experts.\n\nfact1: Brendan sets high goals.\nfact2: Brendan manages time effectively.\nrule: Anyone who sets high goals and manages time effectively can work independently.\nconclusion: Brendan works independently.\n\nfact1: Brendan works independently.\nrule: Brendan either makes groundbreaking discoveries or works independently, but not both.\nconclusion: Brendan does not make groundbreaking discoveries.\n\nfact1: Brendan collaborates with experts.\nfact2: Brendan does not advance scientific knowledge.\nrule: If someone is a renowned botanist and collaborates with experts, then they advance scientific knowledge.\nconclusion: Brendan is not a renowned botanist.\n\nfact1: Brendan is not a renowned botanist.\nfact2: Brendan does not make groundbreaking discoveries.\nrule: If Brendan is either a renowned botanist or passionate about plants (but not both), then he makes groundbreaking discoveries.\nconclusion: Brendan is passionate about plants.\n\nTherefore, it is false that Brendan is passionate about plants. The correct option is: B.",
    "context": "Brendan either makes groundbreaking discoveries or works independently, but not both. Pandabear sets high goals. Brendan teaches students. Victoria manages time effectively. Brendan receives invitations. If someone is a renowned botanist and collaborates with experts, then they advance scientific knowledge. If someone publishes papers and receives invitations, then they attend conferences. If Brendan either studies unique species or cultivates rare flowers (but not both), then he is a renowned botanist. Brendan works independently if he values freedom. Brendan publishes papers. If Victoria is a professor, then he either teaches students or shares research findings, but not both. Anyone who sets high goals and manages time effectively can work independently. If Brendan is either a renowned botanist or passionate about plants (but not both), then he makes groundbreaking discoveries. Brendan is a professor. Brendan sets high goals. If Brendan either shares research findings or attends conferences (but not both), then he collaborates with experts. If Brendan has original ideas, then he collaborates with experts and values feedback. Patrick teaches students. Brendan does not advance scientific knowledge. Pandabear is a professor. Patrick does not advance scientific knowledge. If Brendan either studies rare species or contributes to innovation (but not both), then he makes groundbreaking discoveries. If Brendan is a professor, then he either teaches students or shares research findings, but not both. Brendan manages time effectively.",
    "nl2fol": {
      "Brendan either makes groundbreaking discoveries or works independently, but not both.": "makes_groundbreaking_discoveries(Brendan) ⊕ works_independently(Brendan)",
      "Pandabear sets high goals.": "set_high_goals(Pandabear)",
      "Brendan teaches students.": "teaches_students(Brendan)",
      "Victoria manages time effectively.": "manage_time_effectively(Victoria)",
      "Brendan receives invitations.": "receives_invitations(Brendan)",
      "If someone is a renowned botanist and collaborates with experts, then they advance scientific knowledge.": "∀x ((renowned_botanist(x) ∧ collaborates_with_experts(x)) → advances_scientific_knowledge(x))",
      "If someone publishes papers and receives invitations, then they attend conferences.": "∀x ((publishes_papers(x) ∧ receives_invitations(x)) → attends_conferences(x))",
      "If Brendan either studies unique species or cultivates rare flowers (but not both), then he is a renowned botanist.": "(studies_unique_species(Brendan) ⊕ cultivates_rare_flowers(Brendan)) → renowned_botanist(Brendan)",
      "Brendan works independently if he values freedom.": "values_freedom(Brendan) → works_independently(Brendan)",
      "Brendan publishes papers.": "publishes_papers(Brendan)",
      "If Victoria is a professor, then he either teaches students or shares research findings, but not both.": "is_professor(Victoria) → (teaches_students(Victoria) ⊕ shares_research_findings(Victoria))",
      "Anyone who sets high goals and manages time effectively can work independently.": "∀x ((sets_high_goals(x) ∧ manages_time_effectively(x)) → works_independently(x))",
      "If Brendan is either a renowned botanist or passionate about plants (but not both), then he makes groundbreaking discoveries.": "(renowned_botanist(Brendan) ⊕ passionate_about_plants(Brendan)) → makes_groundbreaking_discoveries(Brendan)",
      "Brendan is a professor.": "is_professor(Brendan)",
      "Brendan sets high goals.": "sets_high_goals(Brendan)",
      "If Brendan either shares research findings or attends conferences (but not both), then he collaborates with experts.": "(shares_research_findings(Brendan) ⊕ attends_conferences(Brendan)) → collaborates_with_experts(Brendan)",
      "If Brendan has original ideas, then he collaborates with experts and values feedback.": "has_original_ideas(Brendan) → (values_feedback(Brendan) ∧ collaborates_with_experts(Brendan))",
      "Patrick teaches students.": "teach_students(Patrick)",
      "Brendan does not advance scientific knowledge.": "¬advances_scientific_knowledge(Brendan)",
      "Pandabear is a professor.": "is_professor(Pandabear)",
      "Patrick does not advance scientific knowledge.": "¬advances_scientific_knowledge(Patrick)",
      "If Brendan either studies rare species or contributes to innovation (but not both), then he makes groundbreaking discoveries.": "(studies_rare_species(Brendan) ⊕ contributes_to_innovation(Brendan)) → makes_groundbreaking_discoveries(Brendan)",
      "If Brendan is a professor, then he either teaches students or shares research findings, but not both.": "is_professor(Brendan) → (teaches_students(Brendan) ⊕ shares_research_findings(Brendan))",
      "Brendan manages time effectively.": "manages_time_effectively(Brendan)"
    },
    "conclusion_fol": "passionate_about_plants(Brendan)"
  },
  {
    "id": 179,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lachlan's research subjects have a Bartholin gland disorder.",
    "reasoning": "fact1: Lachlan sets high goals.\nfact2: Lachlan strives for perfection.\nrule: All individuals who set high goals strive for perfection and often work under stress.\nconclusion: Lachlan works under stress.\n\nfact1: Lachlan works under stress.\nrule: Lachlan is either in good health or works under stress, but not both.\nconclusion: Lachlan does not have good health.\n\nfact1: Lachlan exercises regularly.\nfact2: Lachlan does not have good health.\nrule: If Lachlan either exercises regularly or eats nutritious food (but not both), then he has good health.\nconclusion: Lachlan eats nutritious food.\n\nfact1: Lachlan has a balanced lifestyle.\nfact2: Lachlan eats nutritious food.\nrule: If someone has a balanced lifestyle and eats nutritious food, then they can maintain their fertility.\nconclusion: Lachlan maintains his fertility.\n\nfact1: Lachlan does not regulate his hormones.\nfact2: Lachlan maintains his fertility.\nrule: If Lachlan's research subjects either regulate their hormones or maintain their fertility (but not both), then they have a healthy reproductive system.\nconclusion: Lachlan has a healthy reproductive system.\n\nfact1: Lachlan has a healthy reproductive system.\nrule: Anyone with a healthy reproductive system has normal Bartholin gland function.\nconclusion: Lachlan has normal Bartholin gland function.\n\nfact1: Lachlan has normal Bartholin gland function.\nrule: For every human, either they have a Bartholin gland disorder or they have normal Bartholin gland function, but not both.\nconclusion: Lachlan's research subjects have a Bartholin gland disorder.\n\nTherefore, it is false that Lachlan's research subjects have a Bartholin gland disorder. The correct option is: B.",
    "context": "If Lachlan either exercises regularly or eats nutritious food (but not both), then he has good health. Treasure is either in good health or works under stress, but not both. Lachlan has a balanced lifestyle. If Lachlan's research subjects either practice good hygiene or avoid unhealthy habits (but not both), then they have normal Bartholin gland function. Kalani has a balanced lifestyle. If Lachlan's research subjects either regulate their hormones or maintain their fertility (but not both), then they have a healthy reproductive system. If someone has a balanced lifestyle and eats nutritious food, then they can maintain their fertility. Treasure strives for perfection. Lachlan is either in good health or works under stress, but not both. All individuals who set high goals strive for perfection and often work under stress. Lachlan sets high goals. Anyone with a healthy reproductive system has normal Bartholin gland function. Lachlan does not regulate his hormones. For every human, either they have a Bartholin gland disorder or they have normal Bartholin gland function, but not both. Lachlan's research subjects either practice good hygiene or have a healthy reproductive system. Lachlan exercises regularly. Kalani exercises regularly. Lachlan strives for perfection.",
    "nl2fol": {
      "If Lachlan either exercises regularly or eats nutritious food (but not both), then he has good health.": "(exercises_regularly(Lachlan) ⊕ eats_nutritious_food(Lachlan)) → has_good_health(Lachlan)",
      "Treasure is either in good health or works under stress, but not both.": "has_good_health(Treasure) ⊕ works_under_stress(Treasure)",
      "Lachlan has a balanced lifestyle.": "has_balanced_lifestyle(Lachlan)",
      "If Lachlan's research subjects either practice good hygiene or avoid unhealthy habits (but not both), then they have normal Bartholin gland function.": "(practices_good_hygiene(Lachlan) ⊕ avoids_unhealthy_habits(Lachlan)) → has_normal_Barholin_gland_function(Lachlan)",
      "Kalani has a balanced lifestyle.": "has_balanced_lifestyle(Kalani)",
      "If Lachlan's research subjects either regulate their hormones or maintain their fertility (but not both), then they have a healthy reproductive system.": "(regulates_hormones(Lachlan) ⊕ maintains_fertility(Lachlan)) → healthy_reproductive_system(Lachlan)",
      "If someone has a balanced lifestyle and eats nutritious food, then they can maintain their fertility.": "∀x ((has_balanced_lifestyle(x) ∧ eats_nutritious_food(x)) → maintains_fertility(x))",
      "Treasure strives for perfection.": "strives_for_perfection(Treasure)",
      "Lachlan is either in good health or works under stress, but not both.": "has_good_health(Lachlan) ⊕ works_under_stress(Lachlan)",
      "All individuals who set high goals strive for perfection and often work under stress.": "∀x (sets_high_goals(x) → (strives_for_perfection(x) ∧ works_under_stress(x)))",
      "Lachlan sets high goals.": "sets_high_goals(Lachlan)",
      "Anyone with a healthy reproductive system has normal Bartholin gland function.": "∀x (healthy_reproductive_system(x) → has_normal_Barholin_gland_function(x))",
      "Lachlan does not regulate his hormones.": "¬regulates_hormones(Lachlan)",
      "For every human, either they have a Bartholin gland disorder or they have normal Bartholin gland function, but not both.": "∀x (has_Barholin_gland_disorder(x) ⊕ has_normal_Barholin_gland_function(x))",
      "Lachlan's research subjects either practice good hygiene or have a healthy reproductive system.": "practices_good_hygiene(Lachlan) ∨ healthy_reproductive_system(Lachlan)",
      "Lachlan exercises regularly.": "exercises_regularly(Lachlan)",
      "Kalani exercises regularly.": "exercises_regularly(Kalani)",
      "Lachlan strives for perfection.": "strives_for_perfection(Lachlan)"
    },
    "conclusion_fol": "has_Barholin_gland_disorder(Lachlan)"
  },
  {
    "id": 180,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Wyatt is a skilled stonemason.",
    "reasoning": "fact1: Wyatt does not gain acclaim.\nfact2: Wyatt does not demonstrate proficiency.\nrule: If Wyatt either earns recognition or gains acclaim, then he demonstrates proficiency.\nconclusion: Wyatt does not earn recognition.\n\nfact1: Wyatt does not have strong foundations.\nfact2: Wyatt does not earn recognition.\nrule: If Wyatt has strong foundations or produces quality work, then he will earn recognition.\nconclusion: Wyatt does not produce quality work.\n\nfact1: Wyatt has experience.\nfact2: Wyatt does not produce quality work.\nrule: If someone has experience and pays attention to details, then they produce quality work.\nconclusion: Wyatt does not pay attention to details.\n\nfact1: Wyatt does not pay attention to details.\nrule: Wyatt either pays attention to details or makes mistakes, but not both.\nconclusion: Wyatt makes mistakes.\n\nfact1: Wyatt meets deadlines.\nfact2: Wyatt avoids details.\nrule: Anyone who meets deadlines and avoids details tends to rush through tasks.\nconclusion: Wyatt rushes through tasks.\n\nfact1: Wyatt rushes through tasks.\nrule: Wyatt either works precisely or rushes through tasks, but not both.\nconclusion: Wyatt does not work precisely.\n\nfact1: Wyatt does not work precisely.\nrule: Wyatt either lacks practice or works precisely.\nconclusion: Wyatt lacks practice.\n\nfact1: Wyatt lacks practice.\nfact2: Wyatt makes mistakes.\nrule: Anyone who lacks practice and makes mistakes is an inexperienced stonemason.\nconclusion: Wyatt is an inexperienced stonemason.\n\nfact1: Wyatt is an inexperienced stonemason.\nrule: Wyatt is either a skilled stonemason or an inexperienced stonemason, but not both.\nconclusion: Wyatt is a skilled stonemason.\n\nTherefore, it is false that Wyatt is a skilled stonemason. The correct option is: B.",
    "context": "Wyatt does not demonstrate proficiency. If someone is motivated, then they produce quality work and stay focused. If Wyatt takes pride in his work and meets challenges, then he also rushes through tasks. Wyatt meets deadlines. Wyatt is either a skilled stonemason or an inexperienced stonemason, but not both. Wyatt avoids details. Wyatt either works precisely or rushes through tasks, but not both. Wyatt either pays attention to details or makes mistakes, but not both. Wyatt does not have strong foundations. Wyatt learns quickly or makes mistakes. Wyatt either lacks practice or works precisely. Anyone who lacks practice and makes mistakes is an inexperienced stonemason. If Wyatt either earns recognition or gains acclaim, then he demonstrates proficiency. If Wyatt has strong foundations or produces quality work, then he will earn recognition. If someone has experience and pays attention to details, then they produce quality work. Wyatt does not gain acclaim. Anyone who meets deadlines and avoids details tends to rush through tasks. If Chase either earns recognition or gains acclaim, then he demonstrates proficiency. Wyatt has experience. If Wyatt avoids hard tasks and gives up quickly, then he lacks practice.",
    "nl2fol": {
      "Wyatt does not demonstrate proficiency.": "¬demonstrates_proficiency(Wyatt)",
      "If someone is motivated, then they produce quality work and stay focused.": "∀x (is_motivated(x) → (produces_quality_work(x) ∧ stays_focused(x)))",
      "If Wyatt takes pride in his work and meets challenges, then he also rushes through tasks.": "takes_pride(Wyatt) → (meets_challenges(Wyatt) ∧ rushes_through_tasks(Wyatt))",
      "Wyatt meets deadlines.": "meets_deadlines(Wyatt)",
      "Wyatt is either a skilled stonemason or an inexperienced stonemason, but not both.": "skilled_stonemason(Wyatt) ⊕ inexperienced_stonemason(Wyatt)",
      "Wyatt avoids details.": "avoids_details(Wyatt)",
      "Wyatt either works precisely or rushes through tasks, but not both.": "works_precisely(Wyatt) ⊕ rushes_through_tasks(Wyatt)",
      "Wyatt either pays attention to details or makes mistakes, but not both.": "makes_mistakes(Wyatt) ⊕ pays_attention_to_details(Wyatt)",
      "Wyatt does not have strong foundations.": "¬has_strong_foundations(Wyatt)",
      "Wyatt learns quickly or makes mistakes.": "learns_quickly(Wyatt) ∨ makes_mistakes(Wyatt)",
      "Wyatt either lacks practice or works precisely.": "lacks_practice(Wyatt) ∨ works_precisely(Wyatt)",
      "Anyone who lacks practice and makes mistakes is an inexperienced stonemason.": "∀x ((lacks_practice(x) ∧ makes_mistakes(x)) → inexperienced_stonemason(x))",
      "If Wyatt either earns recognition or gains acclaim, then he demonstrates proficiency.": "(earns_recognition(Wyatt) ⊕ gains_acclaim(Wyatt)) → demonstrates_proficiency(Wyatt)",
      "If Wyatt has strong foundations or produces quality work, then he will earn recognition.": "(has_strong_foundations(Wyatt) ∨ produces_quality_work(Wyatt)) → earns_recognition(Wyatt)",
      "If someone has experience and pays attention to details, then they produce quality work.": "∀x ((has_experience(x) ∧ pays_attention_to_details(x)) → produces_quality_work(x))",
      "Wyatt does not gain acclaim.": "¬gains_acclaim(Wyatt)",
      "Anyone who meets deadlines and avoids details tends to rush through tasks.": "∀x ((meets_deadlines(x) ∧ avoids_details(x)) → rushes_through_tasks(x))",
      "If Chase either earns recognition or gains acclaim, then he demonstrates proficiency.": "(earns_recognition(Chase) ⊕ gains_acclaim(Chase)) → demonstrates_proficiency(Chase)",
      "Wyatt has experience.": "has_experience(Wyatt)",
      "If Wyatt avoids hard tasks and gives up quickly, then he lacks practice.": "(avoids_hard_tasks(Wyatt) ∧ gives_up_quickly(Wyatt)) → lacks_practice(Wyatt)"
    },
    "conclusion_fol": "skilled_stonemason(Wyatt)"
  },
  {
    "id": 181,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Noel creates timeless masterpieces.",
    "reasoning": "fact1: Noel sets high goals.\nfact2: Noel dedicates herself to her craft.\nrule: Anyone who sets high goals or dedicates themselves to their craft will pursue excellence.\nconclusion: Noel pursues excellence.\n\nfact1: Noel pursues excellence.\nfact2: Noel does not strive for recognition.\nrule: If Noel pursues excellence, then she is either a passionate artist or strives for recognition, but not both.\nconclusion: Noel is a passionate artist.\n\nfact1: Noel is a passionate artist.\nfact2: Noel demands high standards.\nrule: If Noel is a passionate artist, then she seeks perfection and demands high standards.\nconclusion: Noel seeks perfection.\n\nfact1: Noel does not value durability.\nrule: For Noel, she either values durability or appreciates impermanence, but not both.\nconclusion: Noel appreciates impermanence.\n\nfact1: Noel seeks perfection.\nrule: Noel either seeks perfection or finds moments of beauty, but not both.\nconclusion: Noel does not find moments of beauty.\n\nfact1: Noel appreciates impermanence.\nfact2: Noel does not find moments of beauty.\nrule: If Noel appreciates impermanence, then she can either create timeless masterpieces or find moments of beauty, but not both.\nconclusion: Noel creates timeless masterpieces.\n\nTherefore, it is true that Noel creates timeless masterpieces. The correct option is: A.",
    "context": "Dallas does not strive for recognition. Noel does not strive for recognition. For Noel, she either values durability or appreciates impermanence, but not both. If Noel appreciates impermanence, then she can either create timeless masterpieces or find moments of beauty, but not both. Noel demands high standards. Noel dedicates herself to her craft. If Noel pursues excellence, then she is either a passionate artist or strives for recognition, but not both. Kaitlyn either seeks perfection or finds moments of beauty, but not both. If Noel is a passionate artist, then she seeks perfection and demands high standards. Noel either seeks perfection or finds moments of beauty, but not both. If Dallas is a passionate artist, then she seeks perfection and demands high standards. Kaitlyn does not value durability. Anyone who sets high goals or dedicates themselves to their craft will pursue excellence. Noel does not value durability. If someone either pours their heart into their work or expresses their creativity, then they are a passionate artist. If Dallas pursues excellence, then she is either a passionate artist or strives for recognition, but not both. If Noel either innovates recipes or perfects techniques (but not both), then she pursues excellence. If Kaitlyn appreciates impermanence, then she can either create timeless masterpieces or find moments of beauty, but not both. Noel sets high goals. Kaitlyn dedicates herself to her craft. Kaitlyn demands high standards.",
    "nl2fol": {
      "Dallas does not strive for recognition.": "¬strive_for_recognition(Dallas)",
      "Noel does not strive for recognition.": "¬strive_for_recognition(Noel)",
      "For Noel, she either values durability or appreciates impermanence, but not both.": "value_durability(Noel) ⊕ appreciate_impermanence(Noel)",
      "If Noel appreciates impermanence, then she can either create timeless masterpieces or find moments of beauty, but not both.": "appreciate_impermanence(Noel) → (create_timeless_masterpieces(Noel) ⊕ find_moments_of_beauty(Noel))",
      "Noel demands high standards.": "demand_high_standards(Noel)",
      "Noel dedicates herself to her craft.": "dedicate_to_craft(Noel)",
      "If Noel pursues excellence, then she is either a passionate artist or strives for recognition, but not both.": "pursue_excellence(Noel) → (strive_for_recognition(Noel) ⊕ passionate_artist(Noel))",
      "Kaitlyn either seeks perfection or finds moments of beauty, but not both.": "seek_perfection(Kaitlyn) ⊕ find_moments_of_beauty(Kaitlyn)",
      "If Noel is a passionate artist, then she seeks perfection and demands high standards.": "passionate_artist(Noel) → (seek_perfection(Noel) ∧ demand_high_standards(Noel))",
      "Noel either seeks perfection or finds moments of beauty, but not both.": "seek_perfection(Noel) ⊕ find_moments_of_beauty(Noel)",
      "If Dallas is a passionate artist, then she seeks perfection and demands high standards.": "passionate_artist(Dallas) → (seek_perfection(Dallas) ∧ demand_high_standards(Dallas))",
      "Kaitlyn does not value durability.": "¬value_durability(Kaitlyn)",
      "Anyone who sets high goals or dedicates themselves to their craft will pursue excellence.": "∀x ((set_high_goals(x) ∨ dedicate_to_craft(x)) → pursue_excellence(x))",
      "Noel does not value durability.": "¬value_durability(Noel)",
      "If someone either pours their heart into their work or expresses their creativity, then they are a passionate artist.": "∀x ((pours_heart(x) ⊕ expresses_creativity(x)) → passionate_artist(x))",
      "If Dallas pursues excellence, then she is either a passionate artist or strives for recognition, but not both.": "pursue_excellence(Dallas) → (strive_for_recognition(Dallas) ⊕ passionate_artist(Dallas))",
      "If Noel either innovates recipes or perfects techniques (but not both), then she pursues excellence.": "(innovate_recipes(Noel) ⊕ perfect_techniques(Noel)) → pursue_excellence(Noel)",
      "If Kaitlyn appreciates impermanence, then she can either create timeless masterpieces or find moments of beauty, but not both.": "appreciate_impermanence(Kaitlyn) → (create_timeless_masterpieces(Kaitlyn) ⊕ find_moments_of_beauty(Kaitlyn))",
      "Noel sets high goals.": "set_high_goals(Noel)",
      "Kaitlyn dedicates herself to her craft.": "dedicate_to_craft(Kaitlyn)",
      "Kaitlyn demands high standards.": "demand_high_standards(Kaitlyn)"
    },
    "conclusion_fol": "create_timeless_masterpieces(Noel)"
  },
  {
    "id": 182,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joshua dedicates himself to research.",
    "reasoning": "fact1: Joshua does not gain experience.\nfact2: Joshua develops skills.\nrule: If someone enters the workforce, then they gain experience and develop skills.\nconclusion: Joshua does not enter the workforce.\n\nfact1: Joshua does not enter the workforce.\nrule: Joshua either enters the workforce or pursues an advanced degree, but not both at the same time.\nconclusion: Joshua is pursuing an advanced degree.\n\nfact1: Joshua is pursuing an advanced degree.\nrule: If Joshua pursues an advanced degree, then he will obtain a PhD.\nconclusion: Joshua obtains a PhD.\n\nfact1: Joshua obtains a PhD.\nrule: If Joshua obtains a PhD, then he will teach at a university.\nconclusion: Joshua teaches at a university.\n\nfact1: Joshua teaches at a university.\nrule: Joshua either teaches at a university or publishes findings, but not both.\nconclusion: Joshua does not publish findings.\n\nfact1: Joshua does not publish findings.\nrule: Joshua either collaborates with others or publishes findings.\nconclusion: Joshua collaborates with others.\n\nfact1: Joshua collaborates with others.\nrule: Joshua either makes new discoveries or collaborates with others, but not both.\nconclusion: Joshua does not make new discoveries.\n\nfact1: Joshua does not make new discoveries.\nrule: If Joshua dedicates himself to research, then he makes new discoveries.\nconclusion: Joshua dedicates himself to research.\n\nTherefore, it is false that Joshua dedicates himself to research. The correct option is: B.",
    "context": "If Joshua is passionate about nature and excels in academics, then he will obtain a PhD. Joshua does not gain experience. If someone enters the workforce, then they gain experience and develop skills. If Joshua dedicates himself to research, then he makes new discoveries. Joshua either makes new discoveries or collaborates with others, but not both. Joshua either teaches at a university or publishes findings, but not both. Cowboy either teaches at a university or publishes findings, but not both. If Joshua obtains a PhD, then he will teach at a university. Yara develops skills. If Joshua pursues an advanced degree, then he will obtain a PhD. Joshua either collaborates with others or publishes findings. Joshua develops skills. If Joshua has curiosity, then he has a passion for learning and pursues an advanced degree. Anyone who collects data and analyzes results can publish findings. Joshua either enters the workforce or pursues an advanced degree, but not both at the same time. Yara either collaborates with others or publishes findings.",
    "nl2fol": {
      "If Joshua is passionate about nature and excels in academics, then he will obtain a PhD.": "passionate_about_nature(Joshua) → (excel_in_academics(Joshua) ∧ obtains_phd(Joshua))",
      "Joshua does not gain experience.": "¬gain_experience(Joshua)",
      "If someone enters the workforce, then they gain experience and develop skills.": "∀x (enters_workforce(x) → (gain_experience(x) ∧ develop_skills(x)))",
      "If Joshua dedicates himself to research, then he makes new discoveries.": "dedicate_to_research(Joshua) → make_new_discoveries(Joshua)",
      "Joshua either makes new discoveries or collaborates with others, but not both.": "make_new_discoveries(Joshua) ⊕ collaborate_with_others(Joshua)",
      "Joshua either teaches at a university or publishes findings, but not both.": "teach_at_university(Joshua) ⊕ publish_findings(Joshua)",
      "Cowboy either teaches at a university or publishes findings, but not both.": "teach_at_university(Cowboy) ⊕ publish_findings(Cowboy)",
      "If Joshua obtains a PhD, then he will teach at a university.": "obtains_phd(Joshua) → teach_at_university(Joshua)",
      "Yara develops skills.": "develops_skills(Yara)",
      "If Joshua pursues an advanced degree, then he will obtain a PhD.": "pursues_advanced_degree(Joshua) → obtains_phd(Joshua)",
      "Joshua either collaborates with others or publishes findings.": "collaborate_with_others(Joshua) ∨ publish_findings(Joshua)",
      "Joshua develops skills.": "develop_skills(Joshua)",
      "If Joshua has curiosity, then he has a passion for learning and pursues an advanced degree.": "has_curiosity(Joshua) → (has_passion_for_learning(Joshua) ∧ pursues_advanced_degree(Joshua))",
      "Anyone who collects data and analyzes results can publish findings.": "∀x ((collects_data(x) ∧ analyzes_results(x)) → publish_findings(x))",
      "Joshua either enters the workforce or pursues an advanced degree, but not both at the same time.": "enters_workforce(Joshua) ⊕ pursues_advanced_degree(Joshua)",
      "Yara either collaborates with others or publishes findings.": "collaborate_with_others(Yara) ∨ publish_findings(Yara)"
    },
    "conclusion_fol": "dedicate_to_research(Joshua)"
  },
  {
    "id": 183,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Caden can overcome challenges.",
    "reasoning": "fact1: Caden has ambition.\nfact2: Caden takes action.\nrule: If Caden has ambition, then he either creates plans or takes action, but not both.\nconclusion: Caden does not create plans.\n\nfact1: Caden pursues his passion.\nfact2: Caden does not make an impact.\nrule: Everyone who pursues their passion either makes an impact or has a vision (or both).\nconclusion: Caden has a vision.\n\nfact1: Caden has a vision.\nfact2: Caden does not create plans.\nrule: If Caden has a vision, then he either sets goals or creates plans, but not both.\nconclusion: Caden sets goals.\n\nfact1: Caden sets goals.\nfact2: Caden does not track progress.\nrule: If Caden either sets goals or tracks progress (but not both), then he stays motivated.\nconclusion: Caden stays motivated.\n\nfact1: Caden suffers setbacks.\nfact2: Caden stays motivated.\nrule: If Caden suffers setbacks, then he either refuses to give up or stays motivated, but not both.\nconclusion: Caden refuses to give up is not true, or in other words Caden gives up.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Caden can overcome challenges. The correct option is: C.",
    "context": "If Caden has a vision, then he either sets goals or creates plans, but not both. If Caden either sets goals or tracks progress (but not both), then he stays motivated. Caden does not make an impact. Caden suffers setbacks. Ainhoa suffers setbacks. If Clay has ambition, then he either creates plans or takes action, but not both. If Ainhoa either sets goals or tracks progress (but not both), then he stays motivated. If Clay suffers setbacks, then he either refuses to give up or stays motivated, but not both. Clay pursues his passion. Caden takes action. Caden pursues his passion. If Caden suffers setbacks, then he either refuses to give up or stays motivated, but not both. If Caden has ambition, then he either creates plans or takes action, but not both. Clay takes action. Anyone who has support or learns from failure can stay motivated. If someone believes in themselves, then they work hard and set goals. Caden does not track progress. If Caden either identifies problems or evaluates risks (but not both), then he creates plans. Everyone who pursues their passion either makes an impact or has a vision (or both). Ainhoa has ambition. Caden has ambition. Brinley does not face adversity.",
    "nl2fol": {
      "If Caden has a vision, then he either sets goals or creates plans, but not both.": "has_a_vision(Caden) → (sets_goals(Caden) ⊕ creates_plans(Caden))",
      "If Caden either sets goals or tracks progress (but not both), then he stays motivated.": "(sets_goals(Caden) ⊕ tracks_progress(Caden)) → stay_motivated(Caden)",
      "Caden does not make an impact.": "¬makes_impact(Caden)",
      "Caden suffers setbacks.": "suffers_setbacks(Caden)",
      "Ainhoa suffers setbacks.": "suffers_setbacks(Ainhoa)",
      "If Clay has ambition, then he either creates plans or takes action, but not both.": "has_ambition(Clay) → (creates_plans(Clay) ⊕ takes_action(Clay))",
      "If Ainhoa either sets goals or tracks progress (but not both), then he stays motivated.": "(sets_goals(Ainhoa) ⊕ tracks_progress(Ainhoa)) → stay_motivated(Ainhoa)",
      "If Clay suffers setbacks, then he either refuses to give up or stays motivated, but not both.": "suffers_setbacks(Clay) → (refuse_to_give_up(Clay) ⊕ stay_motivated(Clay))",
      "Clay pursues his passion.": "pursue_passion(Clay)",
      "Caden takes action.": "takes_action(Caden)",
      "Caden pursues his passion.": "pursues_passion(Caden)",
      "If Caden suffers setbacks, then he either refuses to give up or stays motivated, but not both.": "suffers_setbacks(Caden) → (refuse_to_give_up(Caden) ⊕ stay_motivated(Caden))",
      "If Caden has ambition, then he either creates plans or takes action, but not both.": "has_ambition(Caden) → (creates_plans(Caden) ⊕ takes_action(Caden))",
      "Clay takes action.": "takes_action(Clay)",
      "Anyone who has support or learns from failure can stay motivated.": "∀x ((has_support(x) ∨ learns_from_failure(x)) → stay_motivated(x))",
      "If someone believes in themselves, then they work hard and set goals.": "∀x (believes_in_self(x) → (works_hard(x) ∧ sets_goals(x)))",
      "Caden does not track progress.": "¬tracks_progress(Caden)",
      "If Caden either identifies problems or evaluates risks (but not both), then he creates plans.": "(identifies_problems(Caden) ⊕ evaluates_risks(Caden)) → creates_plans(Caden)",
      "Everyone who pursues their passion either makes an impact or has a vision (or both).": "∀x (pursues_passion(x) → (makes_impact(x) ∨ has_a_vision(x)))",
      "Ainhoa has ambition.": "has_ambition(Ainhoa)",
      "Caden has ambition.": "has_ambition(Caden)",
      "Brinley does not face adversity.": "¬face_adversity(Brinley)"
    },
    "conclusion_fol": "overcome_challenges(Caden)"
  },
  {
    "id": 184,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jameson is not careless.",
    "reasoning": "fact1: Jameson is not accomplished.\nrule: Anyone who contributes to science is accomplished.\nconclusion: Jameson does not contribute to science.\n\nfact1: Jameson thinks creatively.\nrule: Jameson either thinks creatively or identifies patterns, but not both.\nconclusion: Jameson does not identify patterns.\n\nfact1: Jameson does not contribute to science.\nfact2: Jameson does not develop new techniques.\nrule: Everyone who studies microorganisms either contributes to science or develops new techniques (or both).\nconclusion: Jameson does not study microorganisms.\n\nfact1: Jameson does not study microorganisms.\nrule: Jameson uses a microscope or studies microorganisms.\nconclusion: Jameson uses a microscope.\n\nfact1: Jameson does not identify patterns.\nfact2: Jameson does not advance knowledge.\nrule: Anyone who makes observations either identifies patterns or advances knowledge.\nconclusion: Jameson does not make observations.\n\nfact1: Jameson uses a microscope.\nfact2: Jameson does not make observations.\nrule: For anyone who uses a microscope and collects data, it is the case that they make observations.\nconclusion: Jameson does not collect data.\n\nfact1: Jameson conducts research.\nfact2: Jameson does not collect data.\nrule: Everyone who conducts research either performs experiments or collects data (or both).\nconclusion: Jameson performs experiments.\n\nfact1: Jameson performs experiments.\nfact2: Jameson does not make groundbreaking discoveries.\nrule: If Jameson performs experiments and is detail-oriented, then he can make groundbreaking discoveries.\nconclusion: Jameson is not detail-oriented.\n\nfact1: Jameson is not detail-oriented.\nrule: Jameson is either detail-oriented or careless, but not both.\nconclusion: Jameson is not careless.\n\nTherefore, it is false that Jameson is not careless. The correct option is: B.",
    "context": "If Jameson performs experiments and is detail-oriented, then he can make groundbreaking discoveries. If Jameson works in a laboratory, then he uses a microscope. Jameson is either detail-oriented or careless, but not both. Anyone who contributes to science is accomplished. Jameson does not advance knowledge. Jameson uses a microscope or studies microorganisms. Estella does not make groundbreaking discoveries. If Jameson examines cells or analyzes samples, then he studies microorganisms. If someone either examines samples or analyzes images (but not both), then they make observations. Estella conducts research. Jameson thinks creatively. Anyone who analyzes results either draws conclusions or performs experiments (or both). Everyone who conducts research either performs experiments or collects data (or both). If Jameson examines evidence, then he either identifies patterns or develops theories. Gabriel thinks creatively. Everyone who studies microorganisms either contributes to science or develops new techniques (or both). Jameson is not accomplished. Collin does not develop new techniques. Anyone who makes observations either identifies patterns or advances knowledge. For anyone who uses a microscope and collects data, it is the case that they make observations. Jameson does not make groundbreaking discoveries. Jameson either thinks creatively or identifies patterns, but not both. Gabriel either thinks creatively or identifies patterns, but not both. Jameson conducts research. Jameson does not develop new techniques.",
    "nl2fol": {
      "If Jameson performs experiments and is detail-oriented, then he can make groundbreaking discoveries.": "(performs_experiments(Jameson) ∧ detail_oriented(Jameson)) → makes_groundbreaking_discoveries(Jameson)",
      "If Jameson works in a laboratory, then he uses a microscope.": "works_in_lab(Jameson) → uses_microscope(Jameson)",
      "Jameson is either detail-oriented or careless, but not both.": "detail_oriented(Jameson) ⊕ careless(Jameson)",
      "Anyone who contributes to science is accomplished.": "∀x (contributes_to_science(x) → is_accomplished(x))",
      "Jameson does not advance knowledge.": "¬advances_knowledge(Jameson)",
      "Jameson uses a microscope or studies microorganisms.": "uses_microscope(Jameson) ∨ studies_microorganisms(Jameson)",
      "Estella does not make groundbreaking discoveries.": "¬make_groundbreaking_discoveries(Estella)",
      "If Jameson examines cells or analyzes samples, then he studies microorganisms.": "(examines_cells(Jameson) ∨ analyzes_samples(Jameson)) → studies_microorganisms(Jameson)",
      "If someone either examines samples or analyzes images (but not both), then they make observations.": "∀x ((examines_samples(x) ⊕ analyzes_images(x)) → makes_observations(x))",
      "Estella conducts research.": "conducts_research(Estella)",
      "Jameson thinks creatively.": "thinks_creatively(Jameson)",
      "Anyone who analyzes results either draws conclusions or performs experiments (or both).": "∀x (analyzes_results(x) → (draws_conclusions(x) ∨ performs_experiments(x)))",
      "Everyone who conducts research either performs experiments or collects data (or both).": "∀x (conducts_research(x) → (performs_experiments(x) ∨ collects_data(x)))",
      "If Jameson examines evidence, then he either identifies patterns or develops theories.": "examines_evidence(Jameson) → (identifies_patterns(Jameson) ∨ develops_theories(Jameson))",
      "Gabriel thinks creatively.": "thinks_creatively(Gabriel)",
      "Everyone who studies microorganisms either contributes to science or develops new techniques (or both).": "∀x (studies_microorganisms(x) → (contributes_to_science(x) ∨ develops_new_techniques(x)))",
      "Jameson is not accomplished.": "¬is_accomplished(Jameson)",
      "Collin does not develop new techniques.": "¬develops_new_techniques(Collin)",
      "Anyone who makes observations either identifies patterns or advances knowledge.": "∀x (makes_observations(x) → (identifies_patterns(x) ∨ advances_knowledge(x)))",
      "For anyone who uses a microscope and collects data, it is the case that they make observations.": "∀x ((uses_microscope(x) ∧ collects_data(x)) → makes_observations(x))",
      "Jameson does not make groundbreaking discoveries.": "¬makes_groundbreaking_discoveries(Jameson)",
      "Jameson either thinks creatively or identifies patterns, but not both.": "thinks_creatively(Jameson) ⊕ identifies_patterns(Jameson)",
      "Gabriel either thinks creatively or identifies patterns, but not both.": "thinks_creatively(Gabriel) ⊕ identifies_patterns(Gabriel)",
      "Jameson conducts research.": "conducts_research(Jameson)",
      "Jameson does not develop new techniques.": "¬develops_new_techniques(Jameson)"
    },
    "conclusion_fol": "¬careless(Jameson)"
  },
  {
    "id": 185,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kaison is not determined.",
    "reasoning": "fact1: Kaison sets targets.\nrule: Anyone who sets targets has a goal.\nconclusion: Kaison has a goal.\n\nfact1: Kaison has a goal.\nfact2: Kaison stays focused.\nrule: If Kaison has a goal, then he either dedicates time or stays focused (but not both).\nconclusion: Kaison does not dedicate time.\n\nfact1: Kaison does not dedicate time.\nfact2: Kaison does not improve his skills.\nrule: If Kaison either dedicates time or works hard (but not both), then he improves his skills.\nconclusion: Kaison does not work hard.\n\nfact1: Kaison overcomes obstacles.\nfact2: Kaison does not achieve his goals.\nrule: If someone is successful and overcomes obstacles, then they achieve their goals.\nconclusion: Kaison is not successful.\n\nfact1: Kaison does not work hard.\nrule: Kaison either works hard or is talented (or both).\nconclusion: Kaison is talented.\n\nfact1: Kaison is talented.\nfact2: Kaison is not successful.\nrule: If Kaison is either determined or talented (but not both), then he is successful.\nconclusion: Kaison is not determined.\n\nTherefore, it is false that Kaison is not determined. The correct option is: B.",
    "context": "Anyone who sets targets has a goal. Kaison does not achieve his goals. Kaison overcomes obstacles. Julius overcomes obstacles. If Kaison has ambition, then he either works hard or is disciplined (but not both). If Kaison is either determined or talented (but not both), then he is successful. Kaison sets targets. If Kaison has a goal, then he either dedicates time or stays focused (but not both). Julius stays focused. If someone faces challenges and seeks improvement, then they have a goal. Eliza does not achieve his goals. If Mami is either determined or talented (but not both), then he is successful. If someone is successful and overcomes obstacles, then they achieve their goals. If Kaison practices regularly, then he is both talented and stays confident. Kaison does not improve his skills. Kaison stays focused. Kaison either works hard or is talented (or both). If Kaison either dedicates time or works hard (but not both), then he improves his skills.",
    "nl2fol": {
      "Anyone who sets targets has a goal.": "∀x (sets_targets(x) → has_goal(x))",
      "Kaison does not achieve his goals.": "¬achieves_goals(Kaison)",
      "Kaison overcomes obstacles.": "overcomes_obstacles(Kaison)",
      "Julius overcomes obstacles.": "overcomes_obstacles(Julius)",
      "If Kaison has ambition, then he either works hard or is disciplined (but not both).": "has_ambition(Kaison) → (works_hard(Kaison) ⊕ is_disciplined(Kaison))",
      "If Kaison is either determined or talented (but not both), then he is successful.": "(determined(Kaison) ⊕ talented(Kaison)) → successful(Kaison)",
      "Kaison sets targets.": "sets_targets(Kaison)",
      "If Kaison has a goal, then he either dedicates time or stays focused (but not both).": "has_goal(Kaison) → (dedicates_time(Kaison) ⊕ stays_focused(Kaison))",
      "Julius stays focused.": "stays_focused(Julius)",
      "If someone faces challenges and seeks improvement, then they have a goal.": "∀x ((faces_challenges(x) ∧ seeks_improvement(x)) → has_goal(x))",
      "Eliza does not achieve his goals.": "¬achieves_goals(Eliza)",
      "If Mami is either determined or talented (but not both), then he is successful.": "(determined(Mami) ⊕ talented(Mami)) → successful(Mami)",
      "If someone is successful and overcomes obstacles, then they achieve their goals.": "∀x ((successful(x) ∧ overcomes_obstacles(x)) → achieves_goals(x))",
      "If Kaison practices regularly, then he is both talented and stays confident.": "practices_regularly(Kaison) → (talented(Kaison) ∧ stays_confident(Kaison))",
      "Kaison does not improve his skills.": "¬improves_skills(Kaison)",
      "Kaison stays focused.": "stays_focused(Kaison)",
      "Kaison either works hard or is talented (or both).": "works_hard(Kaison) ∨ talented(Kaison)",
      "If Kaison either dedicates time or works hard (but not both), then he improves his skills.": "(dedicates_time(Kaison) ⊕ works_hard(Kaison)) → improves_skills(Kaison)"
    },
    "conclusion_fol": "¬determined(Kaison)"
  },
  {
    "id": 186,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Khalani's clients do not seek support when needed.",
    "reasoning": "fact1: Khalani embraces change.\nrule: Khalani either finds calm or embraces change, but not both.\nconclusion: Khalani does not find calm.\n\nfact1: Khalani has a balanced diet.\nfact2: Khalani exercises regularly.\nrule: If someone has a balanced diet and exercises regularly, then they can get enough sleep.\nconclusion: Khalani gets enough sleep.\n\nfact1: Khalani has resilience.\nfact2: Khalani does not find calm.\nrule: If Khalani either has resilience or faces challenges, then she finds calm.\nconclusion: Khalani faces challenges.\n\nfact1: Khalani gets enough sleep.\nrule: For Khalani, either she gets enough sleep or she stays active, but it's not necessarily both.\nconclusion: Khalani does not stay active.\n\nfact1: Khalani does not stay active.\nrule: Khalani manages stress or stays active.\nconclusion: Khalani manages stress well.\n\nfact1: Khalani has good habits.\nfact2: Khalani manages stress well.\nrule: If Khalani practices self-care, then she either has good habits or manages stress well (but not both).\nconclusion: Khalani does not practice self-care.\n\nfact1: Khalani faces challenges.\nfact2: Khalani does not practice self-care.\nrule: If Khalani's clients face challenges, then they are either emotionally strong or practice self-care (but not both).\nconclusion: Khalani's clients are emotionally strong.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Khalani's clients do not seek support when needed. The correct option is: C.",
    "context": "Khalani manages stress or stays active. If Khalani either has relaxation techniques or meditates daily (but not both), then she gets enough sleep. Kelly has a balanced diet. If someone has a balanced diet and exercises regularly, then they can get enough sleep. For Khalani, either she gets enough sleep or she stays active, but it's not necessarily both. Khalani has a balanced diet. For Spark, either she gets enough sleep or she stays active, but it's not necessarily both. If Nikolai's clients face challenges, then they are either emotionally strong or practice self-care (but not both). If Khalani practices self-care, then she either has good habits or manages stress well (but not both). If Khalani's clients face challenges, then they are either emotionally strong or practice self-care (but not both). Khalani either finds calm or embraces change, but not both. Kelly has good habits. Khalani has resilience. Khalani has good habits. If Khalani's clients undergo therapy, then they either develop coping skills or are emotionally strong (or both). Spark exercises regularly. If Kelly practices self-care, then she either has good habits or manages stress well (but not both). If Khalani either has resilience or faces challenges, then she finds calm. Spark embraces change. If Khalani either prioritizes tasks or remains focused (but not both), then she manages stress well. Khalani embraces change. Khalani exercises regularly.",
    "nl2fol": {
      "Khalani manages stress or stays active.": "manages_stress(Khalani) ∨ stays_active(Khalani)",
      "If Khalani either has relaxation techniques or meditates daily (but not both), then she gets enough sleep.": "(has_relaxation_techniques(Khalani) ⊕ meditates_daily(Khalani)) → gets_enough_sleep(Khalani)",
      "Kelly has a balanced diet.": "has_balanced_diet(Kelly)",
      "If someone has a balanced diet and exercises regularly, then they can get enough sleep.": "∀x ((has_balanced_diet(x) ∧ exercises_regularly(x)) → gets_enough_sleep(x))",
      "For Khalani, either she gets enough sleep or she stays active, but it's not necessarily both.": "gets_enough_sleep(Khalani) ⊕ stays_active(Khalani)",
      "Khalani has a balanced diet.": "has_balanced_diet(Khalani)",
      "For Spark, either she gets enough sleep or she stays active, but it's not necessarily both.": "gets_enough_sleep(Spark) ⊕ stays_active(Spark)",
      "If Nikolai's clients face challenges, then they are either emotionally strong or practice self-care (but not both).": "faces_challenges(Nikolai) → (emotionally_strong(Nikolai) ⊕ practices_self_care(Nikolai))",
      "If Khalani practices self-care, then she either has good habits or manages stress well (but not both).": "practices_self_care(Khalani) → (has_good_habits(Khalani) ⊕ manages_stress(Khalani))",
      "If Khalani's clients face challenges, then they are either emotionally strong or practice self-care (but not both).": "faces_challenges(Khalani) → (emotionally_strong(Khalani) ⊕ practices_self_care(Khalani))",
      "Khalani either finds calm or embraces change, but not both.": "embraces_change(Khalani) ⊕ finds_calm(Khalani)",
      "Kelly has good habits.": "has_good_habits(Kelly)",
      "Khalani has resilience.": "has_resilience(Khalani)",
      "Khalani has good habits.": "has_good_habits(Khalani)",
      "If Khalani's clients undergo therapy, then they either develop coping skills or are emotionally strong (or both).": "undergoes_therapy(Khalani) → (develops_coping_skills(Khalani) ∨ emotionally_strong(Khalani))",
      "Spark exercises regularly.": "exercises_regularly(Spark)",
      "If Kelly practices self-care, then she either has good habits or manages stress well (but not both).": "practices_self_care(Kelly) → (has_good_habits(Kelly) ⊕ manages_stress(Kelly))",
      "If Khalani either has resilience or faces challenges, then she finds calm.": "(has_resilience(Khalani) ⊕ faces_challenges(Khalani)) → finds_calm(Khalani)",
      "Spark embraces change.": "embraces_change(Spark)",
      "If Khalani either prioritizes tasks or remains focused (but not both), then she manages stress well.": "(prioritizes_tasks(Khalani) ⊕ remains_focused(Khalani)) → manages_stress(Khalani)",
      "Khalani embraces change.": "embraces_change(Khalani)",
      "Khalani exercises regularly.": "exercises_regularly(Khalani)"
    },
    "conclusion_fol": "¬seek_support(Khalani)"
  },
  {
    "id": 187,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kayleigh is not mischievous.",
    "reasoning": "fact1: Kayleigh does not have camouflage.\nfact2: Kayleigh does not have a distinctive call.\nrule: If Kayleigh blends into the background, then she either has camouflage or a distinctive call.\nconclusion: Kayleigh does not blend into the background.\n\nfact1: Kayleigh does not blend into the background.\nrule: For Kayleigh, either she blends into the background or she is iconic, but not both.\nconclusion: Kayleigh is iconic.\n\nfact1: Kayleigh is iconic.\nrule: If Kayleigh is iconic, then she brings good luck and fascinates onlookers.\nconclusion: Kayleigh has good luck.\n\nfact1: Kayleigh has good luck.\nfact2: Kayleigh brings smiles.\nrule: If Kayleigh entertains crowds, then she either brings good luck or brings smiles, but not both.\nconclusion: Kayleigh does not entertain crowds.\n\nfact1: Kayleigh does not entertain crowds.\nrule: If Kayleigh is considerate or likes attention, then she will entertain crowds.\nconclusion: Kayleigh is not considerate.\n\nfact1: Kayleigh is not considerate.\nrule: Either Kayleigh is considerate or Kayleigh is mischievous, but not both.\nconclusion: Kayleigh is not mischievous.\n\nTherefore, it is false that Kayleigh is not mischievous. The correct option is: B.",
    "context": "Kayleigh does not have a distinctive call. Londyn does not have camouflage. Kayleigh does not have camouflage. If Maleah blends into the background, then she either has camouflage or a distinctive call. If Kayleigh either has a calm nature or has simple plumage (but not both), then she blends into the background. If Mikayla is iconic, then she brings good luck and fascinates onlookers. If Kayleigh blends into the background, then she either has camouflage or a distinctive call. If Kayleigh entertains crowds, then she either brings good luck or brings smiles, but not both. If Kayleigh is iconic, then she brings good luck and fascinates onlookers. For Kayleigh, either she blends into the background or she is iconic, but not both. Kayleigh brings smiles. Either Kayleigh is considerate or Kayleigh is mischievous, but not both. If Mikayla likes attention, then she has diverse skills and flies gracefully. If Kayleigh is considerate or likes attention, then she will entertain crowds.",
    "nl2fol": {
      "Kayleigh does not have a distinctive call.": "¬has_distinctive_call(Kayleigh)",
      "Londyn does not have camouflage.": "¬has_camouflage(Londyn)",
      "Kayleigh does not have camouflage.": "¬is_camouflage(Kayleigh)",
      "If Maleah blends into the background, then she either has camouflage or a distinctive call.": "blends_into_background(Maleah) → (is_camouflage(Maleah) ∨ has_distinctive_call(Maleah))",
      "If Kayleigh either has a calm nature or has simple plumage (but not both), then she blends into the background.": "(has_calm_nature(Kayleigh) ⊕ has_simple_plumage(Kayleigh)) → blends_into_background(Kayleigh)",
      "If Mikayla is iconic, then she brings good luck and fascinates onlookers.": "iconic(Mikayla) → (has_good_luck(Mikayla) ∧ fascinate_onlookers(Mikayla))",
      "If Kayleigh blends into the background, then she either has camouflage or a distinctive call.": "blends_into_background(Kayleigh) → (is_camouflage(Kayleigh) ∨ has_distinctive_call(Kayleigh))",
      "If Kayleigh entertains crowds, then she either brings good luck or brings smiles, but not both.": "entertains_crowds(Kayleigh) → (has_good_luck(Kayleigh) ⊕ brings_smiles(Kayleigh))",
      "If Kayleigh is iconic, then she brings good luck and fascinates onlookers.": "iconic(Kayleigh) → (has_good_luck(Kayleigh) ∧ fascinate_onlookers(Kayleigh))",
      "For Kayleigh, either she blends into the background or she is iconic, but not both.": "blends_into_background(Kayleigh) ⊕ iconic(Kayleigh)",
      "Kayleigh brings smiles.": "brings_smiles(Kayleigh)",
      "Either Kayleigh is considerate or Kayleigh is mischievous, but not both.": "considerate(Kayleigh) ⊕ mischievous(Kayleigh)",
      "If Mikayla likes attention, then she has diverse skills and flies gracefully.": "likes_attention(Mikayla) → (diverse_skills(Mikayla) ∧ fly_gracefully(Mikayla))",
      "If Kayleigh is considerate or likes attention, then she will entertain crowds.": "(considerate(Kayleigh) ∨ likes_attention(Kayleigh)) → entertains_crowds(Kayleigh)"
    },
    "conclusion_fol": "¬mischievous(Kayleigh)"
  },
  {
    "id": 188,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Haisley is uninspired.",
    "reasoning": "fact1: Haisley does not think outside the box.\nfact2: Haisley does not drive progress.\nrule: For all humans, if they either take risks or think outside the box, then they drive progress.\nconclusion: Haisley does not take risks.\n\nfact1: Haisley does not have experience.\nfact2: Haisley does not take risks.\nrule: If Haisley is innovative, then she either has experience or takes risks, but not both.\nconclusion: Haisley is not innovative.\n\nfact1: Haisley follows trends.\nrule: A person either follows trends or has exquisite taste, but not necessarily both.\nconclusion: Haisley does not have exquisite taste.\n\nfact1: Haisley does not have exquisite taste.\nfact2: Haisley is not highly skilled.\nrule: Anyone who produces quality work has exquisite taste or is highly skilled (or both).\nconclusion: Haisley does not produce quality work.\n\nfact1: Haisley is not attentive to detail.\nfact2: Haisley does not produce quality work.\nrule: Anyone who is a diligent worker or attentive to detail produces quality work.\nconclusion: Haisley is not a diligent worker.\n\nfact1: Haisley is not a diligent worker.\nrule: Haisley is either passionate or a diligent worker (or both).\nconclusion: Haisley is passionate.\n\nfact1: Haisley is passionate.\nfact2: Haisley is not innovative.\nrule: If Haisley is passionate, then she is either creative or innovative (or both).\nconclusion: Haisley is creative.\n\nfact1: Haisley is creative.\nrule: Haisley is either creative or uninspired, but not both.\nconclusion: Haisley is uninspired.\n\nTherefore, it is false that Haisley is uninspired. The correct option is: B.",
    "context": "Anyone who produces quality work has exquisite taste or is highly skilled (or both). For all humans, if they either take risks or think outside the box, then they drive progress. If Haisley is innovative, then she either has experience or takes risks, but not both. Anyone who sets high standards and meets deadlines is a diligent worker. Bubbies does not think outside the box. Haisley is either a conservative designer or creative. Haisley is either creative or uninspired, but not both. Haisley is not attentive to detail. If Bubbies is passionate, then she is either creative or innovative (or both). Anyone who loves art is passionate. If Mabel is innovative, then she either has experience or takes risks, but not both. Haisley does not drive progress. Ermias follows trends. Mabel is either passionate or a diligent worker (or both). Anyone who is a diligent worker or attentive to detail produces quality work. If Haisley is passionate, then she is either creative or innovative (or both). Haisley is not highly skilled. A person either follows trends or has exquisite taste, but not necessarily both. Haisley follows trends. Ermias does not have experience. If Haisley admires history, then she has exquisite taste and values craftsmanship. Haisley is either passionate or a diligent worker (or both). Haisley does not think outside the box. Haisley does not have experience.",
    "nl2fol": {
      "Anyone who produces quality work has exquisite taste or is highly skilled (or both).": "∀x (produces_quality_work(x) → (has_exquisite_taste(x) ∨ is_highly_skilled(x)))",
      "For all humans, if they either take risks or think outside the box, then they drive progress.": "∀x ((takes_risks(x) ⊕ thinks_outside_box(x)) → drives_progress(x))",
      "If Haisley is innovative, then she either has experience or takes risks, but not both.": "innovative(Haisley) → (has_experience(Haisley) ⊕ takes_risks(Haisley))",
      "Anyone who sets high standards and meets deadlines is a diligent worker.": "∀x ((sets_high_standards(x) ∧ meets_deadlines(x)) → diligent_worker(x))",
      "Bubbies does not think outside the box.": "¬thinks_outside_box(Bubbies)",
      "Haisley is either a conservative designer or creative.": "conservative_designer(Haisley) ∨ creative(Haisley)",
      "Haisley is either creative or uninspired, but not both.": "creative(Haisley) ⊕ uninspired(Haisley)",
      "Haisley is not attentive to detail.": "¬attentive_detail(Haisley)",
      "If Bubbies is passionate, then she is either creative or innovative (or both).": "passionate(Bubbies) → (creative(Bubbies) ∨ innovative(Bubbies))",
      "Anyone who loves art is passionate.": "∀x (loves_art(x) → passionate(x))",
      "If Mabel is innovative, then she either has experience or takes risks, but not both.": "innovative(Mabel) → (has_experience(Mabel) ⊕ takes_risks(Mabel))",
      "Haisley does not drive progress.": "¬drives_progress(Haisley)",
      "Ermias follows trends.": "follows_trends(Ermias)",
      "Mabel is either passionate or a diligent worker (or both).": "passionate(Mabel) ∨ diligent_worker(Mabel)",
      "Anyone who is a diligent worker or attentive to detail produces quality work.": "∀x ((diligent_worker(x) ∨ attentive_detail(x)) → produces_quality_work(x))",
      "If Haisley is passionate, then she is either creative or innovative (or both).": "passionate(Haisley) → (creative(Haisley) ∨ innovative(Haisley))",
      "Haisley is not highly skilled.": "¬is_highly_skilled(Haisley)",
      "A person either follows trends or has exquisite taste, but not necessarily both.": "∀x (follows_trends(x) ⊕ has_exquisite_taste(x))",
      "Haisley follows trends.": "follows_trends(Haisley)",
      "Ermias does not have experience.": "¬has_experience(Ermias)",
      "If Haisley admires history, then she has exquisite taste and values craftsmanship.": "admires_history(Haisley) → (has_exquisite_taste(Haisley) ∧ values_craftsmanship(Haisley))",
      "Haisley is either passionate or a diligent worker (or both).": "passionate(Haisley) ∨ diligent_worker(Haisley)",
      "Haisley does not think outside the box.": "¬thinks_outside_box(Haisley)",
      "Haisley does not have experience.": "¬has_experience(Haisley)"
    },
    "conclusion_fol": "uninspired(Haisley)"
  },
  {
    "id": 189,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Connor makes groundbreaking discoveries, or he specializes in theropod dinosaurs and is recognized as a leading expert.",
    "reasoning": "fact1: Connor does not study fossils.\nrule: Every paleontologist either has extensive experience or studies fossils.\nconclusion: Connor has extensive experience.\n\nfact1: Connor leads research teams.\nrule: Connor will mentor students if he leads research teams.\nconclusion: Connor mentors students.\n\nfact1: Connor collaborates with peers.\nfact2: Connor mentors students.\nrule: If Connor collaborates with peers, then he teaches at a university and mentors students.\nconclusion: Connor teaches at a university.\n\nfact1: Connor has extensive experience.\nfact2: Connor teaches at a university.\nrule: If Connor has extensive experience, then he either teaches at a university or publishes academic papers, but not both.\nconclusion: Connor does not publish academic papers.\n\nfact1: Connor does not publish academic papers.\nrule: Connor publishes academic papers or is recognized as a leading expert.\nconclusion: Connor is recognized as a leading expert.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Connor makes groundbreaking discoveries, or he specializes in theropod dinosaurs and is recognized as a leading expert. The correct option is: C.",
    "context": "Connor leads research teams. Connor collaborates with peers. If Connor collaborates with peers, then he teaches at a university and mentors students. Connor publishes academic papers or is recognized as a leading expert. If Connor has extensive experience, then he either teaches at a university or publishes academic papers, but not both. Connor does not study fossils. Connor will mentor students if he leads research teams. Connor specializes in theropod dinosaurs if he focuses on ancient species. Every paleontologist either has extensive experience or studies fossils.",
    "nl2fol": {
      "Connor leads research teams.": "lead_research_teams(Connor)",
      "Connor collaborates with peers.": "collaborate_with_peers(Connor)",
      "If Connor collaborates with peers, then he teaches at a university and mentors students.": "collaborate_with_peers(Connor) → (teach_at_university(Connor) ∧ mentor_students(Connor))",
      "Connor publishes academic papers or is recognized as a leading expert.": "publish_academic_papers(Connor) ∨ recognized_as_leading_expert(Connor)",
      "If Connor has extensive experience, then he either teaches at a university or publishes academic papers, but not both.": "has_extensive_experience(Connor) → (teach_at_university(Connor) ⊕ publish_academic_papers(Connor))",
      "Connor does not study fossils.": "¬study_fossils(Connor)",
      "Connor will mentor students if he leads research teams.": "lead_research_teams(Connor) → mentor_students(Connor)",
      "Connor specializes in theropod dinosaurs if he focuses on ancient species.": "focus_on_ancient_species(Connor) → specialized_in_theropod_dinosaurs(Connor)",
      "Every paleontologist either has extensive experience or studies fossils.": "∀x (has_extensive_experience(x) ∨ study_fossils(x))"
    },
    "conclusion_fol": "make_groundbreaking_discoveries(Connor) ∨ (specialized_in_theropod_dinosaurs(Connor) ∧ recognized_as_leading_expert(Connor))"
  },
  {
    "id": 190,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aiden inspires others.",
    "reasoning": "fact1: Aiden volunteers frequently.\nfact2: Aiden cares for others.\nrule: If someone volunteers frequently and cares for others, then they are passionate about social causes.\nconclusion: Aiden is passionate about social causes.\n\nfact1: Aiden does not speak publicly.\nfact2: Aiden takes leadership roles.\nrule: If Aiden either speaks publicly or takes leadership roles (but not both), then he has confidence.\nconclusion: Aiden is confident.\n\nfact1: Aiden blends into the crowd.\nrule: Aiden either blends into the crowd or commands attention, but not both.\nconclusion: Aiden does not command attention.\n\nfact1: Aiden is confident.\nrule: If Aiden is confident, then he is outgoing and has emotional depth.\nconclusion: Aiden is outgoing.\n\nfact1: Aiden is outgoing.\nfact2: Aiden is passionate about social causes.\nrule: If Aiden is outgoing, then he has public influence and is passionate about social causes.\nconclusion: Aiden has public influence.\n\nfact1: Aiden has public influence.\nfact2: Aiden is an inspiring leader.\nrule: If Aiden has public influence, then he is either an inspiring leader or charismatic, but not both.\nconclusion: Aiden is not charismatic.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Aiden inspires others. The correct option is: C.",
    "context": "Aiden is an inspiring leader. Major volunteers frequently. If Aiden either speaks publicly or takes leadership roles (but not both), then he has confidence. If Aiden is confident, then he is outgoing and has emotional depth. Aiden does not speak publicly. If Aiden speaks well and values integrity, then he has public influence. If Jose either speaks publicly or takes leadership roles (but not both), then he has confidence. Jose takes leadership roles. Aiden takes leadership roles. If Aiden is outgoing, then he has public influence and is passionate about social causes. Aiden either blends into the crowd or commands attention, but not both. Aiden blends into the crowd. Simon is an inspiring leader. If Jose is confident, then he is outgoing and has emotional depth. Aiden cares for others. Major either blends into the crowd or commands attention, but not both. Aiden volunteers frequently. If Aiden has public influence, then he is either an inspiring leader or charismatic, but not both. If someone volunteers frequently and cares for others, then they are passionate about social causes. If Major is outgoing, then he has public influence and is passionate about social causes. Jose does not speak publicly.",
    "nl2fol": {
      "Aiden is an inspiring leader.": "is_inspiring_leader(Aiden)",
      "Major volunteers frequently.": "volunteers_frequently(Major)",
      "If Aiden either speaks publicly or takes leadership roles (but not both), then he has confidence.": "(speaks_publicly(Aiden) ⊕ takes_leadership_roles(Aiden)) → has_confidence(Aiden)",
      "If Aiden is confident, then he is outgoing and has emotional depth.": "has_confidence(Aiden) → (outgoing(Aiden) ∧ has_emotional_depth(Aiden))",
      "Aiden does not speak publicly.": "¬speaks_publicly(Aiden)",
      "If Aiden speaks well and values integrity, then he has public influence.": "(speaks_well(Aiden) ∧ values_integrity(Aiden)) → has_public_influence(Aiden)",
      "If Jose either speaks publicly or takes leadership roles (but not both), then he has confidence.": "(speaks_publicly(Jose) ⊕ takes_leadership_roles(Jose)) → has_confidence(Jose)",
      "Jose takes leadership roles.": "takes_leadership_roles(Jose)",
      "Aiden takes leadership roles.": "takes_leadership_roles(Aiden)",
      "If Aiden is outgoing, then he has public influence and is passionate about social causes.": "outgoing(Aiden) → (has_public_influence(Aiden) ∧ passionate_about_social_causes(Aiden))",
      "Aiden either blends into the crowd or commands attention, but not both.": "blend_into_crowd(Aiden) ⊕ command_attention(Aiden)",
      "Aiden blends into the crowd.": "blend_into_crowd(Aiden)",
      "Simon is an inspiring leader.": "inspiring_leader(Simon)",
      "If Jose is confident, then he is outgoing and has emotional depth.": "has_confidence(Jose) → (outgoing(Jose) ∧ has_emotional_depth(Jose))",
      "Aiden cares for others.": "cares_for_others(Aiden)",
      "Major either blends into the crowd or commands attention, but not both.": "blend_into_crowd(Major) ⊕ command_attention(Major)",
      "Aiden volunteers frequently.": "volunteers_frequently(Aiden)",
      "If Aiden has public influence, then he is either an inspiring leader or charismatic, but not both.": "has_public_influence(Aiden) → (is_inspiring_leader(Aiden) ⊕ charismatic(Aiden))",
      "If someone volunteers frequently and cares for others, then they are passionate about social causes.": "∀x ((volunteers_frequently(x) ∧ cares_for_others(x)) → passionate_about_social_causes(x))",
      "If Major is outgoing, then he has public influence and is passionate about social causes.": "outgoing(Major) → (has_public_influence(Major) ∧ passionate_about_social_causes(Major))",
      "Jose does not speak publicly.": "¬speaks_publicly(Jose)"
    },
    "conclusion_fol": "inspire_others(Aiden)"
  },
  {
    "id": 191,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Queenie will thrive in the host.",
    "reasoning": "fact1: Queenie dominates her environment.\nrule: If a parasite dominates its environment, then it reproduces successfully.\nconclusion: Queenie reproduces successfully.\n\nfact1: Queenie reproduces successfully.\nrule: Queenie either reproduces successfully or produces enzymes, but not both.\nconclusion: Queenie does not produce enzymes.\n\nfact1: Queenie has flagella.\nfact2: Queenie competes for resources.\nrule: If Queenie has flagella and competes for resources, then she can regulate nutrient flow.\nconclusion: Queenie regulates nutrient flow.\n\nfact1: Queenie forms symbiotic relationships with her host.\nrule: Queenie either forms symbiotic relationships with her host or evades the host's defenses, but not both.\nconclusion: Queenie does not evade the host's defenses.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Queenie will thrive in the host. The correct option is: C.",
    "context": "If a parasite adapts to change and finds optimal nutrients, then it can reproduce successfully. Queenie has flagella. Queenie either reproduces successfully or produces enzymes, but not both. Queenie competes for resources. If Queenie colonizes a host, then she either absorbs nutrients or regulates nutrient flow, but not both. Queenie dominates her environment. Queenie either forms symbiotic relationships with her host or evades the host's defenses, but not both. Queenie forms symbiotic relationships with her host. If Queenie has flagella and competes for resources, then she can regulate nutrient flow. Every parasite that inhabits an intestine either produces enzymes or feeds on nutrients. If a parasite dominates its environment, then it reproduces successfully.",
    "nl2fol": {
      "If a parasite adapts to change and finds optimal nutrients, then it can reproduce successfully.": "∀x ((adapts_to_change(x) ∧ finds_optimal_nutrients(x)) → reproduce_successfully(x))",
      "Queenie has flagella.": "has_flagella(Queenie)",
      "Queenie either reproduces successfully or produces enzymes, but not both.": "reproduce_successfully(Queenie) ⊕ produce_enzymes(Queenie)",
      "Queenie competes for resources.": "competes_for_resources(Queenie)",
      "If Queenie colonizes a host, then she either absorbs nutrients or regulates nutrient flow, but not both.": "colonize_host(Queenie) → (absorb_nutrients(Queenie) ⊕ regulate_nutrient_flow(Queenie))",
      "Queenie dominates her environment.": "dominate_environment(Queenie)",
      "Queenie either forms symbiotic relationships with her host or evades the host's defenses, but not both.": "form_symbiotic_relationships(Queenie) ⊕ evade_host_defenses(Queenie)",
      "Queenie forms symbiotic relationships with her host.": "form_symbiotic_relationships(Queenie)",
      "If Queenie has flagella and competes for resources, then she can regulate nutrient flow.": "(has_flagella(Queenie) ∧ competes_for_resources(Queenie)) → regulate_nutrient_flow(Queenie)",
      "Every parasite that inhabits an intestine either produces enzymes or feeds on nutrients.": "∀x (inhabit_intestine(x) → (produce_enzymes(x) ∨ feed_on_nutrients(x)))",
      "If a parasite dominates its environment, then it reproduces successfully.": "∀x (dominate_environment(x) → reproduce_successfully(x))"
    },
    "conclusion_fol": "thrive_in_host(Queenie)"
  },
  {
    "id": 192,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Puppy is charismatic.",
    "reasoning": "fact1: Puppy is excitable.\nrule: If Puppy is excitable, then she has a high-pitched bark.\nconclusion: Puppy has a high-pitched bark.\n\nfact1: Puppy has a high-pitched bark.\nfact2: Puppy is large in size.\nrule: If Puppy has a high-pitched bark, then she is either rare due to a unique physical trait or large in size, but not both.\nconclusion: Puppy does not have a unique physical trait.\n\nfact1: Puppy turns heads.\nfact2: Puppy does not captivate audiences.\nrule: Every dog that turns heads either has distinct features or captivates audiences (or both).\nconclusion: Puppy has distinct features.\n\nfact1: Puppy has distinct features.\nfact2: Puppy does not have a unique physical trait.\nrule: If Puppy either has distinct features or a unique physical trait (but not both), then she is a rare breed.\nconclusion: Puppy is a rare breed.\n\nfact1: Puppy barks in harmony.\nrule: If Puppy barks in harmony, then she has a musical bark.\nconclusion: Puppy has a musical bark.\n\nfact1: Puppy is a rare breed.\nrule: If Puppy is a rare breed, then she has campanulate ears.\nconclusion: Puppy has campanulate ears.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Puppy is charismatic. The correct option is: C.",
    "context": "If Julie is a rare breed, then she has campanulate ears. If Puppy has a small size or a distinct sound, then she is a rare breed. Puppy is excitable. If Puppy has a high-pitched bark, then she is either rare due to a unique physical trait or large in size, but not both. Daniela turns heads. If Puppy has a good pitch or vocalizes frequently, then she can produce a musical bark. If Puppy is excitable, then she has a high-pitched bark. All dogs that either have a fluffy coat or a curly tail (but not both) have distinct features. Puppy does not captivate audiences. If Puppy either has distinct features or a unique physical trait (but not both), then she is a rare breed. If Abdiel has a high-pitched bark, then she is either rare due to a unique physical trait or large in size, but not both. If Puppy has a distinct sound, then she either has campanulate ears or wins awards (or both). If Puppy is a rare breed, then she has campanulate ears. If Julie barks in harmony, then she has a musical bark. Every dog that turns heads either has distinct features or captivates audiences (or both). If Daniela has either a musical bark or campanulate ears (but not both), then she is charismatic. Puppy turns heads. Puppy is large in size. If Julie is excitable, then she has a high-pitched bark. If Puppy barks in harmony, then she has a musical bark. Daniela is large in size. Puppy barks in harmony.",
    "nl2fol": {
      "If Julie is a rare breed, then she has campanulate ears.": "rare_breed(Julie) → campanulate_ears(Julie)",
      "If Puppy has a small size or a distinct sound, then she is a rare breed.": "(has_small_size(Puppy) ∨ has_distinct_sound(Puppy)) → rare_breed(Puppy)",
      "Puppy is excitable.": "is_excitable(Puppy)",
      "If Puppy has a high-pitched bark, then she is either rare due to a unique physical trait or large in size, but not both.": "has_high_pitched_bark(Puppy) → (unique_physical_trait(Puppy) ⊕ has_large_size(Puppy))",
      "Daniela turns heads.": "turns_heads(Daniela)",
      "If Puppy has a good pitch or vocalizes frequently, then she can produce a musical bark.": "(has_good_pitch(Puppy) ∨ vocalizes_frequently(Puppy)) → musical_bark(Puppy)",
      "If Puppy is excitable, then she has a high-pitched bark.": "is_excitable(Puppy) → has_high_pitched_bark(Puppy)",
      "All dogs that either have a fluffy coat or a curly tail (but not both) have distinct features.": "∀x ((has_fluffy_coat(x) ⊕ has_curly_tail(x)) → has_distinct_features(x))",
      "Puppy does not captivate audiences.": "¬captivates_audiences(Puppy)",
      "If Puppy either has distinct features or a unique physical trait (but not both), then she is a rare breed.": "(has_distinct_features(Puppy) ⊕ unique_physical_trait(Puppy)) → rare_breed(Puppy)",
      "If Abdiel has a high-pitched bark, then she is either rare due to a unique physical trait or large in size, but not both.": "has_high_pitched_bark(Abdiel) → (unique_physical_trait(Abdiel) ⊕ has_large_size(Abdiel))",
      "If Puppy has a distinct sound, then she either has campanulate ears or wins awards (or both).": "has_distinct_sound(Puppy) → (wins_awards(Puppy) ∨ campanulate_ears(Puppy))",
      "If Puppy is a rare breed, then she has campanulate ears.": "rare_breed(Puppy) → campanulate_ears(Puppy)",
      "If Julie barks in harmony, then she has a musical bark.": "barks_in_harmony(Julie) → musical_bark(Julie)",
      "Every dog that turns heads either has distinct features or captivates audiences (or both).": "∀x (turns_heads(x) → (has_distinct_features(x) ∨ captivates_audiences(x)))",
      "If Daniela has either a musical bark or campanulate ears (but not both), then she is charismatic.": "(musical_bark(Daniela) ⊕ campanulate_ears(Daniela)) → charismatic(Daniela)",
      "Puppy turns heads.": "turns_heads(Puppy)",
      "Puppy is large in size.": "has_large_size(Puppy)",
      "If Julie is excitable, then she has a high-pitched bark.": "is_excitable(Julie) → has_high_pitched_bark(Julie)",
      "If Puppy barks in harmony, then she has a musical bark.": "barks_in_harmony(Puppy) → musical_bark(Puppy)",
      "Daniela is large in size.": "has_large_size(Daniela)",
      "Puppy barks in harmony.": "barks_in_harmony(Puppy)"
    },
    "conclusion_fol": "charismatic(Puppy)"
  },
  {
    "id": 193,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ashley does not play a protective role.",
    "reasoning": "fact1: Ashley has the ability to transform.\nrule: Ashley either has the ability to transform or control elements, but not both.\nconclusion: Ashley does not control elements.\n\nfact1: Ashley understands nature.\nrule: Any mythical creature that possesses wisdom or understands nature can have ancient knowledge.\nconclusion: Ashley has ancient knowledge.\n\nfact1: Ashley has ancient knowledge.\nrule: Ashley either has ancient knowledge or unique physical features, but the two are not necessarily related.\nconclusion: Ashley, the dragon, does not have unique physical features.\n\nfact1: Ashley lives in harmony with other beings.\nfact2: Ashley does not communicate telepathically.\nrule: If Ashley lives in harmony with other beings, then she either communicates telepathically or reads minds (or both).\nconclusion: Ashley reads minds.\n\nfact1: Ashley does not control elements.\nfact2: Ashley reads minds.\nrule: Every mythical creature that either controls elements or reads minds (but not both) possesses special powers.\nconclusion: Ashley possesses special powers.\n\nfact1: Ashley, the dragon, does not have unique physical features.\nfact2: Ashley possesses special powers.\nrule: If Ashley, the dragon, has unique physical features or possesses special powers, then she plays a protective role.\nconclusion: Ashley plays a protective role.\n\nTherefore, it is false that Ashley does not play a protective role. The correct option is: B.",
    "context": "Any mythical creature that possesses wisdom or understands nature can have ancient knowledge. Ashley understands nature. Every mythical creature that either controls elements or reads minds (but not both) possesses special powers. Ashley either has the ability to transform or control elements, but not both. Anne does not communicate telepathically. If Ashley, the dragon, has unique physical features or possesses special powers, then she plays a protective role. All mythical creatures with mystical significance possess special powers and are revered. Ashley either has ancient knowledge or unique physical features, but the two are not necessarily related. If Shorty, the dragon, has unique physical features or possesses special powers, then she plays a protective role. Ashley lives in harmony with other beings. If Ashley is legendary, then she either has telekinesis or reads minds (but not both). Ashley does not communicate telepathically. Anne either has ancient knowledge or unique physical features, but the two are not necessarily related. Ashley has the ability to transform. If Ashley lives in harmony with other beings, then she either communicates telepathically or reads minds (or both). If Ashley is a revered mythical creature, then she is either knowledgeable about ancient lore or has mystical abilities, but not both. Every mythical creature that holds spiritual significance either holds mystical powers or has unique physical features (or both).",
    "nl2fol": {
      "Any mythical creature that possesses wisdom or understands nature can have ancient knowledge.": "∀x ((possesses_wisdom(x) ∨ understands_nature(x)) → has_ancient_knowledge(x))",
      "Ashley understands nature.": "understands_nature(Ashley)",
      "Every mythical creature that either controls elements or reads minds (but not both) possesses special powers.": "∀x ((controls_elements(x) ⊕ reads_minds(x)) → possesses_special_powers(x))",
      "Ashley either has the ability to transform or control elements, but not both.": "can_transform(Ashley) ⊕ controls_elements(Ashley)",
      "Anne does not communicate telepathically.": "¬communicate_telepathically(Anne)",
      "If Ashley, the dragon, has unique physical features or possesses special powers, then she plays a protective role.": "(has_unique_physical_features(Ashley) ∨ possesses_special_powers(Ashley)) → plays_a_protective_role(Ashley)",
      "All mythical creatures with mystical significance possess special powers and are revered.": "∀x (has_mystical_significance(x) → (possesses_special_powers(x) ∧ is_revered(x)))",
      "Ashley either has ancient knowledge or unique physical features, but the two are not necessarily related.": "has_ancient_knowledge(Ashley) ⊕ has_unique_physical_features(Ashley)",
      "If Shorty, the dragon, has unique physical features or possesses special powers, then she plays a protective role.": "(has_unique_physical_features(Shorty) ∨ possesses_special_powers(Shorty)) → plays_a_protective_role(Shorty)",
      "Ashley lives in harmony with other beings.": "live_in_harmony(Ashley)",
      "If Ashley is legendary, then she either has telekinesis or reads minds (but not both).": "is_legendary(Ashley) → (has_telekinesis(Ashley) ⊕ reads_minds(Ashley))",
      "Ashley does not communicate telepathically.": "¬communicate_telepathically(Ashley)",
      "Anne either has ancient knowledge or unique physical features, but the two are not necessarily related.": "has_ancient_knowledge(Anne) ⊕ has_unique_physical_features(Anne)",
      "Ashley has the ability to transform.": "can_transform(Ashley)",
      "If Ashley lives in harmony with other beings, then she either communicates telepathically or reads minds (or both).": "live_in_harmony(Ashley) → (communicate_telepathically(Ashley) ∨ reads_minds(Ashley))",
      "If Ashley is a revered mythical creature, then she is either knowledgeable about ancient lore or has mystical abilities, but not both.": "is_revered(Ashley) → (has_mystical_abilities(Ashley) ⊕ has_ancient_knowledge(Ashley))",
      "Every mythical creature that holds spiritual significance either holds mystical powers or has unique physical features (or both).": "∀x (has_spiritual_significance(x) → (holds_mystical_powers(x) ∨ has_unique_physical_features(x)))"
    },
    "conclusion_fol": "¬plays_a_protective_role(Ashley)"
  },
  {
    "id": 194,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Payton is not passionate about research.",
    "reasoning": "fact1: Payton sets goals.\nrule: If Payton sets goals, then she will overcome challenges and study hard.\nconclusion: Payton studies hard.\n\nfact1: Payton studies hard.\nfact2: Payton thinks creatively.\nrule: If someone studies hard and thinks creatively, then they can make a new discovery.\nconclusion: Payton makes a new discovery.\n\nfact1: Payton makes a new discovery.\nrule: If Payton makes a new discovery, then she receives recognition and earns a prestigious grant.\nconclusion: Payton earns a prestigious grant.\n\nfact1: Payton earns a prestigious grant.\nfact2: Payton does not publish research.\nrule: Everyone who earns a prestigious grant either works in their field or publishes research.\nconclusion: Payton works in her field.\n\nfact1: Payton works in her field.\nfact2: Payton conducts experiments.\nrule: Anyone who works in their field or conducts experiments has practical experience.\nconclusion: Payton has practical experience.\n\nfact1: Payton has practical experience.\nrule: For Payton, either she has practical experience or she is knowledgeable about marine life, but these are not necessarily related.\nconclusion: Payton is not knowledgeable about marine life.\n\nfact1: Payton is not knowledgeable about marine life.\nrule: Payton is knowledgeable about marine life or passionate about research (or both).\nconclusion: Payton is passionate about research.\n\nTherefore, it is false that Payton is not passionate about research. The correct option is: B.",
    "context": "Payton conducts experiments. Anyone who works in their field or conducts experiments has practical experience. For Payton, either she has practical experience or she is knowledgeable about marine life, but these are not necessarily related. If someone studies hard and thinks creatively, then they can make a new discovery. Payton thinks creatively. Everyone who earns a prestigious grant either works in their field or publishes research. Payton sets goals. Payton is knowledgeable about marine life or passionate about research (or both). If Payton sets goals, then she will overcome challenges and study hard. If Eithan makes a new discovery, then she receives recognition and earns a prestigious grant. Rosalee is knowledgeable about marine life or passionate about research (or both). Payton does not publish research. If Payton either reads scientific articles or explores the ocean (but not both), then she is knowledgeable about marine life. If Payton makes a new discovery, then she receives recognition and earns a prestigious grant. For anyone, having a willingness to get hands dirty and learning from mistakes leads to having practical experience. Rosalee thinks creatively.",
    "nl2fol": {
      "Payton conducts experiments.": "conducts_experiments(Payton)",
      "Anyone who works in their field or conducts experiments has practical experience.": "∀x ((works_in_field(x) ∨ conducts_experiments(x)) → has_practical_experience(x))",
      "For Payton, either she has practical experience or she is knowledgeable about marine life, but these are not necessarily related.": "has_practical_experience(Payton) ⊕ knowledgeable_about_marine_life(Payton)",
      "If someone studies hard and thinks creatively, then they can make a new discovery.": "∀x ((studies_hard(x) ∧ thinks_creatively(x)) → makes_new_discovery(x))",
      "Payton thinks creatively.": "thinks_creatively(Payton)",
      "Everyone who earns a prestigious grant either works in their field or publishes research.": "∀x (earns_prestigious_grant(x) → (works_in_field(x) ∨ publishes_research(x)))",
      "Payton sets goals.": "set_goals(Payton)",
      "Payton is knowledgeable about marine life or passionate about research (or both).": "knowledgeable_about_marine_life(Payton) ∨ passionate_about_research(Payton)",
      "If Payton sets goals, then she will overcome challenges and study hard.": "set_goals(Payton) → (overcome_challenges(Payton) ∧ studies_hard(Payton))",
      "If Eithan makes a new discovery, then she receives recognition and earns a prestigious grant.": "makes_new_discovery(Eithan) → (receives_recognition(Eithan) ∧ earns_prestigious_grant(Eithan))",
      "Rosalee is knowledgeable about marine life or passionate about research (or both).": "knowledgeable_about_marine_life(Rosalee) ∨ passionate_about_research(Rosalee)",
      "Payton does not publish research.": "¬publishes_research(Payton)",
      "If Payton either reads scientific articles or explores the ocean (but not both), then she is knowledgeable about marine life.": "(reads_scientific_articles(Payton) ⊕ explores_ocean(Payton)) → knowledgeable_about_marine_life(Payton)",
      "If Payton makes a new discovery, then she receives recognition and earns a prestigious grant.": "makes_new_discovery(Payton) → (receives_recognition(Payton) ∧ earns_prestigious_grant(Payton))",
      "For anyone, having a willingness to get hands dirty and learning from mistakes leads to having practical experience.": "∀x ((gets_hands_dirty(x) ∧ learns_from_mistakes(x)) → has_practical_experience(x))",
      "Rosalee thinks creatively.": "thinks_creatively(Rosalee)"
    },
    "conclusion_fol": "¬passionate_about_research(Payton)"
  },
  {
    "id": 195,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jaxton provides therapy comfort.",
    "reasoning": "fact1: Jaxton does not gain strength.\nrule: Jaxton gains strength or increases speed.\nconclusion: Jaxton increases speed.\n\nfact1: Jaxton does not build endurance.\nfact2: Jaxton increases speed.\nrule: If Jaxton either builds endurance or increases speed (but not both), then he trains regularly.\nconclusion: Jaxton trains regularly.\n\nfact1: Jaxton does not have social interaction.\nrule: Every horse either gets proper exercise or has social interaction, but these are not mutually exclusive.\nconclusion: Jaxton gets proper exercise.\n\nfact1: Jaxton gets proper exercise.\nrule: Every horse either gets proper exercise or receives proper care, but these are not mutually exclusive.\nconclusion: Jaxton does not receive proper care.\n\nfact1: Jaxton trains regularly.\nfact2: Jaxton stays healthy.\nrule: If a horse trains regularly and stays healthy, then it can compete successfully.\nconclusion: Jaxton competes successfully.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Jaxton provides therapy comfort. The correct option is: C.",
    "context": "Taylor does not have social interaction. Jaxton does not build endurance. If Taylor either builds endurance or increases speed (but not both), then he trains regularly. If Jaxton either builds endurance or increases speed (but not both), then he trains regularly. Taylor stays healthy. Every horse either gets proper exercise or receives proper care, but these are not mutually exclusive. If Derek receives proper care, then he can either compete successfully or provide therapy comfort, but not both. If a horse trains regularly and stays healthy, then it can compete successfully. Jaxton either performs tasks or competes successfully. Abigail gains strength or increases speed. Jaxton gains strength or increases speed. Jaxton does not have social interaction. Jaxton stays healthy. Every horse either gets proper exercise or has social interaction, but these are not mutually exclusive. Jaxton does not gain strength. If Jaxton either follows a routine or has discipline (but not both), then he trains regularly.",
    "nl2fol": {
      "Taylor does not have social interaction.": "¬has_social_interaction(Taylor)",
      "Jaxton does not build endurance.": "¬builds_endurance(Jaxton)",
      "If Taylor either builds endurance or increases speed (but not both), then he trains regularly.": "(builds_endurance(Taylor) ⊕ increases_speed(Taylor)) → trains_regularly(Taylor)",
      "If Jaxton either builds endurance or increases speed (but not both), then he trains regularly.": "(builds_endurance(Jaxton) ⊕ increases_speed(Jaxton)) → trains_regularly(Jaxton)",
      "Taylor stays healthy.": "stays_healthy(Taylor)",
      "Every horse either gets proper exercise or receives proper care, but these are not mutually exclusive.": "∀x (gets_proper_exercise(x) ⊕ receive_proper_care(x))",
      "If Derek receives proper care, then he can either compete successfully or provide therapy comfort, but not both.": "receive_proper_care(Derek) → (compete_successfully(Derek) ⊕ provide_therapy_comfort(Derek))",
      "If a horse trains regularly and stays healthy, then it can compete successfully.": "∀x ((trains_regularly(x) ∧ stays_healthy(x)) → compete_successfully(x))",
      "Jaxton either performs tasks or competes successfully.": "performs_tasks(Jaxton) ∨ compete_successfully(Jaxton)",
      "Abigail gains strength or increases speed.": "gains_strength(Abigail) ∨ increases_speed(Abigail)",
      "Jaxton gains strength or increases speed.": "gains_strength(Jaxton) ∨ increases_speed(Jaxton)",
      "Jaxton does not have social interaction.": "¬has_social_interaction(Jaxton)",
      "Jaxton stays healthy.": "stays_healthy(Jaxton)",
      "Every horse either gets proper exercise or has social interaction, but these are not mutually exclusive.": "∀x (has_social_interaction(x) ⊕ gets_proper_exercise(x))",
      "Jaxton does not gain strength.": "¬gains_strength(Jaxton)",
      "If Jaxton either follows a routine or has discipline (but not both), then he trains regularly.": "(follows_routine(Jaxton) ⊕ has_discipline(Jaxton)) → trains_regularly(Jaxton)"
    },
    "conclusion_fol": "provide_therapy_comfort(Jaxton)"
  },
  {
    "id": 196,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Juliette inspires others.",
    "reasoning": "fact1: Juliette values stability.\nrule: For Juliette, pursuing passion and valuing stability are mutually exclusive.\nconclusion: Juliette does not pursue her passion.\n\nfact1: Juliette has confidence.\nrule: If Juliette has confidence, then she breaks rules and thinks outside the box.\nconclusion: Juliette breaks rules.\n\nfact1: Juliette has unconventional tastes.\nfact2: Juliette does not disregard criticism.\nrule: If someone either has unconventional tastes or disregards criticism (but not both), then they take risks.\nconclusion: Juliette takes risks.\n\nfact1: Juliette takes risks.\nfact2: Juliette does not pursue her passion.\nrule: If Juliette takes risks, then she either pursues her passion or expresses a unique perspective (or both).\nconclusion: Juliette expresses a unique perspective.\n\nfact1: Juliette does not defy conventions.\nfact2: Juliette breaks rules.\nrule: If Juliette either defies conventions or breaks rules (but not both), then she rebels against norms.\nconclusion: Juliette rebels against norms.\n\nfact1: Juliette rebels against norms.\nfact2: Juliette does not create innovative work.\nrule: If Juliette rebels against norms, then she is a free-spirited artist or creates innovative work.\nconclusion: Juliette is a free-spirited artist.\n\nfact1: Juliette is a free-spirited artist.\nfact2: Juliette expresses a unique perspective.\nrule: For all humans, if someone is a free-spirited artist, then they express a unique perspective and inspire others.\nconclusion: Juliette inspires others.\n\nTherefore, it is true that Juliette inspires others. The correct option is: A.",
    "context": "Griffin values stability. If Juliette rebels against norms, then she is a free-spirited artist or creates innovative work. If Opal takes risks, then she either pursues her passion or expresses a unique perspective (or both). Opal does not defy conventions. Juliette has unconventional tastes. If Juliette takes risks, then she either pursues her passion or expresses a unique perspective (or both). If someone either has unconventional tastes or disregards criticism (but not both), then they take risks. If Juliette either follows her intuition or embraces uncertainty (but not both), then she pursues her passion. For Opal, pursuing passion and valuing stability are mutually exclusive. If Opal has confidence, then she breaks rules and thinks outside the box. If Juliette has confidence, then she breaks rules and thinks outside the box. For Juliette, pursuing passion and valuing stability are mutually exclusive. Juliette does not defy conventions. Juliette values stability. Sapphire has confidence. Juliette does not create innovative work. Opal does not disregard criticism. If Opal either defies conventions or breaks rules (but not both), then she rebels against norms. If Juliette either defies conventions or breaks rules (but not both), then she rebels against norms. Juliette does not disregard criticism. For all humans, if someone is a free-spirited artist, then they express a unique perspective and inspire others. Juliette has confidence. All individuals with vibrant imagination express a unique perspective and bring emotional depth to their work.",
    "nl2fol": {
      "Griffin values stability.": "values_stability(Griffin)",
      "If Juliette rebels against norms, then she is a free-spirited artist or creates innovative work.": "rebel_against_norms(Juliette) → (free_spirited_artist(Juliette) ∨ create_innovative_work(Juliette))",
      "If Opal takes risks, then she either pursues her passion or expresses a unique perspective (or both).": "take_risks(Opal) → (pursue_passion(Opal) ∨ express_unique_perspective(Opal))",
      "Opal does not defy conventions.": "¬defy_conventions(Opal)",
      "Juliette has unconventional tastes.": "has_unconventional_tastes(Juliette)",
      "If Juliette takes risks, then she either pursues her passion or expresses a unique perspective (or both).": "take_risks(Juliette) → (pursue_passion(Juliette) ∨ express_unique_perspective(Juliette))",
      "If someone either has unconventional tastes or disregards criticism (but not both), then they take risks.": "∀x ((has_unconventional_tastes(x) ⊕ disregard_criticism(x)) → take_risks(x))",
      "If Juliette either follows her intuition or embraces uncertainty (but not both), then she pursues her passion.": "(follows_intuition(Juliette) ⊕ embraces_uncertainty(Juliette)) → pursue_passion(Juliette)",
      "For Opal, pursuing passion and valuing stability are mutually exclusive.": "value_stability(Opal) ⊕ pursue_passion(Opal)",
      "If Opal has confidence, then she breaks rules and thinks outside the box.": "has_confidence(Opal) → (break_rules(Opal) ∧ think_outside_box(Opal))",
      "If Juliette has confidence, then she breaks rules and thinks outside the box.": "has_confidence(Juliette) → (break_rules(Juliette) ∧ think_outside_box(Juliette))",
      "For Juliette, pursuing passion and valuing stability are mutually exclusive.": "value_stability(Juliette) ⊕ pursue_passion(Juliette)",
      "Juliette does not defy conventions.": "¬defy_conventions(Juliette)",
      "Juliette values stability.": "value_stability(Juliette)",
      "Sapphire has confidence.": "has_confidence(Sapphire)",
      "Juliette does not create innovative work.": "¬create_innovative_work(Juliette)",
      "Opal does not disregard criticism.": "¬disregard_criticism(Opal)",
      "If Opal either defies conventions or breaks rules (but not both), then she rebels against norms.": "(defy_conventions(Opal) ⊕ break_rules(Opal)) → rebel_against_norms(Opal)",
      "If Juliette either defies conventions or breaks rules (but not both), then she rebels against norms.": "(defy_conventions(Juliette) ⊕ break_rules(Juliette)) → rebel_against_norms(Juliette)",
      "Juliette does not disregard criticism.": "¬disregard_criticism(Juliette)",
      "For all humans, if someone is a free-spirited artist, then they express a unique perspective and inspire others.": "∀x (free_spirited_artist(x) → (express_unique_perspective(x) ∧ inspire_others(x)))",
      "Juliette has confidence.": "has_confidence(Juliette)",
      "All individuals with vibrant imagination express a unique perspective and bring emotional depth to their work.": "∀x (has_vibrant_imagination(x) → (express_unique_perspective(x) ∧ bring_emotional_depth(x)))"
    },
    "conclusion_fol": "inspire_others(Juliette)"
  },
  {
    "id": 197,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Frankie can repair DNA.",
    "reasoning": "fact1: Frankie lives in a fantasy world.\nfact2: Frankie can fly.\nrule: If Frankie lives in a fantasy world, then he either has supernatural powers or can fly, but not both.\nconclusion: Frankie does not have supernatural powers.\n\nfact1: Frankie does not have supernatural powers.\nrule: Frankie either has supernatural powers or has microscopic size, but not both.\nconclusion: Frankie has microscopic size.\n\nfact1: Frankie has microscopic size.\nfact2: Frankie can manipulate molecules.\nrule: If Frankie has microscopic size, then he lives in a cell and can manipulate molecules.\nconclusion: Frankie lives in a cell.\n\nfact1: Frankie lives in a cell.\nrule: If Frankie lives in a cell, then he understands biochemistry and knows genetics.\nconclusion: Frankie knows genetics.\n\nfact1: Frankie knows genetics.\nrule: If Frankie knows genetics, then he will assist in transcription.\nconclusion: Frankie assists transcription.\n\nfact1: Frankie can navigate the nucleus.\nfact2: Frankie assists transcription.\nrule: If Frankie can navigate the nucleus, then he can either repair DNA or assist transcription, but not both.\nconclusion: Frankie cannot repair DNA.\n\nTherefore, it is false that Frankie can repair DNA. The correct option is: B.",
    "context": "If Frankie lives in a fantasy world, then he either has supernatural powers or can fly, but not both. If Frankie can navigate the nucleus, then he can either repair DNA or assist transcription, but not both. Frankie can manipulate molecules. Frankie either regulates protein or assists transcription. Frankie either has supernatural powers or has microscopic size, but not both. If Frankie lives in a cell, then he understands biochemistry and knows genetics. Frankie can navigate the nucleus. If Kendall can navigate the nucleus, then he can either repair DNA or assist transcription, but not both. Kendall lives in a fantasy world. If Ximena lives in a fantasy world, then he either has supernatural powers or can fly, but not both. Kendall can fly. Frankie lives in a fantasy world. If Frankie knows genetics, then he will assist in transcription. Frankie can fly. If Frankie has microscopic size, then he lives in a cell and can manipulate molecules.",
    "nl2fol": {
      "If Frankie lives in a fantasy world, then he either has supernatural powers or can fly, but not both.": "lives_in_fantasy_world(Frankie) → (has_supernatural_powers(Frankie) ⊕ can_fly(Frankie))",
      "If Frankie can navigate the nucleus, then he can either repair DNA or assist transcription, but not both.": "navigate_nucleus(Frankie) → (repair_DNA(Frankie) ⊕ assist_transcription(Frankie))",
      "Frankie can manipulate molecules.": "manipulate_molecules(Frankie)",
      "Frankie either regulates protein or assists transcription.": "regulates_protein(Frankie) ∨ assist_transcription(Frankie)",
      "Frankie either has supernatural powers or has microscopic size, but not both.": "has_supernatural_powers(Frankie) ⊕ has_microscopic_size(Frankie)",
      "If Frankie lives in a cell, then he understands biochemistry and knows genetics.": "lives_in_cell(Frankie) → (understand_biochemistry(Frankie) ∧ knows_genetics(Frankie))",
      "Frankie can navigate the nucleus.": "navigate_nucleus(Frankie)",
      "If Kendall can navigate the nucleus, then he can either repair DNA or assist transcription, but not both.": "navigate_nucleus(Kendall) → (repair_DNA(Kendall) ⊕ assist_transcription(Kendall))",
      "Kendall lives in a fantasy world.": "lives_in_fantasy_world(Kendall)",
      "If Ximena lives in a fantasy world, then he either has supernatural powers or can fly, but not both.": "lives_in_fantasy_world(Ximena) → (has_supernatural_powers(Ximena) ⊕ can_fly(Ximena))",
      "Kendall can fly.": "can_fly(Kendall)",
      "Frankie lives in a fantasy world.": "lives_in_fantasy_world(Frankie)",
      "If Frankie knows genetics, then he will assist in transcription.": "knows_genetics(Frankie) → assist_transcription(Frankie)",
      "Frankie can fly.": "can_fly(Frankie)",
      "If Frankie has microscopic size, then he lives in a cell and can manipulate molecules.": "has_microscopic_size(Frankie) → (lives_in_cell(Frankie) ∧ manipulate_molecules(Frankie))"
    },
    "conclusion_fol": "repair_DNA(Frankie)"
  },
  {
    "id": 198,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gary does not earn accolades.",
    "reasoning": "fact1: Gary makes tactical decisions.\nfact2: Gary communicates clearly.\nrule: If Gary leads others effectively, then he either makes tactical decisions or communicates clearly, but not both.\nconclusion: Gary does not lead others effectively.\n\nfact1: Gary thinks quickly.\nfact2: Gary cannot handle critical situations.\nrule: Anyone who thinks quickly and stays calm under pressure can handle critical situations.\nconclusion: Gary does not stay calm under pressure.\n\nfact1: Gary does not stay calm under pressure.\nfact2: Gary does not lead others effectively.\nrule: Anyone who responds to emergencies either stays calm under pressure or leads others effectively (or both).\nconclusion: Gary cannot respond to emergencies effectively.\n\nfact1: Gary does not gain experience.\nrule: Gary gains experience or has training.\nconclusion: Gary has proper training.\n\nfact1: Gary has proper training.\nfact2: Gary cannot respond to emergencies effectively.\nrule: Anyone who prioritizes their own safety and has proper training can respond to emergencies effectively.\nconclusion: Gary does not prioritize his own safety.\n\nfact1: Gary does not act impulsively.\nfact2: Gary does not follow his instincts.\nrule: If Gary takes risks, then he either acts impulsively or follows his instincts (but not both).\nconclusion: Gary does not take risks.\n\nfact1: Gary does not take risks.\nrule: Gary either performs heroic actions or takes risks.\nconclusion: Gary performs heroic actions.\n\nfact1: Gary does not prioritize his own safety.\nrule: Gary either prioritizes his own safety or is brave, but Gary may not necessarily do both.\nconclusion: Gary is brave.\n\nfact1: Gary is brave.\nfact2: Gary performs heroic actions.\nrule: If Gary is brave, then he will perform heroic actions and earn accolades.\nconclusion: Gary does not earn accolades.\n\nTherefore, it is false that Gary does not earn accolades. The correct option is: B.",
    "context": "Gary makes tactical decisions. Gary cannot handle critical situations. If Gary leads others effectively, then he either makes tactical decisions or communicates clearly, but not both. Anyone who thinks quickly and stays calm under pressure can handle critical situations. Gary gains experience or has training. If Gary takes risks, then he either acts impulsively or follows his instincts (but not both). Gary thinks quickly. Gary either performs heroic actions or takes risks. Anyone who prioritizes their own safety and has proper training can respond to emergencies effectively. Anyone who responds to emergencies either stays calm under pressure or leads others effectively (or both). Gary does not gain experience. Gary does not act impulsively. If Gary is brave, then he will perform heroic actions and earn accolades. Gary either prioritizes his own safety or is brave, but Gary may not necessarily do both. Gary does not follow his instincts. Gary communicates clearly.",
    "nl2fol": {
      "Gary makes tactical decisions.": "makes_tactical_decisions(Gary)",
      "Gary cannot handle critical situations.": "¬handles_critical_situations(Gary)",
      "If Gary leads others effectively, then he either makes tactical decisions or communicates clearly, but not both.": "leads_others_effectively(Gary) → (makes_tactical_decisions(Gary) ⊕ communicates_clearly(Gary))",
      "Anyone who thinks quickly and stays calm under pressure can handle critical situations.": "∀x ((thinks_quickly(x) ∧ stays_calm_under_pressure(x)) → handles_critical_situations(x))",
      "Gary gains experience or has training.": "gains_experience(Gary) ∨ has_training(Gary)",
      "If Gary takes risks, then he either acts impulsively or follows his instincts (but not both).": "takes_risks(Gary) → (acts_impulsively(Gary) ⊕ follows_instincts(Gary))",
      "Gary thinks quickly.": "thinks_quickly(Gary)",
      "Gary either performs heroic actions or takes risks.": "perform_heroic_actions(Gary) ∨ takes_risks(Gary)",
      "Anyone who prioritizes their own safety and has proper training can respond to emergencies effectively.": "∀x ((prioritize_self_safety(x) ∧ has_training(x)) → responds_to_emergencies(x))",
      "Anyone who responds to emergencies either stays calm under pressure or leads others effectively (or both).": "∀x (responds_to_emergencies(x) → (stays_calm_under_pressure(x) ∨ leads_others_effectively(x)))",
      "Gary does not gain experience.": "¬gains_experience(Gary)",
      "Gary does not act impulsively.": "¬acts_impulsively(Gary)",
      "If Gary is brave, then he will perform heroic actions and earn accolades.": "brave(Gary) → (perform_heroic_actions(Gary) ∧ earn_accolades(Gary))",
      "Gary either prioritizes his own safety or is brave, but Gary may not necessarily do both.": "prioritize_self_safety(Gary) ⊕ brave(Gary)",
      "Gary does not follow his instincts.": "¬follows_instincts(Gary)",
      "Gary communicates clearly.": "communicates_clearly(Gary)"
    },
    "conclusion_fol": "¬earn_accolades(Gary)"
  },
  {
    "id": 199,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stefan does not gain a new perspective.",
    "reasoning": "fact1: Stefan does not value experience.\nrule: If Stefan asks questions, then he explores opportunities and values experience.\nconclusion: Stefan does not ask questions.\n\nfact1: Stefan does not ask questions.\nfact2: Stefan does not seek knowledge.\nrule: For all humans, if they either have curiosity or ask questions, then they seek knowledge.\nconclusion: Stefan does not have curiosity.\n\nfact1: Stefan listens to podcasts.\nfact2: Stefan does not have curiosity.\nrule: If Stefan either listens to podcasts or reads widely (but not both), then he has curiosity.\nconclusion: Stefan reads widely.\n\nfact1: Stefan reads widely.\nrule: Anyone who reads widely or meets new people loves learning.\nconclusion: Stefan loves learning.\n\nfact1: Stefan loves learning.\nrule: If Stefan loves learning, then he develops cultural appreciation and appreciates diversity.\nconclusion: Stefan develops cultural appreciation.\n\nfact1: Stefan visits a foreign land.\nfact2: Stefan develops cultural appreciation.\nrule: If Stefan visits a foreign land, then he either becomes thoughtful or develops cultural appreciation, but not both.\nconclusion: Stefan does not become thoughtful.\n\nfact1: Stefan travels abroad.\nfact2: Stefan does not become thoughtful.\nrule: If Stefan travels abroad, then he either immerses himself in the culture or becomes thoughtful (or both).\nconclusion: Stefan immerses himself in a culture.\n\nfact1: Stefan immerses himself in a culture.\nrule: For all humans, if they immerse themselves in a culture, then they gain a new perspective.\nconclusion: Stefan does not gain a new perspective.\n\nTherefore, it is false that Stefan does not gain a new perspective. The correct option is: B.",
    "context": "If Stefan asks questions, then he explores opportunities and values experience. Stefan visits a foreign land. Stefan travels abroad. For all humans, if they either have curiosity or ask questions, then they seek knowledge. Stefan listens to podcasts. Anyone who reads widely or meets new people loves learning. If Stefan visits a foreign land, then he either becomes thoughtful or develops cultural appreciation, but not both. If Stefan either listens to podcasts or reads widely (but not both), then he has curiosity. If Stefan travels abroad, then he either immerses himself in the culture or becomes thoughtful (or both). Stefan does not value experience. Stefan does not seek knowledge. If Stefan loves learning, then he develops cultural appreciation and appreciates diversity. For all humans, if they immerse themselves in a culture, then they gain a new perspective.",
    "nl2fol": {
      "If Stefan asks questions, then he explores opportunities and values experience.": "asks_questions(Stefan) → (explore_opportunities(Stefan) ∧ value_experience(Stefan))",
      "Stefan visits a foreign land.": "visit_foreign_land(Stefan)",
      "Stefan travels abroad.": "travel_abroad(Stefan)",
      "For all humans, if they either have curiosity or ask questions, then they seek knowledge.": "∀x ((has_curiosity(x) ⊕ asks_questions(x)) → seeks_knowledge(x))",
      "Stefan listens to podcasts.": "listens_to_podcasts(Stefan)",
      "Anyone who reads widely or meets new people loves learning.": "∀x ((reads_widely(x) ∨ meets_new_people(x)) → love_learning(x))",
      "If Stefan visits a foreign land, then he either becomes thoughtful or develops cultural appreciation, but not both.": "visit_foreign_land(Stefan) → (become_thoughtful(Stefan) ⊕ develop_cultural_appreciation(Stefan))",
      "If Stefan either listens to podcasts or reads widely (but not both), then he has curiosity.": "(listens_to_podcasts(Stefan) ⊕ reads_widely(Stefan)) → has_curiosity(Stefan)",
      "If Stefan travels abroad, then he either immerses himself in the culture or becomes thoughtful (or both).": "travel_abroad(Stefan) → (immerse_in_culture(Stefan) ∨ become_thoughtful(Stefan))",
      "Stefan does not value experience.": "¬value_experience(Stefan)",
      "Stefan does not seek knowledge.": "¬seeks_knowledge(Stefan)",
      "If Stefan loves learning, then he develops cultural appreciation and appreciates diversity.": "love_learning(Stefan) → (develop_cultural_appreciation(Stefan) ∧ appreciate_diversity(Stefan))",
      "For all humans, if they immerse themselves in a culture, then they gain a new perspective.": "∀x (immerse_in_culture(x) → gain_new_perspective(x))"
    },
    "conclusion_fol": "¬gain_new_perspective(Stefan)"
  },
  {
    "id": 200,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Anastasia either appreciates beauty or contributes to science (or both).",
    "reasoning": "fact1: Anastasia embraces self-reflection.\nfact2: Anastasia nurtures her curiosity.\nrule: If someone embraces self-reflection and nurtures their curiosity, then they can pursue personal growth.\nconclusion: Anastasia pursues personal growth.\n\nfact1: Anastasia studies ecology.\nfact2: Anastasia does not educate others.\nrule: If Anastasia studies ecology, then she either advocates for sustainability or educates others (or both).\nconclusion: Anastasia advocates for sustainability.\n\nfact1: Anastasia pursues personal growth.\nrule: Anastasia either pursues personal growth or contributes to science, or both.\nconclusion: Anastasia does not contribute to science.\n\nfact1: Anastasia does not have an artistic side.\nrule: Anastasia either has an artistic side or is an entomologist, but not both.\nconclusion: Anastasia is an entomologist.\n\nfact1: Anastasia is an entomologist.\nfact2: Anastasia advocates for sustainability.\nrule: If Anastasia is an entomologist, then she either cares for the environment or advocates for sustainability, but not both.\nconclusion: Anastasia does not care for the environment.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Anastasia either appreciates beauty or contributes to science (or both). The correct option is: C.",
    "context": "Anastasia studies ecology. If Anastasia is an entomologist, then she either cares for the environment or advocates for sustainability, but not both. If someone embraces self-reflection and nurtures their curiosity, then they can pursue personal growth. Bryson either has an artistic side or is an entomologist, but not both. If Anastasia has curiosity, then she contributes to science and thinks critically. Anastasia does not educate others. If someone either values simplicity or seeks elegance (but not both), then they appreciate beauty. Anyone who practices mindfulness will pursue personal growth. Bryson nurtures her curiosity. Anastasia either has an artistic side or is an entomologist, but not both. Anastasia does not have an artistic side. Anastasia embraces self-reflection. Anastasia nurtures her curiosity. If Anastasia studies ecology, then she either advocates for sustainability or educates others (or both). If Jones studies ecology, then she either advocates for sustainability or educates others (or both). Anastasia either pursues personal growth or contributes to science, or both.",
    "nl2fol": {
      "Anastasia studies ecology.": "study_ecology(Anastasia)",
      "If Anastasia is an entomologist, then she either cares for the environment or advocates for sustainability, but not both.": "is_entomologist(Anastasia) → (care_for_environment(Anastasia) ⊕ advocate_sustainability(Anastasia))",
      "If someone embraces self-reflection and nurtures their curiosity, then they can pursue personal growth.": "∀x ((embraces_self_reflection(x) ∧ nurtures_curiosity(x)) → pursue_personal_growth(x))",
      "Bryson either has an artistic side or is an entomologist, but not both.": "has_artistic_side(Bryson) ⊕ is_entomologist(Bryson)",
      "If Anastasia has curiosity, then she contributes to science and thinks critically.": "has_curiosity(Anastasia) → (contribute_to_science(Anastasia) ∧ think_critically(Anastasia))",
      "Anastasia does not educate others.": "¬educate_others(Anastasia)",
      "If someone either values simplicity or seeks elegance (but not both), then they appreciate beauty.": "∀x ((values_simplicity(x) ⊕ seeks_elegance(x)) → appreciate_beauty(x))",
      "Anyone who practices mindfulness will pursue personal growth.": "∀x (practices_mindfulness(x) → pursue_personal_growth(x))",
      "Bryson nurtures her curiosity.": "nurtures_curiosity(Bryson)",
      "Anastasia either has an artistic side or is an entomologist, but not both.": "has_artistic_side(Anastasia) ⊕ is_entomologist(Anastasia)",
      "Anastasia does not have an artistic side.": "¬has_artistic_side(Anastasia)",
      "Anastasia embraces self-reflection.": "embraces_self_reflection(Anastasia)",
      "Anastasia nurtures her curiosity.": "nurtures_curiosity(Anastasia)",
      "If Anastasia studies ecology, then she either advocates for sustainability or educates others (or both).": "study_ecology(Anastasia) → (advocate_sustainability(Anastasia) ∨ educate_others(Anastasia))",
      "If Jones studies ecology, then she either advocates for sustainability or educates others (or both).": "study_ecology(Jones) → (advocate_sustainability(Jones) ∨ educate_others(Jones))",
      "Anastasia either pursues personal growth or contributes to science, or both.": "pursue_personal_growth(Anastasia) ⊕ contribute_to_science(Anastasia)"
    },
    "conclusion_fol": "appreciate_beauty(Anastasia) ∨ contribute_to_science(Anastasia)"
  },
  {
    "id": 201,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sevyn does not lead the troop.",
    "reasoning": "fact1: Sevyn prioritizes cleanliness.\nfact2: Sevyn does not have good health.\nrule: For any lemur, if they prioritize cleanliness and take dust baths, then they have good health.\nconclusion: Sevyn does not take dust baths.\n\nfact1: Sevyn does not take dust baths.\nrule: Sevyn either takes dust baths or grooms each other, but not both.\nconclusion: Sevyn grooms each other.\n\nfact1: Sevyn plays with his troop.\nfact2: Sevyn grooms each other.\nrule: If Sevyn climbs trees, then he either plays with his troop or grooms each other, but not both.\nconclusion: Sevyn does not climb trees.\n\nfact1: Sevyn does not climb trees.\nrule: Every lemur either climbs trees or forages for food.\nconclusion: Sevyn forages for food.\n\nfact1: Sevyn forages for food.\nfact2: Sevyn does not thrive in his habitat.\nrule: If Sevyn either explores the forest or forages for food (but not both), then he thrives in his habitat.\nconclusion: Sevyn explores the forest.\n\nfact1: Sevyn explores the forest.\nfact2: Sevyn does not ensure their survival.\nrule: For all lemurs, if they explore the forest and lead the troop, then they ensure the troop's survival.\nconclusion: Sevyn does not lead the troop.\n\nTherefore, it is true that Sevyn does not lead the troop. The correct option is: A.",
    "context": "All lemurs that have agility and live in forests can climb trees. Sevyn does not thrive in his habitat. If Sevyn either explores the forest or forages for food (but not both), then he thrives in his habitat. Cookie does not thrive in his habitat. Cookie either takes dust baths or grooms each other, but not both. Sevyn does not ensure their survival. Sevyn plays with his troop. For all lemurs, if they explore the forest and lead the troop, then they ensure the troop's survival. Cookie does not have good health. If Sevyn climbs trees, then he either plays with his troop or grooms each other, but not both. If Lyric climbs trees, then he either plays with his troop or grooms each other, but not both. Sevyn either takes dust baths or grooms each other, but not both. Every lemur either climbs trees or forages for food. Sevyn prioritizes cleanliness. Lyric prioritizes cleanliness. For any lemur, if they prioritize cleanliness and take dust baths, then they have good health. Sevyn does not have good health. If Sevyn either leaps through trees or ventures off trail (but not both), then he explores the forest.",
    "nl2fol": {
      "All lemurs that have agility and live in forests can climb trees.": "∀x ((has_agility(x) ∧ lives_in_forest(x)) → climb_trees(x))",
      "Sevyn does not thrive in his habitat.": "¬thrive_in_habitat(Sevyn)",
      "If Sevyn either explores the forest or forages for food (but not both), then he thrives in his habitat.": "(explore_the_forest(Sevyn) ⊕ forage_for_food(Sevyn)) → thrive_in_habitat(Sevyn)",
      "Cookie does not thrive in his habitat.": "¬thrives_in_habitat(Cookie)",
      "Cookie either takes dust baths or grooms each other, but not both.": "groom_each_other(Cookie) ⊕ take_dust_baths(Cookie)",
      "Sevyn does not ensure their survival.": "¬ensure_survival(Sevyn)",
      "Sevyn plays with his troop.": "play_with_troop(Sevyn)",
      "For all lemurs, if they explore the forest and lead the troop, then they ensure the troop's survival.": "∀x ((explore_the_forest(x) ∧ lead_the_troop(x)) → ensure_survival(x))",
      "Cookie does not have good health.": "¬have_health(Cookie)",
      "If Sevyn climbs trees, then he either plays with his troop or grooms each other, but not both.": "climb_trees(Sevyn) → (play_with_troop(Sevyn) ⊕ groom_each_other(Sevyn))",
      "If Lyric climbs trees, then he either plays with his troop or grooms each other, but not both.": "climb_trees(Lyric) → (play_with_troop(Lyric) ⊕ groom_each_other(Lyric))",
      "Sevyn either takes dust baths or grooms each other, but not both.": "groom_each_other(Sevyn) ⊕ take_dust_baths(Sevyn)",
      "Every lemur either climbs trees or forages for food.": "∀x (climb_trees(x) ∨ forage_for_food(x))",
      "Sevyn prioritizes cleanliness.": "stay_clean(Sevyn)",
      "Lyric prioritizes cleanliness.": "stay_clean(Lyric)",
      "For any lemur, if they prioritize cleanliness and take dust baths, then they have good health.": "∀x ((stay_clean(x) ∧ take_dust_baths(x)) → have_health(x))",
      "Sevyn does not have good health.": "¬have_health(Sevyn)",
      "If Sevyn either leaps through trees or ventures off trail (but not both), then he explores the forest.": "(leap_through_trees(Sevyn) ⊕ venture_off_trail(Sevyn)) → explore_the_forest(Sevyn)"
    },
    "conclusion_fol": "¬lead_the_troop(Sevyn)"
  },
  {
    "id": 202,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harley does not meet an inspirational person.",
    "reasoning": "fact1: Harley dedicates time.\nfact2: Harley does not develop a unique style.\nrule: If Harley dedicates time to exploring creative fields, then she will develop a unique style.\nconclusion: Harley does not explore creative fields.\n\nfact1: Harley takes risks.\nfact2: Harley learns from failures.\nrule: If Harley takes risks and learns from failures, then she will achieve success.\nconclusion: Harley will achieve success.\n\nfact1: Harley does not enjoy freedom.\nrule: Harley either values security or enjoys freedom.\nconclusion: Harley values security.\n\nfact1: Harley values security.\nrule: If someone values security, then they pursue a stable job and build their reputation.\nconclusion: Harley pursues a stable job.\n\nfact1: Harley pursues a stable job.\nrule: Either Harley attains professional growth or pursues a stable job, but she does not do both.\nconclusion: Harley does not attain professional growth.\n\nfact1: Harley does not explore creative fields.\nfact2: Harley does not attain professional growth.\nrule: For Harley, either exploring creative fields or finding her true passion (but not both) leads to attaining professional growth.\nconclusion: Harley does not find her true passion.\n\nfact1: Harley does not find her true passion.\nrule: For Harley, either finding her true passion or changing her career path is a possibility, but not necessarily both.\nconclusion: Harley changes her career path.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Harley does not meet an inspirational person. The correct option is: C.",
    "context": "If Karson takes risks and learns from failures, then she will achieve success. If Harley seeks financial stability, then she will pursue a stable job and value structure. Piper does not create impressive work. Harley dedicates time. Everyone prefers stability or values security. Piper takes risks. For Harley, either exploring creative fields or finding her true passion (but not both) leads to attaining professional growth. Piper does not develop a unique style. If Karson meets an inspirational person, then she can either change her career path or gain a new perspective, but not both. If Harley dedicates time to exploring creative fields, then she will develop a unique style. Harley pursues hobbies or explores creative fields. Harley either values security or enjoys freedom. If Moses dedicates time to exploring creative fields, then she will develop a unique style. If someone values security, then they pursue a stable job and build their reputation. If Harley takes risks and learns from failures, then she will achieve success. Harley does not develop a unique style. Either Karson attains professional growth or pursues a stable job, but she does not do both. For Karson, either exploring creative fields or finding her true passion (but not both) leads to attaining professional growth. Karson either values security or enjoys freedom. For Moses, either finding her true passion or changing her career path is a possibility, but not necessarily both. Harley learns from failures. Harley takes risks. Harley develops skills or builds her reputation. Either Harley attains professional growth or pursues a stable job, but she does not do both. For Harley, either finding her true passion or changing her career path is a possibility, but not necessarily both. Anyone who develops their skills or sets goals can attain professional growth. Harley does not enjoy freedom. Karson does not gain a new perspective.",
    "nl2fol": {
      "If Karson takes risks and learns from failures, then she will achieve success.": "take_risks(Karson) → (learn_from_failures(Karson) ∧ achieve_success(Karson))",
      "If Harley seeks financial stability, then she will pursue a stable job and value structure.": "seek_financial_stability(Harley) → (pursue_stable_job(Harley) ∧ value_structure(Harley))",
      "Piper does not create impressive work.": "¬create_impressive_work(Piper)",
      "Harley dedicates time.": "dedicates_time(Harley)",
      "Everyone prefers stability or values security.": "∀x (prefers_stability(x) ∨ value_security(x))",
      "Piper takes risks.": "takes_risks(Piper)",
      "For Harley, either exploring creative fields or finding her true passion (but not both) leads to attaining professional growth.": "(explore_creative_fields(Harley) ⊕ find_true_passion(Harley)) → attain_professional_growth(Harley)",
      "Piper does not develop a unique style.": "¬develop_unique_style(Piper)",
      "If Karson meets an inspirational person, then she can either change her career path or gain a new perspective, but not both.": "meets_inspirational_person(Karson) → (change_career_path(Karson) ⊕ gain_new_perspective(Karson))",
      "If Harley dedicates time to exploring creative fields, then she will develop a unique style.": "(dedicates_time(Harley) ∧ explore_creative_fields(Harley)) → develops_unique_style(Harley)",
      "Harley pursues hobbies or explores creative fields.": "pursues_hobbies(Harley) ∨ explore_creative_fields(Harley)",
      "Harley either values security or enjoys freedom.": "value_security(Harley) ∨ enjoy_freedom(Harley)",
      "If Moses dedicates time to exploring creative fields, then she will develop a unique style.": "(dedicates_time(Moses) ∧ explore_creative_fields(Moses)) → develops_unique_style(Moses)",
      "If someone values security, then they pursue a stable job and build their reputation.": "∀x (value_security(x) → (pursue_stable_job(x) ∧ build_reputation(x)))",
      "If Harley takes risks and learns from failures, then she will achieve success.": "take_risks(Harley) → (learn_from_failures(Harley) ∧ achieve_success(Harley))",
      "Harley does not develop a unique style.": "¬develops_unique_style(Harley)",
      "Either Karson attains professional growth or pursues a stable job, but she does not do both.": "attain_professional_growth(Karson) ⊕ pursue_stable_job(Karson)",
      "For Karson, either exploring creative fields or finding her true passion (but not both) leads to attaining professional growth.": "(explore_creative_fields(Karson) ⊕ find_true_passion(Karson)) → attain_professional_growth(Karson)",
      "Karson either values security or enjoys freedom.": "value_security(Karson) ∨ enjoy_freedom(Karson)",
      "For Moses, either finding her true passion or changing her career path is a possibility, but not necessarily both.": "find_true_passion(Moses) ⊕ change_career_path(Moses)",
      "Harley learns from failures.": "learn_from_failures(Harley)",
      "Harley takes risks.": "take_risks(Harley)",
      "Harley develops skills or builds her reputation.": "develop_skills(Harley) ∨ build_reputation(Harley)",
      "Either Harley attains professional growth or pursues a stable job, but she does not do both.": "attain_professional_growth(Harley) ⊕ pursue_stable_job(Harley)",
      "For Harley, either finding her true passion or changing her career path is a possibility, but not necessarily both.": "find_true_passion(Harley) ⊕ change_career_path(Harley)",
      "Anyone who develops their skills or sets goals can attain professional growth.": "∀x ((develops_skills(x) ∨ sets_goals(x)) → attain_professional_growth(x))",
      "Harley does not enjoy freedom.": "¬enjoy_freedom(Harley)",
      "Karson does not gain a new perspective.": "¬gain_new_perspective(Karson)"
    },
    "conclusion_fol": "¬meets_inspirational_person(Harley)"
  },
  {
    "id": 203,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lillian is not a conservationist.",
    "reasoning": "fact1: Lillian does not ignore warnings.\nfact2: Lillian does not neglect her responsibility.\nrule: Whenever someone harms the ecosystem, they either ignore warnings or neglect their responsibility (or both).\nconclusion: Lillian does not harm the ecosystem.\n\nfact1: Lillian throws trash.\nrule: Anyone who throws trash is a litterer.\nconclusion: Lillian is a litterer.\n\nfact1: Lillian does not dispose waste.\nfact2: Lillian does not harm the ecosystem.\nrule: Everyone who either disposes waste or damages soil (but not both) harms the ecosystem.\nconclusion: Lillian does not damage soil.\n\nfact1: Lillian is a litterer.\nfact2: Lillian does not damage soil.\nrule: If Lillian is a litterer, then she either damages soil or pollutes water, but not both.\nconclusion: Lillian pollutes water.\n\nfact1: Lillian pollutes water.\nfact2: Lillian does not harm wildlife.\nrule: If someone pollutes water and causes environmental harm, then they harm wildlife.\nconclusion: Lillian is not an environmental harm doer.\n\nfact1: Lillian is not an environmental harm doer.\nrule: Lillian is either a conservationist or an environmental harm doer, but not both.\nconclusion: Lillian is not a conservationist.\n\nTherefore, it is false that Lillian is not a conservationist. The correct option is: B.",
    "context": "If Lillian is a litterer, then she either damages soil or pollutes water, but not both. Everyone who either disposes waste or damages soil (but not both) harms the ecosystem. Lillian does not dispose waste. Lillian throws trash. Lillian does not harm wildlife. If Lillian neglects nature, then she is either a litterer or ignores rules, but not both. Lillian does not neglect her responsibility. If someone pollutes water and causes environmental harm, then they harm wildlife. Anyone who throws trash is a litterer. Lillian is either a conservationist or an environmental harm doer, but not both. Lillian does not ignore warnings. Whenever someone harms the ecosystem, they either ignore warnings or neglect their responsibility (or both).",
    "nl2fol": {
      "If Lillian is a litterer, then she either damages soil or pollutes water, but not both.": "litterer(Lillian) → (damages_soil(Lillian) ⊕ pollutes_water(Lillian))",
      "Everyone who either disposes waste or damages soil (but not both) harms the ecosystem.": "∀x ((disposes_waste(x) ⊕ damages_soil(x)) → harms_ecosystem(x))",
      "Lillian does not dispose waste.": "¬disposes_waste(Lillian)",
      "Lillian throws trash.": "throws_trash(Lillian)",
      "Lillian does not harm wildlife.": "¬harms_wildlife(Lillian)",
      "If Lillian neglects nature, then she is either a litterer or ignores rules, but not both.": "neglects_nature(Lillian) → (litterer(Lillian) ⊕ ignores_rules(Lillian))",
      "Lillian does not neglect her responsibility.": "¬neglects_responsibility(Lillian)",
      "If someone pollutes water and causes environmental harm, then they harm wildlife.": "∀x ((pollutes_water(x) ∧ environmental_harm_doer(x)) → harms_wildlife(x))",
      "Anyone who throws trash is a litterer.": "∀x (throws_trash(x) → litterer(x))",
      "Lillian is either a conservationist or an environmental harm doer, but not both.": "conservationist(Lillian) ⊕ environmental_harm_doer(Lillian)",
      "Lillian does not ignore warnings.": "¬ignores_warnings(Lillian)",
      "Whenever someone harms the ecosystem, they either ignore warnings or neglect their responsibility (or both).": "∀x (harms_ecosystem(x) → (ignores_warnings(x) ∨ neglects_responsibility(x)))"
    },
    "conclusion_fol": "¬conservationist(Lillian)"
  },
  {
    "id": 204,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Noel resists the impermanence of things.",
    "reasoning": "fact1: Noel is creative.\nfact2: Noel does not take risks.\nrule: If Noel is creative, then he either tries new things or takes risks, but not both.\nconclusion: Noel tries new things.\n\nfact1: Noel sees details.\nfact2: Noel does not love nature.\nrule: Anyone who sees details or loves nature can find beauty everywhere.\nconclusion: Noel finds beauty everywhere.\n\nfact1: Noel tries new things.\nfact2: Noel is adaptable.\nrule: If Noel tries new things, then he is either adaptable or open to change, but not both.\nconclusion: Noel does not embrace change.\n\nfact1: Noel seeks new experiences.\nfact2: Noel does not embrace change.\nrule: Everyone who seeks new experiences either lives in the present or embraces change (or both).\nconclusion: Noel lives in the present.\n\nfact1: Noel lives in the present.\nfact2: Noel finds beauty everywhere.\nrule: If someone lives in the present, then they value moments in life and find beauty everywhere.\nconclusion: Noel values moments in life.\n\nfact1: Noel values moments in life.\nrule: Anyone who values moments in life appreciates the impermanence of things.\nconclusion: Noel appreciates the impermanence of things.\n\nfact1: Noel appreciates the impermanence of things.\nrule: Noel either appreciates the impermanence of things or resists the impermanence of things, but not both.\nconclusion: Noel does not resist the impermanence of things.\n\nTherefore, it is false that Noel resists the impermanence of things. The correct option is: B.",
    "context": "Noel sees details. If Noel is reflective, then he either cherishes memories or values moments in life, but not both. Everyone who seeks new experiences either lives in the present or embraces change (or both). Noel either appreciates the impermanence of things or resists the impermanence of things, but not both. Noel seeks new experiences. Noel is adaptable. If Noel practices mindfulness, then he either connects with others or finds beauty everywhere (but not both). Noel does not take risks. Carly does not take risks. If someone lives in the present, then they value moments in life and find beauty everywhere. Noel is creative. Anyone who values moments in life appreciates the impermanence of things. Noel does not love nature. Anyone who sees details or loves nature can find beauty everywhere. If Noel has curiosity, then he is both reflective and lives in the present. If Noel is creative, then he either tries new things or takes risks, but not both. If Noel tries new things, then he is either adaptable or open to change, but not both.",
    "nl2fol": {
      "Noel sees details.": "sees_details(Noel)",
      "If Noel is reflective, then he either cherishes memories or values moments in life, but not both.": "is_reflective(Noel) → (cherishes_memories(Noel) ⊕ values_moments(Noel))",
      "Everyone who seeks new experiences either lives in the present or embraces change (or both).": "∀x (seeks_experiences(x) → (lives_in_present(x) ∨ embraces_change(x)))",
      "Noel either appreciates the impermanence of things or resists the impermanence of things, but not both.": "appreciate_impermanence(Noel) ⊕ resist_impermanence(Noel)",
      "Noel seeks new experiences.": "seeks_experiences(Noel)",
      "Noel is adaptable.": "is_adaptable(Noel)",
      "If Noel practices mindfulness, then he either connects with others or finds beauty everywhere (but not both).": "practices_mindfulness(Noel) → (connects_with_others(Noel) ⊕ finds_beauty_everywhere(Noel))",
      "Noel does not take risks.": "¬takes_risks(Noel)",
      "Carly does not take risks.": "¬takes_risks(Carly)",
      "If someone lives in the present, then they value moments in life and find beauty everywhere.": "∀x (lives_in_present(x) → (values_moments(x) ∧ finds_beauty_everywhere(x)))",
      "Noel is creative.": "is_creative(Noel)",
      "Anyone who values moments in life appreciates the impermanence of things.": "∀x (values_moments(x) → appreciate_impermanence(x))",
      "Noel does not love nature.": "¬loves_nature(Noel)",
      "Anyone who sees details or loves nature can find beauty everywhere.": "∀x ((sees_details(x) ∨ loves_nature(x)) → finds_beauty_everywhere(x))",
      "If Noel has curiosity, then he is both reflective and lives in the present.": "has_curiosity(Noel) → (is_reflective(Noel) ∧ lives_in_present(Noel))",
      "If Noel is creative, then he either tries new things or takes risks, but not both.": "is_creative(Noel) → (tries_new_things(Noel) ⊕ takes_risks(Noel))",
      "If Noel tries new things, then he is either adaptable or open to change, but not both.": "tries_new_things(Noel) → (embraces_change(Noel) ⊕ is_adaptable(Noel))"
    },
    "conclusion_fol": "resist_impermanence(Noel)"
  },
  {
    "id": 205,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Victor is not a creative person.",
    "reasoning": "fact1: Victor honors tradition.\nfact2: Victor cherishes memories.\nrule: If Victor respects his heritage, then he either honors tradition or cherishes memories (but not both).\nconclusion: Victor does not respect heritage.\n\nfact1: Victor holds sentimental items.\nfact2: Victor does not respect heritage.\nrule: Everyone who holds sentimental items either respects heritage or values family legacies (or both).\nconclusion: Victor values family legacies.\n\nfact1: Victor does not break rules.\nrule: Victor follows conventions or breaks rules.\nconclusion: Victor follows conventions.\n\nfact1: Victor follows conventions.\nfact2: Victor thinks critically.\nrule: If Victor lacks original thought, then he either follows conventions or thinks critically, but not both.\nconclusion: Victor does not lack original thought.\n\nfact1: Victor does not lack original thought.\nrule: Victor either has a rich imagination or lacks original thought, but not both.\nconclusion: Victor has a rich imagination.\n\nfact1: Victor has a rich imagination.\nfact2: Victor values family legacies.\nrule: Anyone who has a rich imagination and values family legacies draws from their experiences.\nconclusion: Victor draws from his experiences.\n\nfact1: Victor draws from his experiences.\nrule: Everyone either draws from their experiences or produces exceptional work, but not both is not necessarily true, rather they can be separate.\nconclusion: Victor does not produce exceptional work.\n\nfact1: Victor does not produce exceptional work.\nrule: If Victor is a creative person, then he finds unique inspirations and produces exceptional work.\nconclusion: Victor is not a creative person.\n\nTherefore, it is true that Victor is not a creative person. The correct option is: A.",
    "context": "Sage honors tradition. Harlem does not appreciate oddities. Victor honors tradition. Victor either has a rich imagination or lacks original thought, but not both. Everyone who holds sentimental items either respects heritage or values family legacies (or both). If Victor lacks original thought, then he either follows conventions or thinks critically, but not both. Anyone who has a rich imagination and values family legacies draws from their experiences. If someone observes details and seeks new experiences, then they can find unique inspirations. Everyone either draws from their experiences or produces exceptional work, but not both is not necessarily true, rather they can be separate. Everyone who keeps family heirlooms either respects heritage or admires past generations (or both). Victor follows conventions or breaks rules. If Victor either dreams vividly or thinks outside conventions (but not both), then he has a rich imagination. Harlem either has a rich imagination or lacks original thought, but not both. If Kellan is a creative person, then he finds unique inspirations and produces exceptional work. If Victor is sentimental, then he either values family legacies or loves antiques, but not both. If Victor perseveres, then he will produce exceptional work. Victor cherishes memories. Anyone who obeys rules and avoids risks follows conventions. If Kellan respects his heritage, then he either honors tradition or cherishes memories (but not both). Sage follows conventions or breaks rules. If Victor is a creative person, then he finds unique inspirations and produces exceptional work. If Victor respects his heritage, then he either honors tradition or cherishes memories (but not both). Sage thinks critically. Victor holds sentimental items. Victor thinks critically. Victor does not break rules.",
    "nl2fol": {
      "Sage honors tradition.": "honors_tradition(Sage)",
      "Harlem does not appreciate oddities.": "¬appreciates_oddities(Harlem)",
      "Victor honors tradition.": "honors_tradition(Victor)",
      "Victor either has a rich imagination or lacks original thought, but not both.": "has_rich_imagination(Victor) ⊕ lacks_original_thought(Victor)",
      "Everyone who holds sentimental items either respects heritage or values family legacies (or both).": "∀x (holds_sentimental_items(x) → (respects_heritage(x) ∨ values_family_legacies(x)))",
      "If Victor lacks original thought, then he either follows conventions or thinks critically, but not both.": "lacks_original_thought(Victor) → (follows_conventions(Victor) ⊕ thinks_critically(Victor))",
      "Anyone who has a rich imagination and values family legacies draws from their experiences.": "∀x ((has_rich_imagination(x) ∧ values_family_legacies(x)) → draws_from_experience(x))",
      "If someone observes details and seeks new experiences, then they can find unique inspirations.": "∀x ((observes_details(x) ∧ seeks_new_experiences(x)) → find_unique_inspirations(x))",
      "Everyone either draws from their experiences or produces exceptional work, but not both is not necessarily true, rather they can be separate.": "∀x (draws_from_experience(x) ⊕ produce_exceptional_work(x))",
      "Everyone who keeps family heirlooms either respects heritage or admires past generations (or both).": "∀x (keeps_family_heirlooms(x) → (respects_heritage(x) ∨ admires_past_generations(x)))",
      "Victor follows conventions or breaks rules.": "follows_conventions(Victor) ∨ breaks_rules(Victor)",
      "If Victor either dreams vividly or thinks outside conventions (but not both), then he has a rich imagination.": "(dreams_vividly(Victor) ⊕ thinks_outside_conventions(Victor)) → has_rich_imagination(Victor)",
      "Harlem either has a rich imagination or lacks original thought, but not both.": "has_rich_imagination(Harlem) ⊕ lacks_original_thought(Harlem)",
      "If Kellan is a creative person, then he finds unique inspirations and produces exceptional work.": "creative_person(Kellan) → (find_unique_inspirations(Kellan) ∧ produce_exceptional_work(Kellan))",
      "If Victor is sentimental, then he either values family legacies or loves antiques, but not both.": "is_sentimental(Victor) → (values_family_legacies(Victor) ⊕ loves_antiques(Victor))",
      "If Victor perseveres, then he will produce exceptional work.": "persevere(Victor) → produce_exceptional_work(Victor)",
      "Victor cherishes memories.": "cherishes_memories(Victor)",
      "Anyone who obeys rules and avoids risks follows conventions.": "∀x ((obeys_rules(x) ∧ avoids_risks(x)) → follows_conventions(x))",
      "If Kellan respects his heritage, then he either honors tradition or cherishes memories (but not both).": "respects_heritage(Kellan) → (honors_tradition(Kellan) ⊕ cherishes_memories(Kellan))",
      "Sage follows conventions or breaks rules.": "follows_conventions(Sage) ∨ breaks_rules(Sage)",
      "If Victor is a creative person, then he finds unique inspirations and produces exceptional work.": "creative_person(Victor) → (find_unique_inspirations(Victor) ∧ produce_exceptional_work(Victor))",
      "If Victor respects his heritage, then he either honors tradition or cherishes memories (but not both).": "respects_heritage(Victor) → (honors_tradition(Victor) ⊕ cherishes_memories(Victor))",
      "Sage thinks critically.": "thinks_critically(Sage)",
      "Victor holds sentimental items.": "holds_sentimental_items(Victor)",
      "Victor thinks critically.": "thinks_critically(Victor)",
      "Victor does not break rules.": "¬breaks_rules(Victor)"
    },
    "conclusion_fol": "¬creative_person(Victor)"
  },
  {
    "id": 206,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Slick is influenced by modern styles.",
    "reasoning": "fact1: Slick draws inspiration.\nfact2: Slick does not gain recognition.\nrule: If Slick draws inspiration and creates original work, then he gains recognition.\nconclusion: Slick does not create original work.\n\nfact1: Slick expresses emotions.\nfact2: Slick does not create original work.\nrule: If Slick either expresses emotions or has a unique style (but not both), then he creates original work.\nconclusion: Slick has a unique style.\n\nfact1: Slick represents his culture.\nfact2: Slick does not promote artistic expression.\nrule: Anyone who represents their culture either preserves customs or promotes artistic expression (or both).\nconclusion: Slick preserves his customs.\n\nfact1: Slick respects his ancestors.\nfact2: Slick preserves his customs.\nrule: Anyone who respects their ancestors and preserves their customs understands their heritage.\nconclusion: Slick understands his heritage.\n\nfact1: Slick has a unique style.\nrule: Everyone either has a unique style or tells real stories, but the two are not necessarily related.\nconclusion: Slick does not tell real stories.\n\nfact1: Slick does not appreciate history.\nrule: Slick appreciates history or values diversity.\nconclusion: Slick values diversity.\n\nfact1: Slick is an authentic artist.\nfact2: Slick does not tell real stories.\nrule: Every authentic artist is either influenced by traditional styles or tells real stories.\nconclusion: Slick is influenced by traditional styles.\n\nfact1: Slick understands his heritage.\nfact2: Slick values diversity.\nrule: If Slick understands his heritage and values diversity, then he creates culturally significant work.\nconclusion: Slick creates culturally significant work.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Slick is influenced by modern styles. The correct option is: C.",
    "context": "Anyone who respects their ancestors and preserves their customs understands their heritage. Everyone either has a unique style or tells real stories, but the two are not necessarily related. Cayson does not appreciate history. Every authentic artist is either influenced by traditional styles or tells real stories. Slick does not promote artistic expression. If Slick speaks from the heart and connects with others, then he creates culturally significant work. If someone finds inspiration and has a creative vision, then they can create original work. Slick appreciates history or values diversity. Cayson draws inspiration. Slick is an authentic artist. Slick represents his culture. Slick draws inspiration. Slick expresses emotions. If Slick either expresses emotions or has a unique style (but not both), then he creates original work. Slick does not gain recognition. Slick respects his ancestors. Anyone who represents their culture either preserves customs or promotes artistic expression (or both). If Slick understands his heritage and values diversity, then he creates culturally significant work. If Slick draws inspiration and creates original work, then he gains recognition. Slick does not appreciate history.",
    "nl2fol": {
      "Anyone who respects their ancestors and preserves their customs understands their heritage.": "∀x ((respects_ancestors(x) ∧ preserves_customs(x)) → understands_heritage(x))",
      "Everyone either has a unique style or tells real stories, but the two are not necessarily related.": "∀x (has_unique_style(x) ⊕ tell_real_stories(x))",
      "Cayson does not appreciate history.": "¬appreciate_history(Cayson)",
      "Every authentic artist is either influenced by traditional styles or tells real stories.": "∀x (authentic_artist(x) → (traditional_influences(x) ∨ tell_real_stories(x)))",
      "Slick does not promote artistic expression.": "¬promotes_artistic_expression(Slick)",
      "If Slick speaks from the heart and connects with others, then he creates culturally significant work.": "(speaks_from_heart(Slick) ∧ connects_with_others(Slick)) → culturally_significant(Slick)",
      "If someone finds inspiration and has a creative vision, then they can create original work.": "∀x ((finds_inspiration(x) ∧ has_creative_vision(x)) → creates_original_work(x))",
      "Slick appreciates history or values diversity.": "appreciate_history(Slick) ∨ values_diversity(Slick)",
      "Cayson draws inspiration.": "draws_inspiration(Cayson)",
      "Slick is an authentic artist.": "authentic_artist(Slick)",
      "Slick represents his culture.": "represents_culture(Slick)",
      "Slick draws inspiration.": "draws_inspiration(Slick)",
      "Slick expresses emotions.": "expresses_emotions(Slick)",
      "If Slick either expresses emotions or has a unique style (but not both), then he creates original work.": "(expresses_emotions(Slick) ⊕ has_unique_style(Slick)) → creates_original_work(Slick)",
      "Slick does not gain recognition.": "¬gains_recognition(Slick)",
      "Slick respects his ancestors.": "respects_ancestors(Slick)",
      "Anyone who represents their culture either preserves customs or promotes artistic expression (or both).": "∀x (represents_culture(x) → (preserves_customs(x) ∨ promotes_artistic_expression(x)))",
      "If Slick understands his heritage and values diversity, then he creates culturally significant work.": "(understands_heritage(Slick) ∧ values_diversity(Slick)) → culturally_significant(Slick)",
      "If Slick draws inspiration and creates original work, then he gains recognition.": "(draws_inspiration(Slick) ∧ creates_original_work(Slick)) → gains_recognition(Slick)",
      "Slick does not appreciate history.": "¬appreciate_history(Slick)"
    },
    "conclusion_fol": "modern_influences(Slick)"
  },
  {
    "id": 207,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jase earns respect.",
    "reasoning": "fact1: Jase values teamwork.\nrule: Jase either values teamwork or is a strategic thinker, but not both.\nconclusion: Jase is not a strategic thinker.\n\nfact1: Jase has a strong work ethic.\nfact2: Jase is not a strategic thinker.\nrule: If Jase has a strong work ethic, then he is either a strategic thinker or demonstrates leadership, but not both.\nconclusion: Jase demonstrates leadership.\n\nfact1: Jase pursues personal interests.\nrule: Jase either pursues personal interests or makes sacrifices, but not both.\nconclusion: Jase does not make sacrifices.\n\nfact1: Jase demonstrates leadership.\nrule: If Jase demonstrates leadership or shows dedication, then he can become a senior officer.\nconclusion: Jase is a senior officer.\n\nfact1: Jase is a senior officer.\nrule: If Jase is a senior officer, then he earns respect and serves selflessly.\nconclusion: Jase earns respect.\n\nTherefore, it is true that Jase earns respect. The correct option is: A.",
    "context": "Jase pursues personal interests. If Jase either puts his family first or gives back to the community (but not both), then he makes sacrifices. Jase values teamwork. If Slick is a senior officer, then he earns respect and serves selflessly. If Jase either analyzes situations or makes informed decisions (but not both), then he is a strategic thinker. If Avalynn demonstrates leadership or shows dedication, then he can become a senior officer. If Jase demonstrates leadership or shows dedication, then he can become a senior officer. Avalynn either values teamwork or is a strategic thinker, but not both. Slick values teamwork. If Jase is a senior officer, then he earns respect and serves selflessly. Avalynn has a strong work ethic. Slick pursues personal interests. If Cuddles has a strong work ethic, then he is either a strategic thinker or demonstrates leadership, but not both. Jase either values teamwork or is a strategic thinker, but not both. Jase has a strong work ethic. If Jase has a strong work ethic, then he is either a strategic thinker or demonstrates leadership, but not both. Jase either pursues personal interests or makes sacrifices, but not both.",
    "nl2fol": {
      "Jase pursues personal interests.": "pursue_personal_interests(Jase)",
      "If Jase either puts his family first or gives back to the community (but not both), then he makes sacrifices.": "(puts_family_first(Jase) ⊕ gives_back_community(Jase)) → make_sacrifices(Jase)",
      "Jase values teamwork.": "values_teamwork(Jase)",
      "If Slick is a senior officer, then he earns respect and serves selflessly.": "senior_officer(Slick) → (earn_respect(Slick) ∧ serve_selflessly(Slick))",
      "If Jase either analyzes situations or makes informed decisions (but not both), then he is a strategic thinker.": "(analyzes_situations(Jase) ⊕ makes_informed_decisions(Jase)) → is_strategic_thinker(Jase)",
      "If Avalynn demonstrates leadership or shows dedication, then he can become a senior officer.": "(demonstrate_leadership(Avalynn) ∨ show_dedication(Avalynn)) → senior_officer(Avalynn)",
      "If Jase demonstrates leadership or shows dedication, then he can become a senior officer.": "(demonstrate_leadership(Jase) ∨ show_dedication(Jase)) → senior_officer(Jase)",
      "Avalynn either values teamwork or is a strategic thinker, but not both.": "values_teamwork(Avalynn) ⊕ is_strategic_thinker(Avalynn)",
      "Slick values teamwork.": "values_teamwork(Slick)",
      "If Jase is a senior officer, then he earns respect and serves selflessly.": "senior_officer(Jase) → (earn_respect(Jase) ∧ serve_selflessly(Jase))",
      "Avalynn has a strong work ethic.": "has_strong_work_ethic(Avalynn)",
      "Slick pursues personal interests.": "pursues_personal_interests(Slick)",
      "If Cuddles has a strong work ethic, then he is either a strategic thinker or demonstrates leadership, but not both.": "has_strong_work_ethic(Cuddles) → (is_strategic_thinker(Cuddles) ⊕ demonstrate_leadership(Cuddles))",
      "Jase either values teamwork or is a strategic thinker, but not both.": "values_teamwork(Jase) ⊕ is_strategic_thinker(Jase)",
      "Jase has a strong work ethic.": "has_strong_work_ethic(Jase)",
      "If Jase has a strong work ethic, then he is either a strategic thinker or demonstrates leadership, but not both.": "has_strong_work_ethic(Jase) → (is_strategic_thinker(Jase) ⊕ demonstrate_leadership(Jase))",
      "Jase either pursues personal interests or makes sacrifices, but not both.": "pursue_personal_interests(Jase) ⊕ make_sacrifices(Jase)"
    },
    "conclusion_fol": "earn_respect(Jase)"
  },
  {
    "id": 208,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gatlin faces setbacks.",
    "reasoning": "fact1: Gatlin experiences failure.\nfact2: Gatlin does not learn from his mistakes.\nrule: If Gatlin experiences failure, then he either remains focused or learns from his mistakes (but not both).\nconclusion: Gatlin remains focused.\n\nfact1: Gatlin remains focused.\nfact2: Gatlin builds resilience.\nrule: Anyone who remains focused and builds resilience can overcome obstacles.\nconclusion: Gatlin overcomes obstacles.\n\nfact1: Gatlin has support.\nfact2: Gatlin does not find motivation.\nrule: If someone has support and pursues their passions, then they find motivation.\nconclusion: Gatlin does not pursue his passions.\n\nfact1: Gatlin does not pursue his passions.\nrule: Everyone pursues their passions or sets goals.\nconclusion: Gatlin sets goals.\n\nfact1: Gatlin sets goals.\nfact2: Gatlin overcomes obstacles.\nrule: If someone sets goals and overcomes obstacles, then they will achieve success.\nconclusion: Gatlin will achieve success.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Gatlin faces setbacks. The correct option is: C.",
    "context": "Gatlin has support. Gatlin does not learn from his mistakes. Everyone pursues their passions or sets goals. Gatlin builds resilience. Anyone who remains focused and builds resilience can overcome obstacles. Gatlin experiences failure. If someone has support and pursues their passions, then they find motivation. If Gatlin experiences failure, then he either remains focused or learns from his mistakes (but not both). If someone sets goals and overcomes obstacles, then they will achieve success. Gatlin does not find motivation.",
    "nl2fol": {
      "Gatlin has support.": "has_support(Gatlin)",
      "Gatlin does not learn from his mistakes.": "¬learns_from_mistakes(Gatlin)",
      "Everyone pursues their passions or sets goals.": "∀x (pursues_passions(x) ∨ sets_goals(x))",
      "Gatlin builds resilience.": "builds_resilience(Gatlin)",
      "Anyone who remains focused and builds resilience can overcome obstacles.": "∀x ((remains_focused(x) ∧ builds_resilience(x)) → overcomes_obstacles(x))",
      "Gatlin experiences failure.": "experiences_failure(Gatlin)",
      "If someone has support and pursues their passions, then they find motivation.": "∀x ((has_support(x) ∧ pursues_passions(x)) → finds_motivation(x))",
      "If Gatlin experiences failure, then he either remains focused or learns from his mistakes (but not both).": "experiences_failure(Gatlin) → (remains_focused(Gatlin) ⊕ learns_from_mistakes(Gatlin))",
      "If someone sets goals and overcomes obstacles, then they will achieve success.": "∀x ((sets_goals(x) ∧ overcomes_obstacles(x)) → achieve_success(x))",
      "Gatlin does not find motivation.": "¬finds_motivation(Gatlin)"
    },
    "conclusion_fol": "face_setbacks(Gatlin)"
  },
  {
    "id": 209,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Timothy is not skilled.",
    "reasoning": "fact1: Timothy does not make decisive moves.\nfact2: Timothy does not handle emergencies.\nrule: If Timothy either acts quickly or makes decisive moves (but not both), then he handles emergencies.\nconclusion: Timothy does not act quickly.\n\nfact1: Timothy does not act quickly.\nrule: Timothy either acts quickly or is brave.\nconclusion: Timothy is brave.\n\nfact1: Timothy remains focused.\nrule: If Timothy remains focused, then he will work under pressure.\nconclusion: Timothy works under pressure.\n\nfact1: Timothy works under pressure.\nfact2: Timothy does not think cautiously.\nrule: Everyone who works under pressure either exercises self-control or thinks cautiously (or both).\nconclusion: Timothy exercises self-control.\n\nfact1: Timothy faces challenges.\nfact2: Timothy exercises self-control.\nrule: For anyone who faces challenges and exercises self-control, they can stay calm.\nconclusion: Timothy stays calm.\n\nfact1: Timothy takes risks.\nfact2: Timothy stays calm.\nrule: If Timothy takes risks and stays calm, then he is a hero.\nconclusion: Timothy is a hero.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Timothy is not skilled. The correct option is: C.",
    "context": "Timothy either acts quickly or is brave. Timothy takes risks. If Timothy takes risks and stays calm, then he is a hero. For anyone who faces challenges and exercises self-control, they can stay calm. Timothy does not think cautiously. Timothy remains focused. Everyone who works under pressure either exercises self-control or thinks cautiously (or both). If Timothy remains focused, then he will work under pressure. Timothy does not make decisive moves. If Timothy either acts quickly or makes decisive moves (but not both), then he handles emergencies. If Timothy practices mindfulness, then he either exercises self-control or has emotional balance, but not both. Timothy does not handle emergencies. Timothy faces challenges.",
    "nl2fol": {
      "Timothy either acts quickly or is brave.": "acts_quickly(Timothy) ∨ brave(Timothy)",
      "Timothy takes risks.": "takes_risks(Timothy)",
      "If Timothy takes risks and stays calm, then he is a hero.": "(takes_risks(Timothy) ∧ stays_calm(Timothy)) → hero(Timothy)",
      "For anyone who faces challenges and exercises self-control, they can stay calm.": "∀x ((faces_challenges(x) ∧ exercises_self_control(x)) → stays_calm(x))",
      "Timothy does not think cautiously.": "¬thinks_cautiously(Timothy)",
      "Timothy remains focused.": "remains_focused(Timothy)",
      "Everyone who works under pressure either exercises self-control or thinks cautiously (or both).": "∀x (works_under_pressure(x) → (exercises_self_control(x) ∨ thinks_cautiously(x)))",
      "If Timothy remains focused, then he will work under pressure.": "remains_focused(Timothy) → works_under_pressure(Timothy)",
      "Timothy does not make decisive moves.": "¬makes_decisive_moves(Timothy)",
      "If Timothy either acts quickly or makes decisive moves (but not both), then he handles emergencies.": "(acts_quickly(Timothy) ⊕ makes_decisive_moves(Timothy)) → handles_emergencies(Timothy)",
      "If Timothy practices mindfulness, then he either exercises self-control or has emotional balance, but not both.": "practices_mindfulness(Timothy) → (exercises_self_control(Timothy) ⊕ has_emotional_balance(Timothy))",
      "Timothy does not handle emergencies.": "¬handles_emergencies(Timothy)",
      "Timothy faces challenges.": "faces_challenges(Timothy)"
    },
    "conclusion_fol": "¬skilled(Timothy)"
  },
  {
    "id": 210,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Asa understands thermal stability.",
    "reasoning": "fact1: Asa serves his local community.\nrule: Asa either contributes to society or serves his local community, but not both.\nconclusion: Asa does not contribute to society.\n\nfact1: Asa does not contribute to society.\nrule: Whoever conducts research contributes to society.\nconclusion: Asa does not conduct research.\n\nfact1: Asa has an excellent academic record.\nrule: If Asa has an excellent academic record and strong curiosity, then he will pursue a PhD.\nconclusion: Asa pursues a PhD.\n\nfact1: Asa does not conduct research.\nrule: Asa conducts research or works in industry.\nconclusion: Asa works in industry.\n\nfact1: Asa pursues a PhD.\nfact2: Asa works in industry.\nrule: If Asa pursues a PhD, then he either improves material efficiency or works in industry, but not both.\nconclusion: Asa cannot improve material efficiency.\n\nfact1: Asa cannot improve material efficiency.\nrule: Anyone who analyzes composite properties or studies material interactions can improve material efficiency.\nconclusion: Asa does not analyze composite properties.\n\nfact1: Asa does not analyze composite properties.\nfact2: Asa cannot create innovative technologies.\nrule: If Asa either analyzes composite properties or designs heat-resistant materials (but not both), then he can create innovative technologies.\nconclusion: Asa cannot design heat-resistant materials.\n\nfact1: Asa cannot design heat-resistant materials.\nrule: If Asa understands thermal stability, then he can design heat-resistant materials.\nconclusion: Asa understands thermal stability.\n\nTherefore, it is false that Asa understands thermal stability. The correct option is: B.",
    "context": "Asa cannot create innovative technologies. Karsyn serves his local community. If Asa understands thermal stability, then he can design heat-resistant materials. Avery is not creative. If Asa has expertise, then he either publishes papers or conducts research (or both). If Asa has an excellent academic record and strong curiosity, then he will pursue a PhD. If Asa examines material behavior, then he analyzes composite properties. Francesca conducts research or works in industry. Asa has an excellent academic record. Whoever conducts research contributes to society. Anyone who analyzes composite properties or studies material interactions can improve material efficiency. Asa conducts research or works in industry. Avery cannot create innovative technologies. If Karsyn has an excellent academic record and strong curiosity, then he will pursue a PhD. Asa either contributes to society or serves his local community, but not both. If Francesca attends university, then he is either curious or creative (but not both). Asa serves his local community. If Asa either analyzes composite properties or designs heat-resistant materials (but not both), then he can create innovative technologies. If someone has expertise, then they solve real problems and contribute to society. If Francesca either analyzes composite properties or designs heat-resistant materials (but not both), then he can create innovative technologies. If Asa pursues a PhD, then he either improves material efficiency or works in industry, but not both.",
    "nl2fol": {
      "Asa cannot create innovative technologies.": "¬create_innovative_technologies(Asa)",
      "Karsyn serves his local community.": "serve_local_community(Karsyn)",
      "If Asa understands thermal stability, then he can design heat-resistant materials.": "understand_thermal_stability(Asa) → design_heat_resistant_materials(Asa)",
      "Avery is not creative.": "¬creative(Avery)",
      "If Asa has expertise, then he either publishes papers or conducts research (or both).": "has_expertise(Asa) → (publish_papers(Asa) ∨ conducts_research(Asa))",
      "If Asa has an excellent academic record and strong curiosity, then he will pursue a PhD.": "excellent_academic_record(Asa) → (have_strong_curiosity(Asa) ∧ pursue_phd(Asa))",
      "If Asa examines material behavior, then he analyzes composite properties.": "examines_material_behavior(Asa) → analyze_composite_properties(Asa)",
      "Francesca conducts research or works in industry.": "conducts_research(Francesca) ∨ work_in_industry(Francesca)",
      "Asa has an excellent academic record.": "excellent_academic_record(Asa)",
      "Whoever conducts research contributes to society.": "∀x (conducts_research(x) → contributes_to_society(x))",
      "Anyone who analyzes composite properties or studies material interactions can improve material efficiency.": "∀x ((analyze_composite_properties(x) ∨ study_material_interactions(x)) → improve_material_efficiency(x))",
      "Asa conducts research or works in industry.": "conducts_research(Asa) ∨ work_in_industry(Asa)",
      "Avery cannot create innovative technologies.": "¬create_innovative_technologies(Avery)",
      "If Karsyn has an excellent academic record and strong curiosity, then he will pursue a PhD.": "excellent_academic_record(Karsyn) → (have_strong_curiosity(Karsyn) ∧ pursue_phd(Karsyn))",
      "Asa either contributes to society or serves his local community, but not both.": "contributes_to_society(Asa) ⊕ serve_local_community(Asa)",
      "If Francesca attends university, then he is either curious or creative (but not both).": "attends_university(Francesca) → (have_strong_curiosity(Francesca) ⊕ is_creative(Francesca))",
      "Asa serves his local community.": "serve_local_community(Asa)",
      "If Asa either analyzes composite properties or designs heat-resistant materials (but not both), then he can create innovative technologies.": "(analyze_composite_properties(Asa) ⊕ design_heat_resistant_materials(Asa)) → create_innovative_technologies(Asa)",
      "If someone has expertise, then they solve real problems and contribute to society.": "∀x (has_expertise(x) → (solve_real_problems(x) ∧ contributes_to_society(x)))",
      "If Francesca either analyzes composite properties or designs heat-resistant materials (but not both), then he can create innovative technologies.": "(analyze_composite_properties(Francesca) ⊕ design_heat_resistant_materials(Francesca)) → create_innovative_technologies(Francesca)",
      "If Asa pursues a PhD, then he either improves material efficiency or works in industry, but not both.": "pursue_phd(Asa) → (improve_material_efficiency(Asa) ⊕ work_in_industry(Asa))"
    },
    "conclusion_fol": "understand_thermal_stability(Asa)"
  },
  {
    "id": 211,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Meadow does not become an environmental activist.",
    "reasoning": "fact1: Meadow enjoys fresh mountains.\nrule: Meadow either enjoys fresh mountains or breathes toxic air, but not both.\nconclusion: Meadow does not breathe toxic air.\n\nfact1: Meadow does not breathe toxic air.\nfact2: Meadow sees polluted rivers.\nrule: If Meadow either breathes toxic air or sees polluted rivers (but not both), then she grows up in an industry town.\nconclusion: Meadow grows up in an industry town.\n\nfact1: Meadow grows up in an industry town.\nfact2: Meadow sees animal suffering.\nrule: If Meadow grows up in an industry town, then she either witnesses destruction or sees animal suffering.\nconclusion: Meadow does not witness destruction.\n\nfact1: Meadow does not witness destruction.\nrule: Meadow either witnesses destruction or lives near polluted areas.\nconclusion: Meadow lives near polluted areas.\n\nfact1: Meadow lives near polluted areas.\nrule: If Meadow lives near polluted areas or cares about the environment, then she becomes an environmental activist.\nconclusion: Meadow becomes an environmental activist.\n\nTherefore, it is false that Meadow does not become an environmental activist. The correct option is: B.",
    "context": "If Meadow grows up in an industry town, then she either witnesses destruction or sees animal suffering. All people who value wildlife and seek truth care about the environment. If Kailani lives near polluted areas or cares about the environment, then she becomes an environmental activist. Maisy sees polluted rivers. Meadow either enjoys fresh mountains or breathes toxic air, but not both. If Meadow lives near polluted areas or cares about the environment, then she becomes an environmental activist. Meadow enjoys fresh mountains. Meadow either witnesses destruction or lives near polluted areas. If Meadow experiences health problems, then she either witnesses destruction or sees dead animals (but not both). Cyrus does not reduce her carbon footprint. Anyone who lives near factories or works with hazardous materials can breathe toxic air. Maisy does not support conservancy. Meadow sees animal suffering. Meadow sees polluted rivers. If Meadow either breathes toxic air or sees polluted rivers (but not both), then she grows up in an industry town. If Cyrus either supports conservancy or reduces her carbon footprint (but not both), then she cares about the environment.",
    "nl2fol": {
      "If Meadow grows up in an industry town, then she either witnesses destruction or sees animal suffering.": "grows_up_in_industry_town(Meadow) → (sees_animal_suffering(Meadow) ⊕ witnesses_destruction(Meadow))",
      "All people who value wildlife and seek truth care about the environment.": "∀x (value_wildlife(x) → (seek_truth(x) ∧ care_about_the_environment(x)))",
      "If Kailani lives near polluted areas or cares about the environment, then she becomes an environmental activist.": "(live_near_polluted_areas(Kailani) ∨ care_about_the_environment(Kailani)) → become_an_environmental_activist(Kailani)",
      "Maisy sees polluted rivers.": "see_polluted_rivers(Maisy)",
      "Meadow either enjoys fresh mountains or breathes toxic air, but not both.": "enjoy_fresh_mountains(Meadow) ⊕ breathe_toxic_air(Meadow)",
      "If Meadow lives near polluted areas or cares about the environment, then she becomes an environmental activist.": "(live_near_polluted_areas(Meadow) ∨ care_about_the_environment(Meadow)) → become_an_environmental_activist(Meadow)",
      "Meadow enjoys fresh mountains.": "enjoy_fresh_mountains(Meadow)",
      "Meadow either witnesses destruction or lives near polluted areas.": "witnesses_destruction(Meadow) ∨ live_near_polluted_areas(Meadow)",
      "If Meadow experiences health problems, then she either witnesses destruction or sees dead animals (but not both).": "experiences_health_problems(Meadow) → (witnesses_destruction(Meadow) ⊕ sees_dead_animals(Meadow))",
      "Cyrus does not reduce her carbon footprint.": "¬reduce_carbon_footprint(Cyrus)",
      "Anyone who lives near factories or works with hazardous materials can breathe toxic air.": "∀x ((live_near_factories(x) ∨ work_with_hazardous_materials(x)) → breathe_toxic_air(x))",
      "Maisy does not support conservancy.": "¬support_conservancy(Maisy)",
      "Meadow sees animal suffering.": "sees_animal_suffering(Meadow)",
      "Meadow sees polluted rivers.": "see_polluted_rivers(Meadow)",
      "If Meadow either breathes toxic air or sees polluted rivers (but not both), then she grows up in an industry town.": "(breathe_toxic_air(Meadow) ⊕ see_polluted_rivers(Meadow)) → grows_up_in_industry_town(Meadow)",
      "If Cyrus either supports conservancy or reduces her carbon footprint (but not both), then she cares about the environment.": "(supports_conservancy(Cyrus) ⊕ reduce_carbon_footprint(Cyrus)) → care_about_the_environment(Cyrus)"
    },
    "conclusion_fol": "¬become_an_environmental_activist(Meadow)"
  },
  {
    "id": 212,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Malik enhances the beauty of his community.",
    "reasoning": "fact1: Malik does not celebrate local history.\nfact2: Malik does not support artistic expression.\nrule: Anyone who preserves cultural heritage or celebrates local history supports artistic expression.\nconclusion: Malik does not preserve cultural heritage.\n\nfact1: Malik does not embrace modernism.\nrule: If Malik honors his tradition, he may not be embracing modernism, and vice versa.\nconclusion: Malik honors his tradition.\n\nfact1: Malik does not preserve cultural heritage.\nrule: Anyone who represents their community or tells local stories can preserve cultural heritage.\nconclusion: Malik does not represent his community.\n\nfact1: Malik does not represent his community.\nrule: Those who contribute to the cultural identity of their community represent that community.\nconclusion: Malik does not contribute to the cultural identity of his community.\n\nfact1: Malik does not design street murals.\nfact2: Malik does not contribute to the cultural identity of his community.\nrule: If someone either creates public art or designs street murals (but not both), then they contribute to the cultural identity of their community.\nconclusion: Malik does not create public art.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Malik enhances the beauty of his community. The correct option is: C.",
    "context": "If someone either creates public art or designs street murals (but not both), then they contribute to the cultural identity of their community. Those who contribute to the cultural identity of their community represent that community. If Malik honors his tradition, he may not be embracing modernism, and vice versa. Malik does not embrace modernism. Anyone who represents their community or tells local stories can preserve cultural heritage. Malik does not celebrate local history. Malik does not support artistic expression. Malik does not design street murals. Anyone who preserves cultural heritage or celebrates local history supports artistic expression. If Malik engages in street art, then he either tells local stories or promotes cultural exchange.",
    "nl2fol": {
      "If someone either creates public art or designs street murals (but not both), then they contribute to the cultural identity of their community.": "∀x ((create_public_art(x) ⊕ design_street_murals(x)) → contribute_cultural_identity(x))",
      "Those who contribute to the cultural identity of their community represent that community.": "∀x (contribute_cultural_identity(x) → represents_community(x))",
      "If Malik honors his tradition, he may not be embracing modernism, and vice versa.": "embraces_modernism(Malik) ⊕ honors_tradition(Malik)",
      "Malik does not embrace modernism.": "¬embraces_modernism(Malik)",
      "Anyone who represents their community or tells local stories can preserve cultural heritage.": "∀x ((represents_community(x) ∨ tells_local_stories(x)) → preserves_cultural_heritage(x))",
      "Malik does not celebrate local history.": "¬celebrates_local_history(Malik)",
      "Malik does not support artistic expression.": "¬supports_artistic_expression(Malik)",
      "Malik does not design street murals.": "¬design_street_murals(Malik)",
      "Anyone who preserves cultural heritage or celebrates local history supports artistic expression.": "∀x ((preserves_cultural_heritage(x) ∨ celebrates_local_history(x)) → supports_artistic_expression(x))",
      "If Malik engages in street art, then he either tells local stories or promotes cultural exchange.": "engages_in_street_art(Malik) → (tells_local_stories(Malik) ∨ promotes_cultural_exchange(Malik))"
    },
    "conclusion_fol": "enhance_community_beauty(Malik)"
  },
  {
    "id": 213,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Musa does not find a way to overcome.",
    "reasoning": "fact1: Musa sets goals.\nfact2: Musa does not gain recognition.\nrule: If Musa sets goals and achieves success, then he will gain recognition.\nconclusion: Musa does not achieve success.\n\nfact1: Musa does not avoid risks.\nrule: Musa either experiences failure or avoids risks.\nconclusion: Musa experiences failure.\n\nfact1: Musa does not achieve success.\nrule: If Musa learns from his mistakes, then he will achieve success.\nconclusion: Musa does not learn from his mistakes.\n\nfact1: Musa experiences failure.\nfact2: Musa does not learn from his mistakes.\nrule: If Musa experiences failure, then he will either learn from his mistakes or stay motivated, but not both.\nconclusion: Musa stays motivated.\n\nfact1: Musa becomes stronger.\nfact2: Musa stays motivated.\nrule: If Musa faces adversity, then he will either become stronger or stay motivated, but not both.\nconclusion: Musa does not face adversity.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Musa does not find a way to overcome. The correct option is: C.",
    "context": "If Mekhi faces adversity, then he will show resilience and find a way to overcome it. Trenton either experiences failure or avoids risks. If Landen learns from his mistakes, then he will achieve success. Musa does not gain recognition. If Trenton faces adversity, then he will either become stronger or stay motivated, but not both. Landen does not gain recognition. If Landen experiences failure, then he will either learn from his mistakes or stay motivated, but not both. Musa pursues his passions or achieves success. Musa becomes stronger. If Mekhi sets goals and achieves success, then he will gain recognition. Musa sets goals. Mekhi becomes stronger. Musa does not avoid risks. If Musa learns from his mistakes, then he will achieve success. If Musa sets goals and achieves success, then he will gain recognition. If Musa faces adversity, then he will either become stronger or stay motivated, but not both. If Musa experiences failure, then he will either learn from his mistakes or stay motivated, but not both. Musa either experiences failure or avoids risks. Musa either has determination or stays motivated.",
    "nl2fol": {
      "If Mekhi faces adversity, then he will show resilience and find a way to overcome it.": "face_adversity(Mekhi) → (show_resilience(Mekhi) ∧ find_a_way_to_overcome(Mekhi))",
      "Trenton either experiences failure or avoids risks.": "experiences_failure(Trenton) ∨ avoids_risks(Trenton)",
      "If Landen learns from his mistakes, then he will achieve success.": "learn_from_mistakes(Landen) → achieve_success(Landen)",
      "Musa does not gain recognition.": "¬gains_recognition(Musa)",
      "If Trenton faces adversity, then he will either become stronger or stay motivated, but not both.": "face_adversity(Trenton) → (become_stronger(Trenton) ⊕ stay_motivated(Trenton))",
      "Landen does not gain recognition.": "¬gain_recognition(Landen)",
      "If Landen experiences failure, then he will either learn from his mistakes or stay motivated, but not both.": "experiences_failure(Landen) → (learn_from_mistakes(Landen) ⊕ stay_motivated(Landen))",
      "Musa pursues his passions or achieves success.": "pursues_passions(Musa) ∨ achieve_success(Musa)",
      "Musa becomes stronger.": "become_stronger(Musa)",
      "If Mekhi sets goals and achieves success, then he will gain recognition.": "(sets_goals(Mekhi) ∧ achieve_success(Mekhi)) → gains_recognition(Mekhi)",
      "Musa sets goals.": "sets_goals(Musa)",
      "Mekhi becomes stronger.": "become_stronger(Mekhi)",
      "Musa does not avoid risks.": "¬avoids_risks(Musa)",
      "If Musa learns from his mistakes, then he will achieve success.": "learn_from_mistakes(Musa) → achieve_success(Musa)",
      "If Musa sets goals and achieves success, then he will gain recognition.": "(sets_goals(Musa) ∧ achieve_success(Musa)) → gains_recognition(Musa)",
      "If Musa faces adversity, then he will either become stronger or stay motivated, but not both.": "face_adversity(Musa) → (become_stronger(Musa) ⊕ stay_motivated(Musa))",
      "If Musa experiences failure, then he will either learn from his mistakes or stay motivated, but not both.": "experiences_failure(Musa) → (learn_from_mistakes(Musa) ⊕ stay_motivated(Musa))",
      "Musa either experiences failure or avoids risks.": "experiences_failure(Musa) ∨ avoids_risks(Musa)",
      "Musa either has determination or stays motivated.": "has_determination(Musa) ∨ stay_motivated(Musa)"
    },
    "conclusion_fol": "¬find_a_way_to_overcome(Musa)"
  },
  {
    "id": 214,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jamari is a good footballer.",
    "reasoning": "fact1: Jamari has strategic skills.\nfact2: Jamari cannot lead his team successfully.\nrule: If someone has strategic skills and performs well, then they can lead their team successfully.\nconclusion: Jamari does not perform well.\n\nfact1: Jamari does not excel under pressure.\nrule: Jamari either excels under pressure or has strong technique, but not both.\nconclusion: Jamari has strong technique.\n\nfact1: Jamari does not inspire others.\nrule: Anyone who outperforms others or gets recognition inspires others.\nconclusion: Jamari does not outperform others.\n\nfact1: Jamari has quick reflexes.\nfact2: Jamari does not perform well.\nrule: If someone has endurance or has quick reflexes, then they perform well.\nconclusion: Jamari has endurance.\n\nfact1: Jamari has strong technique.\nfact2: Jamari does not outperform others.\nrule: If Jamari has good agility and strong technique, then he will outperform others.\nconclusion: Jamari does not have good agility.\n\nfact1: Jamari has endurance.\nrule: Everyone either has endurance or has good speed, but not both is not necessarily true.\nconclusion: Jamari does not have good speed.\n\nfact1: Jamari does not have good speed.\nfact2: Jamari does not have good agility.\nrule: For all humans, if someone is a good footballer, then they either have good speed or have good agility (or both).\nconclusion: Jamari is a good footballer.\n\nTherefore, it is false that Jamari is a good footballer. The correct option is: B.",
    "context": "Anyone who outperforms others or gets recognition inspires others. If someone has endurance or has quick reflexes, then they perform well. Jamari cannot lead his team successfully. Everyone either has endurance or has good speed, but not both is not necessarily true. Martin either excels under pressure or has strong technique, but not both. Jamari has quick reflexes. For all humans, if someone is a good footballer, then they either have good speed or have good agility (or both). Jamari has strategic skills. If Jamari either trains regularly or eats nutritious food (but not both), then he has endurance. Megan has quick reflexes. Jamari does not inspire others. Aya does not inspire others. If Jamari has good agility and strong technique, then he will outperform others. If Martin has good agility and strong technique, then he will outperform others. Jamari either excels under pressure or has strong technique, but not both. Jamari does not excel under pressure. If someone has strategic skills and performs well, then they can lead their team successfully. Megan cannot lead his team successfully. Martin does not excel under pressure.",
    "nl2fol": {
      "Anyone who outperforms others or gets recognition inspires others.": "∀x ((outperforms_others(x) ∨ gets_recognition(x)) → inspires_others(x))",
      "If someone has endurance or has quick reflexes, then they perform well.": "∀x ((has_endurance(x) ⊕ has_quick_reflex(x)) → performs_well(x))",
      "Jamari cannot lead his team successfully.": "¬leads_team_successfully(Jamari)",
      "Everyone either has endurance or has good speed, but not both is not necessarily true.": "∀x (has_endurance(x) ⊕ have_good_speed(x))",
      "Martin either excels under pressure or has strong technique, but not both.": "excels_under_pressure(Martin) ⊕ has_strong_technique(Martin)",
      "Jamari has quick reflexes.": "has_quick_reflex(Jamari)",
      "For all humans, if someone is a good footballer, then they either have good speed or have good agility (or both).": "∀x (good_footballer(x) → (have_good_speed(x) ∨ have_good_agility(x)))",
      "Jamari has strategic skills.": "has_strategic_skills(Jamari)",
      "If Jamari either trains regularly or eats nutritious food (but not both), then he has endurance.": "(trains_regularly(Jamari) ⊕ eats_nutritious_food(Jamari)) → has_endurance(Jamari)",
      "Megan has quick reflexes.": "has_quick_reflex(Megan)",
      "Jamari does not inspire others.": "¬inspires_others(Jamari)",
      "Aya does not inspire others.": "¬inspires_others(Aya)",
      "If Jamari has good agility and strong technique, then he will outperform others.": "(have_good_agility(Jamari) ∧ has_strong_technique(Jamari)) → outperforms_others(Jamari)",
      "If Martin has good agility and strong technique, then he will outperform others.": "(have_good_agility(Martin) ∧ has_strong_technique(Martin)) → outperforms_others(Martin)",
      "Jamari either excels under pressure or has strong technique, but not both.": "excels_under_pressure(Jamari) ⊕ has_strong_technique(Jamari)",
      "Jamari does not excel under pressure.": "¬excels_under_pressure(Jamari)",
      "If someone has strategic skills and performs well, then they can lead their team successfully.": "∀x ((has_strategic_skills(x) ∧ performs_well(x)) → leads_team_successfully(x))",
      "Megan cannot lead his team successfully.": "¬leads_team_successfully(Megan)",
      "Martin does not excel under pressure.": "¬excels_under_pressure(Martin)"
    },
    "conclusion_fol": "good_footballer(Jamari)"
  },
  {
    "id": 215,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Samantha is not successful.",
    "reasoning": "fact1: Samantha works under a mentor.\nrule: If someone works under a mentor, then they gain practical experience.\nconclusion: Samantha gains practical experience.\n\nfact1: Samantha gains practical experience.\nrule: Samantha either gains practical experience or reads widely, but not both.\nconclusion: Samantha does not read widely.\n\nfact1: Samantha does not put in diligent effort.\nrule: Samantha puts in diligent effort or has a hard work ethic.\nconclusion: Samantha has a hard work ethic.\n\nfact1: Samantha achieves recognition.\nfact2: Samantha has a hard work ethic.\nrule: If Samantha achieves recognition, then she has either natural talent or a hard work ethic (but not both).\nconclusion: Samantha does not have natural talent.\n\nfact1: Samantha does not read widely.\nfact2: Samantha attends seminars.\nrule: If Samantha either reads widely or attends seminars (but not both), then she has formal education.\nconclusion: Samantha has a formal education.\n\nfact1: Samantha has a formal education.\nfact2: Samantha does not have natural talent.\nrule: If Samantha has either formal education or natural talent (but not both), then she is successful.\nconclusion: Samantha is successful.\n\nTherefore, it is false that Samantha is not successful. The correct option is: B.",
    "context": "If Samantha either reads widely or attends seminars (but not both), then she has formal education. If someone works under a mentor, then they gain practical experience. Samantha either gains practical experience or reads widely, but not both. If Samantha overcomes adversity, then she either has natural talent or learns quickly. Samantha puts in diligent effort or has a hard work ethic. Everyone who is self-taught either reads widely or learns through apprenticeship (or both). Charli either gains practical experience or reads widely, but not both. Samantha does not put in diligent effort. Samantha works under a mentor. Samantha attends seminars. If Samantha achieves recognition, then she has either natural talent or a hard work ethic (but not both). Charli works under a mentor. Aries achieves recognition. If Samantha has either formal education or natural talent (but not both), then she is successful. Samantha achieves recognition.",
    "nl2fol": {
      "If Samantha either reads widely or attends seminars (but not both), then she has formal education.": "(reads_widely(Samantha) ⊕ attends_seminars(Samantha)) → formal_education(Samantha)",
      "If someone works under a mentor, then they gain practical experience.": "∀x (works_under_mentor(x) → gains_practical_experience(x))",
      "Samantha either gains practical experience or reads widely, but not both.": "gains_practical_experience(Samantha) ⊕ reads_widely(Samantha)",
      "If Samantha overcomes adversity, then she either has natural talent or learns quickly.": "overcomes_adversity(Samantha) → (natural_talent(Samantha) ∨ learns_quickly(Samantha))",
      "Samantha puts in diligent effort or has a hard work ethic.": "diligent_effort(Samantha) ∨ has_hard_work_ethic(Samantha)",
      "Everyone who is self-taught either reads widely or learns through apprenticeship (or both).": "∀x (self_taught(x) → (reads_widely(x) ∨ learns_through_apprenticeship(x)))",
      "Charli either gains practical experience or reads widely, but not both.": "gains_practical_experience(Charli) ⊕ reads_widely(Charli)",
      "Samantha does not put in diligent effort.": "¬diligent_effort(Samantha)",
      "Samantha works under a mentor.": "works_under_mentor(Samantha)",
      "Samantha attends seminars.": "attends_seminars(Samantha)",
      "If Samantha achieves recognition, then she has either natural talent or a hard work ethic (but not both).": "achieves_recognition(Samantha) → (natural_talent(Samantha) ⊕ has_hard_work_ethic(Samantha))",
      "Charli works under a mentor.": "works_under_mentor(Charli)",
      "Aries achieves recognition.": "achieves_recognition(Aries)",
      "If Samantha has either formal education or natural talent (but not both), then she is successful.": "(formal_education(Samantha) ⊕ natural_talent(Samantha)) → successful(Samantha)",
      "Samantha achieves recognition.": "achieves_recognition(Samantha)"
    },
    "conclusion_fol": "¬successful(Samantha)"
  },
  {
    "id": 216,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Colten is kind-hearted.",
    "reasoning": "fact1: Colten listens carefully.\nrule: Anyone who listens carefully or asks questions can follow directions.\nconclusion: Colten follows directions.\n\nfact1: Colten reads manuals.\nrule: Colten either fixes broken things or reads manuals, but not necessarily both.\nconclusion: Colten does not fix broken things.\n\nfact1: Colten follows directions.\nrule: Colten either works independently or follows directions, but not both.\nconclusion: Colten does not work independently.\n\nfact1: Colten does not work independently.\nrule: Colten either works independently or lends a helping hand, but not both.\nconclusion: Colten lends a helping hand.\n\nfact1: Colten lends a helping hand.\nfact2: Colten does not fix broken things.\nrule: Everyone who lends a helping hand either fixes broken things or has common sense (or both).\nconclusion: Colten has common sense.\n\nfact1: Colten has common sense.\nrule: A person either has common sense or is intelligent, but not necessarily both.\nconclusion: Colten is not intelligent.\n\nfact1: Colten is not intelligent.\nrule: Colten is either intelligent or kind-hearted (or both).\nconclusion: Colten is kind-hearted.\n\nTherefore, it is true that Colten is kind-hearted. The correct option is: A.",
    "context": "Colten either works independently or lends a helping hand, but not both. All mechanically inclined people fix broken things and enjoy problem-solving. Colten either fixes broken things or reads manuals, but not necessarily both. Colten is either intelligent or kind-hearted (or both). Colten either works independently or follows directions, but not both. Colten listens carefully. Everyone who lends a helping hand either fixes broken things or has common sense (or both). A person either has common sense or is intelligent, but not necessarily both. Colten reads manuals. Anyone who listens carefully or asks questions can follow directions.",
    "nl2fol": {
      "Colten either works independently or lends a helping hand, but not both.": "works_independently(Colten) ⊕ lends_helping_hand(Colten)",
      "All mechanically inclined people fix broken things and enjoy problem-solving.": "∀x (mechanically_inclined(x) → (fixes_broken_things(x) ∧ enjoys_problem_solving(x)))",
      "Colten either fixes broken things or reads manuals, but not necessarily both.": "reads_manuals(Colten) ⊕ fixes_broken_things(Colten)",
      "Colten is either intelligent or kind-hearted (or both).": "intelligent(Colten) ∨ kind_hearted(Colten)",
      "Colten either works independently or follows directions, but not both.": "follows_directions(Colten) ⊕ works_independently(Colten)",
      "Colten listens carefully.": "listens_carefully(Colten)",
      "Everyone who lends a helping hand either fixes broken things or has common sense (or both).": "∀x (lends_helping_hand(x) → (fixes_broken_things(x) ∨ has_common_sense(x)))",
      "A person either has common sense or is intelligent, but not necessarily both.": "∀x (has_common_sense(x) ⊕ intelligent(x))",
      "Colten reads manuals.": "reads_manuals(Colten)",
      "Anyone who listens carefully or asks questions can follow directions.": "∀x ((listens_carefully(x) ∨ asks_questions(x)) → follows_directions(x))"
    },
    "conclusion_fol": "kind_hearted(Colten)"
  },
  {
    "id": 217,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alvaro does not overcome challenges.",
    "reasoning": "fact1: Alvaro has ambition.\nfact2: Alvaro values experience.\nrule: If someone has ambition, then they work diligently and value experience.\nconclusion: Alvaro works diligently.\n\nfact1: Alvaro works diligently.\nrule: Alvaro either learns quickly or works diligently, but not both.\nconclusion: Alvaro does not learn quickly.\n\nfact1: Alvaro sets targets.\nfact2: Alvaro does not learn quickly.\nrule: If Alvaro either sets targets or learns quickly (but not both), then he stays motivated.\nconclusion: Alvaro stays motivated.\n\nfact1: Alvaro faces adversity.\nfact2: Alvaro stays motivated.\nrule: If Alvaro faces adversity, then he either stays motivated or pursues his goals, but not both.\nconclusion: Alvaro does not pursue goals.\n\nfact1: Alvaro does not pursue goals.\nrule: Alvaro pursues goals or has passion.\nconclusion: Alvaro has passion.\n\nfact1: Alvaro has passion.\nfact2: Alvaro achieves success.\nrule: If Alvaro has passion, then he can either achieve success or inspire others, but not both.\nconclusion: Alvaro does not inspire others.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Alvaro does not overcome challenges. The correct option is: C.",
    "context": "If someone has ambition, then they work diligently and value experience. Alvaro achieves success. Alvaro values experience. Alvaro sets targets. If Alvaro either sets targets or learns quickly (but not both), then he stays motivated. If Alvaro faces adversity, then he either stays motivated or pursues his goals, but not both. If Alvaro has passion, then he can either achieve success or inspire others, but not both. Alvaro faces adversity. Alvaro either learns quickly or works diligently, but not both. Alvaro learns quickly if he seeks knowledge. Alvaro pushes limits or inspires others. Alvaro has ambition. Alvaro pursues goals or has passion. If someone enjoys competition, then they cultivate skills and have passion.",
    "nl2fol": {
      "If someone has ambition, then they work diligently and value experience.": "∀x (has_ambition(x) → (works_diligently(x) ∧ value_experience(x)))",
      "Alvaro achieves success.": "achieve_success(Alvaro)",
      "Alvaro values experience.": "value_experience(Alvaro)",
      "Alvaro sets targets.": "sets_targets(Alvaro)",
      "If Alvaro either sets targets or learns quickly (but not both), then he stays motivated.": "(sets_targets(Alvaro) ⊕ learns_quickly(Alvaro)) → stays_motivated(Alvaro)",
      "If Alvaro faces adversity, then he either stays motivated or pursues his goals, but not both.": "faces_adversity(Alvaro) → (stays_motivated(Alvaro) ⊕ pursues_goals(Alvaro))",
      "If Alvaro has passion, then he can either achieve success or inspire others, but not both.": "has_passion(Alvaro) → (achieve_success(Alvaro) ⊕ inspire_others(Alvaro))",
      "Alvaro faces adversity.": "faces_adversity(Alvaro)",
      "Alvaro either learns quickly or works diligently, but not both.": "works_diligently(Alvaro) ⊕ learns_quickly(Alvaro)",
      "Alvaro learns quickly if he seeks knowledge.": "seeks_knowledge(Alvaro) → learns_quickly(Alvaro)",
      "Alvaro pushes limits or inspires others.": "pushes_limits(Alvaro) ∨ inspire_others(Alvaro)",
      "Alvaro has ambition.": "has_ambition(Alvaro)",
      "Alvaro pursues goals or has passion.": "pursues_goals(Alvaro) ∨ has_passion(Alvaro)",
      "If someone enjoys competition, then they cultivate skills and have passion.": "∀x (enjoy_competition(x) → (cultivate_skills(x) ∧ has_passion(x)))"
    },
    "conclusion_fol": "¬overcome_challenges(Alvaro)"
  },
  {
    "id": 218,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jayceon gives back to his community.",
    "reasoning": "fact1: Jayceon has strong motivation.\nfact2: Jayceon has natural talent.\nrule: If Jayceon has strong motivation, then he either has natural talent or works tirelessly, but not both.\nconclusion: Jayceon does not work tirelessly.\n\nfact1: Jayceon has discipline.\nrule: Anyone who has discipline will stay focused.\nconclusion: Jayceon stays focused.\n\nfact1: Jayceon stays focused.\nrule: Everyone either stays focused or sets clear goals, but not both is not necessarily true.\nconclusion: Jayceon does not set clear goals.\n\nfact1: Jayceon loves competition.\nrule: If Jayceon loves competition, then he is passionate about sports.\nconclusion: Jayceon is passionate about sports.\n\nfact1: Jayceon is passionate about sports.\nfact2: Jayceon becomes a role model.\nrule: If Jayceon is passionate about sports, then he is either dedicated to practice or become a role model, but not both.\nconclusion: Jayceon is not dedicated to practice.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Jayceon gives back to his community. The correct option is: C.",
    "context": "If Jayceon has strong motivation, then he either has natural talent or works tirelessly, but not both. Everyone either stays focused or sets clear goals, but not both is not necessarily true. If Jayceon is passionate about sports, then he is either dedicated to practice or become a role model, but not both. Jayceon has strong motivation. Jayceon loves competition. Jayceon has discipline. If Jayceon loves competition, then he is passionate about sports. Anyone who has discipline will stay focused. Jayceon becomes a role model. If someone has a good coach and trains regularly, then they can achieve professional success. Jayceon has natural talent.",
    "nl2fol": {
      "If Jayceon has strong motivation, then he either has natural talent or works tirelessly, but not both.": "has_strong_motivation(Jayceon) → (has_natural_talent(Jayceon) ⊕ works_tirelessly(Jayceon))",
      "Everyone either stays focused or sets clear goals, but not both is not necessarily true.": "∀x (stays_focused(x) ⊕ sets_clear_goals(x))",
      "If Jayceon is passionate about sports, then he is either dedicated to practice or become a role model, but not both.": "passionate_about_sports(Jayceon) → (dedicated_to_practice(Jayceon) ⊕ become_role_model(Jayceon))",
      "Jayceon has strong motivation.": "has_strong_motivation(Jayceon)",
      "Jayceon loves competition.": "loves_competition(Jayceon)",
      "Jayceon has discipline.": "has_discipline(Jayceon)",
      "If Jayceon loves competition, then he is passionate about sports.": "loves_competition(Jayceon) → passionate_about_sports(Jayceon)",
      "Anyone who has discipline will stay focused.": "∀x (has_discipline(x) → stays_focused(x))",
      "Jayceon becomes a role model.": "become_role_model(Jayceon)",
      "If someone has a good coach and trains regularly, then they can achieve professional success.": "∀x ((has_good_coach(x) ∧ trains_regularly(x)) → achieve_professional_success(x))",
      "Jayceon has natural talent.": "has_natural_talent(Jayceon)"
    },
    "conclusion_fol": "give_back_to_community(Jayceon)"
  },
  {
    "id": 219,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Heaven discovers natural remedies.",
    "reasoning": "fact1: Heaven follows tradition.\nrule: Heaven either follows tradition or thinks outside the box, but not both.\nconclusion: Heaven does not think outside the box.\n\nfact1: Heaven takes calculated risks.\nrule: Heaven either takes calculated risks or has good instincts, but not necessarily both.\nconclusion: Heaven does not have good instincts.\n\nfact1: Heaven does not have good instincts.\nfact2: Heaven does not think outside the box.\nrule: If Heaven values sustainability, then she has good instincts and thinks outside the box.\nconclusion: Heaven does not value sustainability.\n\nfact1: Heaven does not value sustainability.\nfact2: Heaven does not find innovative solutions.\nrule: If Heaven either values sustainability or is passionate about nature, then she will find innovative solutions.\nconclusion: Heaven is not passionate about nature.\n\nfact1: Heaven runs a small business.\nfact2: Heaven does not support environmental causes.\nrule: If Heaven runs a small business, then she either supports environmental causes or fosters local economies (but not both).\nconclusion: Heaven fosters local economies.\n\nfact1: Heaven fosters local economies.\nfact2: Heaven does not drive social change.\nrule: If Heaven either builds a strong community or fosters local economies (but not both), then she drives social change.\nconclusion: Heaven builds a strong community.\n\nfact1: Heaven builds a strong community.\nrule: Heaven either builds a strong community or creates successful products, but not both.\nconclusion: Heaven does not create successful products.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Heaven discovers natural remedies. The correct option is: C.",
    "context": "If Heaven runs a small business, then she either supports environmental causes or fosters local economies (but not both). Heaven either builds a strong community or creates successful products, but not both. If Heaven empowers others, then she either fosters local economies or promotes innovation (or both). Heaven either takes calculated risks or has good instincts, but not necessarily both. If Fiona is passionate about nature, then she will discover natural remedies and create successful products. Anders runs a small business. If Heaven works hard, then she will create successful products. Heaven does not drive social change. Mackenzie either takes calculated risks or has good instincts, but not necessarily both. Fiona either follows tradition or thinks outside the box, but not both. If Heaven either values sustainability or is passionate about nature, then she will find innovative solutions. If Fiona runs a small business, then she either supports environmental causes or fosters local economies (but not both). Heaven follows tradition. Mackenzie does not support environmental causes. Heaven runs a small business. Heaven either follows tradition or thinks outside the box, but not both. Mackenzie does not find innovative solutions. If someone loves plants and studies ecology, then they are passionate about nature. If Mackenzie values sustainability, then she has good instincts and thinks outside the box. If Heaven either builds a strong community or fosters local economies (but not both), then she drives social change. If Heaven either helps others or mentors people (but not both), then she is able to build a strong community. Heaven does not support environmental causes. If Heaven values sustainability, then she has good instincts and thinks outside the box. Heaven takes calculated risks. Heaven does not find innovative solutions. Anders takes calculated risks.",
    "nl2fol": {
      "If Heaven runs a small business, then she either supports environmental causes or fosters local economies (but not both).": "runs_small_business(Heaven) → (supports_environmental_causes(Heaven) ⊕ foster_local_economies(Heaven))",
      "Heaven either builds a strong community or creates successful products, but not both.": "build_strong_community(Heaven) ⊕ create_successful_products(Heaven)",
      "If Heaven empowers others, then she either fosters local economies or promotes innovation (or both).": "empower_others(Heaven) → (foster_local_economies(Heaven) ∨ promote_innovation(Heaven))",
      "Heaven either takes calculated risks or has good instincts, but not necessarily both.": "takes_calculated_risks(Heaven) ⊕ has_good_instincts(Heaven)",
      "If Fiona is passionate about nature, then she will discover natural remedies and create successful products.": "passionate_about_nature(Fiona) → (discover_natural_remedies(Fiona) ∧ create_successful_products(Fiona))",
      "Anders runs a small business.": "runs_small_business(Anders)",
      "If Heaven works hard, then she will create successful products.": "works_hard(Heaven) → create_successful_products(Heaven)",
      "Heaven does not drive social change.": "¬drive_social_change(Heaven)",
      "Mackenzie either takes calculated risks or has good instincts, but not necessarily both.": "takes_calculated_risks(Mackenzie) ⊕ has_good_instincts(Mackenzie)",
      "Fiona either follows tradition or thinks outside the box, but not both.": "follows_tradition(Fiona) ⊕ think_outside_box(Fiona)",
      "If Heaven either values sustainability or is passionate about nature, then she will find innovative solutions.": "(values_sustainability(Heaven) ⊕ passionate_about_nature(Heaven)) → finds_innovative_solutions(Heaven)",
      "If Fiona runs a small business, then she either supports environmental causes or fosters local economies (but not both).": "runs_small_business(Fiona) → (supports_environmental_causes(Fiona) ⊕ foster_local_economies(Fiona))",
      "Heaven follows tradition.": "follows_tradition(Heaven)",
      "Mackenzie does not support environmental causes.": "¬supports_environmental_causes(Mackenzie)",
      "Heaven runs a small business.": "runs_small_business(Heaven)",
      "Heaven either follows tradition or thinks outside the box, but not both.": "follows_tradition(Heaven) ⊕ think_outside_box(Heaven)",
      "Mackenzie does not find innovative solutions.": "¬finds_innovative_solutions(Mackenzie)",
      "If someone loves plants and studies ecology, then they are passionate about nature.": "∀x ((loves_plants(x) ∧ studies_ecology(x)) → passionate_about_nature(x))",
      "If Mackenzie values sustainability, then she has good instincts and thinks outside the box.": "values_sustainability(Mackenzie) → (has_good_instincts(Mackenzie) ∧ think_outside_box(Mackenzie))",
      "If Heaven either builds a strong community or fosters local economies (but not both), then she drives social change.": "(build_strong_community(Heaven) ⊕ foster_local_economies(Heaven)) → drive_social_change(Heaven)",
      "If Heaven either helps others or mentors people (but not both), then she is able to build a strong community.": "(helps_others(Heaven) ⊕ mentors_people(Heaven)) → build_strong_community(Heaven)",
      "Heaven does not support environmental causes.": "¬supports_environmental_causes(Heaven)",
      "If Heaven values sustainability, then she has good instincts and thinks outside the box.": "values_sustainability(Heaven) → (has_good_instincts(Heaven) ∧ think_outside_box(Heaven))",
      "Heaven takes calculated risks.": "takes_calculated_risks(Heaven)",
      "Heaven does not find innovative solutions.": "¬finds_innovative_solutions(Heaven)",
      "Anders takes calculated risks.": "takes_calculated_risks(Anders)"
    },
    "conclusion_fol": "discover_natural_remedies(Heaven)"
  },
  {
    "id": 220,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clay does not look like other polar bears.",
    "reasoning": "fact1: Clay communicates clearly.\nrule: If Clay listens actively or communicates clearly, then he has social skills.\nconclusion: Clay has social skills.\n\nfact1: Clay has social skills.\nfact2: Clay cooperates with others.\nrule: If Clay has social skills and cooperates with others, then he tends to live in groups.\nconclusion: Clay lives in groups.\n\nfact1: Clay has courage.\nfact2: Clay is intelligent.\nrule: If Clay has courage, then he either has respect or is intelligent, but not both.\nconclusion: Clay has not earned respect from others.\n\nfact1: Clay lives in groups.\nrule: Clay either lives in groups or adapts to his environment, but these two are not necessarily related.\nconclusion: Clay does not adapt to the environment.\n\nfact1: Clay does not adapt to the environment.\nrule: Every polar bear adapts to the environment or is an experienced hunter.\nconclusion: Clay is an experienced hunter.\n\nfact1: Clay is an experienced hunter.\nfact2: Clay has not earned respect from others.\nrule: If Clay is an experienced hunter, then he either has distinctive features or has earned respect from others (or both).\nconclusion: Clay has distinctive features.\n\nfact1: Clay has distinctive features.\nrule: Either Clay has distinctive features or he looks like other polar bears, but not both.\nconclusion: Clay does not look like other polar bears.\n\nTherefore, it is true that Clay does not look like other polar bears. The correct option is: A.",
    "context": "Dangelo cooperates with others. Antonio communicates clearly. Either Clay has distinctive features or he looks like other polar bears, but not both. If Dangelo is an experienced hunter, then he either has distinctive features or has earned respect from others (or both). Clay either lives in groups or adapts to his environment, but these two are not necessarily related. Clay cooperates with others. Clay has courage. Every polar bear adapts to the environment or is an experienced hunter. Any polar bear that has battle scars or is large in size has distinctive features. If Clay has social skills and cooperates with others, then he tends to live in groups. If Clay has courage, then he either has respect or is intelligent, but not both. If Clay is an experienced hunter, then he either has distinctive features or has earned respect from others (or both). Clay is intelligent. If Chris has social skills and cooperates with others, then he tends to live in groups. Every polar bear who leads others either builds strong bonds with fellow bears or has social skills (or both). Clay communicates clearly. Antonio is intelligent. If Clay listens actively or communicates clearly, then he has social skills.",
    "nl2fol": {
      "Dangelo cooperates with others.": "cooperates_with_others(Dangelo)",
      "Antonio communicates clearly.": "communicates_clearly(Antonio)",
      "Either Clay has distinctive features or he looks like other polar bears, but not both.": "has_distinctive_features(Clay) ⊕ looks_like_others(Clay)",
      "If Dangelo is an experienced hunter, then he either has distinctive features or has earned respect from others (or both).": "experienced_hunter(Dangelo) → (earned_respect(Dangelo) ∨ has_distinctive_features(Dangelo))",
      "Clay either lives in groups or adapts to his environment, but these two are not necessarily related.": "lives_in_groups(Clay) ⊕ adapts_to_environment(Clay)",
      "Clay cooperates with others.": "cooperates_with_others(Clay)",
      "Clay has courage.": "has_courage(Clay)",
      "Every polar bear adapts to the environment or is an experienced hunter.": "∀x (adapts_to_environment(x) ∨ experienced_hunter(x))",
      "Any polar bear that has battle scars or is large in size has distinctive features.": "∀x ((has_battle_scars(x) ∨ is_large_in_size(x)) → has_distinctive_features(x))",
      "If Clay has social skills and cooperates with others, then he tends to live in groups.": "(has_social_skills(Clay) ∧ cooperates_with_others(Clay)) → lives_in_groups(Clay)",
      "If Clay has courage, then he either has respect or is intelligent, but not both.": "has_courage(Clay) → (is_intelligent(Clay) ⊕ earned_respect(Clay))",
      "If Clay is an experienced hunter, then he either has distinctive features or has earned respect from others (or both).": "experienced_hunter(Clay) → (earned_respect(Clay) ∨ has_distinctive_features(Clay))",
      "Clay is intelligent.": "is_intelligent(Clay)",
      "If Chris has social skills and cooperates with others, then he tends to live in groups.": "(has_social_skills(Chris) ∧ cooperates_with_others(Chris)) → lives_in_groups(Chris)",
      "Every polar bear who leads others either builds strong bonds with fellow bears or has social skills (or both).": "∀x (leads_others(x) → (builds_strong_bonds(x) ∨ has_social_skills(x)))",
      "Clay communicates clearly.": "communicates_clear(Clay)",
      "Antonio is intelligent.": "is_intelligent(Antonio)",
      "If Clay listens actively or communicates clearly, then he has social skills.": "(listens_active(Clay) ∨ communicates_clear(Clay)) → has_social_skills(Clay)"
    },
    "conclusion_fol": "¬looks_like_others(Clay)"
  },
  {
    "id": 221,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Matias is resilient.",
    "reasoning": "fact1: Matias is a professional athlete.\nfact2: Matias stays disciplined.\nrule: If Matias is a professional athlete, then he either seeks feedback or stays disciplined, but not both.\nconclusion: Matias does not seek feedback.\n\nfact1: Matias does not analyze errors.\nfact2: Matias is not able to overcome obstacles.\nrule: If Matias either learns from mistakes or analyzes errors (but not both), then he is able to overcome obstacles.\nconclusion: Matias does not learn from mistakes.\n\nfact1: Matias faces setbacks.\nfact2: Matias does not learn from mistakes.\nrule: Everyone who faces setbacks either learns from mistakes or works hard (or both).\nconclusion: Matias works hard.\n\nfact1: Matias does not seek feedback.\nrule: Matias either seeks feedback or believes in himself, but not both.\nconclusion: Matias believes in himself.\n\nfact1: Matias works hard.\nfact2: Matias believes in himself.\nrule: If someone works hard and believes in themselves, then they strive for success.\nconclusion: Matias strives for success.\n\nfact1: Matias strives for success.\nrule: Anyone who strives for success has ambition.\nconclusion: Matias has ambition.\n\nfact1: Matias has ambition.\nrule: Everyone who has ambition sets goals.\nconclusion: Matias sets goals.\n\nfact1: Matias sets goals.\nrule: Everyone who sets goals is determined.\nconclusion: Matias is determined.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Matias is resilient. The correct option is: C.",
    "context": "Anyone who strives for success has ambition. If Matias has experienced failure, then he refuses to quit and is determined. If Matias is a professional athlete, then he either seeks feedback or stays disciplined, but not both. Kyler is not able to overcome obstacles. Matias is not able to overcome obstacles. Matias does not analyze errors. Everyone who has ambition sets goals. If Matias faces challenges, then he believes in himself and stays motivated. Matias pursues success or has ambition. Anyone who tracks progress or identifies weaknesses can set goals. All individuals who seek improvement build confidence and strive for success. Everyone who faces setbacks either learns from mistakes or works hard (or both). If Matias either learns from mistakes or analyzes errors (but not both), then he is able to overcome obstacles. If someone works hard and believes in themselves, then they strive for success. Everyone who sets goals is determined. Kyler faces setbacks. Matias faces setbacks. Everyone gains experience or learns from mistakes. Matias is a professional athlete. Matias stays disciplined. If Valentin is a professional athlete, then he either seeks feedback or stays disciplined, but not both. Matias either seeks feedback or believes in himself, but not both.",
    "nl2fol": {
      "Anyone who strives for success has ambition.": "∀x (strives_success(x) → has_ambition(x))",
      "If Matias has experienced failure, then he refuses to quit and is determined.": "experienced_failure(Matias) → (refuses_to_quit(Matias) ∧ determined(Matias))",
      "If Matias is a professional athlete, then he either seeks feedback or stays disciplined, but not both.": "professional_athlete(Matias) → (seeks_feedback(Matias) ⊕ stays_disciplined(Matias))",
      "Kyler is not able to overcome obstacles.": "¬overcomes_obstacles(Kyler)",
      "Matias is not able to overcome obstacles.": "¬overcomes_obstacles(Matias)",
      "Matias does not analyze errors.": "¬analyzes_errors(Matias)",
      "Everyone who has ambition sets goals.": "∀x (has_ambition(x) → sets_goals(x))",
      "If Matias faces challenges, then he believes in himself and stays motivated.": "faces_challenges(Matias) → (believes_inself(Matias) ∧ stays_motivated(Matias))",
      "Matias pursues success or has ambition.": "pursues_success(Matias) ∨ has_ambition(Matias)",
      "Anyone who tracks progress or identifies weaknesses can set goals.": "∀x ((tracks_progress(x) ∨ identifies_weaknesses(x)) → sets_goals(x))",
      "All individuals who seek improvement build confidence and strive for success.": "∀x (seeks_improvement(x) → (builds_confidence(x) ∧ strives_success(x)))",
      "Everyone who faces setbacks either learns from mistakes or works hard (or both).": "∀x (faces_setbacks(x) → (learns_from_mistakes(x) ∨ works_hard(x)))",
      "If Matias either learns from mistakes or analyzes errors (but not both), then he is able to overcome obstacles.": "(learns_from_mistakes(Matias) ⊕ analyzes_errors(Matias)) → overcomes_obstacles(Matias)",
      "If someone works hard and believes in themselves, then they strive for success.": "∀x ((works_hard(x) ∧ believes_inself(x)) → strives_success(x))",
      "Everyone who sets goals is determined.": "∀x (sets_goals(x) → determined(x))",
      "Kyler faces setbacks.": "faces_setbacks(Kyler)",
      "Matias faces setbacks.": "faces_setbacks(Matias)",
      "Everyone gains experience or learns from mistakes.": "∀x (gains_experience(x) ∨ learns_from_mistakes(x))",
      "Matias is a professional athlete.": "professional_athlete(Matias)",
      "Matias stays disciplined.": "stays_disciplined(Matias)",
      "If Valentin is a professional athlete, then he either seeks feedback or stays disciplined, but not both.": "professional_athlete(Valentin) → (seeks_feedback(Valentin) ⊕ stays_disciplined(Valentin))",
      "Matias either seeks feedback or believes in himself, but not both.": "seeks_feedback(Matias) ⊕ believes_inself(Matias)"
    },
    "conclusion_fol": "resilient(Matias)"
  },
  {
    "id": 222,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dr. Archie has specialized knowledge.",
    "reasoning": "fact1: Dr. Archie does not publish research findings.\nrule: Dr. Archie either understands plant life or publishes research findings, but not both.\nconclusion: Dr. Archie understands plant life.\n\nfact1: Dr. Archie does not collect plant samples.\nrule: Every botanist either collects plant samples or analyzes botanical data, but not necessarily both.\nconclusion: Dr. Archie analyzes botanical data.\n\nfact1: Dr. Archie analyzes botanical data.\nrule: Any botanist who explores remote areas or analyzes botanical data will study plant properties.\nconclusion: Archie studies plant properties.\n\nfact1: Archie mentors students.\nrule: Dr. Archie is either a leader in his field or mentors students, but not necessarily both.\nconclusion: Dr. Archie does not lead in his field.\n\nfact1: Archie studies plant properties.\nrule: If Dr. Archie studies plant properties, then he will develop new treatments.\nconclusion: Dr. Archie develops new treatments.\n\nfact1: Dr. Archie develops new treatments.\nfact2: Dr. Archie does not lead in his field.\nrule: If Dr. Archie either makes new discoveries or develops new treatments (but not both), then he leads in his field.\nconclusion: Dr. Archie can make new discoveries.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Dr. Archie has specialized knowledge. The correct option is: C.",
    "context": "If Dr. Archie studies plant properties, then he will develop new treatments. Any botanist who explores remote areas or analyzes botanical data will study plant properties. If a botanist reads scientific literature and conducts experiments, then they can analyze botanical data. Dr. Archie does not publish research findings. Dr. Archie does not collect plant samples. If Dr. Archie either makes new discoveries or develops new treatments (but not both), then he leads in his field. Archie mentors students. Every botanist either collects plant samples or analyzes botanical data, but not necessarily both. Any botanist who loves nature will understand plant life. If Dr. Archie conducts experiments and tests hypotheses, then he can develop new treatments. Dr. Archie is either a leader in his field or mentors students, but not necessarily both. Dr. Archie either understands plant life or publishes research findings, but not both.",
    "nl2fol": {
      "If Dr. Archie studies plant properties, then he will develop new treatments.": "study_plant_properties(Archie) → develop_new_treatments(Archie)",
      "Any botanist who explores remote areas or analyzes botanical data will study plant properties.": "∀x ((explore_remote_areas(x) ∨ analyze_botanical_data(x)) → study_plant_properties(x))",
      "If a botanist reads scientific literature and conducts experiments, then they can analyze botanical data.": "∀x ((reads_scientific_literature(x) ∧ conducts_experiments(x)) → analyze_botanical_data(x))",
      "Dr. Archie does not publish research findings.": "¬publish_research_findings(Archie)",
      "Dr. Archie does not collect plant samples.": "¬collect_plant_samples(Archie)",
      "If Dr. Archie either makes new discoveries or develops new treatments (but not both), then he leads in his field.": "(make_new_discoveries(Archie) ⊕ develop_new_treatments(Archie)) → lead_in_field(Archie)",
      "Archie mentors students.": "mentor_students(Archie)",
      "Every botanist either collects plant samples or analyzes botanical data, but not necessarily both.": "∀x (collect_plant_samples(x) ⊕ analyze_botanical_data(x))",
      "Any botanist who loves nature will understand plant life.": "∀x (love_nature(x) → understand_plant_life(x))",
      "If Dr. Archie conducts experiments and tests hypotheses, then he can develop new treatments.": "(conduct_experiments(Archie) ∧ test_hypotheses(Archie)) → develop_new_treatments(Archie)",
      "Dr. Archie is either a leader in his field or mentors students, but not necessarily both.": "mentor_students(Archie) ⊕ lead_in_field(Archie)",
      "Dr. Archie either understands plant life or publishes research findings, but not both.": "understand_plant_life(Archie) ⊕ publish_research_findings(Archie)"
    },
    "conclusion_fol": "have_specialized_knowledge(Archie)"
  },
  {
    "id": 223,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Shay's work is not viral.",
    "reasoning": "fact1: Shay has a lot of imaginations.\nrule: If someone has a lot of imaginations, then they enjoy creating things and think outside the box.\nconclusion: Shay enjoys creating things.\n\nfact1: Shay is detail-oriented.\nfact2: Shay enjoys creating things.\nrule: If Shay is detail-oriented, then she either takes pride in her work or enjoys creating things (but not both).\nconclusion: Shay does not take pride in her work.\n\nfact1: Shay strives for excellence.\nfact2: Shay seeks feedback.\nrule: If Shay strives for excellence, then she either has perfectionism or seeks feedback (but not both).\nconclusion: Shay does not have perfectionism.\n\nfact1: Shay does not take pride in her work.\nfact2: Shay does not have perfectionism.\nrule: If someone values quality, then they either take pride in their work or have perfectionism.\nconclusion: Shay does not value quality.\n\nfact1: Shay does not value quality.\nrule: Shay values quality or is skilled.\nconclusion: Shay is skilled.\n\nfact1: Shay remains anonymous.\nrule: Either Shay is a famous artist or she remains anonymous, but not both.\nconclusion: Shay is not a famous artist.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Shay's work is not viral. The correct option is: C.",
    "context": "Shay works hard or is skilled. If someone has a lot of imaginations, then they enjoy creating things and think outside the box. If Shay is detail-oriented, then she either takes pride in her work or enjoys creating things (but not both). Shay values quality or is skilled. If Shay strives for excellence, then she either has perfectionism or seeks feedback (but not both). Shay seeks feedback. Shay remains anonymous. Shay strives for excellence. Shay has a lot of imaginations. Shay has perfectionism if she sets high standards. Shay is detail-oriented. Either Shay is a famous artist or she remains anonymous, but not both. If someone values quality, then they either take pride in their work or have perfectionism.",
    "nl2fol": {
      "Shay works hard or is skilled.": "works_hard(Shay) ∨ is_skilled(Shay)",
      "If someone has a lot of imaginations, then they enjoy creating things and think outside the box.": "∀x (has_imaginations(x) → (enjoys_creating(x) ∧ thinks_outside_box(x)))",
      "If Shay is detail-oriented, then she either takes pride in her work or enjoys creating things (but not both).": "is_detail_oriented(Shay) → (enjoys_creating(Shay) ⊕ takes_pride(Shay))",
      "Shay values quality or is skilled.": "values_quality(Shay) ∨ is_skilled(Shay)",
      "If Shay strives for excellence, then she either has perfectionism or seeks feedback (but not both).": "strives_for_excellence(Shay) → (has_perfectionism(Shay) ⊕ seeks_feedback(Shay))",
      "Shay seeks feedback.": "seeks_feedback(Shay)",
      "Shay remains anonymous.": "remains_anonymous(Shay)",
      "Shay strives for excellence.": "strives_for_excellence(Shay)",
      "Shay has a lot of imaginations.": "has_imaginations(Shay)",
      "Shay has perfectionism if she sets high standards.": "sets_high_standards(Shay) → has_perfectionism(Shay)",
      "Shay is detail-oriented.": "is_detail_oriented(Shay)",
      "Either Shay is a famous artist or she remains anonymous, but not both.": "famous_artist(Shay) ⊕ remains_anonymous(Shay)",
      "If someone values quality, then they either take pride in their work or have perfectionism.": "∀x (values_quality(x) → (takes_pride(x) ⊕ has_perfectionism(x)))"
    },
    "conclusion_fol": "¬work_is_viral(Shay)"
  },
  {
    "id": 224,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Snuggems is not mechanically inclined.",
    "reasoning": "fact1: Snuggems does not eat well.\nfact2: Snuggems does not look healthy.\nrule: All cats that sleep soundly eat well and look healthy.\nconclusion: Snuggems does not sleep soundly.\n\nfact1: Snuggems is curious.\nfact2: Snuggems does not climb high.\nrule: If Snuggems is curious, then she either chases feathers or climbs high, but not both.\nconclusion: Snuggems chases feathers.\n\nfact1: Snuggems chases feathers.\nfact2: Snuggems does not have fun.\nrule: If Snuggems either plays with toys or chases feathers (but not both), then she has fun.\nconclusion: Snuggems plays with toys.\n\nfact1: Snuggems does not sleep soundly.\nrule: Every cat either sleeps soundly or curls up tightly.\nconclusion: Snuggems curls up tightly.\n\nfact1: Snuggems does not nuzzle her owners.\nfact2: Snuggems curls up tightly.\nrule: If Snuggems either nuzzles her owners or curls up tightly (but not both), then she purrs frequently.\nconclusion: Snuggems purrs frequently.\n\nfact1: Snuggems purrs frequently.\nfact2: Snuggems enjoys attention.\nrule: All cats that purr frequently and enjoy attention are affectionate.\nconclusion: Snuggems is affectionate.\n\nfact1: Snuggems plays with toys.\nfact2: Snuggems does not bring joy.\nrule: For any cat, if it plays with toys and is lovable, then it brings joy.\nconclusion: Snuggems is not lovable.\n\nfact1: Snuggems is affectionate.\nfact2: Snuggems is not lovable.\nrule: If Snuggems is either mechanically inclined or affectionate (but not both), then she is lovable.\nconclusion: Snuggems is not mechanically inclined.\n\nTherefore, it is false that Snuggems is not mechanically inclined. The correct option is: B.",
    "context": "Snuggems does not nuzzle her owners. If Snuggems is curious, then she either chases feathers or climbs high, but not both. If Kiya is either mechanically inclined or affectionate (but not both), then she is lovable. If Kiya either nuzzles her owners or curls up tightly (but not both), then she purrs frequently. All cats that purr frequently and enjoy attention are affectionate. Snuggems does not bring joy. If Snuggems either plays with toys or chases feathers (but not both), then she has fun. Kiya does not have fun. Snuggems does not have fun. Marlon does not climb high. Every cat either has soft fur or is lovable (or both). All cats that sleep soundly eat well and look healthy. Marlon does not nuzzle her owners. If Snuggems either nuzzles her owners or curls up tightly (but not both), then she purrs frequently. Marlon does not eat well. Snuggems is curious. Snuggems does not eat well. Snuggems enjoys attention. If Snuggems either likes engine noise or bats at wires (but not both), then she curls up tightly. For any cat, if it plays with toys and is lovable, then it brings joy. Snuggems does not climb high. If Snuggems is either mechanically inclined or affectionate (but not both), then she is lovable. Every cat either sleeps soundly or curls up tightly. Snuggems does not look healthy. Christina enjoys attention. Christina does not look healthy. If Marlon is curious, then she either chases feathers or climbs high, but not both. If Snuggems either catches mice or bats strings (but not both), then she plays with toys.",
    "nl2fol": {
      "Snuggems does not nuzzle her owners.": "¬nuzzles_owners(Snuggems)",
      "If Snuggems is curious, then she either chases feathers or climbs high, but not both.": "is_curious(Snuggems) → (chases_feathers(Snuggems) ⊕ climbs_high(Snuggems))",
      "If Kiya is either mechanically inclined or affectionate (but not both), then she is lovable.": "(mechanically_inclined(Kiya) ⊕ affectionate(Kiya)) → lovable(Kiya)",
      "If Kiya either nuzzles her owners or curls up tightly (but not both), then she purrs frequently.": "(nuzzles_owners(Kiya) ⊕ curls_up_tightly(Kiya)) → purrs_frequently(Kiya)",
      "All cats that purr frequently and enjoy attention are affectionate.": "∀x ((purrs_frequently(x) ∧ enjoys_attention(x)) → affectionate(x))",
      "Snuggems does not bring joy.": "¬brings_joy(Snuggems)",
      "If Snuggems either plays with toys or chases feathers (but not both), then she has fun.": "(plays_with_toys(Snuggems) ⊕ chases_feathers(Snuggems)) → has_fun(Snuggems)",
      "Kiya does not have fun.": "¬has_fun(Kiya)",
      "Snuggems does not have fun.": "¬has_fun(Snuggems)",
      "Marlon does not climb high.": "¬climbs_high(Marlon)",
      "Every cat either has soft fur or is lovable (or both).": "∀x (has_soft_fur(x) ∨ lovable(x))",
      "All cats that sleep soundly eat well and look healthy.": "∀x (sleeps_soundly(x) → (eats_well(x) ∧ looks_healthy(x)))",
      "Marlon does not nuzzle her owners.": "¬nuzzles_owners(Marlon)",
      "If Snuggems either nuzzles her owners or curls up tightly (but not both), then she purrs frequently.": "(nuzzles_owners(Snuggems) ⊕ curls_up_tightly(Snuggems)) → purrs_frequently(Snuggems)",
      "Marlon does not eat well.": "¬eats_well(Marlon)",
      "Snuggems is curious.": "is_curious(Snuggems)",
      "Snuggems does not eat well.": "¬eats_well(Snuggems)",
      "Snuggems enjoys attention.": "enjoys_attention(Snuggems)",
      "If Snuggems either likes engine noise or bats at wires (but not both), then she curls up tightly.": "(likes_engine_noise(Snuggems) ⊕ bats_at_wires(Snuggems)) → curls_up_tightly(Snuggems)",
      "For any cat, if it plays with toys and is lovable, then it brings joy.": "∀x ((plays_with_toys(x) ∧ lovable(x)) → brings_joy(x))",
      "Snuggems does not climb high.": "¬climbs_high(Snuggems)",
      "If Snuggems is either mechanically inclined or affectionate (but not both), then she is lovable.": "(mechanically_inclined(Snuggems) ⊕ affectionate(Snuggems)) → lovable(Snuggems)",
      "Every cat either sleeps soundly or curls up tightly.": "∀x (sleeps_soundly(x) ∨ curls_up_tightly(x))",
      "Snuggems does not look healthy.": "¬looks_healthy(Snuggems)",
      "Christina enjoys attention.": "enjoys_attention(Christina)",
      "Christina does not look healthy.": "¬looks_healthy(Christina)",
      "If Marlon is curious, then she either chases feathers or climbs high, but not both.": "is_curious(Marlon) → (chases_feathers(Marlon) ⊕ climbs_high(Marlon))",
      "If Snuggems either catches mice or bats strings (but not both), then she plays with toys.": "(catches_mice(Snuggems) ⊕ bats_strings(Snuggems)) → plays_with_toys(Snuggems)"
    },
    "conclusion_fol": "¬mechanically_inclined(Snuggems)"
  },
  {
    "id": 225,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carly does not eat alkaline-rich foods.",
    "reasoning": "fact1: Carly has clarity.\nrule: Everyone either has clarity or finds balance, but it's not always both at the same time.\nconclusion: Carly does not find balance.\n\nfact1: Carly does not find balance.\nfact2: Carly does not increase calmness.\nrule: Everyone who reduces stress either finds balance or increases calmness (or both).\nconclusion: Carly does not reduce stress.\n\nfact1: Carly engages in yoga.\nfact2: Carly does not feel rejuvenated.\nrule: If someone engages in yoga and gets enough sleep, then they feel rejuvenated.\nconclusion: Carly does not get enough sleep.\n\nfact1: Carly does not get enough sleep.\nfact2: Carly stays hydrated.\nrule: If Carly either gets enough sleep or stays hydrated (but not both), then she ages gracefully.\nconclusion: Carly ages gracefully.\n\nfact1: Carly ages gracefully.\nrule: If Carly lives longer, then she does not necessarily age gracefully, and if Carly ages gracefully, then she does not necessarily live longer.\nconclusion: Carly does not live longer.\n\nfact1: Carly does not reduce stress.\nfact2: Carly does not stay positive.\nrule: If Carly either reduces stress or improves her mood (but not both), then she stays positive.\nconclusion: Carly does not improve her mood.\n\nfact1: Carly does not improve her mood.\nfact2: Carly does not boost her energy.\nrule: Everyone who exercises regularly either improves their mood or boosts their energy (or both).\nconclusion: Carly does not exercise regularly.\n\nfact1: Carly does not exercise regularly.\nrule: Carly either exercises regularly or has good health.\nconclusion: Carly has good health.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Carly does not eat alkaline-rich foods. The correct option is: C.",
    "context": "If someone engages in yoga and gets enough sleep, then they feel rejuvenated. Carly has clarity. Everyone who reduces stress either finds balance or increases calmness (or both). If Carly lives longer, then she does not necessarily age gracefully, and if Carly ages gracefully, then she does not necessarily live longer. Carly does not stay positive. Everyone who exercises regularly either improves their mood or boosts their energy (or both). Carly does not feel rejuvenated. Everyone either has clarity or finds balance, but it's not always both at the same time. Carly stays hydrated. If Carly either reduces stress or improves her mood (but not both), then she stays positive. If Carly either gets enough sleep or stays hydrated (but not both), then she ages gracefully. Carly does not boost her energy. Carly engages in yoga. Carly does not increase calmness. Carly either exercises regularly or has good health.",
    "nl2fol": {
      "If someone engages in yoga and gets enough sleep, then they feel rejuvenated.": "∀x ((engages_in_yoga(x) ∧ get_enough_sleep(x)) → feels_rejuvenated(x))",
      "Carly has clarity.": "has_clarity(Carly)",
      "Everyone who reduces stress either finds balance or increases calmness (or both).": "∀x (reduce_stress(x) → (find_balance(x) ∨ increase_calmness(x)))",
      "If Carly lives longer, then she does not necessarily age gracefully, and if Carly ages gracefully, then she does not necessarily live longer.": "live_longer(Carly) ⊕ age_gracefully(Carly)",
      "Carly does not stay positive.": "¬stay_positive(Carly)",
      "Everyone who exercises regularly either improves their mood or boosts their energy (or both).": "∀x (exercise_regularly(x) → (improve_mood(x) ∨ boost_energy(x)))",
      "Carly does not feel rejuvenated.": "¬feels_rejuvenated(Carly)",
      "Everyone either has clarity or finds balance, but it's not always both at the same time.": "∀x (has_clarity(x) ⊕ find_balance(x))",
      "Carly stays hydrated.": "stay_hydrated(Carly)",
      "If Carly either reduces stress or improves her mood (but not both), then she stays positive.": "(reduce_stress(Carly) ⊕ improve_mood(Carly)) → stay_positive(Carly)",
      "If Carly either gets enough sleep or stays hydrated (but not both), then she ages gracefully.": "(get_enough_sleep(Carly) ⊕ stay_hydrated(Carly)) → age_gracefully(Carly)",
      "Carly does not boost her energy.": "¬boost_energy(Carly)",
      "Carly engages in yoga.": "engages_in_yoga(Carly)",
      "Carly does not increase calmness.": "¬increase_calmness(Carly)",
      "Carly either exercises regularly or has good health.": "exercise_regularly(Carly) ∨ have_good_health(Carly)"
    },
    "conclusion_fol": "¬eat_alkaline(Carly)"
  },
  {
    "id": 226,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cuteness does not create masterpieces.",
    "reasoning": "fact1: Cuteness does not appreciate beauty.\nrule: If Cuteness enjoys coloring, then she has good taste and appreciates beauty.\nconclusion: Cuteness does not enjoy coloring.\n\nfact1: Cuteness does not enjoy coloring.\nrule: Cuteness enjoys coloring or loves to draw.\nconclusion: Cuteness loves to draw.\n\nfact1: Cuteness has creative flair.\nfact2: Cuteness loves to draw.\nrule: If Cuteness has creative flair, then she is either a talented artist or loves to draw, but not both.\nconclusion: Cuteness is not a talented artist.\n\nfact1: Cuteness does not bring color to life.\nrule: If Cuteness has imagination, then she can make people smile and bring color to life.\nconclusion: Cuteness does not have imagination.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Cuteness does not create masterpieces. The correct option is: C.",
    "context": "If Cuteness has imagination, then she can make people smile and bring color to life. Any character who visits the studio either enjoys coloring or is an admirer of art. If Donovan has imagination, then she can make people smile and bring color to life. Romina does not appreciate beauty. Cuteness has creative flair. Donovan spreads joy. Hattie has creative flair. If Cuteness has creative flair, then she is either a talented artist or loves to draw, but not both. Cuteness enjoys coloring or loves to draw. Cuteness does not appreciate beauty. If a character develops skills and expresses creatively, then they can be a talented artist. If Cuteness enjoys coloring, then she has good taste and appreciates beauty. Cuteness does not bring color to life. If a character either makes cartoons or designs characters (but not both), then they love to draw. Donovan enjoys coloring or loves to draw. If Hattie enjoys coloring, then she has good taste and appreciates beauty. Every character expresses creativity or has imagination. Romina does not bring color to life. If Hattie is a talented artist and has imagination, then she creates masterpieces.",
    "nl2fol": {
      "If Cuteness has imagination, then she can make people smile and bring color to life.": "has_imagination(Cuteness) → (make_people_smile(Cuteness) ∧ bring_color_to_life(Cuteness))",
      "Any character who visits the studio either enjoys coloring or is an admirer of art.": "∀x (visits_studio(x) → (enjoys_coloring(x) ∨ admirer_of_art(x)))",
      "If Donovan has imagination, then she can make people smile and bring color to life.": "has_imagination(Donovan) → (make_people_smile(Donovan) ∧ bring_color_to_life(Donovan))",
      "Romina does not appreciate beauty.": "¬appreciate_beauty(Romina)",
      "Cuteness has creative flair.": "has_creative_flair(Cuteness)",
      "Donovan spreads joy.": "spread_joy(Donovan)",
      "Hattie has creative flair.": "has_creative_flair(Hattie)",
      "If Cuteness has creative flair, then she is either a talented artist or loves to draw, but not both.": "has_creative_flair(Cuteness) → (loves_to_draw(Cuteness) ⊕ talented_artist(Cuteness))",
      "Cuteness enjoys coloring or loves to draw.": "loves_to_draw(Cuteness) ∨ enjoys_coloring(Cuteness)",
      "Cuteness does not appreciate beauty.": "¬appreciate_beauty(Cuteness)",
      "If a character develops skills and expresses creatively, then they can be a talented artist.": "∀x ((develops_skills(x) ∧ expresses_creatively(x)) → talented_artist(x))",
      "If Cuteness enjoys coloring, then she has good taste and appreciates beauty.": "enjoys_coloring(Cuteness) → (has_good_taste(Cuteness) ∧ appreciate_beauty(Cuteness))",
      "Cuteness does not bring color to life.": "¬bring_color_to_life(Cuteness)",
      "If a character either makes cartoons or designs characters (but not both), then they love to draw.": "∀x ((makes_cartoons(x) ⊕ designs_characters(x)) → loves_to_draw(x))",
      "Donovan enjoys coloring or loves to draw.": "loves_to_draw(Donovan) ∨ enjoys_coloring(Donovan)",
      "If Hattie enjoys coloring, then she has good taste and appreciates beauty.": "enjoys_coloring(Hattie) → (has_good_taste(Hattie) ∧ appreciate_beauty(Hattie))",
      "Every character expresses creativity or has imagination.": "∀x (expresses_creativity(x) ∨ has_imagination(x))",
      "Romina does not bring color to life.": "¬bring_color_to_life(Romina)",
      "If Hattie is a talented artist and has imagination, then she creates masterpieces.": "(talented_artist(Hattie) ∧ has_imagination(Hattie)) → creates_masterpieces(Hattie)"
    },
    "conclusion_fol": "¬creates_masterpieces(Cuteness)"
  },
  {
    "id": 227,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clay possesses a unique talent.",
    "reasoning": "fact1: Clay does not ignite imagination.\nrule: For Clay, either he holds attention or ignites imagination, but not necessarily both.\nconclusion: Clay holds attention.\n\nfact1: Clay does not engage the audience.\nrule: Clay either engages the audience or has charisma.\nconclusion: Clay has charisma.\n\nfact1: Clay understands human psychology.\nrule: For Clay, either he understands human psychology or he is a skilled conjurer, but not necessarily both.\nconclusion: Clay is not a skilled conjurer.\n\nfact1: Clay holds attention.\nfact2: Clay does not evoke curiosity.\nrule: Everyone who holds attention either evokes curiosity or manipulates emotions (or both).\nconclusion: Clay manipulates emotions.\n\nfact1: Clay has charisma.\nfact2: Clay manipulates emotions.\nrule: If Clay has charisma, then he either manipulates emotions or creates illusions, but not both.\nconclusion: Clay does not create illusions.\n\nfact1: Clay does not create illusions.\nfact2: Clay performs miracles.\nrule: If Clay either creates illusions or performs miracles (but not both), then he is a master of deception.\nconclusion: Clay is a master of deception.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Clay possesses a unique talent. The correct option is: C.",
    "context": "Clay understands human psychology. Clay performs miracles. Patrick performs miracles. Everyone who holds attention either evokes curiosity or manipulates emotions (or both). Clay does not evoke curiosity. Adonis understands human psychology. Clay either engages the audience or has charisma. Canaan either engages the audience or has charisma. If Clay has charisma, then he either manipulates emotions or creates illusions, but not both. For Clay, either he understands human psychology or he is a skilled conjurer, but not necessarily both. If Clay either uses persuasion or reads body language (but not both), then he manipulates emotions. For Adonis, either he holds attention or ignites imagination, but not necessarily both. If Clay either uses light tricks or plays sleight of hand (but not both), then he creates illusions. If Canaan has charisma, then he either manipulates emotions or creates illusions, but not both. If Clay either creates illusions or performs miracles (but not both), then he is a master of deception. For Clay, either he holds attention or ignites imagination, but not necessarily both. Clay does not engage the audience. Clay does not ignite imagination. For Patrick, either he understands human psychology or he is a skilled conjurer, but not necessarily both. Clay has creativity or is a skilled conjurer. Patrick does not evoke curiosity. If Adonis either creates illusions or performs miracles (but not both), then he is a master of deception. Canaan does not engage the audience.",
    "nl2fol": {
      "Clay understands human psychology.": "understands_human_psychology(Clay)",
      "Clay performs miracles.": "performs_miracles(Clay)",
      "Patrick performs miracles.": "performs_miracles(Patrick)",
      "Everyone who holds attention either evokes curiosity or manipulates emotions (or both).": "∀x (holds_attention(x) → (evokes_curiosity(x) ∨ manipulates_emotions(x)))",
      "Clay does not evoke curiosity.": "¬evokes_curiosity(Clay)",
      "Adonis understands human psychology.": "understands_human_psychology(Adonis)",
      "Clay either engages the audience or has charisma.": "engages_audience(Clay) ∨ has_charisma(Clay)",
      "Canaan either engages the audience or has charisma.": "engages_audience(Canaan) ∨ has_charisma(Canaan)",
      "If Clay has charisma, then he either manipulates emotions or creates illusions, but not both.": "has_charisma(Clay) → (manipulates_emotions(Clay) ⊕ creates_illusions(Clay))",
      "For Clay, either he understands human psychology or he is a skilled conjurer, but not necessarily both.": "understands_human_psychology(Clay) ⊕ skilled_conjurer(Clay)",
      "If Clay either uses persuasion or reads body language (but not both), then he manipulates emotions.": "(uses_persuasion(Clay) ⊕ reads_body_language(Clay)) → manipulates_emotions(Clay)",
      "For Adonis, either he holds attention or ignites imagination, but not necessarily both.": "ignites_imagination(Adonis) ⊕ holds_attention(Adonis)",
      "If Clay either uses light tricks or plays sleight of hand (but not both), then he creates illusions.": "(uses_light_tricks(Clay) ⊕ plays_sleight_of_hand(Clay)) → creates_illusions(Clay)",
      "If Canaan has charisma, then he either manipulates emotions or creates illusions, but not both.": "has_charisma(Canaan) → (manipulates_emotions(Canaan) ⊕ creates_illusions(Canaan))",
      "If Clay either creates illusions or performs miracles (but not both), then he is a master of deception.": "(creates_illusions(Clay) ⊕ performs_miracles(Clay)) → master_of_deception(Clay)",
      "For Clay, either he holds attention or ignites imagination, but not necessarily both.": "ignites_imagination(Clay) ⊕ holds_attention(Clay)",
      "Clay does not engage the audience.": "¬engages_audience(Clay)",
      "Clay does not ignite imagination.": "¬ignites_imagination(Clay)",
      "For Patrick, either he understands human psychology or he is a skilled conjurer, but not necessarily both.": "understands_human_psychology(Patrick) ⊕ skilled_conjurer(Patrick)",
      "Clay has creativity or is a skilled conjurer.": "has_creativity(Clay) ∨ skilled_conjurer(Clay)",
      "Patrick does not evoke curiosity.": "¬evokes_curiosity(Patrick)",
      "If Adonis either creates illusions or performs miracles (but not both), then he is a master of deception.": "(creates_illusions(Adonis) ⊕ performs_miracles(Adonis)) → master_of_deception(Adonis)",
      "Canaan does not engage the audience.": "¬engages_audience(Canaan)"
    },
    "conclusion_fol": "possesses_unique_talent(Clay)"
  },
  {
    "id": 228,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ernesto does not gain international recognition.",
    "reasoning": "fact1: Ernesto collaborates with experts.\nrule: Ernesto either collaborates with experts or leads solo projects, but not both.\nconclusion: Ernesto does not lead solo projects.\n\nfact1: Ernesto does not value precision.\nrule: A person is either curious or values precision, but being one does not necessarily imply being the other.\nconclusion: Ernesto is curious.\n\nfact1: Ernesto is curious.\nrule: If Ernesto is curious, then he has creative ideas and communicates effectively.\nconclusion: Ernesto has creative ideas.\n\nfact1: Ernesto does not lead solo projects.\nrule: Ernesto either works in teams or leads solo projects, but not both.\nconclusion: Ernesto works in teams.\n\nfact1: Ernesto has creative ideas.\nfact2: Ernesto works in teams.\nrule: If someone has creative ideas and works in teams, then they can make a notable discovery.\nconclusion: Ernesto makes a notable discovery.\n\nfact1: Ernesto does not pursue knowledge.\nrule: Ernesto either pursues knowledge or is a dedicated researcher.\nconclusion: Ernesto is a dedicated researcher.\n\nfact1: Ernesto is a dedicated researcher.\nfact2: Ernesto makes a notable discovery.\nrule: If Ernesto is a dedicated researcher, then he will make a notable discovery and gain international recognition.\nconclusion: Ernesto does not gain international recognition.\n\nTherefore, it is false that Ernesto does not gain international recognition. The correct option is: B.",
    "context": "Jaylah either works in teams or leads solo projects, but not both. If Ernesto has a strong network, then he either works in teams or builds strong partnerships, but not both. Jaylah collaborates with experts. If Ernesto is curious, then he has creative ideas and communicates effectively. Ernesto either works in teams or leads solo projects, but not both. Anyone who thinks outside the box or explores new areas can have creative ideas. Ernesto collaborates with experts. Ernesto does not value precision. If Collins is a dedicated researcher, then he will make a notable discovery and gain international recognition. A person is either curious or values precision, but being one does not necessarily imply being the other. Collins either collaborates with experts or leads solo projects, but not both. Everyone who has leadership skills either leads solo projects or builds strong networks (or both). If Ernesto is a dedicated researcher, then he will make a notable discovery and gain international recognition. Ernesto does not pursue knowledge. Jaylah does not value precision. Ernesto either collaborates with experts or leads solo projects, but not both. If someone enjoys learning, then they ask insightful questions and are curious. If someone has creative ideas and works in teams, then they can make a notable discovery. Ernesto either pursues knowledge or is a dedicated researcher.",
    "nl2fol": {
      "Jaylah either works in teams or leads solo projects, but not both.": "works_in_teams(Jaylah) ⊕ leads_solo_projects(Jaylah)",
      "If Ernesto has a strong network, then he either works in teams or builds strong partnerships, but not both.": "has_strong_network(Ernesto) → (works_in_teams(Ernesto) ⊕ builds_strong_partnerships(Ernesto))",
      "Jaylah collaborates with experts.": "collaborates_with_experts(Jaylah)",
      "If Ernesto is curious, then he has creative ideas and communicates effectively.": "is_curious(Ernesto) → (has_creative_ideas(Ernesto) ∧ communicates_effectively(Ernesto))",
      "Ernesto either works in teams or leads solo projects, but not both.": "works_in_teams(Ernesto) ⊕ leads_solo_projects(Ernesto)",
      "Anyone who thinks outside the box or explores new areas can have creative ideas.": "∀x ((thinks_outside_box(x) ∨ explores_new_areas(x)) → has_creative_ideas(x))",
      "Ernesto collaborates with experts.": "collaborates_with_experts(Ernesto)",
      "Ernesto does not value precision.": "¬values_precision(Ernesto)",
      "If Collins is a dedicated researcher, then he will make a notable discovery and gain international recognition.": "dedicated_researcher(Collins) → (makes_notable_discovery(Collins) ∧ gains_international_recognition(Collins))",
      "A person is either curious or values precision, but being one does not necessarily imply being the other.": "∀x (is_curious(x) ⊕ values_precision(x))",
      "Collins either collaborates with experts or leads solo projects, but not both.": "collaborates_with_experts(Collins) ⊕ leads_solo_projects(Collins)",
      "Everyone who has leadership skills either leads solo projects or builds strong networks (or both).": "∀x (has_leadership_skills(x) → (builds_strong_networks(x) ∨ leads_solo_projects(x)))",
      "If Ernesto is a dedicated researcher, then he will make a notable discovery and gain international recognition.": "dedicated_researcher(Ernesto) → (makes_notable_discovery(Ernesto) ∧ gains_international_recognition(Ernesto))",
      "Ernesto does not pursue knowledge.": "¬pursues_knowledge(Ernesto)",
      "Jaylah does not value precision.": "¬values_precision(Jaylah)",
      "Ernesto either collaborates with experts or leads solo projects, but not both.": "collaborates_with_experts(Ernesto) ⊕ leads_solo_projects(Ernesto)",
      "If someone enjoys learning, then they ask insightful questions and are curious.": "∀x (enjoys_learning(x) → (asks_insightful_questions(x) ∧ is_curious(x)))",
      "If someone has creative ideas and works in teams, then they can make a notable discovery.": "∀x ((has_creative_ideas(x) ∧ works_in_teams(x)) → makes_notable_discovery(x))",
      "Ernesto either pursues knowledge or is a dedicated researcher.": "pursues_knowledge(Ernesto) ∨ dedicated_researcher(Ernesto)"
    },
    "conclusion_fol": "¬gains_international_recognition(Ernesto)"
  },
  {
    "id": 229,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amanda is not practical.",
    "reasoning": "fact1: Amanda does not think critically.\nfact2: Amanda does not value precision.\nrule: For all people, if they either think critically or have attention to detail, then they value precision.\nconclusion: Amanda does not have attention to detail.\n\nfact1: Amanda is an experienced designer.\nfact2: Amanda does not have attention to detail.\nrule: If Amanda is an experienced designer, then she either solves real-world problems or has attention to detail, but not both.\nconclusion: Amanda solves real-world problems.\n\nfact1: Amanda solves real-world problems.\nrule: Anyone who has good taste or solves real-world problems can be an innovative designer.\nconclusion: Amanda is an innovative designer.\n\nfact1: Amanda is motivated.\nfact2: Amanda is not disciplined.\nrule: If Amanda is motivated, then she is either disciplined or persistent (but not both).\nconclusion: Amanda is persistent.\n\nfact1: Amanda is persistent.\nfact2: Amanda is open-minded.\nrule: If Amanda is persistent, then she is both open-minded and a problem solver.\nconclusion: Amanda is a problem solver.\n\nfact1: Amanda is an innovative designer.\nfact2: Amanda does not develop unique products.\nrule: Every innovative designer either thinks outside the box or develops unique products (or both).\nconclusion: Amanda thinks outside the box.\n\nfact1: Amanda is a problem solver.\nfact2: Amanda thinks outside the box.\nrule: All problem solvers are creative and think outside the box.\nconclusion: Amanda is creative.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Amanda is not practical. The correct option is: C.",
    "context": "Amanda is not disciplined. If Amanda is persistent, then she is both open-minded and a problem solver. Amanda is motivated. If Amanda is an experienced designer, then she either solves real-world problems or has attention to detail, but not both. If Greta is motivated, then she is either disciplined or persistent (but not both). Anyone who has good taste or solves real-world problems can be an innovative designer. Amanda is an experienced designer. If Amanda is motivated, then she is either disciplined or persistent (but not both). Amanda does not think critically. If Amanda has strong foundations, then she is either strategic or solves real-world problems (but not both). If someone sets high standards, then they work diligently and have attention to detail. If Amanda experiments with materials, then she is an innovative designer. Every innovative designer either thinks outside the box or develops unique products (or both). Anyone who has visionary ideas thinks outside the box. Noah is an experienced designer. Amanda does not value precision. All problem solvers are creative and think outside the box. For all people, if they either think critically or have attention to detail, then they value precision. Amanda does not develop unique products. Amanda is open-minded.",
    "nl2fol": {
      "Amanda is not disciplined.": "¬is_disciplined(Amanda)",
      "If Amanda is persistent, then she is both open-minded and a problem solver.": "persistent(Amanda) → (open_minded(Amanda) ∧ problem_solver(Amanda))",
      "Amanda is motivated.": "is_motivated(Amanda)",
      "If Amanda is an experienced designer, then she either solves real-world problems or has attention to detail, but not both.": "experienced_designer(Amanda) → (solves_real_problems(Amanda) ⊕ has_attention_to_detail(Amanda))",
      "If Greta is motivated, then she is either disciplined or persistent (but not both).": "is_motivated(Greta) → (is_disciplined(Greta) ⊕ persistent(Greta))",
      "Anyone who has good taste or solves real-world problems can be an innovative designer.": "∀x ((has_good_taste(x) ∨ solves_real_problems(x)) → innovative_designer(x))",
      "Amanda is an experienced designer.": "experienced_designer(Amanda)",
      "If Amanda is motivated, then she is either disciplined or persistent (but not both).": "is_motivated(Amanda) → (is_disciplined(Amanda) ⊕ persistent(Amanda))",
      "Amanda does not think critically.": "¬thinks_critically(Amanda)",
      "If Amanda has strong foundations, then she is either strategic or solves real-world problems (but not both).": "has_strong_foundations(Amanda) → (solves_real_problems(Amanda) ⊕ is_strategic(Amanda))",
      "If someone sets high standards, then they work diligently and have attention to detail.": "∀x (sets_high_standards(x) → (works_diligently(x) ∧ has_attention_to_detail(x)))",
      "If Amanda experiments with materials, then she is an innovative designer.": "experiments_with_materials(Amanda) → innovative_designer(Amanda)",
      "Every innovative designer either thinks outside the box or develops unique products (or both).": "∀x (innovative_designer(x) → (develop_unique_products(x) ∨ think_outside_box(x)))",
      "Anyone who has visionary ideas thinks outside the box.": "∀x (has_visionary_ideas(x) → think_outside_box(x))",
      "Noah is an experienced designer.": "experienced_designer(Noah)",
      "Amanda does not value precision.": "¬values_precision(Amanda)",
      "All problem solvers are creative and think outside the box.": "∀x (problem_solver(x) → (creative(x) ∧ think_outside_box(x)))",
      "For all people, if they either think critically or have attention to detail, then they value precision.": "∀x ((thinks_critically(x) ⊕ has_attention_to_detail(x)) → values_precision(x))",
      "Amanda does not develop unique products.": "¬develop_unique_products(Amanda)",
      "Amanda is open-minded.": "open_minded(Amanda)"
    },
    "conclusion_fol": "¬practical(Amanda)"
  },
  {
    "id": 230,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Khai does not become a regular customer.",
    "reasoning": "fact1: Khai appreciates traditions.\nfact2: Khai does not support local businesses.\nrule: If Khai appreciates traditions, then he either loves local food or supports local businesses (or both).\nconclusion: Khai loves local food.\n\nfact1: Khai does not explore culture.\nfact2: Khai does not have new experiences.\nrule: If Khai either explores culture or stays in one city (but not both), then he has new experiences.\nconclusion: Khai does not stay in one city.\n\nfact1: Khai does not stay in one city.\nrule: Khai either stays in one city or travels to new places, but not at the same time.\nconclusion: Khai travels to new places.\n\nfact1: Khai travels to new places.\nfact2: Khai does not sample regional specialties.\nrule: Anyone who travels to new places will either sample regional specialties or try local cuisine (or both).\nconclusion: Khai will try local cuisine.\n\nfact1: Khai enjoys soups.\nrule: If Khai enjoys soups, then he will explore street food and try the stew.\nconclusion: Khai tries the stew.\n\nfact1: Khai loves local food.\nrule: If Khai loves local food, then he will visit his own stall.\nconclusion: Khai visits Khai's stall.\n\nfact1: Khai visits Khai's stall.\nfact2: Khai tries the stew.\nrule: If someone visits Khai's stall and tries the stew, then they become a regular customer.\nconclusion: Khai does not become a regular customer.\n\nTherefore, it is false that Khai does not become a regular customer. The correct option is: B.",
    "context": "Khai either stays in one city or travels to new places, but not at the same time. Khai does not support local businesses. Khai tends to stay in one city if he has strong community ties. If Khai likes exotic flavors or craves hearty meals, then he will explore street food. If someone follows food blogs, then they either try Khai's stew or recommend it to friends. If Petal appreciates traditions, then he either loves local food or supports local businesses (or both). Khai does not have new experiences. Khai does not explore culture. Khai does not sample regional specialties. If someone visits Khai's stall and tries the stew, then they become a regular customer. Petal either stays in one city or travels to new places, but not at the same time. If Khai appreciates traditions, then he either loves local food or supports local businesses (or both). If Daphne enjoys soups, then he will explore street food and try the stew. Simon does not support local businesses. If Khai enjoys soups, then he will explore street food and try the stew. Simon does not have new experiences. Petal does not sample regional specialties. Daphne enjoys soups. If Khai either explores culture or stays in one city (but not both), then he has new experiences. If Khai gets bored and seeks adventure, then he travels to new places. Anyone who travels to new places will either sample regional specialties or try local cuisine (or both). If Khai craves spicy food, then he will venture outdoors and try local cuisine. Khai appreciates traditions. If Khai loves local food, then he will visit his own stall. Khai enjoys soups.",
    "nl2fol": {
      "Khai either stays in one city or travels to new places, but not at the same time.": "stay_in_one_city(Khai) ⊕ travel_to_new_places(Khai)",
      "Khai does not support local businesses.": "¬support_local_business(Khai)",
      "Khai tends to stay in one city if he has strong community ties.": "has_community_ties(Khai) → stay_in_one_city(Khai)",
      "If Khai likes exotic flavors or craves hearty meals, then he will explore street food.": "(like_exotic_flavors(Khai) ∨ crave_hearty_meals(Khai)) → explore_street_food(Khai)",
      "If someone follows food blogs, then they either try Khai's stew or recommend it to friends.": "follow_food_blogs(Khai) → (try_the_stew(Khai) ∨ recommend_to_friends(Khai))",
      "If Petal appreciates traditions, then he either loves local food or supports local businesses (or both).": "appreciate_traditions(Petal) → (love_local_food(Petal) ∨ support_local_business(Petal))",
      "Khai does not have new experiences.": "¬has_new_experiences(Khai)",
      "Khai does not explore culture.": "¬explore_culture(Khai)",
      "Khai does not sample regional specialties.": "¬sample_regional_specialties(Khai)",
      "If someone visits Khai's stall and tries the stew, then they become a regular customer.": "(visit_Khais_stall(Khai) ∧ try_the_stew(Khai)) → become_a_regular_customer(Khai)",
      "Petal either stays in one city or travels to new places, but not at the same time.": "stay_in_one_city(Petal) ⊕ travel_to_new_places(Petal)",
      "If Khai appreciates traditions, then he either loves local food or supports local businesses (or both).": "appreciate_traditions(Khai) → (love_local_food(Khai) ∨ support_local_business(Khai))",
      "If Daphne enjoys soups, then he will explore street food and try the stew.": "enjoy_soups(Daphne) → (explore_street_food(Daphne) ∧ try_the_stew(Daphne))",
      "Simon does not support local businesses.": "¬support_local_business(Simon)",
      "If Khai enjoys soups, then he will explore street food and try the stew.": "enjoy_soups(Khai) → (explore_street_food(Khai) ∧ try_the_stew(Khai))",
      "Simon does not have new experiences.": "¬has_new_experiences(Simon)",
      "Petal does not sample regional specialties.": "¬sample_regional_specialties(Petal)",
      "Daphne enjoys soups.": "enjoy_soups(Daphne)",
      "If Khai either explores culture or stays in one city (but not both), then he has new experiences.": "(explore_culture(Khai) ⊕ stay_in_one_city(Khai)) → has_new_experiences(Khai)",
      "If Khai gets bored and seeks adventure, then he travels to new places.": "(gets_bored(Khai) ∧ seeks_adventure(Khai)) → travel_to_new_places(Khai)",
      "Anyone who travels to new places will either sample regional specialties or try local cuisine (or both).": "∀x (travel_to_new_places(x) → (sample_regional_specialties(x) ∨ try_local_cuisine(x)))",
      "If Khai craves spicy food, then he will venture outdoors and try local cuisine.": "crave_spicy_food(Khai) → (venture_outdoors(Khai) ∧ try_local_cuisine(Khai))",
      "Khai appreciates traditions.": "appreciate_traditions(Khai)",
      "If Khai loves local food, then he will visit his own stall.": "love_local_food(Khai) → visit_Khais_stall(Khai)",
      "Khai enjoys soups.": "enjoy_soups(Khai)"
    },
    "conclusion_fol": "¬become_a_regular_customer(Khai)"
  },
  {
    "id": 231,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Brittany is an innovative artist.",
    "reasoning": "fact1: Brittany appreciates serenity.\nrule: If someone appreciates serenity, then they prefer solitude and value their privacy.\nconclusion: Brittany values her privacy.\n\nfact1: Brittany values her privacy.\nrule: Brittany either exhibits emotional depth or values her privacy, but not both.\nconclusion: Brittany does not exhibit emotional depth.\n\nfact1: Brittany is creative.\nfact2: Brittany does not have passion.\nrule: Everyone who is creative either has passion or produces beautiful work (or both).\nconclusion: Brittany produces beautiful work.\n\nfact1: Brittany does not have an original style.\nfact2: Brittany does not exhibit emotional depth.\nrule: If someone stands out from others, then they either have an original style or exhibit emotional depth.\nconclusion: Brittany does not stand out from others.\n\nfact1: Brittany does not develop new techniques.\nfact2: Brittany does not stand out from others.\nrule: If Brittany either creates unique masterpieces or develops new techniques (but not both), then she will stand out from others.\nconclusion: Brittany does not create unique masterpieces.\n\nfact1: Brittany does not create unique masterpieces.\nrule: If Brittany is an innovative artist, then she will gain international recognition and create unique masterpieces.\nconclusion: Brittany is an innovative artist.\n\nTherefore, it is false that Brittany is an innovative artist. The correct option is: B.",
    "context": "Brittany does not have an original style. Anyone who takes risks either stands out from others or pursues perfection (or both). If Alessandra is an innovative artist, then she will gain international recognition and create unique masterpieces. If someone stands out from others, then they either have an original style or exhibit emotional depth. Brittany either exhibits emotional depth or values her privacy, but not both. Brittany does not have passion. If Brittany either creates unique masterpieces or develops new techniques (but not both), then she will stand out from others. If someone appreciates serenity, then they prefer solitude and value their privacy. Brittany is creative. Ivory does not have passion. Brittany does not develop new techniques. Everyone who is creative either has passion or produces beautiful work (or both). For anyone who is disciplined and has good taste, they can produce beautiful work. Alessandra either exhibits emotional depth or values her privacy, but not both. If Brittany is an innovative artist, then she will gain international recognition and create unique masterpieces. If Brittany is highly motivated, then she will gain international recognition and constantly improve her skills. Ivory appreciates serenity. Brittany appreciates serenity.",
    "nl2fol": {
      "Brittany does not have an original style.": "¬has_original_style(Brittany)",
      "Anyone who takes risks either stands out from others or pursues perfection (or both).": "∀x (take_risks(x) → (stand_out_from_others(x) ∨ pursue_perfection(x)))",
      "If Alessandra is an innovative artist, then she will gain international recognition and create unique masterpieces.": "innovative_artist(Alessandra) → (gain_international_recognition(Alessandra) ∧ create_unique_masterpieces(Alessandra))",
      "If someone stands out from others, then they either have an original style or exhibit emotional depth.": "∀x (stand_out_from_others(x) → (has_original_style(x) ⊕ exhibit_emotional_depth(x)))",
      "Brittany either exhibits emotional depth or values her privacy, but not both.": "exhibit_emotional_depth(Brittany) ⊕ values_privacy(Brittany)",
      "Brittany does not have passion.": "¬has_passion(Brittany)",
      "If Brittany either creates unique masterpieces or develops new techniques (but not both), then she will stand out from others.": "(create_unique_masterpieces(Brittany) ⊕ develop_new_techniques(Brittany)) → stand_out_from_others(Brittany)",
      "If someone appreciates serenity, then they prefer solitude and value their privacy.": "∀x (appreciate_serenity(x) → (prefer_solitude(x) ∧ values_privacy(x)))",
      "Brittany is creative.": "is_creative(Brittany)",
      "Ivory does not have passion.": "¬has_passion(Ivory)",
      "Brittany does not develop new techniques.": "¬develop_new_techniques(Brittany)",
      "Everyone who is creative either has passion or produces beautiful work (or both).": "∀x (is_creative(x) → (has_passion(x) ∨ produces_beautiful_work(x)))",
      "For anyone who is disciplined and has good taste, they can produce beautiful work.": "∀x ((is_disciplined(x) ∧ has_good_taste(x)) → produces_beautiful_work(x))",
      "Alessandra either exhibits emotional depth or values her privacy, but not both.": "exhibit_emotional_depth(Alessandra) ⊕ values_privacy(Alessandra)",
      "If Brittany is an innovative artist, then she will gain international recognition and create unique masterpieces.": "innovative_artist(Brittany) → (gain_international_recognition(Brittany) ∧ create_unique_masterpieces(Brittany))",
      "If Brittany is highly motivated, then she will gain international recognition and constantly improve her skills.": "highly_motivated(Brittany) → (gain_international_recognition(Brittany) ∧ constantly_improve_skills(Brittany))",
      "Ivory appreciates serenity.": "appreciate_serenity(Ivory)",
      "Brittany appreciates serenity.": "appreciate_serenity(Brittany)"
    },
    "conclusion_fol": "innovative_artist(Brittany)"
  },
  {
    "id": 232,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James does not find inner peace.",
    "reasoning": "fact1: James does not value knowledge.\nfact2: James does not explore culture.\nrule: If a person reads books, then they value knowledge and explore culture.\nconclusion: James does not read books.\n\nfact1: James has good relationships.\nfact2: James does not achieve his life goals.\nrule: If James lives happily and has good relationships, then he can achieve his life goals.\nconclusion: James does not live happily.\n\nfact1: James does not read books.\nrule: James either engages in sports or reads books.\nconclusion: James engages in sports.\n\nfact1: James has good health.\nfact2: James does not live happily.\nrule: For all humans, if someone feels calm and has good health, then they can live happily.\nconclusion: James does not feel calm.\n\nfact1: James engages in sports.\nfact2: James does not meditate regularly.\nrule: If James engages in sports, then he either meditates regularly or practices mindfulness, but not both.\nconclusion: James practices mindfulness.\n\nfact1: James does not appreciate wildlife.\nfact2: James does not feel calm.\nrule: If James either connects with nature or appreciates wildlife (but not both), then he feels calm.\nconclusion: James does not connect with nature.\n\nfact1: James practices mindfulness.\nrule: James either practices mindfulness or embarks on long journeys, but not necessarily both.\nconclusion: James does not embark on long journeys.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that James does not find inner peace. The correct option is: C.",
    "context": "Kaylani does not explore culture. If James lives happily and has good relationships, then he can achieve his life goals. James does not meditate regularly. James has good health. James does not appreciate wildlife. James either engages in sports or reads books. If James sets life goals, then he either reads books or pursues hobbies. For all humans, if someone feels calm and has good health, then they can live happily. James has good relationships. Kaylani does not appreciate wildlife. If James engages in sports, then he either meditates regularly or practices mindfulness, but not both. James does not value knowledge. If James either connects with nature or appreciates wildlife (but not both), then he feels calm. James does not achieve his life goals. James does not explore culture. If a person reads books, then they value knowledge and explore culture. James either practices mindfulness or embarks on long journeys, but not necessarily both.",
    "nl2fol": {
      "Kaylani does not explore culture.": "¬explore_culture(Kaylani)",
      "If James lives happily and has good relationships, then he can achieve his life goals.": "(lives_happily(James) ∧ has_good_relationships(James)) → achieves_life_goals(James)",
      "James does not meditate regularly.": "¬meditate_regularly(James)",
      "James has good health.": "has_good_health(James)",
      "James does not appreciate wildlife.": "¬appreciate_wildlife(James)",
      "James either engages in sports or reads books.": "engage_in_sport(James) ∨ reads_books(James)",
      "If James sets life goals, then he either reads books or pursues hobbies.": "sets_life_goals(James) → (reads_books(James) ∨ pursue_hobbies(James))",
      "For all humans, if someone feels calm and has good health, then they can live happily.": "∀x ((feel_calm(x) ∧ has_good_health(x)) → lives_happily(x))",
      "James has good relationships.": "has_good_relationships(James)",
      "Kaylani does not appreciate wildlife.": "¬appreciate_wildlife(Kaylani)",
      "If James engages in sports, then he either meditates regularly or practices mindfulness, but not both.": "engage_in_sport(James) → (meditate_regularly(James) ⊕ practice_mindfulness(James))",
      "James does not value knowledge.": "¬value_knowledge(James)",
      "If James either connects with nature or appreciates wildlife (but not both), then he feels calm.": "(connect_with_nature(James) ⊕ appreciate_wildlife(James)) → feel_calm(James)",
      "James does not achieve his life goals.": "¬achieves_life_goals(James)",
      "James does not explore culture.": "¬explore_culture(James)",
      "If a person reads books, then they value knowledge and explore culture.": "∀x (reads_books(x) → (value_knowledge(x) ∧ explore_culture(x)))",
      "James either practices mindfulness or embarks on long journeys, but not necessarily both.": "practice_mindfulness(James) ⊕ embark_on_long_journeys(James)"
    },
    "conclusion_fol": "¬find_inner_peace(James)"
  },
  {
    "id": 233,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Boone is a skilled soap maker.",
    "reasoning": "fact1: Boone creates unique items.\nfact2: Boone is not a custom maker.\nrule: If Boone either mass-produces goods or creates unique items (but not both), then he is a custom maker.\nconclusion: Boone mass-produces goods.\n\nfact1: Boone mass-produces goods.\nrule: Boone is either a craftsman or mass-produces goods, but not both.\nconclusion: Boone is not a craftsman.\n\nfact1: Boone does not value handcrafting.\nfact2: Boone is not a craftsman.\nrule: If Boone either follows traditional methods or values handcrafting (but not both), then he is a craftsman.\nconclusion: Boone does not follow traditional methods.\n\nfact1: Boone does not follow traditional methods.\nrule: Boone either follows traditional methods or uses natural ingredients, but not both.\nconclusion: Boone uses natural ingredients.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Boone is a skilled soap maker. The correct option is: C.",
    "context": "If Boone is a meticulous artist, then he produces high-quality soaps and innovates recipes. Albert takes pride in his work. Boone either follows traditional methods or uses natural ingredients, but not both. If Hayden either mass-produces goods or creates unique items (but not both), then he is a custom maker. Boone does not value handcrafting. Albert does not value handcrafting. If Boone either follows traditional methods or values handcrafting (but not both), then he is a craftsman. Boone is either a craftsman or mass-produces goods, but not both. Boone creates unique items. Boone is not a custom maker. If Albert either follows traditional methods or values handcrafting (but not both), then he is a craftsman. Natalie is a passionate craftsman. If Boone either mass-produces goods or creates unique items (but not both), then he is a custom maker. Hayden shares knowledge. Anyone who uses machinery and follows a standardized process can mass-produce goods. Natalie is not a custom maker. Hayden either follows traditional methods or uses natural ingredients, but not both. Natalie is either a craftsman or mass-produces goods, but not both.",
    "nl2fol": {
      "If Boone is a meticulous artist, then he produces high-quality soaps and innovates recipes.": "meticulous_artist(Boone) → (produce_high_quality_soaps(Boone) ∧ innovate_recipes(Boone))",
      "Albert takes pride in his work.": "take_pride_in_work(Albert)",
      "Boone either follows traditional methods or uses natural ingredients, but not both.": "follow_traditional_methods(Boone) ⊕ use_natural_ingredients(Boone)",
      "If Hayden either mass-produces goods or creates unique items (but not both), then he is a custom maker.": "(mass_produce_goods(Hayden) ⊕ create_unique_items(Hayden)) → is_custom_maker(Hayden)",
      "Boone does not value handcrafting.": "¬value_handcrafting(Boone)",
      "Albert does not value handcrafting.": "¬value_handcrafting(Albert)",
      "If Boone either follows traditional methods or values handcrafting (but not both), then he is a craftsman.": "(follow_traditional_methods(Boone) ⊕ value_handcrafting(Boone)) → is_craftsman(Boone)",
      "Boone is either a craftsman or mass-produces goods, but not both.": "is_craftsman(Boone) ⊕ mass_produce_goods(Boone)",
      "Boone creates unique items.": "create_unique_items(Boone)",
      "Boone is not a custom maker.": "¬is_custom_maker(Boone)",
      "If Albert either follows traditional methods or values handcrafting (but not both), then he is a craftsman.": "(follow_traditional_methods(Albert) ⊕ value_handcrafting(Albert)) → is_craftsman(Albert)",
      "Natalie is a passionate craftsman.": "passionate_craftsman(Natalie)",
      "If Boone either mass-produces goods or creates unique items (but not both), then he is a custom maker.": "(mass_produce_goods(Boone) ⊕ create_unique_items(Boone)) → is_custom_maker(Boone)",
      "Hayden shares knowledge.": "shares_knowledge(Hayden)",
      "Anyone who uses machinery and follows a standardized process can mass-produce goods.": "∀x ((uses_machinery(x) ∧ follows_standardized_process(x)) → mass_produce_goods(x))",
      "Natalie is not a custom maker.": "¬is_custom_maker(Natalie)",
      "Hayden either follows traditional methods or uses natural ingredients, but not both.": "follow_traditional_methods(Hayden) ⊕ use_natural_ingredients(Hayden)",
      "Natalie is either a craftsman or mass-produces goods, but not both.": "is_craftsman(Natalie) ⊕ mass_produce_goods(Natalie)"
    },
    "conclusion_fol": "skilled_soap_maker(Boone)"
  },
  {
    "id": 234,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Addilynn is either creative or business-savvy (but not both), then she is successful.",
    "reasoning": "fact1: Addilynn partners with companies.\nfact2: Addilynn does not export goods overseas.\nrule: If Addilynn either partners with companies or exports goods overseas (but not both), then she enters global markets.\nconclusion: Addilynn enters global markets.\n\nfact1: Addilynn does not develop new products.\nfact2: Addilynn enters global markets.\nrule: If Addilynn either develops new products or enters global markets (but not both), then she expands into new markets.\nconclusion: Addilynn expands into new markets.\n\nfact1: Addilynn embraces challenges.\nfact2: Addilynn is open-minded.\nrule: Anyone who embraces challenges and is open-minded thinks outside the box.\nconclusion: Addilynn thinks outside the box.\n\nfact1: Addilynn does not invest in a startup.\nfact2: Addilynn expands into new markets.\nrule: If someone either invests in a startup or expands into new markets (but not both), then they take risks.\nconclusion: Addilynn takes risks.\n\nfact1: Addilynn has imagination.\nfact2: Addilynn thinks outside the box.\nrule: If someone has imagination and thinks outside the box, then they are creative.\nconclusion: Addilynn is creative.\n\nfact1: Addilynn takes risks.\nrule: Addilynn is either business-savvy or takes risks, but not both.\nconclusion: Addilynn is not business-savvy.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Addilynn is either creative or business-savvy (but not both), then she is successful. The correct option is: C.",
    "context": "If Addilynn either partners with companies or exports goods overseas (but not both), then she enters global markets. If someone establishes an international office, then they enter global markets. If Addilynn either develops new products or enters global markets (but not both), then she expands into new markets. Anyone who embraces challenges and is open-minded thinks outside the box. Addilynn is either business-savvy or takes risks, but not both. Addilynn does not invest in a startup. Addilynn does not export goods overseas. Addilynn is open-minded. Addilynn does not develop new products. Addilynn embraces challenges. Addilynn has imagination. Addilynn partners with companies. If someone either invests in a startup or expands into new markets (but not both), then they take risks. If someone has imagination and thinks outside the box, then they are creative.",
    "nl2fol": {
      "If Addilynn either partners with companies or exports goods overseas (but not both), then she enters global markets.": "(partners_with_companies(Addilynn) ⊕ exports_goods_overseas(Addilynn)) → enters_global_markets(Addilynn)",
      "If someone establishes an international office, then they enter global markets.": "∀x (establishes_international_office(x) → enters_global_markets(x))",
      "If Addilynn either develops new products or enters global markets (but not both), then she expands into new markets.": "(develops_new_products(Addilynn) ⊕ enters_global_markets(Addilynn)) → expands_into_new_markets(Addilynn)",
      "Anyone who embraces challenges and is open-minded thinks outside the box.": "∀x ((embraces_challenges(x) ∧ is_open_minded(x)) → thinks_outside_box(x))",
      "Addilynn is either business-savvy or takes risks, but not both.": "takes_risks(Addilynn) ⊕ business_savvy(Addilynn)",
      "Addilynn does not invest in a startup.": "¬invests_in_startup(Addilynn)",
      "Addilynn does not export goods overseas.": "¬exports_goods_overseas(Addilynn)",
      "Addilynn is open-minded.": "is_open_minded(Addilynn)",
      "Addilynn does not develop new products.": "¬develops_new_products(Addilynn)",
      "Addilynn embraces challenges.": "embraces_challenges(Addilynn)",
      "Addilynn has imagination.": "has_imagination(Addilynn)",
      "Addilynn partners with companies.": "partners_with_companies(Addilynn)",
      "If someone either invests in a startup or expands into new markets (but not both), then they take risks.": "∀x ((invests_in_startup(x) ⊕ expands_into_new_markets(x)) → takes_risks(x))",
      "If someone has imagination and thinks outside the box, then they are creative.": "∀x ((has_imagination(x) ∧ thinks_outside_box(x)) → creative(x))"
    },
    "conclusion_fol": "(creative(Addilynn) ⊕ business_savvy(Addilynn)) → successful(Addilynn)"
  },
  {
    "id": 235,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Esme does not study xenoliths.",
    "reasoning": "fact1: Esme does not examine fossils.\nrule: Every geologist either examines fossils or conducts fieldwork.\nconclusion: Esme conducts fieldwork.\n\nfact1: Esme creates maps.\nrule: Esme either collects samples or creates maps, but not both.\nconclusion: Esme does not collect samples.\n\nfact1: Esme does not explore remote areas.\nfact2: Esme does not uncover new insights.\nrule: Every geologist who advances knowledge either explores remote areas or uncovers new insights (or both).\nconclusion: Esme does not advance knowledge.\n\nfact1: Esme does not collect samples.\nfact2: Esme does not advance knowledge.\nrule: If Esme either collects samples or publishes research (but not both), then she advances knowledge.\nconclusion: Esme does not publish research.\n\nfact1: Esme does not publish research.\nfact2: Esme conducts fieldwork.\nrule: If Esme gains recognition, then she publishes research and conducts fieldwork.\nconclusion: Esme does not gain recognition.\n\nfact1: Esme does not analyze rock formations.\nrule: Esme either analyzes rock formations or studies volcanoes, but not both.\nconclusion: Esme studies volcanoes.\n\nfact1: Esme studies volcanoes.\nfact2: Esme does not gain recognition.\nrule: If Esme either studies xenoliths or studies volcanoes (but not both), then she gains recognition.\nconclusion: Esme does not study xenoliths.\n\nTherefore, it is false that Esme does not study xenoliths. The correct option is: B.",
    "context": "Esme does not uncover new insights. Esme does not analyze rock formations. If Esme either studies xenoliths or studies volcanoes (but not both), then she gains recognition. Sergio creates maps. If Esme researches the Earth's history, then she either investigates magma or studies volcanoes (or both). Esme either collects samples or creates maps, but not both. Arthur does not analyze rock formations. Esme either analyzes rock formations or studies volcanoes, but not both. If a geologist either surveys terrain or measures strata (but not both), then they conduct fieldwork. Every geologist either examines fossils or conducts fieldwork. If Esme either collects samples or publishes research (but not both), then she advances knowledge. Esme does not explore remote areas. If Esme gains recognition, then she publishes research and conducts fieldwork. If a geologist mentors students and develops new methods, then they can gain recognition. Esme creates maps. Every geologist who advances knowledge either explores remote areas or uncovers new insights (or both). If Esme either examines minerals or models Earth processes (but not both), then she publishes research. Esme does not examine fossils.",
    "nl2fol": {
      "Esme does not uncover new insights.": "¬uncover_new_insights(Esme)",
      "Esme does not analyze rock formations.": "¬analyze_rock_formations(Esme)",
      "If Esme either studies xenoliths or studies volcanoes (but not both), then she gains recognition.": "(study_xenoliths(Esme) ⊕ study_volcanoes(Esme)) → gain_recognition(Esme)",
      "Sergio creates maps.": "create_maps(Sergio)",
      "If Esme researches the Earth's history, then she either investigates magma or studies volcanoes (or both).": "research_earth_history(Esme) → (investigate_magma(Esme) ∨ study_volcanoes(Esme))",
      "Esme either collects samples or creates maps, but not both.": "collect_samples(Esme) ⊕ create_maps(Esme)",
      "Arthur does not analyze rock formations.": "¬analyze_rock_formations(Arthur)",
      "Esme either analyzes rock formations or studies volcanoes, but not both.": "analyze_rock_formations(Esme) ⊕ study_volcanoes(Esme)",
      "If a geologist either surveys terrain or measures strata (but not both), then they conduct fieldwork.": "∀x ((survey_terrain(x) ⊕ measure_strata(x)) → conduct_fieldwork(x))",
      "Every geologist either examines fossils or conducts fieldwork.": "∀x (examine_fossils(x) ∨ conduct_fieldwork(x))",
      "If Esme either collects samples or publishes research (but not both), then she advances knowledge.": "(collect_samples(Esme) ⊕ publish_research(Esme)) → advance_knowledge(Esme)",
      "Esme does not explore remote areas.": "¬explore_remote_areas(Esme)",
      "If Esme gains recognition, then she publishes research and conducts fieldwork.": "gain_recognition(Esme) → (publish_research(Esme) ∧ conduct_fieldwork(Esme))",
      "If a geologist mentors students and develops new methods, then they can gain recognition.": "∀x ((mentor_students(x) ∧ develop_new_methods(x)) → gain_recognition(x))",
      "Esme creates maps.": "create_maps(Esme)",
      "Every geologist who advances knowledge either explores remote areas or uncovers new insights (or both).": "∀x (advance_knowledge(x) → (explore_remote_areas(x) ∨ uncover_new_insights(x)))",
      "If Esme either examines minerals or models Earth processes (but not both), then she publishes research.": "(examine_minerals(Esme) ⊕ model_earth_processes(Esme)) → publish_research(Esme)",
      "Esme does not examine fossils.": "¬examine_fossils(Esme)"
    },
    "conclusion_fol": "¬study_xenoliths(Esme)"
  },
  {
    "id": 236,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Samir does not make a mistake.",
    "reasoning": "fact1: Samir acts on instinct.\nrule: For Samir, either staying calm or acting on instinct is sufficient, but not necessarily both.\nconclusion: Samir does not stay calm.\n\nfact1: Samir does not stay calm.\nfact2: Samir does not perform well under challenging circumstances.\nrule: Everyone who either stays calm or can handle pressure is able to perform well under challenging circumstances.\nconclusion: Samir cannot handle pressure.\n\nfact1: Samir seeks resolution.\nfact2: Samir cannot handle pressure.\nrule: If Samir either avoids conflict or seeks resolution (but not both), then he can handle pressure.\nconclusion: Samir avoids conflict.\n\nfact1: Samir avoids conflict.\nrule: Samir either avoids conflict or overcomes adversity, but not both.\nconclusion: Samir does not overcome adversity.\n\nfact1: Samir forges ahead.\nfact2: Samir does not overcome adversity.\nrule: If Samir either forges ahead or bounces back (but not both), then he overcomes adversity.\nconclusion: Samir bounces back.\n\nfact1: Samir takes a risk.\nfact2: Samir bounces back.\nrule: If Samir takes a risk, then he either learns from it or bounces back, but not both.\nconclusion: Samir does not learn from it.\n\nfact1: Samir does not admit fault.\nfact2: Samir does not develop mental toughness.\nrule: Anyone who faces criticism or admits fault can develop mental toughness.\nconclusion: Samir does not face criticism.\n\nfact1: Samir does not face criticism.\nfact2: Samir does not become resilient.\nrule: If Samir either faces criticism or grows from a situation, then he becomes resilient.\nconclusion: Samir does not grow from it.\n\nfact1: Samir does not learn from it.\nfact2: Samir does not grow from it.\nrule: For all humans, if someone makes a mistake, then they either learn from it or grow from it (or both).\nconclusion: Samir does not make a mistake.\n\nTherefore, it is true that Samir does not make a mistake. The correct option is: A.",
    "context": "If Thatcher either forges ahead or bounces back (but not both), then he overcomes adversity. If Jesse either faces criticism or grows from a situation, then he becomes resilient. Samir does not perform well under challenging circumstances. For Samir, either staying calm or acting on instinct is sufficient, but not necessarily both. If Thatcher either avoids conflict or seeks resolution (but not both), then he can handle pressure. Samir seeks resolution. If Samir faces failure, then he either finds new strength or grows from it (or both). Samir either avoids conflict or overcomes adversity, but not both. Brittany does not admit fault. For Thatcher, either staying calm or acting on instinct is sufficient, but not necessarily both. Thatcher acts on instinct. Anyone who faces criticism or admits fault can develop mental toughness. If Samir either forges ahead or bounces back (but not both), then he overcomes adversity. If Samir takes a risk, then he either learns from it or bounces back, but not both. Samir forges ahead. If Samir either faces criticism or grows from a situation, then he becomes resilient. Samir acts on instinct. Jesse forges ahead. Everyone who either stays calm or can handle pressure is able to perform well under challenging circumstances. If Samir either avoids conflict or seeks resolution (but not both), then he can handle pressure. Samir does not admit fault. Samir takes a risk. Jesse takes a risk. Samir does not develop mental toughness. For all humans, if someone makes a mistake, then they either learn from it or grow from it (or both). Thatcher does not develop mental toughness. Thatcher seeks resolution. Samir does not become resilient.",
    "nl2fol": {
      "If Thatcher either forges ahead or bounces back (but not both), then he overcomes adversity.": "(forges_ahead(Thatcher) ⊕ bounces_back(Thatcher)) → overcomes_adversity(Thatcher)",
      "If Jesse either faces criticism or grows from a situation, then he becomes resilient.": "(faces_criticism(Jesse) ⊕ grows_from_it(Jesse)) → becomes_resilient(Jesse)",
      "Samir does not perform well under challenging circumstances.": "¬performs_well(Samir)",
      "For Samir, either staying calm or acting on instinct is sufficient, but not necessarily both.": "stays_calm(Samir) ⊕ acts_on_instinct(Samir)",
      "If Thatcher either avoids conflict or seeks resolution (but not both), then he can handle pressure.": "(avoids_conflict(Thatcher) ⊕ seeks_resolution(Thatcher)) → handles_pressure(Thatcher)",
      "Samir seeks resolution.": "seeks_resolution(Samir)",
      "If Samir faces failure, then he either finds new strength or grows from it (or both).": "faces_failure(Samir) → (finds_new_strength(Samir) ∨ grows_from_it(Samir))",
      "Samir either avoids conflict or overcomes adversity, but not both.": "avoids_conflict(Samir) ⊕ overcomes_adversity(Samir)",
      "Brittany does not admit fault.": "¬admits_fault(Brittany)",
      "For Thatcher, either staying calm or acting on instinct is sufficient, but not necessarily both.": "stays_calm(Thatcher) ⊕ acts_on_instinct(Thatcher)",
      "Thatcher acts on instinct.": "acts_on_instinct(Thatcher)",
      "Anyone who faces criticism or admits fault can develop mental toughness.": "∀x ((faces_criticism(x) ∨ admits_fault(x)) → develops_mental_toughness(x))",
      "If Samir either forges ahead or bounces back (but not both), then he overcomes adversity.": "(forges_ahead(Samir) ⊕ bounces_back(Samir)) → overcomes_adversity(Samir)",
      "If Samir takes a risk, then he either learns from it or bounces back, but not both.": "takes_risk(Samir) → (bounces_back(Samir) ⊕ learns_from_it(Samir))",
      "Samir forges ahead.": "forges_ahead(Samir)",
      "If Samir either faces criticism or grows from a situation, then he becomes resilient.": "(faces_criticism(Samir) ⊕ grows_from_it(Samir)) → becomes_resilient(Samir)",
      "Samir acts on instinct.": "acts_on_instinct(Samir)",
      "Jesse forges ahead.": "forges_ahead(Jesse)",
      "Everyone who either stays calm or can handle pressure is able to perform well under challenging circumstances.": "∀x ((stays_calm(x) ⊕ handles_pressure(x)) → performs_well(x))",
      "If Samir either avoids conflict or seeks resolution (but not both), then he can handle pressure.": "(avoids_conflict(Samir) ⊕ seeks_resolution(Samir)) → handles_pressure(Samir)",
      "Samir does not admit fault.": "¬admits_fault(Samir)",
      "Samir takes a risk.": "takes_risk(Samir)",
      "Jesse takes a risk.": "takes_risk(Jesse)",
      "Samir does not develop mental toughness.": "¬develops_mental_toughness(Samir)",
      "For all humans, if someone makes a mistake, then they either learn from it or grow from it (or both).": "∀x (makes_a_mistake(x) → (learns_from_it(x) ∨ grows_from_it(x)))",
      "Thatcher does not develop mental toughness.": "¬develops_mental_toughness(Thatcher)",
      "Thatcher seeks resolution.": "seeks_resolution(Thatcher)",
      "Samir does not become resilient.": "¬becomes_resilient(Samir)"
    },
    "conclusion_fol": "¬makes_a_mistake(Samir)"
  },
  {
    "id": 237,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eren is either a determined fighter or a cowardly deserter, but not both.",
    "reasoning": "fact1: Eren inspires others.\nfact2: Eren does not lead by example.\nrule: If Eren is either a fearless leader or inspires others (but not both), then he leads by example.\nconclusion: Eren is a fearless leader.\n\nfact1: Eren does not compromise his values.\nrule: Eren either compromises his values or stands by his principles, but he does not do both.\nconclusion: Eren stands by his principles.\n\nfact1: Eren does not follow orders.\nrule: If someone is a young soldier, then they follow orders and respect their superiors.\nconclusion: Eren is not a young soldier.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Eren is either a determined fighter or a cowardly deserter, but not both. The correct option is: C.",
    "context": "Eren does not follow orders. If Marco is either a fearless leader or inspires others (but not both), then he leads by example. Eren inspires others. Raiden does not follow orders. If someone is a young soldier, then they follow orders and respect their superiors. If Eren is a warrior, then he is either a determined fighter or a self-serving traitor, but not both. If Eren is either a fearless leader or inspires others (but not both), then he leads by example. If Eren abandons friends and prioritizes himself, then he can be a cowardly deserter. If Eren has strong convictions, then he is a fearless leader. Eren either compromises his values or stands by his principles, but he does not do both. Eren does not lead by example. If Daisy is a young soldier, then he is either a fearless leader or a determined fighter, but not both. Eren does not compromise his values. Raiden does not join the military. If Marco joins the military, then he either faces adversity or serves with honor. Raiden does not compromise his values. Daisy does not put others first. If Daisy faces adversity, then he either stands by his principles or is a cowardly deserter (or both).",
    "nl2fol": {
      "Eren does not follow orders.": "¬follows_orders(Eren)",
      "If Marco is either a fearless leader or inspires others (but not both), then he leads by example.": "(fearless_leader(Marco) ⊕ inspires_others(Marco)) → leads_by_example(Marco)",
      "Eren inspires others.": "inspires_others(Eren)",
      "Raiden does not follow orders.": "¬follows_orders(Raiden)",
      "If someone is a young soldier, then they follow orders and respect their superiors.": "∀x (young_soldier(x) → (follows_orders(x) ∧ respects_superiors(x)))",
      "If Eren is a warrior, then he is either a determined fighter or a self-serving traitor, but not both.": "warrior(Eren) → (determined_fighter(Eren) ⊕ self_serving_traitor(Eren))",
      "If Eren is either a fearless leader or inspires others (but not both), then he leads by example.": "(fearless_leader(Eren) ⊕ inspires_others(Eren)) → leads_by_example(Eren)",
      "If Eren abandons friends and prioritizes himself, then he can be a cowardly deserter.": "(abandons_friends(Eren) ∧ prioritizes_self(Eren)) → cowardly_deserter(Eren)",
      "If Eren has strong convictions, then he is a fearless leader.": "has_strong_convictions(Eren) → fearless_leader(Eren)",
      "Eren either compromises his values or stands by his principles, but he does not do both.": "compromises_values(Eren) ⊕ stands_by_principles(Eren)",
      "Eren does not lead by example.": "¬leads_by_example(Eren)",
      "If Daisy is a young soldier, then he is either a fearless leader or a determined fighter, but not both.": "young_soldier(Daisy) → (fearless_leader(Daisy) ⊕ determined_fighter(Daisy))",
      "Eren does not compromise his values.": "¬compromises_values(Eren)",
      "Raiden does not join the military.": "¬joins_military(Raiden)",
      "If Marco joins the military, then he either faces adversity or serves with honor.": "joins_military(Marco) → (faces_adversity(Marco) ∨ serves_with_honor(Marco))",
      "Raiden does not compromise his values.": "¬compromises_values(Raiden)",
      "Daisy does not put others first.": "¬puts_others_first(Daisy)",
      "If Daisy faces adversity, then he either stands by his principles or is a cowardly deserter (or both).": "faces_adversity(Daisy) → (stands_by_principles(Daisy) ∨ cowardly_deserter(Daisy))"
    },
    "conclusion_fol": "determined_fighter(Eren) ⊕ cowardly_deserter(Eren)"
  },
  {
    "id": 238,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dr. Atharv contributes to agriculture.",
    "reasoning": "fact1: Dr. Atharv analyzes plant mechanisms.\nrule: If Dr. Atharv analyzes plant mechanisms, then he will explore self-fertilization.\nconclusion: Atharv explores self-fertilization.\n\nfact1: Atharv collects plant samples.\nfact2: Atharv develops new theories.\nrule: If Dr. Atharv collects plant samples, then he either develops new theories or earns academic recognition, but not both.\nconclusion: Dr. Atharv does not earn academic recognition.\n\nfact1: Dr. Atharv conducts fieldwork.\nfact2: Dr. Atharv does not earn academic recognition.\nrule: If Dr. Atharv conducts fieldwork, then he either publishes research or earns academic recognition.\nconclusion: Dr. Atharv publishes research.\n\nfact1: Atharv investigates plant reproduction.\nfact2: Atharv explores self-fertilization.\nrule: For all botanists, if they investigate plant reproduction and explore self-fertilization, then they can study autogamy.\nconclusion: Dr. Atharv studies autogamy.\n\nfact1: Dr. Atharv studies autogamy.\nrule: If Dr. Atharv studies autogamy, then he will make groundbreaking discoveries and contribute to agriculture.\nconclusion: Dr. Atharv contributes to agriculture.\n\nTherefore, it is true that Dr. Atharv contributes to agriculture. The correct option is: A.",
    "context": "For all botanists, if they investigate plant reproduction and explore self-fertilization, then they can study autogamy. Atharv collects plant samples. Dante investigates plant reproduction. Alec develops new theories. Atharv develops new theories. If Dr. Alec studies autogamy, then he will make groundbreaking discoveries and contribute to agriculture. If Dr. Atharv analyzes plant mechanisms, then he will explore self-fertilization. Dr. June either publishes research or makes groundbreaking discoveries. If Dr. Atharv collects plant samples, then he either develops new theories or earns academic recognition, but not both. If Dr. Atharv studies autogamy, then he will make groundbreaking discoveries and contribute to agriculture. If Dr. Atharv conducts fieldwork, then he either publishes research or earns academic recognition. Dr. Atharv conducts fieldwork. Atharv investigates plant reproduction. Dr. Atharv analyzes plant mechanisms. Dr. June analyzes plant mechanisms. If Dr. June analyzes plant mechanisms, then he will explore self-fertilization. Alec collects plant samples.",
    "nl2fol": {
      "For all botanists, if they investigate plant reproduction and explore self-fertilization, then they can study autogamy.": "∀x ((investigate_plant_reproduction(x) ∧ explore_self_fertilization(x)) → study_autogamy(x))",
      "Atharv collects plant samples.": "collect_plant_samples(Atharv)",
      "Dante investigates plant reproduction.": "investigate_plant_reproduction(Dante)",
      "Alec develops new theories.": "develop_new_theories(Alec)",
      "Atharv develops new theories.": "develop_new_theories(Atharv)",
      "If Dr. Alec studies autogamy, then he will make groundbreaking discoveries and contribute to agriculture.": "study_autogamy(Alec) → (make_groundbreaking_discoveries(Alec) ∧ contribute_to_agriculture(Alec))",
      "If Dr. Atharv analyzes plant mechanisms, then he will explore self-fertilization.": "analyze_plant_mechanisms(Atharv) → explore_self_fertilization(Atharv)",
      "Dr. June either publishes research or makes groundbreaking discoveries.": "publish_research(June) ∨ make_groundbreaking_discoveries(June)",
      "If Dr. Atharv collects plant samples, then he either develops new theories or earns academic recognition, but not both.": "collect_plant_samples(Atharv) → (develop_new_theories(Atharv) ⊕ earn_academic_recognition(Atharv))",
      "If Dr. Atharv studies autogamy, then he will make groundbreaking discoveries and contribute to agriculture.": "study_autogamy(Atharv) → (make_groundbreaking_discoveries(Atharv) ∧ contribute_to_agriculture(Atharv))",
      "If Dr. Atharv conducts fieldwork, then he either publishes research or earns academic recognition.": "conduct_fieldwork(Atharv) → (publish_research(Atharv) ∨ earn_academic_recognition(Atharv))",
      "Dr. Atharv conducts fieldwork.": "conduct_fieldwork(Atharv)",
      "Atharv investigates plant reproduction.": "investigate_plant_reproduction(Atharv)",
      "Dr. Atharv analyzes plant mechanisms.": "analyze_plant_mechanisms(Atharv)",
      "Dr. June analyzes plant mechanisms.": "analyze_plant_mechanisms(June)",
      "If Dr. June analyzes plant mechanisms, then he will explore self-fertilization.": "analyze_plant_mechanisms(June) → explore_self_fertilization(June)",
      "Alec collects plant samples.": "collect_plant_samples(Alec)"
    },
    "conclusion_fol": "contribute_to_agriculture(Atharv)"
  },
  {
    "id": 239,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Eva had a setback or experienced failure, then she can find a new purpose.",
    "reasoning": "fact1: Eva is adventurous.\nfact2: Eva does not embrace uncertainty.\nrule: Anyone who is adventurous either takes risks or embraces uncertainty (or both).\nconclusion: Eva takes risks.\n\nfact1: Eva values self-improvement.\nrule: If Eva values self-improvement, then she pursues her passion and has mentorship.\nconclusion: Eva pursues her passion.\n\nfact1: Eva takes risks.\nfact2: Eva reflects on her actions.\nrule: If someone takes risks and reflects on their actions, then they gain wisdom.\nconclusion: Eva gains wisdom.\n\nfact1: Eva pursues her passion.\nrule: If Eva pursues her passion, then she discovers resilience and has a setback.\nconclusion: Eva had a setback.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Eva had a setback or experienced failure, then she can find a new purpose. The correct option is: C.",
    "context": "Elsie does not embrace uncertainty. Elsie does not face adversity. Eva values self-improvement. If Wynter loses direction in life, then she will find a new purpose. If someone faces challenges and stays curious, then they take risks. If Eva pursues her passion, then she discovers resilience and has a setback. If Elsie pursues her passion, then she discovers resilience and has a setback. Eva does not embrace uncertainty. Eva reflects on her actions. If someone takes risks and reflects on their actions, then they gain wisdom. If Neil overcomes obstacles, then she either learns from her mistakes or gains wisdom (or both). If someone meets a dead end, then they have experienced failure. Wynter did not lose direction in life. Neil is adventurous. If Eva achieves success, then she either develops patience or gains wisdom (but not both). Eva is adventurous. Elsie values self-improvement. Anyone who is adventurous either takes risks or embraces uncertainty (or both). If Eva values self-improvement, then she pursues her passion and has mentorship. If Wynter values self-improvement, then she pursues her passion and has mentorship.",
    "nl2fol": {
      "Elsie does not embrace uncertainty.": "¬embraces_uncertainty(Elsie)",
      "Elsie does not face adversity.": "¬face_adversity(Elsie)",
      "Eva values self-improvement.": "values_self_improvement(Eva)",
      "If Wynter loses direction in life, then she will find a new purpose.": "lost_direction(Wynter) → found_a_new_purpose(Wynter)",
      "If someone faces challenges and stays curious, then they take risks.": "∀x ((faces_challenges(x) ∧ stays_curious(x)) → takes_risks(x))",
      "If Eva pursues her passion, then she discovers resilience and has a setback.": "pursues_passion(Eva) → (discovered_resilience(Eva) ∧ had_a_setback(Eva))",
      "If Elsie pursues her passion, then she discovers resilience and has a setback.": "pursues_passion(Elsie) → (discovered_resilience(Elsie) ∧ had_a_setback(Elsie))",
      "Eva does not embrace uncertainty.": "¬embraces_uncertainty(Eva)",
      "Eva reflects on her actions.": "reflects_on_actions(Eva)",
      "If someone takes risks and reflects on their actions, then they gain wisdom.": "∀x ((takes_risks(x) ∧ reflects_on_actions(x)) → gains_wisdom(x))",
      "If Neil overcomes obstacles, then she either learns from her mistakes or gains wisdom (or both).": "overcomes_obstacles(Neil) → (gains_wisdom(Neil) ∨ learns_from_mistakes(Neil))",
      "If someone meets a dead end, then they have experienced failure.": "∀x (meets_dead_end(x) → experienced_failure(x))",
      "Wynter did not lose direction in life.": "¬lost_direction(Wynter)",
      "Neil is adventurous.": "is_adventurous(Neil)",
      "If Eva achieves success, then she either develops patience or gains wisdom (but not both).": "achieves_success(Eva) → (develops_patience(Eva) ⊕ gains_wisdom(Eva))",
      "Eva is adventurous.": "is_adventurous(Eva)",
      "Elsie values self-improvement.": "values_self_improvement(Elsie)",
      "Anyone who is adventurous either takes risks or embraces uncertainty (or both).": "∀x (is_adventurous(x) → (takes_risks(x) ∨ embraces_uncertainty(x)))",
      "If Eva values self-improvement, then she pursues her passion and has mentorship.": "values_self_improvement(Eva) → (pursues_passion(Eva) ∧ has_mentorship(Eva))",
      "If Wynter values self-improvement, then she pursues her passion and has mentorship.": "values_self_improvement(Wynter) → (pursues_passion(Wynter) ∧ has_mentorship(Wynter))"
    },
    "conclusion_fol": "(had_a_setback(Eva) ∨ experienced_failure(Eva)) → found_a_new_purpose(Eva)"
  },
  {
    "id": 240,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Penny earns the respect of her colleagues.",
    "reasoning": "fact1: Penny has engineering skills.\nrule: Penny either knows masonry or has engineering skills, but not both.\nconclusion: Penny does not know masonry.\n\nfact1: Penny does not know masonry.\nrule: Penny understands geology or knows masonry.\nconclusion: Penny understands geology.\n\nfact1: Penny understands geology.\nfact2: Penny does not create lasting structures.\nrule: If someone understands geology and extracts precise cuts, then they can create lasting structures.\nconclusion: Penny does not extract precise cuts.\n\nfact1: Penny is attentive to detail.\nrule: If Penny is attentive to detail, then she is a skilled craftswoman.\nconclusion: Penny is a skilled craftswoman.\n\nfact1: Penny is a skilled craftswoman.\nfact2: Penny works independently.\nrule: If Penny is a skilled craftswoman, then she either works independently or is an experienced quarryman, but not both.\nconclusion: Penny is not an experienced quarryman.\n\nfact1: Penny does not extract precise cuts.\nfact2: Penny does not master stonework.\nrule: If Penny either spots high-quality stone or extracts precise cuts (but not both), then she masters stonework.\nconclusion: Penny does not spot high-quality stone.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Penny earns the respect of her colleagues. The correct option is: C.",
    "context": "If Aliza is a skilled craftswoman, then she either works independently or is an experienced quarryman, but not both. Aliza is attentive to detail. If Penny either spots high-quality stone or extracts precise cuts (but not both), then she masters stonework. Penny understands geology or knows masonry. Penny does not create lasting structures. Penny has engineering skills. Penny is attentive to detail. Penny works independently. If someone understands geology and extracts precise cuts, then they can create lasting structures. If Aliza is an experienced quarryman, then she either spots high-quality stone or earns the respect of her colleagues (or both). If Aliza is attentive to detail, then she is a skilled craftswoman. Penny either works with rock or is an experienced quarryman. Ocean either knows masonry or has engineering skills, but not both. Penny either knows masonry or has engineering skills, but not both. Haven understands geology or knows masonry. Anyone who works with stone either knows masonry or builds structures. Penny does not master stonework. If Aliza either spots high-quality stone or extracts precise cuts (but not both), then she masters stonework. Ocean has engineering skills. If Penny is a skilled craftswoman, then she either works independently or is an experienced quarryman, but not both. If Penny is attentive to detail, then she is a skilled craftswoman.",
    "nl2fol": {
      "If Aliza is a skilled craftswoman, then she either works independently or is an experienced quarryman, but not both.": "skilled_craftswoman(Aliza) → (work_independently(Aliza) ⊕ experienced_quarryman(Aliza))",
      "Aliza is attentive to detail.": "attentive_to_detail(Aliza)",
      "If Penny either spots high-quality stone or extracts precise cuts (but not both), then she masters stonework.": "(spot_high_quality_stone(Penny) ⊕ extract_precise_cuts(Penny)) → master_stonework(Penny)",
      "Penny understands geology or knows masonry.": "understands_geology(Penny) ∨ knows_masonry(Penny)",
      "Penny does not create lasting structures.": "¬creates_lasting_structures(Penny)",
      "Penny has engineering skills.": "has_engineering_skills(Penny)",
      "Penny is attentive to detail.": "attentive_to_detail(Penny)",
      "Penny works independently.": "work_independently(Penny)",
      "If someone understands geology and extracts precise cuts, then they can create lasting structures.": "∀x ((understands_geology(x) ∧ extract_precise_cuts(x)) → creates_lasting_structures(x))",
      "If Aliza is an experienced quarryman, then she either spots high-quality stone or earns the respect of her colleagues (or both).": "experienced_quarryman(Aliza) → (spot_high_quality_stone(Aliza) ∨ earn_respect_of_colleagues(Aliza))",
      "If Aliza is attentive to detail, then she is a skilled craftswoman.": "attentive_to_detail(Aliza) → skilled_craftswoman(Aliza)",
      "Penny either works with rock or is an experienced quarryman.": "works_with_rock(Penny) ∨ experienced_quarryman(Penny)",
      "Ocean either knows masonry or has engineering skills, but not both.": "knows_masonry(Ocean) ⊕ has_engineering_skills(Ocean)",
      "Penny either knows masonry or has engineering skills, but not both.": "knows_masonry(Penny) ⊕ has_engineering_skills(Penny)",
      "Haven understands geology or knows masonry.": "understands_geology(Haven) ∨ knows_masonry(Haven)",
      "Anyone who works with stone either knows masonry or builds structures.": "∀x (works_with_stone(x) → (knows_masonry(x) ∨ builds_structures(x)))",
      "Penny does not master stonework.": "¬master_stonework(Penny)",
      "If Aliza either spots high-quality stone or extracts precise cuts (but not both), then she masters stonework.": "(spot_high_quality_stone(Aliza) ⊕ extract_precise_cuts(Aliza)) → master_stonework(Aliza)",
      "Ocean has engineering skills.": "has_engineering_skills(Ocean)",
      "If Penny is a skilled craftswoman, then she either works independently or is an experienced quarryman, but not both.": "skilled_craftswoman(Penny) → (work_independently(Penny) ⊕ experienced_quarryman(Penny))",
      "If Penny is attentive to detail, then she is a skilled craftswoman.": "attentive_to_detail(Penny) → skilled_craftswoman(Penny)"
    },
    "conclusion_fol": "earn_respect_of_colleagues(Penny)"
  },
  {
    "id": 241,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michelle is creative.",
    "reasoning": "fact1: Michelle does not explore new ideas.\nrule: Michelle is curious or explores new ideas.\nconclusion: Michelle is curious.\n\nfact1: Michelle pursues her passions.\nfact2: Michelle values diversity.\nrule: If Michelle pursues her passions, then she values diversity and is open-minded.\nconclusion: Michelle is open-minded.\n\nfact1: Michelle is open-minded.\nfact2: Michelle is curious.\nrule: If Michelle is open-minded, then she is either curious or able to find unique solutions (but not both).\nconclusion: Michelle is not able to find unique solutions.\n\nfact1: Michelle paints vibrantly.\nfact2: Michelle cannot connect with others.\nrule: If someone tells stories and paints vibrantly, then they can connect with others.\nconclusion: Michelle does not tell stories.\n\nfact1: Michelle embraces uncertainty.\nfact2: Michelle is not able to find unique solutions.\nrule: If Michelle either embraces uncertainty or thinks outside the box (but not both), then she is able to find unique solutions.\nconclusion: Michelle thinks outside the box.\n\nfact1: Michelle does not tell stories.\nfact2: Michelle does not spark curiosity.\nrule: Anyone who captures imaginations either tells stories or sparks curiosity (or both).\nconclusion: Michelle does not capture imaginations.\n\nfact1: Michelle thinks outside the box.\nfact2: Michelle is not able to express herself.\nrule: Everyone who either thinks outside the box or brings joy to adults is able to express themselves.\nconclusion: Michelle brings joy to adults.\n\nfact1: Michelle is artistic.\nfact2: Michelle does not capture imaginations.\nrule: If Michelle is artistic, then she either captures imaginations or inspires children.\nconclusion: Michelle inspires children.\n\nfact1: Michelle inspires children.\nfact2: Michelle brings joy to adults.\nrule: If Michelle is creative, then she can either inspire children or bring joy to adults, but not both.\nconclusion: Michelle is creative.\n\nTherefore, it is false that Michelle is creative. The correct option is: B.",
    "context": "If Alia either embraces uncertainty or thinks outside the box (but not both), then she is able to find unique solutions. If Alia pursues her passions, then she values diversity and is open-minded. Michelle is artistic. Clementine is not able to express herself. Michelle embraces uncertainty. If Michelle either embraces uncertainty or thinks outside the box (but not both), then she is able to find unique solutions. If Michelle either plays an instrument or writes poetry (but not both), then she brings joy to adults. If Michelle pursues her passions, then she values diversity and is open-minded. Aurora values diversity. Michelle is curious or explores new ideas. If Alia is creative, then she can either inspire children or bring joy to adults, but not both. Anyone who captures imaginations either tells stories or sparks curiosity (or both). Michelle does not spark curiosity. If Aurora is artistic, then she either captures imaginations or inspires children. If someone has imagination, then they think outside the box and enjoy exploring. If Michelle is artistic, then she either captures imaginations or inspires children. Everyone who either thinks outside the box or brings joy to adults is able to express themselves. Clementine is curious or explores new ideas. Michelle paints vibrantly. Clementine does not explore new ideas. If Michelle is open-minded, then she is either curious or able to find unique solutions (but not both). Michelle cannot connect with others. If Michelle is creative, then she can either inspire children or bring joy to adults, but not both. Aurora paints vibrantly. If Michelle either enjoys learning or embraces change (but not both), then she is open-minded. Aurora is artistic. Alia does not spark curiosity. Everyone who asks questions either loves learning or is curious (or both). Michelle does not explore new ideas. Aurora cannot connect with others. Michelle is not able to express herself. If someone tells stories and paints vibrantly, then they can connect with others. Michelle values diversity. If Aurora is open-minded, then she is either curious or able to find unique solutions (but not both). Michelle pursues her passions.",
    "nl2fol": {
      "If Alia either embraces uncertainty or thinks outside the box (but not both), then she is able to find unique solutions.": "(embrace_uncertainty(Alia) ⊕ think_outside_box(Alia)) → find_unique_solutions(Alia)",
      "If Alia pursues her passions, then she values diversity and is open-minded.": "pursue_passions(Alia) → (value_diversity(Alia) ∧ be_open_minded(Alia))",
      "Michelle is artistic.": "artistic(Michelle)",
      "Clementine is not able to express herself.": "¬express_themselves(Clementine)",
      "Michelle embraces uncertainty.": "embrace_uncertainty(Michelle)",
      "If Michelle either embraces uncertainty or thinks outside the box (but not both), then she is able to find unique solutions.": "(embrace_uncertainty(Michelle) ⊕ think_outside_box(Michelle)) → find_unique_solutions(Michelle)",
      "If Michelle either plays an instrument or writes poetry (but not both), then she brings joy to adults.": "(play_instrument(Michelle) ⊕ write_poetry(Michelle)) → bring_joy_to_adults(Michelle)",
      "If Michelle pursues her passions, then she values diversity and is open-minded.": "pursue_passions(Michelle) → (value_diversity(Michelle) ∧ be_open_minded(Michelle))",
      "Aurora values diversity.": "values_diversity(Aurora)",
      "Michelle is curious or explores new ideas.": "be_curious(Michelle) ∨ explore_new_ideas(Michelle)",
      "If Alia is creative, then she can either inspire children or bring joy to adults, but not both.": "creative(Alia) → (inspire_children(Alia) ⊕ bring_joy_to_adults(Alia))",
      "Anyone who captures imaginations either tells stories or sparks curiosity (or both).": "∀x (capture_imaginations(x) → (tell_stories(x) ∨ spark_curiosity(x)))",
      "Michelle does not spark curiosity.": "¬spark_curiosity(Michelle)",
      "If Aurora is artistic, then she either captures imaginations or inspires children.": "artistic(Aurora) → (capture_imaginations(Aurora) ∨ inspire_children(Aurora))",
      "If someone has imagination, then they think outside the box and enjoy exploring.": "∀x (have_imagination(x) → (think_outside_box(x) ∧ enjoy_exploring(x)))",
      "If Michelle is artistic, then she either captures imaginations or inspires children.": "artistic(Michelle) → (capture_imaginations(Michelle) ∨ inspire_children(Michelle))",
      "Everyone who either thinks outside the box or brings joy to adults is able to express themselves.": "∀x ((think_outside_box(x) ⊕ bring_joy_to_adults(x)) → express_themselves(x))",
      "Clementine is curious or explores new ideas.": "be_curious(Clementine) ∨ explore_new_ideas(Clementine)",
      "Michelle paints vibrantly.": "paints_vibrantly(Michelle)",
      "Clementine does not explore new ideas.": "¬explores_new_ideas(Clementine)",
      "If Michelle is open-minded, then she is either curious or able to find unique solutions (but not both).": "be_open_minded(Michelle) → (be_curious(Michelle) ⊕ find_unique_solutions(Michelle))",
      "Michelle cannot connect with others.": "¬connects_with_others(Michelle)",
      "If Michelle is creative, then she can either inspire children or bring joy to adults, but not both.": "creative(Michelle) → (inspire_children(Michelle) ⊕ bring_joy_to_adults(Michelle))",
      "Aurora paints vibrantly.": "paints_vibrantly(Aurora)",
      "If Michelle either enjoys learning or embraces change (but not both), then she is open-minded.": "(enjoys_learning(Michelle) ⊕ embraces_change(Michelle)) → be_open_minded(Michelle)",
      "Aurora is artistic.": "is_artistic(Aurora)",
      "Alia does not spark curiosity.": "¬spark_curiosity(Alia)",
      "Everyone who asks questions either loves learning or is curious (or both).": "∀x (ask_questions(x) → (love_learning(x) ∨ be_curious(x)))",
      "Michelle does not explore new ideas.": "¬explore_new_ideas(Michelle)",
      "Aurora cannot connect with others.": "¬connects_with_others(Aurora)",
      "Michelle is not able to express herself.": "¬express_themselves(Michelle)",
      "If someone tells stories and paints vibrantly, then they can connect with others.": "∀x ((tell_stories(x) ∧ paints_vibrantly(x)) → connects_with_others(x))",
      "Michelle values diversity.": "value_diversity(Michelle)",
      "If Aurora is open-minded, then she is either curious or able to find unique solutions (but not both).": "be_open_minded(Aurora) → (be_curious(Aurora) ⊕ find_unique_solutions(Aurora))",
      "Michelle pursues her passions.": "pursue_passions(Michelle)"
    },
    "conclusion_fol": "creative(Michelle)"
  },
  {
    "id": 242,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Skyla has a passion for botany and either studies rare flowers or conserves natural habitats (or both).",
    "reasoning": "fact1: Skyla has expertise.\nrule: If Skyla has expertise, then she speaks publicly and creates awareness.\nconclusion: Skyla creates awareness.\n\nfact1: Skyla leads by example.\nfact2: Skyla creates awareness.\nrule: If Skyla inspires others, then she either leads by example or creates awareness (but not both).\nconclusion: Skyla does not inspire others.\n\nfact1: Skyla does not advocate for ecology.\nfact2: Skyla does not inspire others.\nrule: Anyone who supports sustainable practices or advocates for ecology can inspire others.\nconclusion: Skyla does not support sustainable practices.\n\nfact1: Skyla learns new languages.\nfact2: Skyla explores cultures.\nrule: If Skyla learns new languages and explores cultures, then she travels frequently.\nconclusion: Skyla travels frequently.\n\nfact1: Skyla travels frequently.\nfact2: Skyla collects art.\nrule: If Skyla travels frequently, then she either appreciates nature or collects art (but not both).\nconclusion: Skyla does not appreciate nature.\n\nfact1: Skyla works for a wildlife refuge.\nfact2: Skyla does not support sustainable practices.\nrule: If Skyla works for a wildlife refuge, then she either supports sustainable practices or protects endangered species (but not both).\nconclusion: Skyla protects endangered species.\n\nfact1: Skyla does not enjoy outdoor activities.\nrule: For Skyla, she either enjoys outdoor activities or has a love for gardening, but not necessarily both.\nconclusion: Skyla loves gardening.\n\nfact1: Skyla loves gardening.\nfact2: Skyla does not appreciate nature.\nrule: Everyone who either has a passion for botany or loves gardening (but not both) appreciates nature.\nconclusion: Skyla has a passion for botany.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Skyla has a passion for botany and either studies rare flowers or conserves natural habitats (or both). The correct option is: C.",
    "context": "Skyla does not enjoy outdoor activities. Skyla works for a wildlife refuge. If Skyla travels frequently, then she either appreciates nature or collects art (but not both). If Skyla has expertise, then she speaks publicly and creates awareness. Skyla does not advocate for ecology. Anyone who supports sustainable practices or advocates for ecology can inspire others. Skyla either preserves water or supports sustainable practices. If Skyla inspires others, then she either leads by example or creates awareness (but not both). Skyla collects art. Skyla leads by example. Skyla learns new languages. Skyla explores cultures. Skyla has expertise. If Skyla works for a wildlife refuge, then she either supports sustainable practices or protects endangered species (but not both). Everyone who either has a passion for botany or loves gardening (but not both) appreciates nature. For Skyla, she either enjoys outdoor activities or has a love for gardening, but not necessarily both. If Skyla learns new languages and explores cultures, then she travels frequently.",
    "nl2fol": {
      "Skyla does not enjoy outdoor activities.": "¬enjoys_outdoor_activities(Skyla)",
      "Skyla works for a wildlife refuge.": "works_for_wildlife_refuge(Skyla)",
      "If Skyla travels frequently, then she either appreciates nature or collects art (but not both).": "travels_frequently(Skyla) → (appreciates_nature(Skyla) ⊕ collects_art(Skyla))",
      "If Skyla has expertise, then she speaks publicly and creates awareness.": "has_expertise(Skyla) → (speaks_publicly(Skyla) ∧ creates_awareness(Skyla))",
      "Skyla does not advocate for ecology.": "¬advocates_for_ecology(Skyla)",
      "Anyone who supports sustainable practices or advocates for ecology can inspire others.": "∀x ((supports_sustainable_practices(x) ∨ advocates_for_ecology(x)) → inspires_others(x))",
      "Skyla either preserves water or supports sustainable practices.": "preserves_water(Skyla) ∨ supports_sustainable_practices(Skyla)",
      "If Skyla inspires others, then she either leads by example or creates awareness (but not both).": "inspires_others(Skyla) → (leads_by_example(Skyla) ⊕ creates_awareness(Skyla))",
      "Skyla collects art.": "collects_art(Skyla)",
      "Skyla leads by example.": "leads_by_example(Skyla)",
      "Skyla learns new languages.": "learns_new_languages(Skyla)",
      "Skyla explores cultures.": "explores_culture(Skyla)",
      "Skyla has expertise.": "has_expertise(Skyla)",
      "If Skyla works for a wildlife refuge, then she either supports sustainable practices or protects endangered species (but not both).": "works_for_wildlife_refuge(Skyla) → (supports_sustainable_practices(Skyla) ⊕ protects_endangered_species(Skyla))",
      "Everyone who either has a passion for botany or loves gardening (but not both) appreciates nature.": "∀x ((has_a_passion_for_botany(x) ⊕ loves_gardening(x)) → appreciates_nature(x))",
      "For Skyla, she either enjoys outdoor activities or has a love for gardening, but not necessarily both.": "enjoys_outdoor_activities(Skyla) ⊕ loves_gardening(Skyla)",
      "If Skyla learns new languages and explores cultures, then she travels frequently.": "(learns_new_languages(Skyla) ∧ explores_culture(Skyla)) → travels_frequently(Skyla)"
    },
    "conclusion_fol": "has_a_passion_for_botany(Skyla) ∧ (study_rare_flowers(Skyla) ∨ conserve_natural_habitats(Skyla))"
  },
  {
    "id": 243,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kaylee does not contribute to scientific knowledge.",
    "reasoning": "fact1: Kaylee does not collect samples.\nrule: If someone works in laboratories, then they collect samples and develop theories.\nconclusion: Kaylee does not work in laboratories.\n\nfact1: Kaylee publishes wildlife papers.\nfact2: Kaylee is not a conservationist.\nrule: For all humans, if someone either publishes wildlife papers or protects ecosystems, then they are a conservationist.\nconclusion: Kaylee protects ecosystems.\n\nfact1: Kaylee does not work in laboratories.\nrule: Kaylee either documents wildlife or works in laboratories, but not both.\nconclusion: Kaylee documents wildlife.\n\nfact1: Kaylee protects ecosystems.\nrule: Kaylee either teaches wildlife courses or protects ecosystems, but not both.\nconclusion: Kaylee does not teach wildlife courses.\n\nfact1: Kaylee documents wildlife.\nrule: Kaylee either explores rainforests or documents wildlife, but not both.\nconclusion: Kaylee does not explore rainforests.\n\nfact1: Kaylee does not teach wildlife courses.\nrule: Kaylee either teaches wildlife courses or analyzes amphibians, but not both.\nconclusion: Kaylee analyzes amphibians.\n\nfact1: Kaylee does not explore rainforests.\nfact2: Kaylee analyzes amphibians.\nrule: If Kaylee either explores rainforests or analyzes amphibians (but not both), then she studies frogs.\nconclusion: Kaylee studies frogs.\n\nfact1: Kaylee studies frogs.\nfact2: Kaylee does not inspire others.\nrule: If Kaylee studies frogs, then she can either contribute to scientific knowledge or inspire others, but not both.\nconclusion: Kaylee does not contribute to scientific knowledge.\n\nTherefore, it is false that Kaylee does not contribute to scientific knowledge. The correct option is: B.",
    "context": "If Kaylee studies frogs, then she can either contribute to scientific knowledge or inspire others, but not both. If Kaylee lives in tropical regions, then she appreciates wildlife and explores rainforests. Kaylee examines habitats or analyzes amphibians. If Kaylee loves nature, then she studies frogs and values biodiversity. Enzo either documents wildlife or works in laboratories, but not both. If Kaylee either explores rainforests or analyzes amphibians (but not both), then she studies frogs. Kaylee publishes wildlife papers. If Kaylee either creates habitats or raises animals (but not both), then she works in laboratories. Enzo is not a conservationist. Kaylee either teaches wildlife courses or protects ecosystems, but not both. Kaylee does not collect samples. Enzo either explores rainforests or documents wildlife, but not both. Kaylee either teaches wildlife courses or analyzes amphibians, but not both. Kaylee either explores rainforests or documents wildlife, but not both. Kaylee does not inspire others. For all humans, if someone either publishes wildlife papers or protects ecosystems, then they are a conservationist. Kaylee is not a conservationist. If Kaylee attends conferences, then she either authors papers or develops theories, but not both. Enzo either teaches wildlife courses or analyzes amphibians, but not both. Shane does not conduct experiments. If Bode either explores rainforests or analyzes amphibians (but not both), then she studies frogs. Kaylee either documents wildlife or works in laboratories, but not both. If someone works in laboratories, then they collect samples and develop theories. If Bode studies frogs, then she can either contribute to scientific knowledge or inspire others, but not both.",
    "nl2fol": {
      "If Kaylee studies frogs, then she can either contribute to scientific knowledge or inspire others, but not both.": "study_frogs(Kaylee) → (contribute_to_science(Kaylee) ⊕ inspire_others(Kaylee))",
      "If Kaylee lives in tropical regions, then she appreciates wildlife and explores rainforests.": "live_in_tropical_regions(Kaylee) → (appreciate_wildlife(Kaylee) ∧ explore_rainforests(Kaylee))",
      "Kaylee examines habitats or analyzes amphibians.": "examine_habitats(Kaylee) ∨ analyze_amphibians(Kaylee)",
      "If Kaylee loves nature, then she studies frogs and values biodiversity.": "love_nature(Kaylee) → (study_frogs(Kaylee) ∧ value_biodiversity(Kaylee))",
      "Enzo either documents wildlife or works in laboratories, but not both.": "document_wildlife(Enzo) ⊕ work_in_laboratories(Enzo)",
      "If Kaylee either explores rainforests or analyzes amphibians (but not both), then she studies frogs.": "(explore_rainforests(Kaylee) ⊕ analyze_amphibians(Kaylee)) → study_frogs(Kaylee)",
      "Kaylee publishes wildlife papers.": "publish_wildlife_papers(Kaylee)",
      "If Kaylee either creates habitats or raises animals (but not both), then she works in laboratories.": "(create_habitats(Kaylee) ⊕ raise_animals(Kaylee)) → work_in_laboratories(Kaylee)",
      "Enzo is not a conservationist.": "¬conservationist(Enzo)",
      "Kaylee either teaches wildlife courses or protects ecosystems, but not both.": "teach_wildlife_courses(Kaylee) ⊕ protect_ecosystems(Kaylee)",
      "Kaylee does not collect samples.": "¬collect_samples(Kaylee)",
      "Enzo either explores rainforests or documents wildlife, but not both.": "explore_rainforests(Enzo) ⊕ document_wildlife(Enzo)",
      "Kaylee either teaches wildlife courses or analyzes amphibians, but not both.": "teach_wildlife_courses(Kaylee) ⊕ analyze_amphibians(Kaylee)",
      "Kaylee either explores rainforests or documents wildlife, but not both.": "explore_rainforests(Kaylee) ⊕ document_wildlife(Kaylee)",
      "Kaylee does not inspire others.": "¬inspire_others(Kaylee)",
      "For all humans, if someone either publishes wildlife papers or protects ecosystems, then they are a conservationist.": "∀x ((publish_wildlife_papers(x) ⊕ protect_ecosystems(x)) → is_conservationist(x))",
      "Kaylee is not a conservationist.": "¬is_conservationist(Kaylee)",
      "If Kaylee attends conferences, then she either authors papers or develops theories, but not both.": "attend_conferences(Kaylee) → (author_papers(Kaylee) ⊕ develop_theories(Kaylee))",
      "Enzo either teaches wildlife courses or analyzes amphibians, but not both.": "teach_wildlife_courses(Enzo) ⊕ analyze_amphibians(Enzo)",
      "Shane does not conduct experiments.": "¬conduct_experiments(Shane)",
      "If Bode either explores rainforests or analyzes amphibians (but not both), then she studies frogs.": "(explore_rainforests(Bode) ⊕ analyze_amphibians(Bode)) → study_frogs(Bode)",
      "Kaylee either documents wildlife or works in laboratories, but not both.": "document_wildlife(Kaylee) ⊕ work_in_laboratories(Kaylee)",
      "If someone works in laboratories, then they collect samples and develop theories.": "∀x (work_in_laboratories(x) → (collect_samples(x) ∧ develop_theories(x)))",
      "If Bode studies frogs, then she can either contribute to scientific knowledge or inspire others, but not both.": "study_frogs(Bode) → (contribute_to_science(Bode) ⊕ inspire_others(Bode))"
    },
    "conclusion_fol": "¬contribute_to_science(Kaylee)"
  },
  {
    "id": 244,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Detective Mila is meticulous, or procedural, or detail-oriented.",
    "reasoning": "fact1: Mila does not have experience.\nfact2: Mila communicates effectively.\nrule: If Detective Mila remains calm, then she has experience and communicates effectively.\nconclusion: Detective Mila does not remain calm.\n\nfact1: Detective Mila does not remain calm.\nfact2: Mila does not think critically.\nrule: If Detective Mila handles pressure well, then she is either someone who remains calm or someone who thinks critically (but not both).\nconclusion: Mila does not handle pressure well.\n\nfact1: Mila sets clear goals.\nfact2: Mila manages her time effectively.\nrule: If Detective Mila sets clear goals, then she either manages her time effectively or achieves her objectives, but not both.\nconclusion: Mila does not achieve her objectives.\n\nfact1: Mila does not handle pressure well.\nfact2: Mila does not achieve her objectives.\nrule: Anyone who is organized either handles pressure well or achieves their objectives (or both).\nconclusion: Detective Mila is not organized.\n\nfact1: Detective Mila is not organized.\nfact2: Mila is not focused.\nrule: If someone is detail-oriented, then they are organized and focused.\nconclusion: Detective Mila is not detail-oriented.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Detective Mila is meticulous, or procedural, or detail-oriented. The correct option is: C.",
    "context": "Mila does not think critically. Mila communicates effectively. If someone is detail-oriented, then they are organized and focused. If Detective Mila either prioritizes tasks or meets deadlines (but not both), then she achieves her objectives. If Detective Omar sets clear goals, then she either manages her time effectively or achieves her objectives, but not both. Detective Omar does not value accuracy. If Detective Mila remains calm, then she has experience and communicates effectively. Mila sets clear goals. If Detective Travis remains calm, then she has experience and communicates effectively. Mila manages her time effectively. Travis does not have experience. If Detective Mila either examines evidence or analyzes data (but not both), then she is detail-oriented. Mila is not focused. Anyone who prioritizes tasks or maintains records is organized. Anyone who is organized either handles pressure well or achieves their objectives (or both). Mila does not have experience. If Detective Mila sets clear goals, then she either manages her time effectively or achieves her objectives, but not both. If Detective Mila handles pressure well, then she is either someone who remains calm or someone who thinks critically (but not both). Omar communicates effectively. Omar is not focused. If Detective Crue handles pressure well, then she is either someone who remains calm or someone who thinks critically (but not both). Detective Omar is not procedural. Travis does not follow protocol. Crue sets clear goals.",
    "nl2fol": {
      "Mila does not think critically.": "¬thinks_critically(Mila)",
      "Mila communicates effectively.": "communicates_effectively(Mila)",
      "If someone is detail-oriented, then they are organized and focused.": "∀x (detail_oriented(x) → (organized(x) ∧ focused(x)))",
      "If Detective Mila either prioritizes tasks or meets deadlines (but not both), then she achieves her objectives.": "(prioritizes_tasks(Mila) ⊕ meets_deadlines(Mila)) → achieves_objectives(Mila)",
      "If Detective Omar sets clear goals, then she either manages her time effectively or achieves her objectives, but not both.": "set_clear_goals(Omar) → (manages_time_effectively(Omar) ⊕ achieves_objectives(Omar))",
      "Detective Omar does not value accuracy.": "¬values_accuracy(Omar)",
      "If Detective Mila remains calm, then she has experience and communicates effectively.": "remains_calm(Mila) → (has_experience(Mila) ∧ communicates_effectively(Mila))",
      "Mila sets clear goals.": "set_clear_goals(Mila)",
      "If Detective Travis remains calm, then she has experience and communicates effectively.": "remains_calm(Travis) → (has_experience(Travis) ∧ communicates_effectively(Travis))",
      "Mila manages her time effectively.": "manages_time_effectively(Mila)",
      "Travis does not have experience.": "¬has_experience(Travis)",
      "If Detective Mila either examines evidence or analyzes data (but not both), then she is detail-oriented.": "(examines_evidence(Mila) ⊕ analyzes_data(Mila)) → detail_oriented(Mila)",
      "Mila is not focused.": "¬focused(Mila)",
      "Anyone who prioritizes tasks or maintains records is organized.": "∀x ((prioritizes_tasks(x) ∨ maintains_records(x)) → organized(x))",
      "Anyone who is organized either handles pressure well or achieves their objectives (or both).": "∀x (organized(x) → (handles_pressure(x) ∨ achieves_objectives(x)))",
      "Mila does not have experience.": "¬has_experience(Mila)",
      "If Detective Mila sets clear goals, then she either manages her time effectively or achieves her objectives, but not both.": "set_clear_goals(Mila) → (manages_time_effectively(Mila) ⊕ achieves_objectives(Mila))",
      "If Detective Mila handles pressure well, then she is either someone who remains calm or someone who thinks critically (but not both).": "handles_pressure(Mila) → (remains_calm(Mila) ⊕ thinks_critically(Mila))",
      "Omar communicates effectively.": "communicates_effectively(Omar)",
      "Omar is not focused.": "¬focused(Omar)",
      "If Detective Crue handles pressure well, then she is either someone who remains calm or someone who thinks critically (but not both).": "handles_pressure(Crue) → (remains_calm(Crue) ⊕ thinks_critically(Crue))",
      "Detective Omar is not procedural.": "¬procedural(Omar)",
      "Travis does not follow protocol.": "¬follows_protocol(Travis)",
      "Crue sets clear goals.": "set_clear_goals(Crue)"
    },
    "conclusion_fol": "meticulous(Mila) ∨ (procedural(Mila) ∨ detail_oriented(Mila))"
  },
  {
    "id": 245,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Abdullah does not express himself freely.",
    "reasoning": "fact1: Abdullah settles down.\nrule: Anyone who settles down will value stability.\nconclusion: Abdullah values stability.\n\nfact1: Abdullah values stability.\nrule: For Abdullah, trying new adventures and valuing stability are mutually exclusive.\nconclusion: Abdullah does not try new adventures.\n\nfact1: Abdullah explores cultures.\nfact2: Abdullah does not try new adventures.\nrule: If Abdullah either explores cultures or tries new adventures (but not both), then he seeks new experiences.\nconclusion: Abdullah seeks new experiences.\n\nfact1: Abdullah does not refuse convention.\nfact2: Abdullah seeks new experiences.\nrule: If Abdullah refuses convention or seeks new experiences, then he will chase his passion.\nconclusion: Abdullah chases his passion.\n\nfact1: Abdullah chases his passion.\nrule: Anyone who chases their passion will follow their heart.\nconclusion: Abdullah follows his heart.\n\nfact1: Abdullah loses his identity.\nrule: For anyone, finding their true self and losing their identity are mutually exclusive.\nconclusion: Abdullah does not find his true self.\n\nfact1: Abdullah does not find his true self.\nrule: If Abdullah either breaks rules or conforms to society, then he can find his true self.\nconclusion: Abdullah does not conform to society.\n\nfact1: Abdullah does not conform to society.\nrule: Everyone either conforms to society or expresses themselves freely (or both).\nconclusion: Abdullah does not express himself freely.\n\nTherefore, it is false that Abdullah does not express himself freely. The correct option is: B.",
    "context": "Anyone who takes risks or embraces individuality can find their true self. Abdullah loses his identity. If Abdullah is an artist, then he either chases his passion or pursues stability, but not both. Abdullah settles down. If Abdullah either explores cultures or tries new adventures (but not both), then he seeks new experiences. Anyone who builds long-term goals or prioritizes security can value stability. Baboo does not refuse convention. If Abdullah either breaks rules or conforms to society, then he can find his true self. For Abdullah, trying new adventures and valuing stability are mutually exclusive. Anyone who chases their passion will follow their heart. Abdullah explores cultures. Jianna settles down. Jianna explores cultures. If Abdullah refuses convention or seeks new experiences, then he will chase his passion. If Abdullah either trusts his intuition or listens to his instincts (but not both), then he follows his heart. If someone is curious, then they will seek new experiences. Mylah loses his identity. Abdullah does not refuse convention. Anyone who settles down will value stability. If Mylah either breaks rules or conforms to society, then he can find his true self. For Mylah, trying new adventures and valuing stability are mutually exclusive. Everyone either conforms to society or expresses themselves freely (or both). For anyone, finding their true self and losing their identity are mutually exclusive.",
    "nl2fol": {
      "Anyone who takes risks or embraces individuality can find their true self.": "∀x ((take_risks(x) ∨ embrace_individuality(x)) → find_true_self(x))",
      "Abdullah loses his identity.": "lose_identity(Abdullah)",
      "If Abdullah is an artist, then he either chases his passion or pursues stability, but not both.": "is_artist(Abdullah) → (chase_passion(Abdullah) ⊕ pursue_stability(Abdullah))",
      "Abdullah settles down.": "settle_down(Abdullah)",
      "If Abdullah either explores cultures or tries new adventures (but not both), then he seeks new experiences.": "(explore_cultures(Abdullah) ⊕ try_adventures(Abdullah)) → seek_new_experiences(Abdullah)",
      "Anyone who builds long-term goals or prioritizes security can value stability.": "∀x ((build_long_term_goals(x) ∨ prioritize_security(x)) → value_stability(x))",
      "Baboo does not refuse convention.": "¬refuse_convention(Baboo)",
      "If Abdullah either breaks rules or conforms to society, then he can find his true self.": "(break_rules(Abdullah) ∨ conform_to_society(Abdullah)) → find_true_self(Abdullah)",
      "For Abdullah, trying new adventures and valuing stability are mutually exclusive.": "value_stability(Abdullah) ⊕ try_adventures(Abdullah)",
      "Anyone who chases their passion will follow their heart.": "∀x (chase_passion(x) → follow_heart(x))",
      "Abdullah explores cultures.": "explore_cultures(Abdullah)",
      "Jianna settles down.": "settle_down(Jianna)",
      "Jianna explores cultures.": "explore_cultures(Jianna)",
      "If Abdullah refuses convention or seeks new experiences, then he will chase his passion.": "(refuse_convention(Abdullah) ∨ seek_new_experiences(Abdullah)) → chase_passion(Abdullah)",
      "If Abdullah either trusts his intuition or listens to his instincts (but not both), then he follows his heart.": "(trust_intuition(Abdullah) ⊕ listen_to_instincts(Abdullah)) → follow_heart(Abdullah)",
      "If someone is curious, then they will seek new experiences.": "∀x (is_curious(x) → seek_new_experiences(x))",
      "Mylah loses his identity.": "lose_identity(Mylah)",
      "Abdullah does not refuse convention.": "¬refuse_convention(Abdullah)",
      "Anyone who settles down will value stability.": "∀x (settle_down(x) → value_stability(x))",
      "If Mylah either breaks rules or conforms to society, then he can find his true self.": "(break_rules(Mylah) ∨ conform_to_society(Mylah)) → find_true_self(Mylah)",
      "For Mylah, trying new adventures and valuing stability are mutually exclusive.": "value_stability(Mylah) ⊕ try_adventures(Mylah)",
      "Everyone either conforms to society or expresses themselves freely (or both).": "∀x (conform_to_society(x) ∨ express_themselves_freely(x))",
      "For anyone, finding their true self and losing their identity are mutually exclusive.": "∀x (find_true_self(x) ⊕ lose_identity(x))"
    },
    "conclusion_fol": "¬express_themselves_freely(Abdullah)"
  },
  {
    "id": 246,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Matthew pursues his passion.",
    "reasoning": "fact1: Matthew finds inner peace.\nrule: For every person, either they find inner peace or they discover a new meaning in life, but these two are not necessarily related.\nconclusion: Matthew does not discover a new meaning in life.\n\nfact1: Matthew loses everything.\nrule: Anyone who loses everything will hit rock bottom.\nconclusion: Matthew hits rock bottom.\n\nfact1: Matthew hits rock bottom.\nrule: If someone hits rock bottom, then they reassess their priorities.\nconclusion: Matthew reassesses his priorities.\n\nfact1: Matthew reassesses his priorities.\nfact2: Matthew does not discover a new meaning in life.\nrule: If Matthew reassesses his priorities, then he either discovers a new meaning in life or restarts his life (or both).\nconclusion: Matthew restarts his life.\n\nfact1: Matthew faces challenges.\nrule: For Matthew, facing challenges and finding solace are mutually exclusive.\nconclusion: Matthew does not find solace.\n\nfact1: Matthew restarts his life.\nfact2: Matthew does not find solace.\nrule: If Matthew restarts his life, then he will either pursue his passion or find solace, but not both.\nconclusion: Matthew pursues his passion.\n\nTherefore, it is true that Matthew pursues his passion. The correct option is: A.",
    "context": "For every person, either they find inner peace or they discover a new meaning in life, but these two are not necessarily related. For Matthew, facing challenges and finding solace are mutually exclusive. Matthew loses everything. If Matthew reassesses his priorities, then he either discovers a new meaning in life or restarts his life (or both). If someone hits rock bottom, then they reassess their priorities. Matthew faces challenges. If Matthew restarts his life, then he will either pursue his passion or find solace, but not both. Anyone who loses everything will hit rock bottom. Matthew finds inner peace.",
    "nl2fol": {
      "For every person, either they find inner peace or they discover a new meaning in life, but these two are not necessarily related.": "∀x (find_inner_peace(x) ⊕ discover_new_meaning(x))",
      "For Matthew, facing challenges and finding solace are mutually exclusive.": "face_challenges(Matthew) ⊕ find_solace(Matthew)",
      "Matthew loses everything.": "lose_everything(Matthew)",
      "If Matthew reassesses his priorities, then he either discovers a new meaning in life or restarts his life (or both).": "reassess_priorities(Matthew) → (discover_new_meaning(Matthew) ∨ restart_life(Matthew))",
      "If someone hits rock bottom, then they reassess their priorities.": "∀x (hit_rock_bottom(x) → reassess_priorities(x))",
      "Matthew faces challenges.": "face_challenges(Matthew)",
      "If Matthew restarts his life, then he will either pursue his passion or find solace, but not both.": "restart_life(Matthew) → (pursue_passion(Matthew) ⊕ find_solace(Matthew))",
      "Anyone who loses everything will hit rock bottom.": "∀x (lose_everything(x) → hit_rock_bottom(x))",
      "Matthew finds inner peace.": "find_inner_peace(Matthew)"
    },
    "conclusion_fol": "pursue_passion(Matthew)"
  },
  {
    "id": 247,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rudy is not authentic.",
    "reasoning": "fact1: Rudy embraces imperfection.\nrule: Anyone who embraces imperfection or follows their intuition is inspired.\nconclusion: Rudy is inspired.\n\nfact1: Rudy is inspired.\nfact2: Rudy is open-minded.\nrule: If someone is inspired, then they express emotions and are open-minded.\nconclusion: Rudy expresses emotions.\n\nfact1: Rudy respects differences.\nrule: Anyone who respects differences values individuality.\nconclusion: Rudy values individuality.\n\nfact1: Rudy expresses emotions.\nfact2: Rudy values individuality.\nrule: For all humans, if they express emotions and value individuality, then they are passionate.\nconclusion: Rudy is passionate.\n\nfact1: Rudy is free-spirited.\nfact2: Rudy is passionate.\nrule: If Rudy is free-spirited, then he is either creative or passionate (but not both).\nconclusion: Rudy is not creative.\n\nfact1: Rudy is not creative.\nrule: Rudy is either creative or authentic (or both).\nconclusion: Rudy is authentic.\n\nTherefore, it is false that Rudy is not authentic. The correct option is: B.",
    "context": "Anyone who respects differences values individuality. For all humans, if they express emotions and value individuality, then they are passionate. If someone is inspired, then they express emotions and are open-minded. Rudy is open-minded. Anyone who embraces imperfection or follows their intuition is inspired. Rudy respects differences. If Rudy is free-spirited, then he is either creative or passionate (but not both). Rudy is either creative or authentic (or both). Rudy is free-spirited. If Rudy listens intently, then he will be inspired. Rudy embraces imperfection.",
    "nl2fol": {
      "Anyone who respects differences values individuality.": "∀x (respects_difference(x) → values_individuality(x))",
      "For all humans, if they express emotions and value individuality, then they are passionate.": "∀x ((expresses_emotions(x) ∧ values_individuality(x)) → passionate(x))",
      "If someone is inspired, then they express emotions and are open-minded.": "∀x (inspired(x) → (expresses_emotions(x) ∧ open_minded(x)))",
      "Rudy is open-minded.": "open_minded(Rudy)",
      "Anyone who embraces imperfection or follows their intuition is inspired.": "∀x ((embraces_imperfection(x) ∨ follows_intuition(x)) → inspired(x))",
      "Rudy respects differences.": "respects_difference(Rudy)",
      "If Rudy is free-spirited, then he is either creative or passionate (but not both).": "free_spirited(Rudy) → (creative(Rudy) ⊕ passionate(Rudy))",
      "Rudy is either creative or authentic (or both).": "creative(Rudy) ∨ authentic(Rudy)",
      "Rudy is free-spirited.": "free_spirited(Rudy)",
      "If Rudy listens intently, then he will be inspired.": "listens_intently(Rudy) → inspired(Rudy)",
      "Rudy embraces imperfection.": "embraces_imperfection(Rudy)"
    },
    "conclusion_fol": "¬authentic(Rudy)"
  },
  {
    "id": 248,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elisa understands brain functions.",
    "reasoning": "fact1: Elisa learns from others.\nfact2: Elisa gains new insights.\nrule: If Elisa collaborates with experts, then she either learns from others or gains new insights (but not both).\nconclusion: Elisa does not collaborate with experts.\n\nfact1: Elisa sets goals.\nfact2: Elisa overcomes obstacles.\nrule: If Elisa sets goals, then she overcomes obstacles and is highly motivated.\nconclusion: Elisa is highly motivated.\n\nfact1: Elisa has a strong work ethic.\nfact2: Elisa is highly motivated.\nrule: If Elisa has a strong work ethic, then she is either highly motivated or advances scientific knowledge, but not both.\nconclusion: Elisa does not advance scientific knowledge.\n\nfact1: Elisa does not collaborate with experts.\nfact2: Elisa does not advance scientific knowledge.\nrule: If Elisa either collaborates with experts or makes breakthrough discoveries (but not both), then she advances scientific knowledge.\nconclusion: Elisa does not make breakthrough discoveries.\n\nfact1: Elisa explores new ideas.\nfact2: Elisa does not solve complex problems.\nrule: If someone either explores new ideas or has curiosity, then they solve complex problems.\nconclusion: Elisa has curiosity.\n\nfact1: Elisa has curiosity.\nrule: If Elisa has curiosity, then she conducts innovative research and pushes boundaries.\nconclusion: Elisa conducts innovative research.\n\nfact1: Elisa conducts innovative research.\nfact2: Elisa does not make breakthrough discoveries.\nrule: Anyone who conducts innovative research and receives international recognition can make breakthrough discoveries.\nconclusion: Elisa does not receive international recognition.\n\nfact1: Elisa does not develop new treatments.\nfact2: Elisa does not receive international recognition.\nrule: If Elisa understands brain functions, then she can either develop new treatments or receive international recognition, but not both.\nconclusion: Elisa understands brain functions.\n\nTherefore, it is false that Elisa understands brain functions. The correct option is: B.",
    "context": "Anyone who publishes papers and presents findings can receive international recognition. Elisa explores new ideas. Beckham learns from others. Papito sets goals. Elisa has a strong work ethic. If Elisa has curiosity, then she conducts innovative research and pushes boundaries. Greyson does not develop new treatments. If Elisa has passion, then she will conduct innovative research. If Elisa sets goals, then she overcomes obstacles and is highly motivated. Elisa sets goals. If Elisa either collaborates with experts or makes breakthrough discoveries (but not both), then she advances scientific knowledge. If Elisa collaborates with experts, then she either learns from others or gains new insights (but not both). Elisa does not solve complex problems. If someone either explores new ideas or has curiosity, then they solve complex problems. Anyone who conducts innovative research and receives international recognition can make breakthrough discoveries. If Papito understands brain functions, then she can either develop new treatments or receive international recognition, but not both. Elisa gains new insights. If Elisa understands brain functions, then she can either develop new treatments or receive international recognition, but not both. Elisa overcomes obstacles. If Elisa has a strong work ethic, then she is either highly motivated or advances scientific knowledge, but not both. Greyson explores new ideas. Elisa does not develop new treatments. Elisa learns from others. Anyone who enjoys learning or faces challenges can be highly motivated.",
    "nl2fol": {
      "Anyone who publishes papers and presents findings can receive international recognition.": "∀x ((publishes_papers(x) ∧ presents_findings(x)) → receives_international_recognition(x))",
      "Elisa explores new ideas.": "explores_new_ideas(Elisa)",
      "Beckham learns from others.": "learns_from_others(Beckham)",
      "Papito sets goals.": "sets_goals(Papito)",
      "Elisa has a strong work ethic.": "has_strong_work_ethic(Elisa)",
      "If Elisa has curiosity, then she conducts innovative research and pushes boundaries.": "has_curiosity(Elisa) → (conducts_innovative_research(Elisa) ∧ pushes_boundaries(Elisa))",
      "Greyson does not develop new treatments.": "¬develops_new_treatments(Greyson)",
      "If Elisa has passion, then she will conduct innovative research.": "has_passion(Elisa) → conducts_innovative_research(Elisa)",
      "If Elisa sets goals, then she overcomes obstacles and is highly motivated.": "sets_goals(Elisa) → (overcomes_obstacles(Elisa) ∧ is_highly_motivated(Elisa))",
      "Elisa sets goals.": "sets_goals(Elisa)",
      "If Elisa either collaborates with experts or makes breakthrough discoveries (but not both), then she advances scientific knowledge.": "(collaborates_with_experts(Elisa) ⊕ makes_breakthrough_discoveries(Elisa)) → advances_scientific_knowledge(Elisa)",
      "If Elisa collaborates with experts, then she either learns from others or gains new insights (but not both).": "collaborates_with_experts(Elisa) → (learns_from_others(Elisa) ⊕ gains_new_insights(Elisa))",
      "Elisa does not solve complex problems.": "¬solves_complex_problems(Elisa)",
      "If someone either explores new ideas or has curiosity, then they solve complex problems.": "∀x ((explores_new_ideas(x) ⊕ has_curiosity(x)) → solves_complex_problems(x))",
      "Anyone who conducts innovative research and receives international recognition can make breakthrough discoveries.": "∀x ((conducts_innovative_research(x) ∧ receives_international_recognition(x)) → makes_breakthrough_discoveries(x))",
      "If Papito understands brain functions, then she can either develop new treatments or receive international recognition, but not both.": "understands_brain_functions(Papito) → (develops_new_treatments(Papito) ⊕ receives_international_recognition(Papito))",
      "Elisa gains new insights.": "gains_new_insights(Elisa)",
      "If Elisa understands brain functions, then she can either develop new treatments or receive international recognition, but not both.": "understands_brain_functions(Elisa) → (develops_new_treatments(Elisa) ⊕ receives_international_recognition(Elisa))",
      "Elisa overcomes obstacles.": "overcomes_obstacles(Elisa)",
      "If Elisa has a strong work ethic, then she is either highly motivated or advances scientific knowledge, but not both.": "has_strong_work_ethic(Elisa) → (is_highly_motivated(Elisa) ⊕ advances_scientific_knowledge(Elisa))",
      "Greyson explores new ideas.": "explores_new_ideas(Greyson)",
      "Elisa does not develop new treatments.": "¬develops_new_treatments(Elisa)",
      "Elisa learns from others.": "learns_from_others(Elisa)",
      "Anyone who enjoys learning or faces challenges can be highly motivated.": "∀x ((enjoys_learning(x) ∨ faces_challenges(x)) → is_highly_motivated(x))"
    },
    "conclusion_fol": "understands_brain_functions(Elisa)"
  },
  {
    "id": 249,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Holden is meticulous.",
    "reasoning": "fact1: Holden does not care about customers.\nrule: Holden values quality or cares about customers.\nconclusion: Holden values quality.\n\nfact1: Holden cannot build a loyal customer base.\nrule: Anyone who pays attention to details or is successful can build a loyal customer base.\nconclusion: Holden is not successful.\n\nfact1: Holden does not run a popular kitchen.\nrule: If Holden is a skilled chef, then he runs a popular kitchen.\nconclusion: Holden is not a skilled chef.\n\nfact1: Holden is a passionate cook.\nfact2: Holden is not a skilled chef.\nrule: If Holden is a passionate cook, then he is either a skilled chef or creative, but not both.\nconclusion: Holden is creative.\n\nfact1: Holden is creative.\nfact2: Holden is not successful.\nrule: If Holden is either meticulous or creative (but not both), then he is successful.\nconclusion: Holden is meticulous.\n\nTherefore, it is true that Holden is meticulous. The correct option is: A.",
    "context": "If Aliya is a skilled chef, then he runs a popular kitchen. Anyone who sources local ingredients or uses traditional techniques values quality. If Roger is a passionate cook, then he is either a skilled chef or creative, but not both. Holden values quality or cares about customers. Roger does not run a popular kitchen. Holden cannot build a loyal customer base. Holden is a passionate cook. Aliya cannot build a loyal customer base. Girlfriend values quality or cares about customers. If Holden is a passionate cook, then he is either a skilled chef or creative, but not both. Roger does not care about customers. If Girlfriend is either meticulous or creative (but not both), then he is successful. If Holden is a skilled chef, then he runs a popular kitchen. Anyone who pays attention to details or is successful can build a loyal customer base. Holden does not run a popular kitchen. If Holden is either meticulous or creative (but not both), then he is successful. Holden does not care about customers. Holden works hard or pays attention to details.",
    "nl2fol": {
      "If Aliya is a skilled chef, then he runs a popular kitchen.": "skilled_chef(Aliya) → runs_popular_kitchen(Aliya)",
      "Anyone who sources local ingredients or uses traditional techniques values quality.": "∀x ((sources_local_ingredients(x) ∨ uses_traditional_techniques(x)) → values_quality(x))",
      "If Roger is a passionate cook, then he is either a skilled chef or creative, but not both.": "passionate_cook(Roger) → (skilled_chef(Roger) ⊕ creative(Roger))",
      "Holden values quality or cares about customers.": "values_quality(Holden) ∨ cares_about_customers(Holden)",
      "Roger does not run a popular kitchen.": "¬runs_popular_kitchen(Roger)",
      "Holden cannot build a loyal customer base.": "¬builds_loyal_customer_base(Holden)",
      "Holden is a passionate cook.": "passionate_cook(Holden)",
      "Aliya cannot build a loyal customer base.": "¬builds_loyal_customer_base(Aliya)",
      "Girlfriend values quality or cares about customers.": "values_quality(Girlfriend) ∨ cares_about_customers(Girlfriend)",
      "If Holden is a passionate cook, then he is either a skilled chef or creative, but not both.": "passionate_cook(Holden) → (skilled_chef(Holden) ⊕ creative(Holden))",
      "Roger does not care about customers.": "¬cares_about_customers(Roger)",
      "If Girlfriend is either meticulous or creative (but not both), then he is successful.": "(meticulous(Girlfriend) ⊕ creative(Girlfriend)) → successful(Girlfriend)",
      "If Holden is a skilled chef, then he runs a popular kitchen.": "skilled_chef(Holden) → runs_popular_kitchen(Holden)",
      "Anyone who pays attention to details or is successful can build a loyal customer base.": "∀x ((pays_attention_to_details(x) ∨ successful(x)) → builds_loyal_customer_base(x))",
      "Holden does not run a popular kitchen.": "¬runs_popular_kitchen(Holden)",
      "If Holden is either meticulous or creative (but not both), then he is successful.": "(meticulous(Holden) ⊕ creative(Holden)) → successful(Holden)",
      "Holden does not care about customers.": "¬cares_about_customers(Holden)",
      "Holden works hard or pays attention to details.": "works_hard(Holden) ∨ pays_attention_to_details(Holden)"
    },
    "conclusion_fol": "meticulous(Holden)"
  },
  {
    "id": 250,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rosalyn is either seeking truth or hiding truth, but not both.",
    "reasoning": "fact1: Rosalyn is transparent.\nrule: Rosalyn is either transparent or dishonest, but not both.\nconclusion: Rosalyn is not dishonest.\n\nfact1: Rosalyn follows her instincts.\nfact2: Rosalyn tracks down leads.\nrule: If Rosalyn follows her instincts, then she is a sleuth and tracks down leads.\nconclusion: Rosalyn is a sleuth.\n\nfact1: Rosalyn is a sleuth.\nfact2: Rosalyn gathers evidence.\nrule: For any person, if they are a sleuth, then they either analyze clues or gather evidence.\nconclusion: Rosalyn does not analyze clues.\n\nfact1: Rosalyn does not analyze clues.\nrule: Rosalyn either analyzes clues or uncovers facts.\nconclusion: Rosalyn is uncovering facts.\n\nfact1: Rosalyn is an investigator.\nfact2: Rosalyn is uncovering facts.\nrule: If Rosalyn is an investigator, then she is either uncovering facts or seeking truth, but not both.\nconclusion: Rosalyn is not seeking truth.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Rosalyn is either seeking truth or hiding truth, but not both. The correct option is: C.",
    "context": "If Rosalyn follows her instincts, then she is a sleuth and tracks down leads. Rosalyn is either transparent or dishonest, but not both. Rosalyn tracks down leads. Rosalyn is an investigator. Anyone who examines documents and conducts interviews will analyze clues. Rosalyn is transparent. Rosalyn gathers evidence. For any person, if they are a sleuth, then they either analyze clues or gather evidence. If Rosalyn is an investigator, then she is either uncovering facts or seeking truth, but not both. Rosalyn either analyzes clues or uncovers facts. If Rosalyn is diligent, then she is either a sleuth or a critical thinker, but not both. Rosalyn follows her instincts.",
    "nl2fol": {
      "If Rosalyn follows her instincts, then she is a sleuth and tracks down leads.": "follows_instincts(Rosalyn) → (is_sleuth(Rosalyn) ∧ tracks_down_leads(Rosalyn))",
      "Rosalyn is either transparent or dishonest, but not both.": "is_transparent(Rosalyn) ⊕ dishonest(Rosalyn)",
      "Rosalyn tracks down leads.": "tracks_down_leads(Rosalyn)",
      "Rosalyn is an investigator.": "investigator(Rosalyn)",
      "Anyone who examines documents and conducts interviews will analyze clues.": "∀x ((examines_documents(x) ∧ conducted_interviews(x)) → analyzes_clues(x))",
      "Rosalyn is transparent.": "is_transparent(Rosalyn)",
      "Rosalyn gathers evidence.": "gathers_evidence(Rosalyn)",
      "For any person, if they are a sleuth, then they either analyze clues or gather evidence.": "∀x (is_sleuth(x) → (analyzes_clues(x) ⊕ gathers_evidence(x)))",
      "If Rosalyn is an investigator, then she is either uncovering facts or seeking truth, but not both.": "investigator(Rosalyn) → (uncovering_facts(Rosalyn) ⊕ seeking_truth(Rosalyn))",
      "Rosalyn either analyzes clues or uncovers facts.": "analyzes_clues(Rosalyn) ∨ uncovering_facts(Rosalyn)",
      "If Rosalyn is diligent, then she is either a sleuth or a critical thinker, but not both.": "is_diligent(Rosalyn) → (is_sleuth(Rosalyn) ⊕ thinks_critically(Rosalyn))",
      "Rosalyn follows her instincts.": "follows_instincts(Rosalyn)"
    },
    "conclusion_fol": "seeking_truth(Rosalyn) ⊕ hiding_truth(Rosalyn)"
  },
  {
    "id": 251,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leanna does not achieve recognition.",
    "reasoning": "fact1: Leanna overcomes fear.\nfact2: Leanna does not build confidence.\nrule: Everyone who overcomes fear either surrounds themselves with support or builds confidence (or both).\nconclusion: Leanna surrounds herself with support.\n\nfact1: Leanna sets goals.\nfact2: Leanna surrounds herself with support.\nrule: If someone sets goals and surrounds themselves with support, then they can stay positive.\nconclusion: Leanna stays positive.\n\nfact1: Leanna does not embrace change.\nrule: Leanna either faces adversity or embraces change, but not both at the same time.\nconclusion: Leanna faces adversity.\n\nfact1: Leanna faces adversity.\nrule: Leanna either faces adversity or achieves success, but not both at the same time.\nconclusion: Leanna does not achieve success.\n\nfact1: Leanna does not achieve success.\nrule: If Leanna can bounce back, then she will achieve success.\nconclusion: Leanna cannot bounce back.\n\nfact1: Leanna stays positive.\nfact2: Leanna cannot bounce back.\nrule: If someone finds happiness and stays positive, then they can bounce back.\nconclusion: Leanna does not find happiness.\n\nfact1: Leanna does not find happiness.\nrule: Leanna lives a fulfilling life or finds happiness.\nconclusion: Leanna lives a fulfilling life.\n\nfact1: Leanna retires.\nrule: If Leanna retires, then she will pursue her lifelong passion.\nconclusion: Leanna pursues her lifelong passion.\n\nfact1: Leanna pursues her lifelong passion.\nfact2: Leanna lives a fulfilling life.\nrule: If Leanna pursues her lifelong passion, then she will achieve recognition and live a fulfilling life.\nconclusion: Leanna does not achieve recognition.\n\nTherefore, it is false that Leanna does not achieve recognition. The correct option is: B.",
    "context": "Leanna lives a fulfilling life or finds happiness. Leanna retires. If someone sets goals and surrounds themselves with support, then they can stay positive. If Leanna takes risks, then she either learns from her mistakes or surrounds herself with support. Leanna either faces adversity or embraces change, but not both at the same time. Leanna sets goals. Leanna follows her heart or lives a fulfilling life. Everyone who follows their dreams either achieves success or discovers their talent (or both). If someone finds happiness and stays positive, then they can bounce back. If Leanna either has good health or has social connections (but not both), then she stays positive. Sarai does not embrace change. If Leanna pursues her lifelong passion, then she will achieve recognition and live a fulfilling life. Leanna does not embrace change. Sarai lives a fulfilling life or finds happiness. If someone follows their heart and discovers their talent, then they can find happiness. Everyone who overcomes fear either surrounds themselves with support or builds confidence (or both). Gian either faces adversity or embraces change, but not both at the same time. If Leanna retires, then she will pursue her lifelong passion. If Leanna can bounce back, then she will achieve success. Leanna does not build confidence. Leanna overcomes fear. Leanna either faces adversity or achieves success, but not both at the same time.",
    "nl2fol": {
      "Leanna lives a fulfilling life or finds happiness.": "live_a_fulfilling_life(Leanna) ∨ find_happiness(Leanna)",
      "Leanna retires.": "retires(Leanna)",
      "If someone sets goals and surrounds themselves with support, then they can stay positive.": "∀x ((sets_goals(x) ∧ surrounds_herself_with_support(x)) → stays_positive(x))",
      "If Leanna takes risks, then she either learns from her mistakes or surrounds herself with support.": "takes_risks(Leanna) → (learns_from_mistakes(Leanna) ∨ surrounds_herself_with_support(Leanna))",
      "Leanna either faces adversity or embraces change, but not both at the same time.": "embraces_change(Leanna) ⊕ faces_adversity(Leanna)",
      "Leanna sets goals.": "sets_goals(Leanna)",
      "Leanna follows her heart or lives a fulfilling life.": "follows_heart(Leanna) ∨ live_a_fulfilling_life(Leanna)",
      "Everyone who follows their dreams either achieves success or discovers their talent (or both).": "∀x (follows_dreams(x) → (achieves_success(x) ∨ discovers_talent(x)))",
      "If someone finds happiness and stays positive, then they can bounce back.": "∀x ((find_happiness(x) ∧ stays_positive(x)) → bounces_back(x))",
      "If Leanna either has good health or has social connections (but not both), then she stays positive.": "(has_good_health(Leanna) ⊕ has_social_connections(Leanna)) → stays_positive(Leanna)",
      "Sarai does not embrace change.": "¬embraces_change(Sarai)",
      "If Leanna pursues her lifelong passion, then she will achieve recognition and live a fulfilling life.": "pursue_lifelong_passion(Leanna) → (achieve_recognition(Leanna) ∧ live_a_fulfilling_life(Leanna))",
      "Leanna does not embrace change.": "¬embraces_change(Leanna)",
      "Sarai lives a fulfilling life or finds happiness.": "live_a_fulfilling_life(Sarai) ∨ find_happiness(Sarai)",
      "If someone follows their heart and discovers their talent, then they can find happiness.": "∀x ((follows_heart(x) ∧ discovers_talent(x)) → find_happiness(x))",
      "Everyone who overcomes fear either surrounds themselves with support or builds confidence (or both).": "∀x (overcomes_fear(x) → (surrounds_herself_with_support(x) ∨ builds_confidence(x)))",
      "Gian either faces adversity or embraces change, but not both at the same time.": "embraces_change(Gian) ⊕ faces_adversity(Gian)",
      "If Leanna retires, then she will pursue her lifelong passion.": "retires(Leanna) → pursue_lifelong_passion(Leanna)",
      "If Leanna can bounce back, then she will achieve success.": "bounces_back(Leanna) → achieves_success(Leanna)",
      "Leanna does not build confidence.": "¬builds_confidence(Leanna)",
      "Leanna overcomes fear.": "overcomes_fear(Leanna)",
      "Leanna either faces adversity or achieves success, but not both at the same time.": "faces_adversity(Leanna) ⊕ achieves_success(Leanna)"
    },
    "conclusion_fol": "¬achieve_recognition(Leanna)"
  },
  {
    "id": 252,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ramon cannot outmaneuver his opponents.",
    "reasoning": "fact1: Ramon is fascinated by tactics.\nrule: If someone is fascinated by tactics, then they study games and learn from experience.\nconclusion: Ramon studies chess games.\n\nfact1: Ramon plays chess.\nfact2: Ramon studies chess games.\nrule: If Ramon plays chess, then he either anticipates outcomes or studies games, but not both.\nconclusion: Ramon does not anticipate outcomes.\n\nfact1: Ramon plans ahead.\nfact2: Ramon does not anticipate outcomes.\nrule: If Ramon either plans ahead or anticipates outcomes (but not both), then he is strategic.\nconclusion: Ramon is strategic.\n\nfact1: Ramon analyzes situations.\nfact2: Ramon does not evaluate risks.\nrule: Anyone who analyzes situations or evaluates risks can solve problems logically.\nconclusion: Ramon solves problems logically.\n\nfact1: Ramon is strategic.\nfact2: Ramon solves problems logically.\nrule: If Ramon is strategic, then he is either creative or a logical problem solver, but not both.\nconclusion: Ramon does not think creatively.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Ramon cannot outmaneuver his opponents. The correct option is: C.",
    "context": "If Ramon plays chess, then he either anticipates outcomes or studies games, but not both. Ramon analyzes situations. If Ramon either plans ahead or anticipates outcomes (but not both), then he is strategic. Anyone who analyzes situations or evaluates risks can solve problems logically. Ramon is fascinated by tactics. If Ramon is strategic, then he is either creative or a logical problem solver, but not both. Ramon does not evaluate risks. Ramon plans ahead. Ramon plays chess. Anyone who sets goals or makes plans is strategic. If someone is fascinated by tactics, then they study games and learn from experience.",
    "nl2fol": {
      "If Ramon plays chess, then he either anticipates outcomes or studies games, but not both.": "plays_chess(Ramon) → (anticipates_outcomes(Ramon) ⊕ studies_games(Ramon))",
      "Ramon analyzes situations.": "analyze_situations(Ramon)",
      "If Ramon either plans ahead or anticipates outcomes (but not both), then he is strategic.": "(plans_ahead(Ramon) ⊕ anticipates_outcomes(Ramon)) → is_strategic(Ramon)",
      "Anyone who analyzes situations or evaluates risks can solve problems logically.": "∀x ((analyze_situations(x) ∨ evaluate_risks(x)) → solve_problems_logically(x))",
      "Ramon is fascinated by tactics.": "fascinated_by_tactics(Ramon)",
      "If Ramon is strategic, then he is either creative or a logical problem solver, but not both.": "is_strategic(Ramon) → (think_creatively(Ramon) ⊕ solve_problems_logically(Ramon))",
      "Ramon does not evaluate risks.": "¬evaluates_risks(Ramon)",
      "Ramon plans ahead.": "plans_ahead(Ramon)",
      "Ramon plays chess.": "plays_chess(Ramon)",
      "Anyone who sets goals or makes plans is strategic.": "∀x ((sets_goals(x) ∨ makes_plans(x)) → is_strategic(x))",
      "If someone is fascinated by tactics, then they study games and learn from experience.": "∀x (fascinated_by_tactics(x) → (learns_from_experience(x) ∧ studies_games(x)))"
    },
    "conclusion_fol": "¬outmaneuver_opponents(Ramon)"
  },
  {
    "id": 253,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Baylor becomes legendary.",
    "reasoning": "fact1: Baylor has muscular legs.\nfact2: Baylor does not have good agility.\nrule: If Baylor has muscular legs, then he is either able to endure long races or has good agility, but not both.\nconclusion: Baylor can endure long races.\n\nfact1: Baylor does not have clear vision.\nrule: Baylor either has clear vision or faces a challenging course, but not both.\nconclusion: Baylor faces a challenging course.\n\nfact1: Baylor faces a challenging course.\nfact2: Baylor remains focused.\nrule: If Baylor faces a challenging course, then he either remains focused or gets anxious, but not both.\nconclusion: Baylor does not get anxious.\n\nfact1: Baylor does not get anxious.\nrule: Baylor either gets anxious or stays calm, but not both.\nconclusion: Baylor stays calm.\n\nfact1: Baylor stays calm.\nfact2: Baylor is loyal.\nrule: If Baylor responds to commands, then he either stays calm or is loyal (but not both).\nconclusion: Baylor does not respond to commands.\n\nfact1: Baylor does not respond to commands.\nfact2: Baylor does not perform tricks.\nrule: Every horse that has excellent training either responds to commands or performs tricks (or both).\nconclusion: Baylor does not have excellent training.\n\nfact1: Baylor has good breeding.\nfact2: Baylor does not have excellent training.\nrule: If Baylor has good breeding, then he can either win championships or have excellent training, but not both.\nconclusion: Baylor wins championships.\n\nfact1: Baylor has a strong build.\nfact2: Baylor can endure long races.\nrule: If Baylor has a strong build, then he can endure long races and is fast.\nconclusion: Baylor is fast.\n\nfact1: Baylor is fast.\nfact2: Baylor wins championships.\nrule: If Baylor is fast, then he can either win championships or become legendary, but not both.\nconclusion: Baylor becomes legendary.\n\nTherefore, it is false that Baylor becomes legendary. The correct option is: B.",
    "context": "Rex has a strong build. Every horse that has excellent training either responds to commands or performs tricks (or both). Baylor either gets anxious or stays calm, but not both. If Baylor faces a challenging course, then he either remains focused or gets anxious, but not both. If Baylor has a strong build, then he can endure long races and is fast. If a horse receives proper care, then it is well-nourished and stays calm. Baylor remains focused. Baylor does not have good agility. Baylor either has clear vision or faces a challenging course, but not both. Baylor has good breeding. If Baylor participates in a competition, then he either develops strategic instincts or faces a challenging course, but not both. Baylor is loyal. August does not perform tricks. Baylor has muscular legs. If Baylor has muscular legs, then he is either able to endure long races or has good agility, but not both. If Baylor is fast, then he can either win championships or become legendary, but not both. If Baylor faces competition, then he gets anxious and releases energy. Baylor has a strong build. Baylor does not perform tricks. Baylor does not have clear vision. If Baylor responds to commands, then he either stays calm or is loyal (but not both). If Baylor has good breeding, then he can either win championships or have excellent training, but not both.",
    "nl2fol": {
      "Rex has a strong build.": "strong_build(Rex)",
      "Every horse that has excellent training either responds to commands or performs tricks (or both).": "∀x (have_excellent_training(x) → (respond_to_commands(x) ∨ perform_tricks(x)))",
      "Baylor either gets anxious or stays calm, but not both.": "get_anxious(Baylor) ⊕ stay_calm(Baylor)",
      "If Baylor faces a challenging course, then he either remains focused or gets anxious, but not both.": "faces_challenging_course(Baylor) → (remains_focused(Baylor) ⊕ get_anxious(Baylor))",
      "If Baylor has a strong build, then he can endure long races and is fast.": "strong_build(Baylor) → (endure_long_races(Baylor) ∧ fast(Baylor))",
      "If a horse receives proper care, then it is well-nourished and stays calm.": "∀x (receive_proper_care(x) → (be_well_nourished(x) ∧ stay_calm(x)))",
      "Baylor remains focused.": "remains_focused(Baylor)",
      "Baylor does not have good agility.": "¬has_good_agility(Baylor)",
      "Baylor either has clear vision or faces a challenging course, but not both.": "has_clear_vision(Baylor) ⊕ faces_challenging_course(Baylor)",
      "Baylor has good breeding.": "has_good_breeding(Baylor)",
      "If Baylor participates in a competition, then he either develops strategic instincts or faces a challenging course, but not both.": "participate_in_competition(Baylor) → (develop_strategic_instincts(Baylor) ⊕ faces_challenging_course(Baylor))",
      "Baylor is loyal.": "be_loyal(Baylor)",
      "August does not perform tricks.": "¬perform_tricks(August)",
      "Baylor has muscular legs.": "has_muscular_legs(Baylor)",
      "If Baylor has muscular legs, then he is either able to endure long races or has good agility, but not both.": "has_muscular_legs(Baylor) → (endure_long_races(Baylor) ⊕ has_good_agility(Baylor))",
      "If Baylor is fast, then he can either win championships or become legendary, but not both.": "fast(Baylor) → (win_championships(Baylor) ⊕ become_legendary(Baylor))",
      "If Baylor faces competition, then he gets anxious and releases energy.": "facing_competition(Baylor) → (get_anxious(Baylor) ∧ release_energy(Baylor))",
      "Baylor has a strong build.": "strong_build(Baylor)",
      "Baylor does not perform tricks.": "¬perform_tricks(Baylor)",
      "Baylor does not have clear vision.": "¬has_clear_vision(Baylor)",
      "If Baylor responds to commands, then he either stays calm or is loyal (but not both).": "respond_to_commands(Baylor) → (stay_calm(Baylor) ⊕ be_loyal(Baylor))",
      "If Baylor has good breeding, then he can either win championships or have excellent training, but not both.": "has_good_breeding(Baylor) → (have_excellent_training(Baylor) ⊕ win_championships(Baylor))"
    },
    "conclusion_fol": "become_legendary(Baylor)"
  },
  {
    "id": 254,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gustavo cannot anticipate his opponent's moves.",
    "reasoning": "fact1: Gustavo experiences failure.\nrule: For Gustavo, either he achieves success or he experiences failure, but not both at the same time.\nconclusion: Gustavo does not achieve success.\n\nfact1: Gustavo learns from failure.\nrule: Gustavo either learns from failure or manages pressure, but not both.\nconclusion: Gustavo does not manage pressure.\n\nfact1: Gustavo pursues perfection.\nfact2: Gustavo does not achieve success.\nrule: If Gustavo either pursues perfection or remains humble, then he achieves success.\nconclusion: Gustavo remains humble.\n\nfact1: Gustavo does not manage pressure.\nrule: Gustavo manages pressure or stays focused.\nconclusion: Gustavo stays focused.\n\nfact1: Gustavo remains humble.\nrule: Everyone who becomes legendary does not remain humble, and everyone who remains humble does not necessarily become legendary.\nconclusion: Gustavo does not become legendary.\n\nfact1: Gustavo stays focused.\nfact2: Gustavo does not become legendary.\nrule: If Gustavo wins competitions and stays focused, then he becomes legendary.\nconclusion: Gustavo does not win competitions.\n\nfact1: Gustavo does not master strategies.\nfact2: Gustavo does not win competitions.\nrule: Anyone who makes impossible shots either masters strategies or wins competitions.\nconclusion: Gustavo does not make impossible shots.\n\nfact1: Gustavo is a skilled archer.\nfact2: Gustavo does not make impossible shots.\nrule: If Gustavo is a skilled archer, then he can either anticipate his opponent's moves or make impossible shots, but not both.\nconclusion: Gustavo cannot anticipate his opponent's moves.\n\nTherefore, it is false that Gustavo cannot anticipate his opponent's moves. The correct option is: B.",
    "context": "Gustavo learns from failure. Anyone who makes impossible shots either masters strategies or wins competitions. If Gustavo is a skilled archer, then he can either anticipate his opponent's moves or make impossible shots, but not both. Gustavo pursues perfection. For Gustavo, either he achieves success or he experiences failure, but not both at the same time. If Gustavo either pursues perfection or remains humble, then he achieves success. Everyone who becomes legendary does not remain humble, and everyone who remains humble does not necessarily become legendary. Gustavo experiences failure. If Gustavo wins competitions and stays focused, then he becomes legendary. Gustavo does not master strategies. Gustavo manages pressure or stays focused. Gustavo either learns from failure or manages pressure, but not both. Gustavo is a skilled archer.",
    "nl2fol": {
      "Gustavo learns from failure.": "learns_from_failure(Gustavo)",
      "Anyone who makes impossible shots either masters strategies or wins competitions.": "∀x (make_impossible_shots(x) → (master_strategies(x) ∨ win_competitions(x)))",
      "If Gustavo is a skilled archer, then he can either anticipate his opponent's moves or make impossible shots, but not both.": "skilled_archer(Gustavo) → (anticipate_opponent(Gustavo) ⊕ make_impossible_shots(Gustavo))",
      "Gustavo pursues perfection.": "pursues_perfection(Gustavo)",
      "For Gustavo, either he achieves success or he experiences failure, but not both at the same time.": "achieves_success(Gustavo) ⊕ experiences_failure(Gustavo)",
      "If Gustavo either pursues perfection or remains humble, then he achieves success.": "(pursues_perfection(Gustavo) ⊕ remains_humble(Gustavo)) → achieves_success(Gustavo)",
      "Everyone who becomes legendary does not remain humble, and everyone who remains humble does not necessarily become legendary.": "∀x (becomes_legendary(x) ⊕ remains_humble(x))",
      "Gustavo experiences failure.": "experiences_failure(Gustavo)",
      "If Gustavo wins competitions and stays focused, then he becomes legendary.": "(win_competitions(Gustavo) ∧ stays_focused(Gustavo)) → becomes_legendary(Gustavo)",
      "Gustavo does not master strategies.": "¬master_strategies(Gustavo)",
      "Gustavo manages pressure or stays focused.": "manages_pressure(Gustavo) ∨ stays_focused(Gustavo)",
      "Gustavo either learns from failure or manages pressure, but not both.": "learns_from_failure(Gustavo) ⊕ manages_pressure(Gustavo)",
      "Gustavo is a skilled archer.": "skilled_archer(Gustavo)"
    },
    "conclusion_fol": "¬anticipate_opponent(Gustavo)"
  },
  {
    "id": 255,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Esteban loses his fortune.",
    "reasoning": "fact1: Esteban craves luxuries.\nfact2: Esteban does not prioritize status.\nrule: If Esteban either craves luxuries or prioritizes status (but not both), then he has excessive wealth.\nconclusion: Esteban has excessive wealth.\n\nfact1: Esteban pursues materialism.\nfact2: Esteban disregards others.\nrule: Anyone who pursues materialism and disregards others can be selfish.\nconclusion: Esteban is selfish.\n\nfact1: Esteban has excessive wealth.\nfact2: Esteban is selfish.\nrule: If Esteban has excessive wealth, then he either makes impulsive decisions or is selfish, but not both.\nconclusion: Esteban does not make impulsive decisions.\n\nfact1: Esteban does not manage finances.\nrule: Esteban manages finances or overspends money.\nconclusion: Esteban overspends money.\n\nfact1: Esteban overspends money.\nfact2: Esteban does not make impulsive decisions.\nrule: Anyone who overspends money or makes impulsive decisions will regret their actions later.\nconclusion: Esteban will regret his actions later.\n\nfact1: Esteban lives wastefully.\nfact2: Esteban will regret his actions later.\nrule: If Esteban lives wastefully, then he will either lose his fortune or regret his actions later, but not both.\nconclusion: Esteban does not lose his fortune.\n\nTherefore, it is false that Esteban loses his fortune. The correct option is: B.",
    "context": "Emelia manages finances or overspends money. If someone inherits a large sum of money, then they have excessive wealth. If Esteban either craves luxuries or prioritizes status (but not both), then he has excessive wealth. Esteban does not prioritize status. Esteban pursues materialism. Vihaan craves luxuries. Esteban craves luxuries. Esteban lives wastefully. If Esteban has excessive wealth, then he either makes impulsive decisions or is selfish, but not both. If Esteban lives wastefully, then he will either lose his fortune or regret his actions later, but not both. Esteban does not manage finances. If Esteban has disposable income, then he either overspends money or makes frequent purchases (but not both). If Esteban ignores warnings or acts recklessly, then he will regret his actions later. If Vihaan either craves luxuries or prioritizes status (but not both), then he has excessive wealth. Anyone who overspends money or makes impulsive decisions will regret their actions later. Esteban disregards others. Esteban manages finances or overspends money. Anyone who pursues materialism and disregards others can be selfish.",
    "nl2fol": {
      "Emelia manages finances or overspends money.": "manage_finances(Emelia) ∨ overspend_money(Emelia)",
      "If someone inherits a large sum of money, then they have excessive wealth.": "∀x (inherits_large_sum(x) → has_excessive_wealth(x))",
      "If Esteban either craves luxuries or prioritizes status (but not both), then he has excessive wealth.": "(craves_luxuries(Esteban) ⊕ prioritize_status(Esteban)) → has_excessive_wealth(Esteban)",
      "Esteban does not prioritize status.": "¬prioritize_status(Esteban)",
      "Esteban pursues materialism.": "pursue_materialism(Esteban)",
      "Vihaan craves luxuries.": "craves_luxuries(Vihaan)",
      "Esteban craves luxuries.": "craves_luxuries(Esteban)",
      "Esteban lives wastefully.": "live_wastefully(Esteban)",
      "If Esteban has excessive wealth, then he either makes impulsive decisions or is selfish, but not both.": "has_excessive_wealth(Esteban) → (make_impulsive_decisions(Esteban) ⊕ be_selfish(Esteban))",
      "If Esteban lives wastefully, then he will either lose his fortune or regret his actions later, but not both.": "live_wastefully(Esteban) → (lose_fortune(Esteban) ⊕ regret_later(Esteban))",
      "Esteban does not manage finances.": "¬manage_finances(Esteban)",
      "If Esteban has disposable income, then he either overspends money or makes frequent purchases (but not both).": "has_disposable_income(Esteban) → (overspend_money(Esteban) ⊕ make_frequent_purchases(Esteban))",
      "If Esteban ignores warnings or acts recklessly, then he will regret his actions later.": "(ignore_warnings(Esteban) ∨ act_recklessly(Esteban)) → regret_later(Esteban)",
      "If Vihaan either craves luxuries or prioritizes status (but not both), then he has excessive wealth.": "(craves_luxuries(Vihaan) ⊕ prioritize_status(Vihaan)) → has_excessive_wealth(Vihaan)",
      "Anyone who overspends money or makes impulsive decisions will regret their actions later.": "∀x ((overspend_money(x) ∨ make_impulsive_decisions(x)) → regret_later(x))",
      "Esteban disregards others.": "disregard_others(Esteban)",
      "Esteban manages finances or overspends money.": "manage_finances(Esteban) ∨ overspend_money(Esteban)",
      "Anyone who pursues materialism and disregards others can be selfish.": "∀x ((pursue_materialism(x) ∧ disregard_others(x)) → be_selfish(x))"
    },
    "conclusion_fol": "lose_fortune(Esteban)"
  },
  {
    "id": 256,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rex is not loyal.",
    "reasoning": "fact1: Rex barks loudly.\nrule: Any dog that wags its tail or barks loudly can get attention.\nconclusion: Rex gets attention.\n\nfact1: Rex gets attention.\nrule: Rex either provides comfort or gets attention, but not both.\nconclusion: Rex does not provide comfort.\n\nfact1: Rex does not explore areas.\nrule: All dogs that scavenge successfully explore areas and keep active.\nconclusion: Rex does not scavenge successfully.\n\nfact1: Rex does not provide comfort.\nrule: Every dog either provides comfort or brings joy.\nconclusion: Rex brings joy.\n\nfact1: Rex does not avoid dangers.\nfact2: Rex does not scavenge successfully.\nrule: If Rex finds food, then he will either avoid dangers or scavenge successfully.\nconclusion: Rex does not find food.\n\nfact1: Rex does not find food.\nrule: Rex either finds food or protects Sarah, but not both.\nconclusion: Rex protects his owner.\n\nfact1: Rex protects his owner.\nfact2: Rex brings joy.\nrule: If Rex is loyal, then he either protects Sarah or brings joy, but not both.\nconclusion: Rex is not loyal.\n\nTherefore, it is true that Rex is not loyal. The correct option is: A.",
    "context": "Dorian either finds food or protects Sarah, but not both. Rex either provides comfort or gets attention, but not both. Sawyer barks loudly. Rex barks loudly. Rex does not avoid dangers. If Rex is loyal, then he either protects Sarah or brings joy, but not both. If a dog runs quickly and plays frequently, then it keeps active. All dogs that scavenge successfully explore areas and keep active. Any dog that wags its tail or barks loudly can get attention. Every dog that defends its family will protect its owner. For any dog, if they perform tricks and act cute, then they get attention. If Rex finds food, then he will either avoid dangers or scavenge successfully. Rex either finds food or protects Sarah, but not both. Sawyer plays outdoors. Rex does not explore areas. Every dog either provides comfort or brings joy.",
    "nl2fol": {
      "Dorian either finds food or protects Sarah, but not both.": "find_food(Dorian) ⊕ protect_owner(Dorian)",
      "Rex either provides comfort or gets attention, but not both.": "provide_comfort(Rex) ⊕ get_attention(Rex)",
      "Sawyer barks loudly.": "barks_loudly(Sawyer)",
      "Rex barks loudly.": "barks_loudly(Rex)",
      "Rex does not avoid dangers.": "¬avoid_dangers(Rex)",
      "If Rex is loyal, then he either protects Sarah or brings joy, but not both.": "loyal(Rex) → (protect_owner(Rex) ⊕ bring_joy(Rex))",
      "If a dog runs quickly and plays frequently, then it keeps active.": "∀x ((runs_quickly(x) ∧ plays_frequently(x)) → keep_active(x))",
      "All dogs that scavenge successfully explore areas and keep active.": "∀x (scavenge_successfully(x) → (explore_areas(x) ∧ keep_active(x)))",
      "Any dog that wags its tail or barks loudly can get attention.": "∀x ((wags_tail(x) ∨ barks_loudly(x)) → get_attention(x))",
      "Every dog that defends its family will protect its owner.": "∀x (defends_family(x) → protect_owner(x))",
      "For any dog, if they perform tricks and act cute, then they get attention.": "∀x ((performs_tricks(x) ∧ acts_cute(x)) → get_attention(x))",
      "If Rex finds food, then he will either avoid dangers or scavenge successfully.": "find_food(Rex) → (avoid_dangers(Rex) ∨ scavenge_successfully(Rex))",
      "Rex either finds food or protects Sarah, but not both.": "find_food(Rex) ⊕ protect_owner(Rex)",
      "Sawyer plays outdoors.": "play_outdoors(Sawyer)",
      "Rex does not explore areas.": "¬explore_areas(Rex)",
      "Every dog either provides comfort or brings joy.": "∀x (provide_comfort(x) ∨ bring_joy(x))"
    },
    "conclusion_fol": "¬loyal(Rex)"
  },
  {
    "id": 257,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Galilea is completely damaged.",
    "reasoning": "fact1: Galilea has advanced sensors.\nrule: Any spacecraft with advanced sensors gathers critical data.\nconclusion: Galilea gathers critical data.\n\nfact1: Galilea is maintained.\nfact2: Galilea runs smoothly.\nrule: All maintained spacecraft either operate normally or run smoothly.\nconclusion: Galilea does not operate normally.\n\nfact1: Galilea gathers critical data.\nrule: Galilea either pioneers a discovery or gathers critical data, but not both.\nconclusion: Galilea does not pioneer a discovery.\n\nfact1: Galilea does not pioneer a discovery.\nfact2: Galilea does not break boundaries.\nrule: If Galilea has a unique design, then it either pioneers a discovery or breaks boundaries (or both).\nconclusion: Galilea does not have a unique design.\n\nfact1: Galilea does not have a unique design.\nfact2: Galilea does not make history.\nrule: If Galilea is either remarkable or has a unique design (but not both), then it makes history.\nconclusion: Galilea is not remarkable.\n\nfact1: Galilea does not operate normally.\nrule: Galilea operates normally or is fully functional.\nconclusion: Galilea is fully functional.\n\nfact1: Galilea is fully functional.\nfact2: Galilea is not remarkable.\nrule: If Galilea is either fully functional or completely damaged (but not both), then it is remarkable.\nconclusion: Galilea is completely damaged.\n\nTherefore, it is true that Galilea is completely damaged. The correct option is: A.",
    "context": "If Callan has a unique design, then it either pioneers a discovery or breaks boundaries (or both). If Galilea is either remarkable or has a unique design (but not both), then it makes history. Galilea does not make history. Galilea runs smoothly. Galilea has advanced sensors. If Galilea has a unique design, then it either pioneers a discovery or breaks boundaries (or both). Galilea either travels a long distance or is remarkable. Any spacecraft that meets specifications or is well maintained is fully functional. Callan does not make history. Galilea is maintained. Galilea does not break boundaries. If Callan is either remarkable or has a unique design (but not both), then it makes history. If Galilea is either fully functional or completely damaged (but not both), then it is remarkable. Galilea either pioneers a discovery or gathers critical data, but not both. Kenji runs smoothly. Any spacecraft with advanced sensors gathers critical data. Galilea operates normally or is fully functional. Kenji has advanced sensors. All maintained spacecraft either operate normally or run smoothly.",
    "nl2fol": {
      "If Callan has a unique design, then it either pioneers a discovery or breaks boundaries (or both).": "has_unique_design(Callan) → (pioneers_discovery(Callan) ∨ breaks_boundaries(Callan))",
      "If Galilea is either remarkable or has a unique design (but not both), then it makes history.": "(remarkable(Galilea) ⊕ has_unique_design(Galilea)) → makes_history(Galilea)",
      "Galilea does not make history.": "¬makes_history(Galilea)",
      "Galilea runs smoothly.": "runs_smoothly(Galilea)",
      "Galilea has advanced sensors.": "has_advanced_sensors(Galilea)",
      "If Galilea has a unique design, then it either pioneers a discovery or breaks boundaries (or both).": "has_unique_design(Galilea) → (pioneers_discovery(Galilea) ∨ breaks_boundaries(Galilea))",
      "Galilea either travels a long distance or is remarkable.": "travels_long_distance(Galilea) ∨ remarkable(Galilea)",
      "Any spacecraft that meets specifications or is well maintained is fully functional.": "∀x ((meets_specs(x) ∨ is_well_maintained(x)) → fully_functional(x))",
      "Callan does not make history.": "¬makes_history(Callan)",
      "Galilea is maintained.": "is_maintained(Galilea)",
      "Galilea does not break boundaries.": "¬breaks_boundaries(Galilea)",
      "If Callan is either remarkable or has a unique design (but not both), then it makes history.": "(remarkable(Callan) ⊕ has_unique_design(Callan)) → makes_history(Callan)",
      "If Galilea is either fully functional or completely damaged (but not both), then it is remarkable.": "(fully_functional(Galilea) ⊕ completely_damaged(Galilea)) → remarkable(Galilea)",
      "Galilea either pioneers a discovery or gathers critical data, but not both.": "pioneers_discovery(Galilea) ⊕ gathers_critical_data(Galilea)",
      "Kenji runs smoothly.": "runs_smoothly(Kenji)",
      "Any spacecraft with advanced sensors gathers critical data.": "∀x (has_advanced_sensors(x) → gathers_critical_data(x))",
      "Galilea operates normally or is fully functional.": "operates_normally(Galilea) ∨ fully_functional(Galilea)",
      "Kenji has advanced sensors.": "has_advanced_sensors(Kenji)",
      "All maintained spacecraft either operate normally or run smoothly.": "∀x (is_maintained(x) → (operates_normally(x) ⊕ runs_smoothly(x)))"
    },
    "conclusion_fol": "completely_damaged(Galilea)"
  },
  {
    "id": 258,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Esteban will face financial difficulties.",
    "reasoning": "fact1: Esteban craves attention.\nfact2: Esteban does not listen to others.\nrule: If Esteban craves attention, then he either listens to others or ignores advice, but not both.\nconclusion: Esteban ignores advice.\n\nfact1: Esteban has common sense.\nrule: If Esteban has common sense, then he lives frugally and makes informed decisions.\nconclusion: Esteban lives frugally.\n\nfact1: Esteban loves designer brands.\nfact2: Esteban enjoys fine dining.\nrule: Anyone who loves designer brands and enjoys fine dining has luxurious tastes.\nconclusion: Esteban has luxurious tastes.\n\nfact1: Esteban has luxurious tastes.\nfact2: Esteban ignores advice.\nrule: If Esteban has luxurious tastes and ignores advice, then he invests recklessly.\nconclusion: Esteban invests recklessly.\n\nfact1: Esteban lives frugally.\nrule: For Esteban, either he lives frugally or spends excessively, but not both.\nconclusion: Esteban does not spend excessively.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Esteban will face financial difficulties. The correct option is: C.",
    "context": "Anyone who loves designer brands and enjoys fine dining has luxurious tastes. Esteban loves designer brands. Leah thinks ahead or makes informed decisions. Esteban values quality or has luxurious tastes. If Oaklee craves attention, then he either listens to others or ignores advice, but not both. Esteban enjoys fine dining. Esteban craves attention. Esteban has common sense. Misael loves designer brands. If Esteban has luxurious tastes and ignores advice, then he invests recklessly. Esteban does not listen to others. Oaklee does not listen to others. Leah craves attention. If Esteban has common sense, then he lives frugally and makes informed decisions. If Misael has common sense, then he lives frugally and makes informed decisions. For Esteban, either he lives frugally or spends excessively, but not both. Esteban either manages his finances or lives frugally. If Misael has luxurious tastes and ignores advice, then he invests recklessly. If Esteban craves attention, then he either listens to others or ignores advice, but not both. Anyone who values responsibility makes informed decisions. Everyone who lacks self-control either accumulates debt or spends excessively (or both). Leah enjoys fine dining. Misael thinks ahead.",
    "nl2fol": {
      "Anyone who loves designer brands and enjoys fine dining has luxurious tastes.": "∀x ((loves_designer_brands(x) ∧ enjoys_fine_dining(x)) → has_luxurious_tastes(x))",
      "Esteban loves designer brands.": "loves_designer_brands(Esteban)",
      "Leah thinks ahead or makes informed decisions.": "thinks_ahead(Leah) ∨ makes_informed_decisions(Leah)",
      "Esteban values quality or has luxurious tastes.": "values_quality(Esteban) ∨ has_luxurious_tastes(Esteban)",
      "If Oaklee craves attention, then he either listens to others or ignores advice, but not both.": "craves_attention(Oaklee) → (listens_to_others(Oaklee) ⊕ ignores_advice(Oaklee))",
      "Esteban enjoys fine dining.": "enjoys_fine_dining(Esteban)",
      "Esteban craves attention.": "craves_attention(Esteban)",
      "Esteban has common sense.": "has_common_sense(Esteban)",
      "Misael loves designer brands.": "loves_designer_brands(Misael)",
      "If Esteban has luxurious tastes and ignores advice, then he invests recklessly.": "(has_luxurious_tastes(Esteban) ∧ ignores_advice(Esteban)) → invest_recklessly(Esteban)",
      "Esteban does not listen to others.": "¬listens_to_others(Esteban)",
      "Oaklee does not listen to others.": "¬listens_to_others(Oaklee)",
      "Leah craves attention.": "crave_attention(Leah)",
      "If Esteban has common sense, then he lives frugally and makes informed decisions.": "has_common_sense(Esteban) → (live_frugally(Esteban) ∧ makes_informed_decisions(Esteban))",
      "If Misael has common sense, then he lives frugally and makes informed decisions.": "has_common_sense(Misael) → (live_frugally(Misael) ∧ makes_informed_decisions(Misael))",
      "For Esteban, either he lives frugally or spends excessively, but not both.": "live_frugally(Esteban) ⊕ spend_excessively(Esteban)",
      "Esteban either manages his finances or lives frugally.": "manages_finances(Esteban) ∨ live_frugally(Esteban)",
      "If Misael has luxurious tastes and ignores advice, then he invests recklessly.": "(has_luxurious_tastes(Misael) ∧ ignores_advice(Misael)) → invest_recklessly(Misael)",
      "If Esteban craves attention, then he either listens to others or ignores advice, but not both.": "craves_attention(Esteban) → (listens_to_others(Esteban) ⊕ ignores_advice(Esteban))",
      "Anyone who values responsibility makes informed decisions.": "∀x (values_responsibility(x) → makes_informed_decisions(x))",
      "Everyone who lacks self-control either accumulates debt or spends excessively (or both).": "∀x (lack_self_control(x) → (accumulate_debt(x) ∨ spend_excessively(x)))",
      "Leah enjoys fine dining.": "enjoys_fine_dining(Leah)",
      "Misael thinks ahead.": "thinks_ahead(Misael)"
    },
    "conclusion_fol": "face_financial_difficulties(Esteban)"
  },
  {
    "id": 259,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aileen does not dislike tango.",
    "reasoning": "fact1: Aileen appreciates music.\nfact2: Aileen values culture.\nrule: If Aileen appreciates music, then she instructs movement and values culture.\nconclusion: Aileen instructs movement.\n\nfact1: Aileen has stage experience.\nfact2: Aileen performs ballet.\nrule: If Aileen has stage experience, then she either performs ballet or performs rumba, but not both.\nconclusion: Aileen does not perform rumba.\n\nfact1: Aileen instructs movement.\nfact2: Aileen loves waltz.\nrule: If Aileen instructs movement, then she either loves waltz or loves salsa, but not both.\nconclusion: Aileen does not love salsa.\n\nfact1: Aileen does not perform rumba.\nfact2: Aileen dances samba.\nrule: If Aileen either performs rumba or dances samba (but not both), then she teaches dance.\nconclusion: Aileen teaches dance.\n\nfact1: Aileen teaches dance.\nfact2: Aileen does not love salsa.\nrule: If Aileen teaches dance, then she either loves salsa or enjoys tango, but not both.\nconclusion: Aileen enjoys tango.\n\nfact1: Aileen enjoys tango.\nrule: Either Aileen enjoys tango or she dislikes tango, but not both.\nconclusion: Aileen does not dislike tango.\n\nTherefore, it is true that Aileen does not dislike tango. The correct option is: A.",
    "context": "Bunny performs ballet. Either Aileen enjoys tango or she dislikes tango, but not both. Giovanni has stage experience. If Aileen has grace, then she performs rumba and expresses passion. If Aileen has stage experience, then she either performs ballet or performs rumba, but not both. If Aileen has rhythm, then she instructs movement and shares her passion. Giovanni values culture. If Aileen is a choreographer, then she either practices yoga or teaches dance, but not both. If Aileen either performs rumba or dances samba (but not both), then she teaches dance. Aileen performs ballet. If Giovanni instructs movement, then she either loves waltz or loves salsa, but not both. Either Bunny enjoys tango or she dislikes tango, but not both. If Aileen instructs movement, then she either loves waltz or loves salsa, but not both. If Aileen teaches dance, then she either loves salsa or enjoys tango, but not both. For all humans, if they either attend tango clubs or listen to tango music (but not both), then they enjoy tango. Bunny appreciates music. Aileen dances samba. Aileen appreciates music. Aileen values culture. Aileen loves waltz. If Bunny either performs rumba or dances samba (but not both), then she teaches dance. If Aileen appreciates music, then she instructs movement and values culture. Estella loves waltz. Aileen has stage experience. If Bunny teaches dance, then she either loves salsa or enjoys tango, but not both. Estella dances samba.",
    "nl2fol": {
      "Bunny performs ballet.": "performs_ballet(Bunny)",
      "Either Aileen enjoys tango or she dislikes tango, but not both.": "enjoys_tango(Aileen) ⊕ dislikes_tango(Aileen)",
      "Giovanni has stage experience.": "has_stage_experience(Giovanni)",
      "If Aileen has grace, then she performs rumba and expresses passion.": "has_grace(Aileen) → (performs_rumba(Aileen) ∧ expresses_passion(Aileen))",
      "If Aileen has stage experience, then she either performs ballet or performs rumba, but not both.": "has_stage_experience(Aileen) → (performs_ballet(Aileen) ⊕ performs_rumba(Aileen))",
      "If Aileen has rhythm, then she instructs movement and shares her passion.": "has_rhythm(Aileen) → (instructs_movement(Aileen) ∧ shares_passion(Aileen))",
      "Giovanni values culture.": "values_culture(Giovanni)",
      "If Aileen is a choreographer, then she either practices yoga or teaches dance, but not both.": "is_choreographer(Aileen) → (practices_yoga(Aileen) ⊕ teaches_dance(Aileen))",
      "If Aileen either performs rumba or dances samba (but not both), then she teaches dance.": "(performs_rumba(Aileen) ⊕ dances_samba(Aileen)) → teaches_dance(Aileen)",
      "Aileen performs ballet.": "performs_ballet(Aileen)",
      "If Giovanni instructs movement, then she either loves waltz or loves salsa, but not both.": "instructs_movement(Giovanni) → (loves_waltz(Giovanni) ⊕ loves_salsa(Giovanni))",
      "Either Bunny enjoys tango or she dislikes tango, but not both.": "enjoys_tango(Bunny) ⊕ dislikes_tango(Bunny)",
      "If Aileen instructs movement, then she either loves waltz or loves salsa, but not both.": "instructs_movement(Aileen) → (loves_waltz(Aileen) ⊕ loves_salsa(Aileen))",
      "If Aileen teaches dance, then she either loves salsa or enjoys tango, but not both.": "teaches_dance(Aileen) → (loves_salsa(Aileen) ⊕ enjoys_tango(Aileen))",
      "For all humans, if they either attend tango clubs or listen to tango music (but not both), then they enjoy tango.": "∀x ((attends_tango_clubs(x) ⊕ listens_to_tango_music(x)) → enjoys_tango(x))",
      "Bunny appreciates music.": "appreciate_music(Bunny)",
      "Aileen dances samba.": "dances_samba(Aileen)",
      "Aileen appreciates music.": "appreciates_music(Aileen)",
      "Aileen values culture.": "values_culture(Aileen)",
      "Aileen loves waltz.": "loves_waltz(Aileen)",
      "If Bunny either performs rumba or dances samba (but not both), then she teaches dance.": "(performs_rumba(Bunny) ⊕ dances_samba(Bunny)) → teaches_dance(Bunny)",
      "If Aileen appreciates music, then she instructs movement and values culture.": "appreciates_music(Aileen) → (instructs_movement(Aileen) ∧ values_culture(Aileen))",
      "Estella loves waltz.": "loves_waltz(Estella)",
      "Aileen has stage experience.": "has_stage_experience(Aileen)",
      "If Bunny teaches dance, then she either loves salsa or enjoys tango, but not both.": "teaches_dance(Bunny) → (loves_salsa(Bunny) ⊕ enjoys_tango(Bunny))",
      "Estella dances samba.": "dances_samba(Estella)"
    },
    "conclusion_fol": "¬dislikes_tango(Aileen)"
  },
  {
    "id": 260,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Norah is not intelligent.",
    "reasoning": "fact1: Norah works precisely.\nfact2: Norah thinks logically.\nrule: If Norah works precisely, then she is either systematic or thinks logically (but not both).\nconclusion: Norah is not systematic.\n\nfact1: Norah publishes her findings.\nrule: If Norah publishes her findings, then she is an expert researcher.\nconclusion: Norah is an expert researcher.\n\nfact1: Norah has attention to detail.\nfact2: Norah is not careful.\nrule: If Norah has attention to detail, then she is either an archaeologist or is careful (or both).\nconclusion: Norah is an archaeologist.\n\nfact1: Norah is an analyst.\nfact2: Norah is not systematic.\nrule: If Norah is an analyst, then she is either systematic or methodical (but not both).\nconclusion: Norah is methodical.\n\nfact1: Norah is an expert researcher.\nfact2: Norah is methodical.\nrule: If someone is an expert researcher, then they are either methodical or perceptive.\nconclusion: Norah is not perceptive.\n\nfact1: Norah is an archaeologist.\nfact2: Norah is not perceptive.\nrule: All archaeologists are either meticulous or perceptive.\nconclusion: Norah is meticulous.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Norah is not intelligent. The correct option is: C.",
    "context": "Norah is not careful. Norah publishes her findings. If Norah has attention to detail, then she is either an archaeologist or is careful (or both). Norah thinks logically. If Norah is an analyst, then she is either systematic or methodical (but not both). Norah is an analyst. If Norah publishes her findings, then she is an expert researcher. Norah has attention to detail. Anyone who solves puzzles is perceptive. If Norah works precisely, then she is either systematic or thinks logically (but not both). All archaeologists are either meticulous or perceptive. If someone is an expert researcher, then they are either methodical or perceptive. Norah works precisely.",
    "nl2fol": {
      "Norah is not careful.": "¬is_careful(Norah)",
      "Norah publishes her findings.": "publishes_findings(Norah)",
      "If Norah has attention to detail, then she is either an archaeologist or is careful (or both).": "has_attention_to_detail(Norah) → (archaeologist(Norah) ∨ is_careful(Norah))",
      "Norah thinks logically.": "thinks_logically(Norah)",
      "If Norah is an analyst, then she is either systematic or methodical (but not both).": "is_analyst(Norah) → (is_systematic(Norah) ⊕ methodical(Norah))",
      "Norah is an analyst.": "is_analyst(Norah)",
      "If Norah publishes her findings, then she is an expert researcher.": "publishes_findings(Norah) → expert_researcher(Norah)",
      "Norah has attention to detail.": "has_attention_to_detail(Norah)",
      "Anyone who solves puzzles is perceptive.": "∀x (solves_puzzles(x) → perceptive(x))",
      "If Norah works precisely, then she is either systematic or thinks logically (but not both).": "works_precisely(Norah) → (is_systematic(Norah) ⊕ thinks_logically(Norah))",
      "All archaeologists are either meticulous or perceptive.": "∀x (archaeologist(x) → (meticulous(x) ⊕ perceptive(x)))",
      "If someone is an expert researcher, then they are either methodical or perceptive.": "∀x (expert_researcher(x) → (methodical(x) ⊕ perceptive(x)))",
      "Norah works precisely.": "works_precisely(Norah)"
    },
    "conclusion_fol": "¬intelligent(Norah)"
  },
  {
    "id": 261,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Violet feels calm.",
    "reasoning": "fact1: Violet pursues personal growth.\nfact2: Violet does not feel fulfilled.\nrule: If someone pursues personal growth and serves others, then they feel fulfilled.\nconclusion: Violet does not serve others.\n\nfact1: Violet does not serve others.\nfact2: Violet does not appreciate simple things.\nrule: Everyone who lives humbly either serves others or appreciates simple things (or both).\nconclusion: Violet does not live humbly.\n\nfact1: Violet does not live humbly.\nrule: If Violet respects tradition, then she will live humbly.\nconclusion: Violet does not respect tradition.\n\nfact1: Violet does not follow a routine.\nrule: Violet cultivates self-discipline or follows a routine.\nconclusion: Violet cultivates self-discipline.\n\nfact1: Violet does not respect tradition.\nfact2: Violet cultivates self-discipline.\nrule: If Violet finds inner peace, then she respects tradition and cultivates self-discipline.\nconclusion: Violet does not find inner peace.\n\nfact1: Violet values serenity.\nfact2: Violet seeks guidance.\nrule: If Violet values serenity, then she practices yoga and seeks guidance.\nconclusion: Violet practices yoga.\n\nfact1: Violet practices yoga.\nfact2: Violet does not find inner peace.\nrule: If Violet either meditates daily or practices yoga (but not both), then she will find inner peace.\nconclusion: Violet meditates daily.\n\nfact1: Violet performs ablutions.\nfact2: Violet meditates daily.\nrule: For all humans, if they perform ablutions and meditate daily, then they will feel calm.\nconclusion: Violet feels calm.\n\nTherefore, it is true that Violet feels calm. The correct option is: A.",
    "context": "If Violet respects tradition, then she will live humbly. If Violet either meditates daily or practices yoga (but not both), then she will find inner peace. If someone pursues personal growth and serves others, then they feel fulfilled. Violet practices mindfulness or lives humbly. Everyone who lives humbly either serves others or appreciates simple things (or both). Violet either embraces structure or cultivates self-discipline. Violet values serenity. Violet pursues personal growth. Caspian cultivates self-discipline or follows a routine. Violet performs ablutions. If Violet finds inner peace, then she respects tradition and cultivates self-discipline. Caspian does not feel fulfilled. For all humans, if they perform ablutions and meditate daily, then they will feel calm. Matilda seeks guidance. If Violet values serenity, then she practices yoga and seeks guidance. Matilda does not appreciate simple things. Violet does not feel fulfilled. Violet does not appreciate simple things. Violet cultivates self-discipline or follows a routine. Caspian performs ablutions. Violet seeks guidance. Violet does not follow a routine. If Caspian either meditates daily or practices yoga (but not both), then she will find inner peace.",
    "nl2fol": {
      "If Violet respects tradition, then she will live humbly.": "respect_tradition(Violet) → live_humbly(Violet)",
      "If Violet either meditates daily or practices yoga (but not both), then she will find inner peace.": "(meditate_daily(Violet) ⊕ practice_yoga(Violet)) → find_inner_peace(Violet)",
      "If someone pursues personal growth and serves others, then they feel fulfilled.": "∀x ((pursues_personal_growth(x) ∧ serve_others(x)) → feels_fulfilled(x))",
      "Violet practices mindfulness or lives humbly.": "practices_mindfulness(Violet) ∨ live_humbly(Violet)",
      "Everyone who lives humbly either serves others or appreciates simple things (or both).": "∀x (live_humbly(x) → (serve_others(x) ∨ appreciate_simple_things(x)))",
      "Violet either embraces structure or cultivates self-discipline.": "embraces_structure(Violet) ∨ cultivate_self_discipline(Violet)",
      "Violet values serenity.": "value_serenity(Violet)",
      "Violet pursues personal growth.": "pursues_personal_growth(Violet)",
      "Caspian cultivates self-discipline or follows a routine.": "cultivate_self_discipline(Caspian) ∨ follow_routine(Caspian)",
      "Violet performs ablutions.": "perform_ablutions(Violet)",
      "If Violet finds inner peace, then she respects tradition and cultivates self-discipline.": "find_inner_peace(Violet) → (respect_tradition(Violet) ∧ cultivate_self_discipline(Violet))",
      "Caspian does not feel fulfilled.": "¬feels_fulfilled(Caspian)",
      "For all humans, if they perform ablutions and meditate daily, then they will feel calm.": "∀x ((perform_ablutions(x) ∧ meditate_daily(x)) → feel_calm(x))",
      "Matilda seeks guidance.": "seek_guidance(Matilda)",
      "If Violet values serenity, then she practices yoga and seeks guidance.": "value_serenity(Violet) → (practice_yoga(Violet) ∧ seek_guidance(Violet))",
      "Matilda does not appreciate simple things.": "¬appreciate_simple_things(Matilda)",
      "Violet does not feel fulfilled.": "¬feels_fulfilled(Violet)",
      "Violet does not appreciate simple things.": "¬appreciate_simple_things(Violet)",
      "Violet cultivates self-discipline or follows a routine.": "cultivate_self_discipline(Violet) ∨ follow_routine(Violet)",
      "Caspian performs ablutions.": "perform_ablutions(Caspian)",
      "Violet seeks guidance.": "seek_guidance(Violet)",
      "Violet does not follow a routine.": "¬follow_routine(Violet)",
      "If Caspian either meditates daily or practices yoga (but not both), then she will find inner peace.": "(meditate_daily(Caspian) ⊕ practice_yoga(Caspian)) → find_inner_peace(Caspian)"
    },
    "conclusion_fol": "feel_calm(Violet)"
  },
  {
    "id": 262,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Laurel does not excel in show jumping.",
    "reasoning": "fact1: Laurel gets regular vaccinations.\nrule: For Laurel, receiving proper grooming and getting regular vaccinations are mutually exclusive, but not necessarily, as Laurel may or may not receive one or the other.\nconclusion: Laurel does not receive proper grooming.\n\nfact1: Laurel gets regular exercise.\nfact2: Laurel does not have access to clean water.\nrule: If Laurel gets regular exercise, then she either eats nutritious food or has access to clean water, but not both.\nconclusion: Laurel eats nutritious food.\n\nfact1: Laurel does not have a noble bloodline.\nrule: Laurel is either a champion or has a noble bloodline, but not necessarily both.\nconclusion: Laurel becomes a champion.\n\nfact1: Laurel eats nutritious food.\nfact2: Laurel does not look healthy.\nrule: If Laurel either eats nutritious food or has good genes (but not both), then she looks healthy.\nconclusion: Laurel has good genes.\n\nfact1: Laurel does not receive proper grooming.\nfact2: Laurel has good genes.\nrule: Any horse that receives proper grooming or has good genes can have a radiant coat.\nconclusion: Laurel has a radiant coat.\n\nfact1: Laurel has a radiant coat.\nfact2: Laurel becomes a champion.\nrule: If Laurel has a radiant coat, then she can either excel in show jumping or become a champion, but not both.\nconclusion: Laurel does not excel in show jumping.\n\nTherefore, it is true that Laurel does not excel in show jumping. The correct option is: A.",
    "context": "If Johan either eats nutritious food or has good genes (but not both), then she looks healthy. If Laurel either eats nutritious food or has good genes (but not both), then she looks healthy. Laurel does not have a noble bloodline. For Juan, receiving proper grooming and getting regular vaccinations are mutually exclusive, but not necessarily, as Juan may or may not receive one or the other. Johan gets regular exercise. Laurel is either a champion or has a noble bloodline, but not necessarily both. If Laurel has a shiny mane, then she is either a spirited animal or has a radiant coat (or both). For Laurel, receiving proper grooming and getting regular vaccinations are mutually exclusive, but not necessarily, as Laurel may or may not receive one or the other. If Laurel either possesses strength or has agility (but not both), then she can become a champion. If Laurel has a radiant coat, then she can either excel in show jumping or become a champion, but not both. If Laurel gets regular exercise, then she either eats nutritious food or has access to clean water, but not both. If Juan has a radiant coat, then she can either excel in show jumping or become a champion, but not both. Laurel does not look healthy. Any horse that receives proper grooming or has good genes can have a radiant coat. Laurel does not have access to clean water. Laurel gets regular vaccinations. Laurel gets regular exercise.",
    "nl2fol": {
      "If Johan either eats nutritious food or has good genes (but not both), then she looks healthy.": "(eat_nutritious_food(Johan) ⊕ have_good_genes(Johan)) → look_healthy(Johan)",
      "If Laurel either eats nutritious food or has good genes (but not both), then she looks healthy.": "(eat_nutritious_food(Laurel) ⊕ have_good_genes(Laurel)) → look_healthy(Laurel)",
      "Laurel does not have a noble bloodline.": "¬has_noble_bloodline(Laurel)",
      "For Juan, receiving proper grooming and getting regular vaccinations are mutually exclusive, but not necessarily, as Juan may or may not receive one or the other.": "get_regular_vaccinations(Juan) ⊕ receive_proper_grooming(Juan)",
      "Johan gets regular exercise.": "gets_regular_exercise(Johan)",
      "Laurel is either a champion or has a noble bloodline, but not necessarily both.": "become_a_champion(Laurel) ⊕ has_noble_bloodline(Laurel)",
      "If Laurel has a shiny mane, then she is either a spirited animal or has a radiant coat (or both).": "has_shiny_man(Laurel) → (is_spirited_animal(Laurel) ∨ has_radiant_coat(Laurel))",
      "For Laurel, receiving proper grooming and getting regular vaccinations are mutually exclusive, but not necessarily, as Laurel may or may not receive one or the other.": "get_regular_vaccinations(Laurel) ⊕ receive_proper_grooming(Laurel)",
      "If Laurel either possesses strength or has agility (but not both), then she can become a champion.": "(possess_strength(Laurel) ⊕ have_agility(Laurel)) → become_a_champion(Laurel)",
      "If Laurel has a radiant coat, then she can either excel in show jumping or become a champion, but not both.": "has_radiant_coat(Laurel) → (excel_in_show_jumping(Laurel) ⊕ become_a_champion(Laurel))",
      "If Laurel gets regular exercise, then she either eats nutritious food or has access to clean water, but not both.": "gets_regular_exercise(Laurel) → (has_access_to_clean_water(Laurel) ⊕ eat_nutritious_food(Laurel))",
      "If Juan has a radiant coat, then she can either excel in show jumping or become a champion, but not both.": "has_radiant_coat(Juan) → (excel_in_show_jumping(Juan) ⊕ become_a_champion(Juan))",
      "Laurel does not look healthy.": "¬look_healthy(Laurel)",
      "Any horse that receives proper grooming or has good genes can have a radiant coat.": "∀x ((receive_proper_grooming(x) ∨ have_good_genes(x)) → has_radiant_coat(x))",
      "Laurel does not have access to clean water.": "¬has_access_to_clean_water(Laurel)",
      "Laurel gets regular vaccinations.": "get_regular_vaccinations(Laurel)",
      "Laurel gets regular exercise.": "gets_regular_exercise(Laurel)"
    },
    "conclusion_fol": "¬excel_in_show_jumping(Laurel)"
  },
  {
    "id": 263,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Queenie multiplies rapidly.",
    "reasoning": "fact1: Queenie is a virulent parasite.\nfact2: Queenie does not colonize tissues.\nrule: If Queenie is a virulent parasite, then she either colonizes tissues or dominates her host, but not both.\nconclusion: Queenie dominates her host.\n\nfact1: Queenie dominates her host.\nrule: Any parasite that dominates its host will reproduce successfully.\nconclusion: Queenie reproduces successfully.\n\nfact1: Queenie reproduces successfully.\nfact2: Queenie is able to adapt to her host.\nrule: All parasites are either able to adapt to their host or survive in its environment, if they reproduce successfully.\nconclusion: Queenie does not survive in the host's environment.\n\nfact1: Queenie does not invade a host.\nrule: Every parasite either invades a host or manipulates cellular machinery.\nconclusion: Queenie manipulates cellular machinery of a host.\n\nfact1: Queenie attaches to a host.\nrule: If Queenie attaches to a host, then she will infect it.\nconclusion: Queenie infects her host.\n\nfact1: Queenie manipulates cellular machinery of a host.\nfact2: Queenie does not survive in the host's environment.\nrule: Every parasite that manipulates cellular machinery of a host either evades the host's defenses or survives in its environment.\nconclusion: Queenie evades the host's defenses.\n\nfact1: Queenie infects her host.\nfact2: Queenie evades the host's defenses.\nrule: If Queenie infects her host, then she either multiplies rapidly or evades the host's defenses, but not both.\nconclusion: Queenie does not multiply rapidly.\n\nTherefore, it is false that Queenie multiplies rapidly. The correct option is: B.",
    "context": "Every parasite either invades a host or manipulates cellular machinery. India attaches to a host. If Queenie attaches to a host, then she will infect it. Queenie attaches to a host. Queenie does not invade a host. If Queenie has a strong flagellum, then she will dominate her host. Any parasite that dominates its host will reproduce successfully. If Queenie is a virulent parasite, then she either colonizes tissues or dominates her host, but not both. If Queenie infects her host, then she either multiplies rapidly or evades the host's defenses, but not both. All parasites are either able to adapt to their host or survive in its environment, if they reproduce successfully. Queenie does not colonize tissues. Queenie is able to adapt to her host. Every parasite that manipulates cellular machinery of a host either evades the host's defenses or survives in its environment. If Queenie either penetrates cells or secretes toxins (but not both), then she infects her host. Queenie is a virulent parasite.",
    "nl2fol": {
      "Every parasite either invades a host or manipulates cellular machinery.": "∀x (invade_host(x) ∨ manipulate_cells(x))",
      "India attaches to a host.": "attach_to_host(India)",
      "If Queenie attaches to a host, then she will infect it.": "attach_to_host(Queenie) → infect_host(Queenie)",
      "Queenie attaches to a host.": "attach_to_host(Queenie)",
      "Queenie does not invade a host.": "¬invade_host(Queenie)",
      "If Queenie has a strong flagellum, then she will dominate her host.": "has_strong_flagellum(Queenie) → dominate_host(Queenie)",
      "Any parasite that dominates its host will reproduce successfully.": "∀x (dominate_host(x) → reproduce_successfully(x))",
      "If Queenie is a virulent parasite, then she either colonizes tissues or dominates her host, but not both.": "is_virulent(Queenie) → (colonize_tissues(Queenie) ⊕ dominate_host(Queenie))",
      "If Queenie infects her host, then she either multiplies rapidly or evades the host's defenses, but not both.": "infect_host(Queenie) → (multiply_rapidly(Queenie) ⊕ evade_defenses(Queenie))",
      "All parasites are either able to adapt to their host or survive in its environment, if they reproduce successfully.": "∀x (reproduce_successfully(x) → (adapt_to_host(x) ⊕ survive_environment(x)))",
      "Queenie does not colonize tissues.": "¬colonize_tissues(Queenie)",
      "Queenie is able to adapt to her host.": "adapt_to_host(Queenie)",
      "Every parasite that manipulates cellular machinery of a host either evades the host's defenses or survives in its environment.": "∀x (manipulate_cells(x) → (evade_defenses(x) ∨ survive_environment(x)))",
      "If Queenie either penetrates cells or secretes toxins (but not both), then she infects her host.": "(penetrate_cells(Queenie) ⊕ secrete_toxins(Queenie)) → infect_host(Queenie)",
      "Queenie is a virulent parasite.": "is_virulent(Queenie)"
    },
    "conclusion_fol": "multiply_rapidly(Queenie)"
  },
  {
    "id": 264,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jacqueline is not influenced by Susan Sontag.",
    "reasoning": "fact1: Jacqueline does not gain insight.\nrule: Anyone who examines culture or explores history gains insight.\nconclusion: Jacqueline does not explore history.\n\nfact1: Jacqueline does not seek understanding.\nrule: Everyone seeks understanding or values knowledge.\nconclusion: Jacqueline values knowledge.\n\nfact1: Jacqueline values knowledge.\nfact2: Jacqueline does not explore history.\nrule: If Jacqueline values knowledge, then she either studies philosophy or explores history, but not both.\nconclusion: Jacqueline studies philosophy.\n\nfact1: Jacqueline embraces cultural traditions.\nrule: Jacqueline either challenges the status quo or embraces cultural traditions, but not both.\nconclusion: Jacqueline does not challenge the status quo.\n\nfact1: Jacqueline studies philosophy.\nfact2: Jacqueline engages in intellectual discussions.\nrule: If Jacqueline studies philosophy and engages in intellectual discussions, then she reads critical theory.\nconclusion: Jacqueline reads critical theory.\n\nfact1: Jacqueline reads critical theory.\nfact2: Jacqueline does not challenge the status quo.\nrule: If Jacqueline either reads critical theory or produces thought-provoking work (but not both), then she challenges the status quo.\nconclusion: Jacqueline produces thought-provoking work.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Jacqueline is not influenced by Susan Sontag. The correct option is: C.",
    "context": "If someone searches for truth and examines past events, then they can explore history. If Jacqueline values knowledge, then she either studies philosophy or explores history, but not both. Jacqueline either challenges the status quo or embraces cultural traditions, but not both. Jacqueline does not gain insight. Jacqueline embraces cultural traditions. If Jacqueline studies philosophy and engages in intellectual discussions, then she reads critical theory. Anyone who examines culture or explores history gains insight. If Jacqueline either reads critical theory or produces thought-provoking work (but not both), then she challenges the status quo. Dummy either challenges the status quo or embraces cultural traditions, but not both. Everyone seeks understanding or values knowledge. If Jacqueline is introspective, then she either reads critical theory or analyzes social issues, but not both. Jacqueline engages in intellectual discussions. If Jacqueline analyzes literature, then she either develops critical thought or studies philosophy (or both). Jacqueline does not seek understanding.",
    "nl2fol": {
      "If someone searches for truth and examines past events, then they can explore history.": "∀x ((searches_for_truth(x) ∧ examines_past_events(x)) → explores_history(x))",
      "If Jacqueline values knowledge, then she either studies philosophy or explores history, but not both.": "values_knowledge(Jacqueline) → (studies_philosophy(Jacqueline) ⊕ explores_history(Jacqueline))",
      "Jacqueline either challenges the status quo or embraces cultural traditions, but not both.": "embraces_cultural_traditions(Jacqueline) ⊕ challenges_status_quo(Jacqueline)",
      "Jacqueline does not gain insight.": "¬gains_insight(Jacqueline)",
      "Jacqueline embraces cultural traditions.": "embraces_cultural_traditions(Jacqueline)",
      "If Jacqueline studies philosophy and engages in intellectual discussions, then she reads critical theory.": "(studies_philosophy(Jacqueline) ∧ engages_in_intellectual_discussions(Jacqueline)) → reads_critical_theory(Jacqueline)",
      "Anyone who examines culture or explores history gains insight.": "∀x ((examines_culture(x) ∨ explores_history(x)) → gains_insight(x))",
      "If Jacqueline either reads critical theory or produces thought-provoking work (but not both), then she challenges the status quo.": "(reads_critical_theory(Jacqueline) ⊕ produces_thought_provoking_work(Jacqueline)) → challenges_status_quo(Jacqueline)",
      "Dummy either challenges the status quo or embraces cultural traditions, but not both.": "embraces_cultural_traditions(Dummy) ⊕ challenges_status_quo(Dummy)",
      "Everyone seeks understanding or values knowledge.": "∀x (seeks_understanding(x) ∨ values_knowledge(x))",
      "If Jacqueline is introspective, then she either reads critical theory or analyzes social issues, but not both.": "is_introspective(Jacqueline) → (reads_critical_theory(Jacqueline) ⊕ analyzes_social_issues(Jacqueline))",
      "Jacqueline engages in intellectual discussions.": "engages_in_intellectual_discussions(Jacqueline)",
      "If Jacqueline analyzes literature, then she either develops critical thought or studies philosophy (or both).": "analyzes_literature(Jacqueline) → (develops_critical_thought(Jacqueline) ∨ studies_philosophy(Jacqueline))",
      "Jacqueline does not seek understanding.": "¬seeks_understanding(Jacqueline)"
    },
    "conclusion_fol": "¬influenced_by_Susan_Sontag(Jacqueline)"
  },
  {
    "id": 265,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gunner is not informed.",
    "reasoning": "fact1: Gunner does not listen to others.\nrule: Everyone engages in discussions or listens to others.\nconclusion: Gunner engages in discussions.\n\nfact1: Gunner questions authority.\nfact2: Gunner seeks truth.\nrule: If Gunner questions authority, then he either rejects conformity or seeks truth (but not both).\nconclusion: Gunner does not reject conformity.\n\nfact1: Gunner reads philosophy.\nfact2: Gunner engages in discussions.\nrule: If Gunner reads philosophy and engages in discussions, then he can pursue social justice.\nconclusion: Gunner pursues social justice.\n\nfact1: Gunner understands critical theory.\nrule: If Gunner understands critical theory, then he participates in activism and challenges the status quo.\nconclusion: Gunner challenges the status quo.\n\nfact1: Gunner pursues social justice.\nrule: Gunner either fights against oppression or pursues social justice, but not both.\nconclusion: Gunner does not fight against oppression.\n\nfact1: Gunner does not reject conformity.\nfact2: Gunner does not embrace diversity.\nrule: If Gunner values individuality, then he either rejects conformity or embraces diversity (but not both).\nconclusion: Gunner does not value individuality.\n\nfact1: Gunner does not value individuality.\nfact2: Gunner does not fight against oppression.\nrule: If someone seeks personal freedom, then they either value individuality or fight against oppression.\nconclusion: Gunner does not seek personal freedom.\n\nfact1: Gunner does not seek personal freedom.\nrule: Gunner either seeks personal freedom or advocates for change, but not both.\nconclusion: Gunner advocates for change.\n\nfact1: Gunner advocates for change.\nfact2: Gunner challenges the status quo.\nrule: If Gunner is informed, then he can either advocate for change or challenge the status quo, but not both.\nconclusion: Gunner is not informed.\n\nTherefore, it is true that Gunner is not informed. The correct option is: A.",
    "context": "If Gunner questions authority, then he either rejects conformity or seeks truth (but not both). Gunner either seeks personal freedom or advocates for change, but not both. If Gunner understands critical theory, then he participates in activism and challenges the status quo. If Gunner values individuality, then he either rejects conformity or embraces diversity (but not both). Gunner seeks truth. If someone seeks personal freedom, then they either value individuality or fight against oppression. If someone respects autonomy, then they value individuality. Gunner either fights against oppression or pursues social justice, but not both. Gunner understands critical theory. If Gunner is informed, then he can either advocate for change or challenge the status quo, but not both. Gunner questions authority. Gunner does not listen to others. Gunner reads philosophy. Gunner does not embrace diversity. If Gunner thinks critically, then he pursues social justice and values human rights. Everyone engages in discussions or listens to others. If Gunner reads philosophy and engages in discussions, then he can pursue social justice.",
    "nl2fol": {
      "If Gunner questions authority, then he either rejects conformity or seeks truth (but not both).": "questions_authority(Gunner) → (seeks_truth(Gunner) ⊕ rejects_conformity(Gunner))",
      "Gunner either seeks personal freedom or advocates for change, but not both.": "seeks_personal_freedom(Gunner) ⊕ advocate_for_change(Gunner)",
      "If Gunner understands critical theory, then he participates in activism and challenges the status quo.": "understands_critical_theory(Gunner) → (participates_in_activism(Gunner) ∧ challenge_status_quo(Gunner))",
      "If Gunner values individuality, then he either rejects conformity or embraces diversity (but not both).": "values_individuality(Gunner) → (rejects_conformity(Gunner) ⊕ embraces_diversity(Gunner))",
      "Gunner seeks truth.": "seeks_truth(Gunner)",
      "If someone seeks personal freedom, then they either value individuality or fight against oppression.": "∀x (seeks_personal_freedom(x) → (values_individuality(x) ⊕ fights_against_oppression(x)))",
      "If someone respects autonomy, then they value individuality.": "∀x (respects_autonomy(x) → values_individuality(x))",
      "Gunner either fights against oppression or pursues social justice, but not both.": "fights_against_oppression(Gunner) ⊕ pursues_social_justice(Gunner)",
      "Gunner understands critical theory.": "understands_critical_theory(Gunner)",
      "If Gunner is informed, then he can either advocate for change or challenge the status quo, but not both.": "informed(Gunner) → (advocate_for_change(Gunner) ⊕ challenge_status_quo(Gunner))",
      "Gunner questions authority.": "questions_authority(Gunner)",
      "Gunner does not listen to others.": "¬listens_to_others(Gunner)",
      "Gunner reads philosophy.": "reads_philosophy(Gunner)",
      "Gunner does not embrace diversity.": "¬embraces_diversity(Gunner)",
      "If Gunner thinks critically, then he pursues social justice and values human rights.": "thinks_critically(Gunner) → (pursues_social_justice(Gunner) ∧ values_human_rights(Gunner))",
      "Everyone engages in discussions or listens to others.": "∀x (engages_in_discussions(x) ∨ listens_to_others(x))",
      "If Gunner reads philosophy and engages in discussions, then he can pursue social justice.": "(reads_philosophy(Gunner) ∧ engages_in_discussions(Gunner)) → pursues_social_justice(Gunner)"
    },
    "conclusion_fol": "¬informed(Gunner)"
  },
  {
    "id": 266,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kye does not have masterful camouflage.",
    "reasoning": "fact1: Kye will not live longer.\nrule: Any insect that either moves stealthily or evades threats will live longer.\nconclusion: Kye cannot evade threats.\n\nfact1: Kye adapts to seasons.\nfact2: Kye cannot evade threats.\nrule: For all insects, if they either mimic nature or adapt to seasons, then they can evade threats.\nconclusion: Kye mimics nature.\n\nfact1: Kye does not find food easily.\nfact2: Kye does not thrive in his habitat.\nrule: Any insect that survives its predators or finds food easily thrives in its habitat.\nconclusion: Kye cannot survive his predators.\n\nfact1: Kye mimics nature.\nfact2: Kye cannot survive his predators.\nrule: If an insect mimics nature and blends into its environment, then it can survive its predators.\nconclusion: Kye cannot blend into his environment.\n\nfact1: Kye cannot blend into his environment.\nfact2: Kye cannot regulate his population.\nrule: If Kye has a rare gift, then he can blend into his environment and regulate his population.\nconclusion: Kye does not possess a rare gift.\n\nfact1: Kye influences colony dynamics.\nfact2: Kye does not possess a rare gift.\nrule: If Kye either earns unique recognition or influences colony dynamics (but not both), then he possesses a rare gift.\nconclusion: Kye earns unique recognition.\n\nfact1: Kye does not contribute to ecosystem balance.\nfact2: Kye earns unique recognition.\nrule: If Kye has masterful camouflage, then he contributes to ecosystem balance and earns unique recognition.\nconclusion: Kye does not have masterful camouflage.\n\nTherefore, it is true that Kye does not have masterful camouflage. The correct option is: A.",
    "context": "If an insect mimics nature and blends into its environment, then it can survive its predators. If Kye has masterful camouflage, then he contributes to ecosystem balance and earns unique recognition. Any insect that survives its predators or finds food easily thrives in its habitat. Any insect that either moves stealthily or evades threats will live longer. Kye will not live longer. Kye adapts to seasons. Kye cannot regulate his population. For all insects, if they either mimic nature or adapt to seasons, then they can evade threats. Kye does not find food easily. If Kye has a rare gift, then he can blend into his environment and regulate his population. Kye does not thrive in his habitat. Kye does not contribute to ecosystem balance. Kye influences colony dynamics. If Kye is intelligent and can problem solve, then he possesses a rare gift. If Kye either earns unique recognition or influences colony dynamics (but not both), then he possesses a rare gift.",
    "nl2fol": {
      "If an insect mimics nature and blends into its environment, then it can survive its predators.": "∀x ((mimics_nature(x) ∧ blend_into_environment(x)) → survives_predators(x))",
      "If Kye has masterful camouflage, then he contributes to ecosystem balance and earns unique recognition.": "has_masterful_camouflage(Kye) → (contributes_to_ecosystem_balance(Kye) ∧ earns_unique_recognition(Kye))",
      "Any insect that survives its predators or finds food easily thrives in its habitat.": "∀x ((survives_predators(x) ∨ finds_food_easily(x)) → thrives_in_habitat(x))",
      "Any insect that either moves stealthily or evades threats will live longer.": "∀x ((moves_stealthily(x) ∨ evades_threats(x)) → lives_longer(x))",
      "Kye will not live longer.": "¬lives_longer(Kye)",
      "Kye adapts to seasons.": "adapts_to_seasons(Kye)",
      "Kye cannot regulate his population.": "¬regulate_population(Kye)",
      "For all insects, if they either mimic nature or adapt to seasons, then they can evade threats.": "∀x ((mimics_nature(x) ⊕ adapts_to_seasons(x)) → evades_threats(x))",
      "Kye does not find food easily.": "¬finds_food_easily(Kye)",
      "If Kye has a rare gift, then he can blend into his environment and regulate his population.": "possesses_rare_gift(Kye) → (blend_into_environment(Kye) ∧ regulate_population(Kye))",
      "Kye does not thrive in his habitat.": "¬thrives_in_habitat(Kye)",
      "Kye does not contribute to ecosystem balance.": "¬contributes_to_ecosystem_balance(Kye)",
      "Kye influences colony dynamics.": "influences_colony_dynamics(Kye)",
      "If Kye is intelligent and can problem solve, then he possesses a rare gift.": "is_intelligent(Kye) → (can_problem_solve(Kye) ∧ possesses_rare_gift(Kye))",
      "If Kye either earns unique recognition or influences colony dynamics (but not both), then he possesses a rare gift.": "(earns_unique_recognition(Kye) ⊕ influences_colony_dynamics(Kye)) → possesses_rare_gift(Kye)"
    },
    "conclusion_fol": "¬has_masterful_camouflage(Kye)"
  },
  {
    "id": 267,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gabriella is not a talented writer.",
    "reasoning": "fact1: Gabriella does not enter the workforce.\nrule: Gabriella either enters the workforce or pursues higher education, but not both.\nconclusion: Gabriella pursues higher education.\n\nfact1: Gabriella has strong opinions.\nfact2: Gabriella is not influential.\nrule: Anyone who has strong opinions and writes articles can be influential.\nconclusion: Gabriella does not write articles.\n\nfact1: Gabriella does not write articles.\nrule: Gabriella conducts extensive research or writes articles.\nconclusion: Gabriella conducts extensive research.\n\nfact1: Gabriella pursues higher education.\nfact2: Gabriella conducts extensive research.\nrule: If Gabriella pursues higher education, then she either conducts extensive research or attends seminars, but not both.\nconclusion: Gabriella does not attend seminars.\n\nfact1: Gabriella does not attend seminars.\nfact2: Gabriella is not able to communicate effectively.\nrule: Everyone who either attends seminars or has expansive knowledge is able to communicate effectively.\nconclusion: Gabriella does not have expansive knowledge.\n\nfact1: Gabriella does not have expansive knowledge.\nrule: Anyone who reads widely or has voracious curiosity will have expansive knowledge.\nconclusion: Gabriella does not read widely.\n\nfact1: Gabriella does not read widely.\nrule: Gabriella either reads widely or is a published author, but not both.\nconclusion: Gabriella is a published author.\n\nfact1: Gabriella is a published author.\nfact2: Gabriella is a seasoned publisher.\nrule: If Gabriella is a published author, then she is either a seasoned publisher or a respected authority, but not both.\nconclusion: Gabriella is not a respected authority.\n\nfact1: Gabriella is not a meticulous editor.\nfact2: Gabriella is not a respected authority.\nrule: If Gabriella is either a meticulous editor or a talented writer (but not both), then she is a respected authority.\nconclusion: Gabriella is not a talented writer.\n\nTherefore, it is true that Gabriella is not a talented writer. The correct option is: A.",
    "context": "Peter is not influential. Gabriella either enters the workforce or pursues higher education, but not both. Liv is not a meticulous editor. If Gabriella is a published author, then she is either a seasoned publisher or a respected authority, but not both. Gabriella has strong opinions. If Liv is either a meticulous editor or a talented writer (but not both), then she is a respected authority. If Gabriella is either a meticulous editor or a talented writer (but not both), then she is a respected authority. Gabriella either reads widely or is a published author, but not both. Anyone who has strong opinions and writes articles can be influential. Everyone who either attends seminars or has expansive knowledge is able to communicate effectively. If Gabriella pursues higher education, then she either conducts extensive research or attends seminars, but not both. Peter conducts extensive research or writes articles. Lily either enters the workforce or pursues higher education, but not both. Peter does not enter the workforce. Gabriella does not enter the workforce. Anyone who reads widely or has voracious curiosity will have expansive knowledge. If Liv pursues higher education, then she either conducts extensive research or attends seminars, but not both. Lily is not able to communicate effectively. Gabriella is not able to communicate effectively. Gabriella is a seasoned publisher. Gabriella conducts extensive research or writes articles. Liv is a seasoned publisher. Liv either reads widely or is a published author, but not both. Gabriella is not influential. Liv has strong opinions. Gabriella is not a meticulous editor.",
    "nl2fol": {
      "Peter is not influential.": "¬influential(Peter)",
      "Gabriella either enters the workforce or pursues higher education, but not both.": "enters_workforce(Gabriella) ⊕ pursues_higher_education(Gabriella)",
      "Liv is not a meticulous editor.": "¬meticulous_editor(Liv)",
      "If Gabriella is a published author, then she is either a seasoned publisher or a respected authority, but not both.": "published_author(Gabriella) → (seasoned_publisher(Gabriella) ⊕ respected_authority(Gabriella))",
      "Gabriella has strong opinions.": "has_strong_opinions(Gabriella)",
      "If Liv is either a meticulous editor or a talented writer (but not both), then she is a respected authority.": "(meticulous_editor(Liv) ⊕ talented_writer(Liv)) → respected_authority(Liv)",
      "If Gabriella is either a meticulous editor or a talented writer (but not both), then she is a respected authority.": "(meticulous_editor(Gabriella) ⊕ talented_writer(Gabriella)) → respected_authority(Gabriella)",
      "Gabriella either reads widely or is a published author, but not both.": "reads_widely(Gabriella) ⊕ published_author(Gabriella)",
      "Anyone who has strong opinions and writes articles can be influential.": "∀x ((has_strong_opinions(x) ∧ writes_articles(x)) → is_influential(x))",
      "Everyone who either attends seminars or has expansive knowledge is able to communicate effectively.": "∀x ((attends_seminars(x) ⊕ has_expansive_knowledge(x)) → communicates_effectively(x))",
      "If Gabriella pursues higher education, then she either conducts extensive research or attends seminars, but not both.": "pursues_higher_education(Gabriella) → (conducts_extensive_research(Gabriella) ⊕ attends_seminars(Gabriella))",
      "Peter conducts extensive research or writes articles.": "conducts_extensive_research(Peter) ∨ writes_articles(Peter)",
      "Lily either enters the workforce or pursues higher education, but not both.": "enters_workforce(Lily) ⊕ pursues_higher_education(Lily)",
      "Peter does not enter the workforce.": "¬enters_workforce(Peter)",
      "Gabriella does not enter the workforce.": "¬enters_workforce(Gabriella)",
      "Anyone who reads widely or has voracious curiosity will have expansive knowledge.": "∀x ((reads_widely(x) ∨ has_voracious_curiosity(x)) → has_expansive_knowledge(x))",
      "If Liv pursues higher education, then she either conducts extensive research or attends seminars, but not both.": "pursues_higher_education(Liv) → (conducts_extensive_research(Liv) ⊕ attends_seminars(Liv))",
      "Lily is not able to communicate effectively.": "¬communicates_effectively(Lily)",
      "Gabriella is not able to communicate effectively.": "¬communicates_effectively(Gabriella)",
      "Gabriella is a seasoned publisher.": "seasoned_publisher(Gabriella)",
      "Gabriella conducts extensive research or writes articles.": "conducts_extensive_research(Gabriella) ∨ writes_articles(Gabriella)",
      "Liv is a seasoned publisher.": "seasoned_publisher(Liv)",
      "Liv either reads widely or is a published author, but not both.": "reads_widely(Liv) ⊕ published_author(Liv)",
      "Gabriella is not influential.": "¬is_influential(Gabriella)",
      "Liv has strong opinions.": "has_strong_opinions(Liv)",
      "Gabriella is not a meticulous editor.": "¬meticulous_editor(Gabriella)"
    },
    "conclusion_fol": "¬talented_writer(Gabriella)"
  },
  {
    "id": 268,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Everly has an anemone home, then she is either protected from predators or helps nourish the anemone, but not both.",
    "reasoning": "fact1: Everly is young.\nfact2: Everly does not have many fins.\nrule: If Everly is a young clownfish, then she is either small or has many fins, but not both.\nconclusion: Everly is small.\n\nfact1: Everly is small.\nfact2: Everly is a fast swimmer.\nrule: If Everly is a small clownfish, then she is either a fast swimmer or has bright coloration, but not both.\nconclusion: Everly does not have bright coloration.\n\nfact1: Everly does not have bright coloration.\nrule: Everly either has bright coloration or thrives in reefs, but not necessarily both.\nconclusion: Everly thrives in reefs.\n\nfact1: Everly thrives in reefs.\nrule: All clownfish that thrive in reefs have natural camouflage and form symbiotic relationships.\nconclusion: Everly has natural camouflage.\n\nfact1: Everly has natural camouflage.\nrule: Everly either has natural camouflage or lives in coral, but not necessarily both.\nconclusion: Everly does not live in coral.\n\nfact1: Everly swims in schools.\nfact2: Everly is agile.\nrule: If Everly swims in schools, then she is either agile or darts quickly, but not both.\nconclusion: Everly does not dart quickly.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Everly has an anemone home, then she is either protected from predators or helps nourish the anemone, but not both. The correct option is: C.",
    "context": "Everly is a fast swimmer. Everly is agile. Uriah either has natural camouflage or lives in coral, but not necessarily both. If Rhea swims in schools, then she is either agile or darts quickly, but not both. Everly does not have many fins. Rhea swims in schools. All clownfish that thrive in reefs have natural camouflage and form symbiotic relationships. Everly either has natural camouflage or lives in coral, but not necessarily both. Everly is young. Everly swims in schools. If Everly swims in schools, then she is either agile or darts quickly, but not both. If Everly is a young clownfish, then she is either small or has many fins, but not both. Uriah is agile. If Everly is a small clownfish, then she is either a fast swimmer or has bright coloration, but not both. Everly either has bright coloration or thrives in reefs, but not necessarily both.",
    "nl2fol": {
      "Everly is a fast swimmer.": "is_fast_swimmer(Everly)",
      "Everly is agile.": "is_agile(Everly)",
      "Uriah either has natural camouflage or lives in coral, but not necessarily both.": "has_natural_camouflage(Uriah) ⊕ lives_in_coral(Uriah)",
      "If Rhea swims in schools, then she is either agile or darts quickly, but not both.": "swims_in_schools(Rhea) → (is_agile(Rhea) ⊕ darts_quickly(Rhea))",
      "Everly does not have many fins.": "¬has_many_fins(Everly)",
      "Rhea swims in schools.": "swims_in_schools(Rhea)",
      "All clownfish that thrive in reefs have natural camouflage and form symbiotic relationships.": "∀x (thrives_in_reefs(x) → (has_natural_camouflage(x) ∧ forms_symbiotic_relationships(x)))",
      "Everly either has natural camouflage or lives in coral, but not necessarily both.": "has_natural_camouflage(Everly) ⊕ lives_in_coral(Everly)",
      "Everly is young.": "is_young(Everly)",
      "Everly swims in schools.": "swims_in_schools(Everly)",
      "If Everly swims in schools, then she is either agile or darts quickly, but not both.": "swims_in_schools(Everly) → (is_agile(Everly) ⊕ darts_quickly(Everly))",
      "If Everly is a young clownfish, then she is either small or has many fins, but not both.": "is_young(Everly) → (has_many_fins(Everly) ⊕ is_small(Everly))",
      "Uriah is agile.": "is_agile(Uriah)",
      "If Everly is a small clownfish, then she is either a fast swimmer or has bright coloration, but not both.": "is_small(Everly) → (is_fast_swimmer(Everly) ⊕ has_bright_coloration(Everly))",
      "Everly either has bright coloration or thrives in reefs, but not necessarily both.": "has_bright_coloration(Everly) ⊕ thrives_in_reefs(Everly)"
    },
    "conclusion_fol": "has_an_anemone_home(Everly) → (is_protected_from_predators(Everly) ⊕ helps_nourish_the_anemone(Everly))"
  },
  {
    "id": 269,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alexander is not dedicated to healing.",
    "reasoning": "fact1: Alexander writes books.\nfact2: Alexander receives awards.\nrule: If Alexander writes books, then he is either recognized or receives awards (but not both).\nconclusion: Alexander does not gain recognition.\n\nfact1: Alexander thinks creatively.\nfact2: Alexander conducts experiments.\nrule: Anyone who thinks creatively and conducts experiments can be innovative.\nconclusion: Alexander is innovative.\n\nfact1: Alexander shares knowledge.\nfact2: Alexander does not gain recognition.\nrule: If Alexander makes discoveries and shares knowledge, then he will gain recognition.\nconclusion: Alexander does not make discoveries.\n\nfact1: Alexander is innovative.\nfact2: Alexander collaborates with others.\nrule: If Alexander is innovative, then he collaborates with others and has theoretical knowledge.\nconclusion: Alexander has theoretical knowledge.\n\nfact1: Alexander has theoretical knowledge.\nrule: A person is either skilled in practical application or has theoretical knowledge, but not necessarily both.\nconclusion: Alexander is not a person with practical skills.\n\nfact1: Alexander is not a person with practical skills.\nrule: Alexander is either a person with practical skills or a curious person, but he may not necessarily be both.\nconclusion: Alexander has curiosity.\n\nfact1: Alexander has curiosity.\nfact2: Alexander does not make discoveries.\nrule: If someone seeks medical breakthroughs and has curiosity, then they make discoveries.\nconclusion: Alexander does not seek medical breakthroughs.\n\nfact1: Alexander does not collect specimens.\nfact2: Alexander does not seek medical breakthroughs.\nrule: If Alexander either studies plants or collects specimens (but not both), then he seeks medical breakthroughs.\nconclusion: Alexander does not study plants.\n\nfact1: Alexander does not study plants.\nrule: Alexander either studies plants or is dedicated to healing (or both).\nconclusion: Alexander is not dedicated to healing.\n\nTherefore, it is false that Alexander is not dedicated to healing. The correct option is: B.",
    "context": "If Alexander pursues his passion, then he will gain recognition. Alexander is either a person with practical skills or a curious person, but he may not necessarily be both. Alexander thinks creatively. Alexander does not collect specimens. If someone can manage a garden, then they have practical skills. Alexander receives awards. Alexander writes books. If someone seeks medical breakthroughs and has curiosity, then they make discoveries. Alexander conducts experiments. Alexander either studies plants or is dedicated to healing (or both). If Alexander makes discoveries and shares knowledge, then he will gain recognition. If Alexander writes books, then he is either recognized or receives awards (but not both). If Alexander either studies plants or collects specimens (but not both), then he seeks medical breakthroughs. Alexander collaborates with others. Anyone who asks questions has curiosity. A person is either skilled in practical application or has theoretical knowledge, but not necessarily both. Alexander shares knowledge. Anyone who thinks creatively and conducts experiments can be innovative. Clark collaborates with others. If Jakari writes books, then he is either recognized or receives awards (but not both). If Alexander is innovative, then he collaborates with others and has theoretical knowledge.",
    "nl2fol": {
      "If Alexander pursues his passion, then he will gain recognition.": "pursues_passion(Alexander) → gains_recognition(Alexander)",
      "Alexander is either a person with practical skills or a curious person, but he may not necessarily be both.": "has_practical_skills(Alexander) ⊕ has_curiosity(Alexander)",
      "Alexander thinks creatively.": "thinks_creatively(Alexander)",
      "Alexander does not collect specimens.": "¬collects_specimens(Alexander)",
      "If someone can manage a garden, then they have practical skills.": "∀x (manages_garden(x) → has_practical_skills(x))",
      "Alexander receives awards.": "receives_awards(Alexander)",
      "Alexander writes books.": "writes_books(Alexander)",
      "If someone seeks medical breakthroughs and has curiosity, then they make discoveries.": "∀x ((seeks_medical_breakthroughs(x) ∧ has_curiosity(x)) → makes_discoveries(x))",
      "Alexander conducts experiments.": "conducts_experiments(Alexander)",
      "Alexander either studies plants or is dedicated to healing (or both).": "study_plants(Alexander) ∨ dedicated_to_healing(Alexander)",
      "If Alexander makes discoveries and shares knowledge, then he will gain recognition.": "(makes_discoveries(Alexander) ∧ shares_knowledge(Alexander)) → gains_recognition(Alexander)",
      "If Alexander writes books, then he is either recognized or receives awards (but not both).": "writes_books(Alexander) → (receives_awards(Alexander) ⊕ gains_recognition(Alexander))",
      "If Alexander either studies plants or collects specimens (but not both), then he seeks medical breakthroughs.": "(study_plants(Alexander) ⊕ collects_specimens(Alexander)) → seeks_medical_breakthroughs(Alexander)",
      "Alexander collaborates with others.": "collaborate_with_others(Alexander)",
      "Anyone who asks questions has curiosity.": "∀x (asks_questions(x) → has_curiosity(x))",
      "A person is either skilled in practical application or has theoretical knowledge, but not necessarily both.": "∀x (has_practical_skills(x) ⊕ has_theoretical_knowledge(x))",
      "Alexander shares knowledge.": "shares_knowledge(Alexander)",
      "Anyone who thinks creatively and conducts experiments can be innovative.": "∀x ((thinks_creatively(x) ∧ conducts_experiments(x)) → is_innovative(x))",
      "Clark collaborates with others.": "collaborate_with_others(Clark)",
      "If Jakari writes books, then he is either recognized or receives awards (but not both).": "writes_books(Jakari) → (receives_awards(Jakari) ⊕ gains_recognition(Jakari))",
      "If Alexander is innovative, then he collaborates with others and has theoretical knowledge.": "is_innovative(Alexander) → (collaborate_with_others(Alexander) ∧ has_theoretical_knowledge(Alexander))"
    },
    "conclusion_fol": "¬dedicated_to_healing(Alexander)"
  },
  {
    "id": 270,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Zainab is renowned.",
    "reasoning": "fact1: Zainab receives acclaim.\nfact2: Zainab earns recognition.\nrule: If Zainab wins an award, then she either receives acclaim or earns recognition, but not both.\nconclusion: Zainab does not win an award.\n\nfact1: Zainab composes music.\nfact2: Zainab does not perform well.\nrule: If Zainab either composes music or is gifted (but not both), then she performs well.\nconclusion: Zainab is gifted.\n\nfact1: Zainab plays an instrument.\nfact2: Zainab does not win an award.\nrule: If Zainab plays an instrument and inspires others, then she can win an award.\nconclusion: Zainab does not inspire others.\n\nfact1: Zainab is gifted.\nfact2: Zainab is hardworking.\nrule: If Zainab is gifted, then she is either hardworking or prodigious, but not both.\nconclusion: Zainab is not prodigious.\n\nfact1: Zainab does not inspire others.\nfact2: Zainab has passion.\nrule: If someone achieves success, then they inspire others and have passion.\nconclusion: Zainab does not achieve success.\n\nfact1: Zainab does not achieve success.\nrule: If Zainab is dedicated, then she will achieve success.\nconclusion: Zainab is not dedicated.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Zainab is renowned. The correct option is: C.",
    "context": "Zen has passion. Zainab plays an instrument. Zainab composes music. Zainab receives acclaim. If Zainab sets goals, then she is dedicated. If Zainab either composes music or is gifted (but not both), then she performs well. Zainab earns recognition. Oakley plays an instrument. If Zainab shares her art, then she inspires others. Zen receives acclaim. If someone achieves success, then they inspire others and have passion. If Zainab is gifted, then she is either hardworking or prodigious, but not both. Zainab has passion. If Zainab plays an instrument and inspires others, then she can win an award. Elyse does not perform well. Elyse earns recognition. If Zainab is dedicated, then she will achieve success. If Oakley either composes music or is gifted (but not both), then she performs well. Zen is hardworking. Zainab does not perform well. If Zainab wins an award, then she either receives acclaim or earns recognition, but not both. If Zen is dedicated, then she will achieve success. Zainab is hardworking.",
    "nl2fol": {
      "Zen has passion.": "has_passion(Zen)",
      "Zainab plays an instrument.": "plays_instrument(Zainab)",
      "Zainab composes music.": "composes_music(Zainab)",
      "Zainab receives acclaim.": "receives_acclaim(Zainab)",
      "If Zainab sets goals, then she is dedicated.": "sets_goals(Zainab) → dedicated(Zainab)",
      "If Zainab either composes music or is gifted (but not both), then she performs well.": "(composes_music(Zainab) ⊕ gifted(Zainab)) → performs_well(Zainab)",
      "Zainab earns recognition.": "earns_recognition(Zainab)",
      "Oakley plays an instrument.": "plays_instrument(Oakley)",
      "If Zainab shares her art, then she inspires others.": "shares_art(Zainab) → inspires_others(Zainab)",
      "Zen receives acclaim.": "receives_acclaim(Zen)",
      "If someone achieves success, then they inspire others and have passion.": "∀x (achieves_success(x) → (inspires_others(x) ∧ has_passion(x)))",
      "If Zainab is gifted, then she is either hardworking or prodigious, but not both.": "gifted(Zainab) → (hardworking(Zainab) ⊕ prodigious(Zainab))",
      "Zainab has passion.": "has_passion(Zainab)",
      "If Zainab plays an instrument and inspires others, then she can win an award.": "(plays_instrument(Zainab) ∧ inspires_others(Zainab)) → wins_award(Zainab)",
      "Elyse does not perform well.": "¬performs_well(Elyse)",
      "Elyse earns recognition.": "earn_recognition(Elyse)",
      "If Zainab is dedicated, then she will achieve success.": "dedicated(Zainab) → achieves_success(Zainab)",
      "If Oakley either composes music or is gifted (but not both), then she performs well.": "(composes_music(Oakley) ⊕ gifted(Oakley)) → performs_well(Oakley)",
      "Zen is hardworking.": "hardworking(Zen)",
      "Zainab does not perform well.": "¬performs_well(Zainab)",
      "If Zainab wins an award, then she either receives acclaim or earns recognition, but not both.": "wins_award(Zainab) → (receives_acclaim(Zainab) ⊕ earns_recognition(Zainab))",
      "If Zen is dedicated, then she will achieve success.": "dedicated(Zen) → achieves_success(Zen)",
      "Zainab is hardworking.": "hardworking(Zainab)"
    },
    "conclusion_fol": "renowned(Zainab)"
  },
  {
    "id": 271,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Brock does not respect tradition.",
    "reasoning": "fact1: Brock loves reading.\nfact2: Brock does not have mastery of his subject.\nrule: If Brock loves reading and pursues an academic career, then he has mastery of his subject.\nconclusion: Brock does not pursue an academic career.\n\nfact1: Brock does not protect others.\nrule: Brock protects others or serves his country.\nconclusion: Brock serves his country.\n\nfact1: Brock does not pursue an academic career.\nrule: Brock either writes history books or pursues an academic career, but not both.\nconclusion: Brock will write history books.\n\nfact1: Brock appreciates history.\nrule: If Brock appreciates history, then he visits cemeteries and values sacrifices.\nconclusion: Brock visits a cemetery.\n\nfact1: Brock shares personal stories.\nrule: Brock either pays respects or shares personal stories, but not both.\nconclusion: Brock does not pay respects.\n\nfact1: Brock visits a cemetery.\nfact2: Brock does not pay respects.\nrule: If Brock visits a cemetery, then he either pays respects or honors heroes, but not both.\nconclusion: Brock honors heroes.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Brock does not respect tradition. The correct option is: C.",
    "context": "Kellan protects others or serves his country. If Brock appreciates history, then he visits cemeteries and values sacrifices. Brock shares personal stories. Brock does not have mastery of his subject. Brock protects others or serves his country. Brock appreciates history. Anyone who supports veterans or studies war history values sacrifices. Brock either pays respects or shares personal stories, but not both. Winter does not protect others. If Banks loves reading and pursues an academic career, then he has mastery of his subject. If Brock loves reading and pursues an academic career, then he has mastery of his subject. Brock does not protect others. If Brock visits a cemetery, then he either pays respects or honors heroes, but not both. If someone joins the military, then they serve their country. If Winter visits a cemetery, then he either pays respects or honors heroes, but not both. Brock loves reading. If Kellan appreciates history, then he visits cemeteries and values sacrifices. If someone supports veterans and preserves memorials, then they honor heroes. Brock teaches others or pursues an academic career. Winter shares personal stories. Kellan loves reading. Winter either writes history books or pursues an academic career, but not both. If Winter serves his country or values sacrifices, then he will write history books. Banks either pays respects or shares personal stories, but not both. Brock either writes history books or pursues an academic career, but not both.",
    "nl2fol": {
      "Kellan protects others or serves his country.": "protect_others(Kellan) ∨ serve_country(Kellan)",
      "If Brock appreciates history, then he visits cemeteries and values sacrifices.": "appreciate_history(Brock) → (visit_cemetery(Brock) ∧ value_sacrifices(Brock))",
      "Brock shares personal stories.": "share_personal_stories(Brock)",
      "Brock does not have mastery of his subject.": "¬has_mastery_of_subject(Brock)",
      "Brock protects others or serves his country.": "protect_others(Brock) ∨ serve_country(Brock)",
      "Brock appreciates history.": "appreciate_history(Brock)",
      "Anyone who supports veterans or studies war history values sacrifices.": "∀x ((support_veterans(x) ∨ study_war_history(x)) → value_sacrifices(x))",
      "Brock either pays respects or shares personal stories, but not both.": "pay_respects(Brock) ⊕ share_personal_stories(Brock)",
      "Winter does not protect others.": "¬protects_others(Winter)",
      "If Banks loves reading and pursues an academic career, then he has mastery of his subject.": "(loves_reading(Banks) ∧ pursue_academic_career(Banks)) → has_mastery_of_subject(Banks)",
      "If Brock loves reading and pursues an academic career, then he has mastery of his subject.": "(loves_reading(Brock) ∧ pursue_academic_career(Brock)) → has_mastery_of_subject(Brock)",
      "Brock does not protect others.": "¬protect_others(Brock)",
      "If Brock visits a cemetery, then he either pays respects or honors heroes, but not both.": "visit_cemetery(Brock) → (pay_respects(Brock) ⊕ honor_heroes(Brock))",
      "If someone joins the military, then they serve their country.": "∀x (joins_military(x) → serve_country(x))",
      "If Winter visits a cemetery, then he either pays respects or honors heroes, but not both.": "visit_cemetery(Winter) → (pay_respects(Winter) ⊕ honor_heroes(Winter))",
      "Brock loves reading.": "loves_reading(Brock)",
      "If Kellan appreciates history, then he visits cemeteries and values sacrifices.": "appreciate_history(Kellan) → (visit_cemetery(Kellan) ∧ value_sacrifices(Kellan))",
      "If someone supports veterans and preserves memorials, then they honor heroes.": "∀x ((support_veterans(x) ∧ preserve_memorials(x)) → honor_heroes(x))",
      "Brock teaches others or pursues an academic career.": "teach_others(Brock) ∨ pursue_academic_career(Brock)",
      "Winter shares personal stories.": "share_personal_stories(Winter)",
      "Kellan loves reading.": "love_reading(Kellan)",
      "Winter either writes history books or pursues an academic career, but not both.": "write_history_books(Winter) ⊕ pursue_academic_career(Winter)",
      "If Winter serves his country or values sacrifices, then he will write history books.": "(serve_country(Winter) ∨ value_sacrifices(Winter)) → write_history_books(Winter)",
      "Banks either pays respects or shares personal stories, but not both.": "pay_respects(Banks) ⊕ share_personal_stories(Banks)",
      "Brock either writes history books or pursues an academic career, but not both.": "write_history_books(Brock) ⊕ pursue_academic_career(Brock)"
    },
    "conclusion_fol": "¬respect_tradition(Brock)"
  },
  {
    "id": 272,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amiyah has sapremia.",
    "reasoning": "fact1: Amiyah does not make new discoveries.\nfact2: Amiyah does not gain recognition.\nrule: If Amiyah is an expert or makes new discoveries, then she gains recognition.\nconclusion: Amiyah does not become an expert.\n\nfact1: Amiyah attends conferences.\nfact2: Amiyah does not become an expert.\nrule: If someone publishes scientific papers and attends conferences, then they can become an expert.\nconclusion: Amiyah does not publish scientific papers.\n\nfact1: Amiyah does not publish scientific papers.\nrule: Amiyah either publishes scientific papers or works in a lab, but not both.\nconclusion: Amiyah works in a lab.\n\nfact1: Amiyah does not have a rare condition.\nfact2: Amiyah does not pioneer medical breakthroughs.\nrule: If Amiyah receives innovative treatment, then she either has a rare condition or pioneers medical breakthroughs (or both).\nconclusion: Amiyah does not receive innovative treatment.\n\nfact1: Amiyah works in a lab.\nfact2: Amiyah teaches at a university.\nrule: If Amiyah works in a lab, then she can either contribute to medical research or teach at a university, but not both.\nconclusion: Amiyah does not contribute to medical research.\n\nfact1: Amiyah does not receive innovative treatment.\nfact2: Amiyah does not contribute to medical research.\nrule: If Amiyah has sapremia, then she can either receive innovative treatment or contribute to medical research, but not both.\nconclusion: Amiyah has sapremia.\n\nTherefore, it is false that Amiyah has sapremia. The correct option is: B.",
    "context": "Amiyah does not pioneer medical breakthroughs. Amiyah does not make new discoveries. If Amiyah is an expert or makes new discoveries, then she gains recognition. If Amiyah has sapremia, then she can either receive innovative treatment or contribute to medical research, but not both. Amiyah does not gain recognition. Amiyah attends conferences. Amiyah teaches at a university. If Amiyah works in a lab, then she can either contribute to medical research or teach at a university, but not both. If someone publishes scientific papers and attends conferences, then they can become an expert. Amiyah does not have a rare condition. If Amiyah receives innovative treatment, then she either has a rare condition or pioneers medical breakthroughs (or both). Amiyah either publishes scientific papers or works in a lab, but not both. If Amiyah collects data or analyzes results, then she can publish scientific papers.",
    "nl2fol": {
      "Amiyah does not pioneer medical breakthroughs.": "¬pioneers_medical_breakthroughs(Amiyah)",
      "Amiyah does not make new discoveries.": "¬makes_new_discoveries(Amiyah)",
      "If Amiyah is an expert or makes new discoveries, then she gains recognition.": "(becomes_expert(Amiyah) ⊕ makes_new_discoveries(Amiyah)) → gains_recognition(Amiyah)",
      "If Amiyah has sapremia, then she can either receive innovative treatment or contribute to medical research, but not both.": "has_sapremia(Amiyah) → (receive_innovative_treatment(Amiyah) ⊕ contribute_to_medical_research(Amiyah))",
      "Amiyah does not gain recognition.": "¬gains_recognition(Amiyah)",
      "Amiyah attends conferences.": "attends_conferences(Amiyah)",
      "Amiyah teaches at a university.": "teach_at_university(Amiyah)",
      "If Amiyah works in a lab, then she can either contribute to medical research or teach at a university, but not both.": "work_in_lab(Amiyah) → (contribute_to_medical_research(Amiyah) ⊕ teach_at_university(Amiyah))",
      "If someone publishes scientific papers and attends conferences, then they can become an expert.": "∀x ((publish_scientific_papers(x) ∧ attends_conferences(x)) → becomes_expert(x))",
      "Amiyah does not have a rare condition.": "¬has_rare_condition(Amiyah)",
      "If Amiyah receives innovative treatment, then she either has a rare condition or pioneers medical breakthroughs (or both).": "receive_innovative_treatment(Amiyah) → (has_rare_condition(Amiyah) ∨ pioneers_medical_breakthroughs(Amiyah))",
      "Amiyah either publishes scientific papers or works in a lab, but not both.": "publish_scientific_papers(Amiyah) ⊕ work_in_lab(Amiyah)",
      "If Amiyah collects data or analyzes results, then she can publish scientific papers.": "(collects_data(Amiyah) ∨ analyze_results(Amiyah)) → publish_scientific_papers(Amiyah)"
    },
    "conclusion_fol": "has_sapremia(Amiyah)"
  },
  {
    "id": 273,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aspyn becomes a professional artist.",
    "reasoning": "fact1: Aspyn does not play music.\nrule: Aspyn either plays music or writes poetry.\nconclusion: Aspyn writes poetry.\n\nfact1: Aspyn values self-expression.\nfact2: Aspyn cultivates her imagination.\nrule: If Aspyn values self-expression, then she dedicates her life to art and cultivates imagination.\nconclusion: Aspyn dedicates her life to art.\n\nfact1: Aspyn writes poetry.\nrule: Aspyn either writes poetry or enjoys drawing, but not both.\nconclusion: Aspyn does not enjoy drawing.\n\nfact1: Aspyn dedicates her life to art.\nrule: If Aspyn dedicates her life to art, then she will pursue a full-time career in it.\nconclusion: Aspyn pursues a full-time career.\n\nfact1: Aspyn does not enjoy drawing.\nrule: Aspyn enjoys drawing or has creative talent.\nconclusion: Aspyn has creative talent.\n\nfact1: Aspyn pursues a full-time career.\nrule: Aspyn either pursues a full-time career or maintains her art only as a hobby, but not both.\nconclusion: Aspyn does not maintain her creative talent only as a hobby.\n\nfact1: Aspyn has creative talent.\nfact2: Aspyn does not maintain her creative talent only as a hobby.\nrule: If Aspyn has creative talent, then she can either become a professional artist or maintain it only as a hobby, but not both.\nconclusion: Aspyn becomes a professional artist.\n\nTherefore, it is true that Aspyn becomes a professional artist. The correct option is: A.",
    "context": "Aspyn cultivates her imagination. Aspyn enjoys drawing or has creative talent. If Aspyn has creative talent, then she can either become a professional artist or maintain it only as a hobby, but not both. If Aspyn dedicates her life to art, then she will pursue a full-time career in it. Aspyn values self-expression. Aspyn does not play music. Aspyn either plays music or writes poetry. Aspyn either writes poetry or enjoys drawing, but not both. Aspyn either pursues a full-time career or maintains her art only as a hobby, but not both. If Aspyn values self-expression, then she dedicates her life to art and cultivates imagination.",
    "nl2fol": {
      "Aspyn cultivates her imagination.": "cultivate_imagination(Aspyn)",
      "Aspyn enjoys drawing or has creative talent.": "enjoys_drawing(Aspyn) ∨ has_creative_talent(Aspyn)",
      "If Aspyn has creative talent, then she can either become a professional artist or maintain it only as a hobby, but not both.": "has_creative_talent(Aspyn) → (become_professional_artist(Aspyn) ⊕ maintain_hobby_only(Aspyn))",
      "If Aspyn dedicates her life to art, then she will pursue a full-time career in it.": "dedicates_life_to_art(Aspyn) → pursue_full_time_career(Aspyn)",
      "Aspyn values self-expression.": "values_self_expression(Aspyn)",
      "Aspyn does not play music.": "¬plays_music(Aspyn)",
      "Aspyn either plays music or writes poetry.": "plays_music(Aspyn) ∨ writes_poetry(Aspyn)",
      "Aspyn either writes poetry or enjoys drawing, but not both.": "writes_poetry(Aspyn) ⊕ enjoys_drawing(Aspyn)",
      "Aspyn either pursues a full-time career or maintains her art only as a hobby, but not both.": "pursue_full_time_career(Aspyn) ⊕ maintain_hobby_only(Aspyn)",
      "If Aspyn values self-expression, then she dedicates her life to art and cultivates imagination.": "values_self_expression(Aspyn) → (dedicates_life_to_art(Aspyn) ∧ cultivate_imagination(Aspyn))"
    },
    "conclusion_fol": "become_professional_artist(Aspyn)"
  },
  {
    "id": 274,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Marilyn is a rodeo rider.",
    "reasoning": "fact1: Marilyn holds office.\nfact2: Marilyn is not influential.\nrule: For all humans, if they either hold office or have high status, then they are influential.\nconclusion: Marilyn has high status.\n\nfact1: Marilyn lives rurally.\nfact2: Marilyn does not enjoy hiking.\nrule: If Marilyn lives rurally, then she is either an outdoor enthusiast or enjoys hiking, but not both.\nconclusion: Marilyn is an outdoor enthusiast.\n\nfact1: Marilyn does not inspire others.\nrule: Anyone who leads by example or values sustainability inspires others.\nconclusion: Marilyn does not value sustainability.\n\nfact1: Marilyn has high status.\nfact2: Marilyn is not authentic.\nrule: If Marilyn has high status, then she either values integrity or is authentic (but not both).\nconclusion: Marilyn values integrity.\n\nfact1: Marilyn does not support local communities.\nfact2: Marilyn does not value sustainability.\nrule: If Marilyn either supports local communities or champions social causes (but not both), then she values sustainability.\nconclusion: Marilyn does not champion social causes.\n\nfact1: Marilyn is not strong-willed.\nfact2: Marilyn values integrity.\nrule: All respected figures are strong-willed and value integrity.\nconclusion: Marilyn is not a respected figure.\n\nfact1: Marilyn is an outdoor enthusiast.\nfact2: Marilyn does not champion social causes.\nrule: If Marilyn is an outdoor enthusiast, then she either champions social causes or is an environmental advocate (or both).\nconclusion: Marilyn is an environmental advocate.\n\nfact1: Marilyn is an environmental advocate.\nfact2: Marilyn is not a respected figure.\nrule: If Marilyn is either a rodeo rider or an environmental advocate (but not both), then she is a respected figure.\nconclusion: Marilyn is a rodeo rider.\n\nTherefore, it is true that Marilyn is a rodeo rider. The correct option is: A.",
    "context": "If Marilyn holds public office, then she either prioritizes her privacy or values integrity, but not both. Anyone who leads by example or values sustainability inspires others. If Marilyn has high status, then she either values integrity or is authentic (but not both). If Marilyn is an outdoor enthusiast, then she either champions social causes or is an environmental advocate (or both). If Marilyn either supports local communities or champions social causes (but not both), then she values sustainability. Marilyn is not strong-willed. Marilyn does not support local communities. If Marilyn lives adventurously, then she either pursues her passions or is an outdoor enthusiast (or both). If Marilyn is either a rodeo rider or an environmental advocate (but not both), then she is a respected figure. Marilyn is either a dedicated leader or a respected figure. Marilyn holds office. All respected figures are strong-willed and value integrity. Marilyn does not enjoy hiking. Marilyn lives rurally. If Marilyn pursues her passion, then she either stays true to herself or has high status (or both). If Marilyn is a passionate leader, then she either empowers women or champions social causes (or both). Marilyn is not influential. For all humans, if they either hold office or have high status, then they are influential. If Marilyn lives rurally, then she is either an outdoor enthusiast or enjoys hiking, but not both. Marilyn does not inspire others. Marilyn is not authentic.",
    "nl2fol": {
      "If Marilyn holds public office, then she either prioritizes her privacy or values integrity, but not both.": "holds_public_office(Marilyn) → (prioritizes_privacy(Marilyn) ⊕ value_integrity(Marilyn))",
      "Anyone who leads by example or values sustainability inspires others.": "∀x ((leads_by_example(x) ∨ values_sustainability(x)) → inspires_others(x))",
      "If Marilyn has high status, then she either values integrity or is authentic (but not both).": "has_high_status(Marilyn) → (value_integrity(Marilyn) ⊕ is_authentic(Marilyn))",
      "If Marilyn is an outdoor enthusiast, then she either champions social causes or is an environmental advocate (or both).": "outdoor_enthusiast(Marilyn) → (champion_social_causes(Marilyn) ∨ environmental_advocate(Marilyn))",
      "If Marilyn either supports local communities or champions social causes (but not both), then she values sustainability.": "(supports_local_communities(Marilyn) ⊕ champion_social_causes(Marilyn)) → values_sustainability(Marilyn)",
      "Marilyn is not strong-willed.": "¬strong_willed(Marilyn)",
      "Marilyn does not support local communities.": "¬supports_local_communities(Marilyn)",
      "If Marilyn lives adventurously, then she either pursues her passions or is an outdoor enthusiast (or both).": "lives_adventurously(Marilyn) → (pursues_passions(Marilyn) ∨ outdoor_enthusiast(Marilyn))",
      "If Marilyn is either a rodeo rider or an environmental advocate (but not both), then she is a respected figure.": "(rodeo_rider(Marilyn) ⊕ environmental_advocate(Marilyn)) → respected_figure(Marilyn)",
      "Marilyn is either a dedicated leader or a respected figure.": "dedicated_leader(Marilyn) ∨ respected_figure(Marilyn)",
      "Marilyn holds office.": "holds_office(Marilyn)",
      "All respected figures are strong-willed and value integrity.": "∀x (respected_figure(x) → (strong_willed(x) ∧ value_integrity(x)))",
      "Marilyn does not enjoy hiking.": "¬enjoys_hiking(Marilyn)",
      "Marilyn lives rurally.": "lives_rurally(Marilyn)",
      "If Marilyn pursues her passion, then she either stays true to herself or has high status (or both).": "pursue_passion(Marilyn) → (stay_true_to_oneself(Marilyn) ∨ has_high_status(Marilyn))",
      "If Marilyn is a passionate leader, then she either empowers women or champions social causes (or both).": "passionate_leader(Marilyn) → (empower_women(Marilyn) ∨ champion_social_causes(Marilyn))",
      "Marilyn is not influential.": "¬is_influential(Marilyn)",
      "For all humans, if they either hold office or have high status, then they are influential.": "∀x ((holds_office(x) ⊕ has_high_status(x)) → is_influential(x))",
      "If Marilyn lives rurally, then she is either an outdoor enthusiast or enjoys hiking, but not both.": "lives_rurally(Marilyn) → (outdoor_enthusiast(Marilyn) ⊕ enjoys_hiking(Marilyn))",
      "Marilyn does not inspire others.": "¬inspires_others(Marilyn)",
      "Marilyn is not authentic.": "¬is_authentic(Marilyn)"
    },
    "conclusion_fol": "rodeo_rider(Marilyn)"
  },
  {
    "id": 275,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Maddison can become a curator.",
    "reasoning": "fact1: Maddison admires scholars.\nrule: If Maddison admires scholars, then she collects rare texts and treasures ancient wisdom.\nconclusion: Maddison collects rare texts.\n\nfact1: Maddison does not appreciate history.\nfact2: Maddison does not promote education.\nrule: Anyone who shares learning appreciates history or promotes education (or both).\nconclusion: Maddison does not share learning.\n\nfact1: Maddison collects rare texts.\nfact2: Maddison does not share learning.\nrule: Anyone who collects rare texts either values knowledge or shares learning (or both).\nconclusion: Maddison values knowledge.\n\nfact1: Maddison values knowledge.\nrule: If Maddison values knowledge, then she works in archives and organizes collections.\nconclusion: Maddison works in archives.\n\nfact1: Maddison works in archives.\nrule: Maddison either works in archives or studies librarianship, but not both.\nconclusion: Maddison does not study librarianship.\n\nfact1: Maddison does not express herself creatively.\nrule: If someone enjoys writing, then they express themselves creatively.\nconclusion: Maddison does not enjoy writing.\n\nfact1: Maddison does not enjoy writing.\nrule: Maddison either enjoys writing or loves books, but these two interests are mutually exclusive.\nconclusion: Maddison loves books.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Maddison can become a curator. The correct option is: C.",
    "context": "If someone enjoys writing, then they express themselves creatively. If Maddison works in a library, then she either creates indexes or organizes collections, but not both. If someone keeps diaries and creates poetry, then they enjoy writing. Anyone who shares learning appreciates history or promotes education (or both). Maddison does not promote education. Anyone who collects rare texts either values knowledge or shares learning (or both). Maddison does not appreciate history. If Maddison has a good memory or is detail-oriented, then she can collect rare texts. If Maddison values knowledge, then she works in archives and organizes collections. If Maddison admires scholars, then she collects rare texts and treasures ancient wisdom. Maddison either works in archives or studies librarianship, but not both. If Maddison either translates texts or edits manuscripts (but not both), then she shares learning. Maddison either enjoys writing or loves books, but these two interests are mutually exclusive. Maddison admires scholars. Maddison does not express herself creatively.",
    "nl2fol": {
      "If someone enjoys writing, then they express themselves creatively.": "∀x (enjoy_writing(x) → express_creatively(x))",
      "If Maddison works in a library, then she either creates indexes or organizes collections, but not both.": "work_in_library(Maddison) → (create_indexes(Maddison) ⊕ organize_collections(Maddison))",
      "If someone keeps diaries and creates poetry, then they enjoy writing.": "∀x ((keep_diaries(x) ∧ create_poetry(x)) → enjoy_writing(x))",
      "Anyone who shares learning appreciates history or promotes education (or both).": "∀x (share_learning(x) → (appreciate_history(x) ∨ promote_education(x)))",
      "Maddison does not promote education.": "¬promote_education(Maddison)",
      "Anyone who collects rare texts either values knowledge or shares learning (or both).": "∀x (collect_rare_texts(x) → (value_knowledge(x) ∨ share_learning(x)))",
      "Maddison does not appreciate history.": "¬appreciate_history(Maddison)",
      "If Maddison has a good memory or is detail-oriented, then she can collect rare texts.": "(has_good_memory(Maddison) ∨ is_detail_oriented(Maddison)) → collect_rare_texts(Maddison)",
      "If Maddison values knowledge, then she works in archives and organizes collections.": "value_knowledge(Maddison) → (work_in_archives(Maddison) ∧ organize_collections(Maddison))",
      "If Maddison admires scholars, then she collects rare texts and treasures ancient wisdom.": "admire_scholars(Maddison) → (collect_rare_texts(Maddison) ∧ treasure_ancient_wisdom(Maddison))",
      "Maddison either works in archives or studies librarianship, but not both.": "work_in_archives(Maddison) ⊕ study_librarianship(Maddison)",
      "If Maddison either translates texts or edits manuscripts (but not both), then she shares learning.": "(translate_texts(Maddison) ⊕ edit_manuscripts(Maddison)) → share_learning(Maddison)",
      "Maddison either enjoys writing or loves books, but these two interests are mutually exclusive.": "enjoy_writing(Maddison) ⊕ love_books(Maddison)",
      "Maddison admires scholars.": "admire_scholars(Maddison)",
      "Maddison does not express herself creatively.": "¬express_creatively(Maddison)"
    },
    "conclusion_fol": "become_a_curator(Maddison)"
  },
  {
    "id": 276,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Egghead has an introverted personality.",
    "reasoning": "fact1: Egghead is a socialite.\nfact2: Egghead plans weddings.\nrule: If Egghead is a socialite, then he either plans weddings or hosts events, but not both.\nconclusion: Egghead does not host events.\n\nfact1: Egghead does not host events.\nrule: Egghead hosts events or throws awesome parties.\nconclusion: Egghead throws awesome parties.\n\nfact1: Egghead throws awesome parties.\nfact2: Egghead does not attract big crowds.\nrule: Anyone who throws awesome parties either has infectious energy or attracts big crowds.\nconclusion: Egghead has infectious energy.\n\nfact1: Egghead has infectious energy.\nrule: Egghead either has charisma or has infectious energy, but not both.\nconclusion: Egghead does not have charisma.\n\nfact1: Egghead does not have charisma.\nrule: Egghead has charisma or an outgoing personality.\nconclusion: Egghead has an outgoing personality.\n\nfact1: Egghead has an outgoing personality.\nrule: Egghead either has an outgoing personality or an introverted personality, but not both.\nconclusion: Egghead does not have an introverted personality.\n\nTherefore, it is false that Egghead has an introverted personality. The correct option is: B.",
    "context": "Egghead hosts events or throws awesome parties. Egghead plans weddings. Egghead does not attract big crowds. Egghead is a socialite. Egghead either has charisma or has infectious energy, but not both. Anyone who throws awesome parties either has infectious energy or attracts big crowds. If Egghead is a socialite, then he either plans weddings or hosts events, but not both. Egghead has charisma or an outgoing personality. Egghead either has an outgoing personality or an introverted personality, but not both.",
    "nl2fol": {
      "Egghead hosts events or throws awesome parties.": "hosts_events(Egghead) ∨ throws_awesome_parties(Egghead)",
      "Egghead plans weddings.": "plans_weddings(Egghead)",
      "Egghead does not attract big crowds.": "¬attracts_big_crowds(Egghead)",
      "Egghead is a socialite.": "is_socialite(Egghead)",
      "Egghead either has charisma or has infectious energy, but not both.": "has_infectious_energy(Egghead) ⊕ has_charisma(Egghead)",
      "Anyone who throws awesome parties either has infectious energy or attracts big crowds.": "∀x (throws_awesome_parties(x) → (has_infectious_energy(x) ∨ attracts_big_crowds(x)))",
      "If Egghead is a socialite, then he either plans weddings or hosts events, but not both.": "is_socialite(Egghead) → (plans_weddings(Egghead) ⊕ hosts_events(Egghead))",
      "Egghead has charisma or an outgoing personality.": "has_charisma(Egghead) ∨ outgoing_personality(Egghead)",
      "Egghead either has an outgoing personality or an introverted personality, but not both.": "outgoing_personality(Egghead) ⊕ introverted_personality(Egghead)"
    },
    "conclusion_fol": "introverted_personality(Egghead)"
  },
  {
    "id": 277,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Every human in Rhenish Hesse either appreciates tradition or rejects tradition, but not both, and Leyla appreciates tradition.",
    "reasoning": "fact1: Leyla is determined.\nfact2: Leyla takes risks.\nrule: If someone is determined, then they take risks and seek progress.\nconclusion: Leyla seeks progress.\n\nfact1: Leyla does not set goals.\nrule: All progressive individuals have creativity and set goals.\nconclusion: Leyla is not progressive.\n\nfact1: Leyla does not seek improvement.\nfact2: Leyla is not progressive.\nrule: If Leyla either embraces innovation or seeks improvement (but not both), then she is progressive.\nconclusion: Leyla does not embrace innovation.\n\nfact1: Leyla does not embrace innovation.\nrule: Leyla either rejects tradition or embraces innovation, but not both.\nconclusion: Leyla rejects tradition.\n\nfact1: Leyla honors her heritage.\nrule: If someone honors their heritage, then they value customs.\nconclusion: Leyla values customs.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Every human in Rhenish Hesse either appreciates tradition or rejects tradition, but not both, and Leyla appreciates tradition. The correct option is: C.",
    "context": "Dork takes risks. Leyla does not set goals. All progressive individuals have creativity and set goals. Leyla honors her heritage. Leyla does not seek improvement. If someone honors their heritage, then they value customs. Leyla takes risks. Anyone who thinks outside the box is creative. Leyla follows her passion or seeks progress. Rex is determined. If Leyla either embraces innovation or seeks improvement (but not both), then she is progressive. Dork either rejects tradition or embraces innovation, but not both. Leyla is determined. If someone is determined, then they take risks and seek progress. If Leyla prefers modernity and dislikes convention, then she rejects tradition. Leyla either rejects tradition or embraces innovation, but not both.",
    "nl2fol": {
      "Dork takes risks.": "takes_risks(Dork)",
      "Leyla does not set goals.": "¬sets_goals(Leyla)",
      "All progressive individuals have creativity and set goals.": "∀x (is_progressive(x) → (has_creativity(x) ∧ sets_goals(x)))",
      "Leyla honors her heritage.": "honors_heritage(Leyla)",
      "Leyla does not seek improvement.": "¬seeks_improvement(Leyla)",
      "If someone honors their heritage, then they value customs.": "∀x (honors_heritage(x) → values_customs(x))",
      "Leyla takes risks.": "takes_risks(Leyla)",
      "Anyone who thinks outside the box is creative.": "∀x (thinks_outside_box(x) → has_creativity(x))",
      "Leyla follows her passion or seeks progress.": "follows_passion(Leyla) ∨ seeks_progress(Leyla)",
      "Rex is determined.": "determined(Rex)",
      "If Leyla either embraces innovation or seeks improvement (but not both), then she is progressive.": "(embraces_innovation(Leyla) ⊕ seeks_improvement(Leyla)) → is_progressive(Leyla)",
      "Dork either rejects tradition or embraces innovation, but not both.": "rejects_tradition(Dork) ⊕ embraces_innovation(Dork)",
      "Leyla is determined.": "is_determined(Leyla)",
      "If someone is determined, then they take risks and seek progress.": "∀x (is_determined(x) → (takes_risks(x) ∧ seeks_progress(x)))",
      "If Leyla prefers modernity and dislikes convention, then she rejects tradition.": "(prefers_modernity(Leyla) ∧ dislikes_convention(Leyla)) → rejects_tradition(Leyla)",
      "Leyla either rejects tradition or embraces innovation, but not both.": "rejects_tradition(Leyla) ⊕ embraces_innovation(Leyla)"
    },
    "conclusion_fol": "appreciates_tradition(Leyla) ⊕ rejects_tradition(Leyla)"
  },
  {
    "id": 278,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Isabella gains respect.",
    "reasoning": "fact1: Isabella supports others.\nrule: Isabella either supports others or challenges wrongs, but not both.\nconclusion: Isabella does not challenge wrongs.\n\nfact1: Isabella faces an accusation.\nfact2: Isabella does not seek a judicial review.\nrule: If Isabella faces an accusation, then she either seeks a judicial review or defends her rights.\nconclusion: Isabella defends her rights.\n\nfact1: Isabella defends her rights.\nfact2: Isabella does not challenge wrongs.\nrule: Anyone who defends their rights or challenges wrongs will fight injustice.\nconclusion: Isabella fights injustice.\n\nfact1: Isabella is principled.\nfact2: Isabella does not believe in fairness.\nrule: If Isabella is principled, then she either values integrity or believes in fairness, but not both.\nconclusion: Isabella values integrity.\n\nfact1: Isabella fights injustice.\nfact2: Isabella values integrity.\nrule: Anyone who fights injustice or values integrity will stand up for themselves.\nconclusion: Isabella stands up for herself.\n\nfact1: Isabella stands up for herself.\nrule: For all humans, if someone stands up for themselves, then they gain respect and protect their reputation.\nconclusion: Isabella gains respect.\n\nTherefore, it is true that Isabella gains respect. The correct option is: A.",
    "context": "Faith either supports others or challenges wrongs, but not both. If Isabella faces an accusation, then she either seeks a judicial review or defends her rights. All individuals with moral courage speak the truth and challenge wrongs. If Isabella either speaks out against unfairness or demands accountability (but not both), then she defends her rights. If Isabella is principled, then she either values integrity or believes in fairness, but not both. Isabella faces an accusation. For all humans, if someone stands up for themselves, then they gain respect and protect their reputation. Anyone who fights injustice or values integrity will stand up for themselves. Anyone who defends their rights or challenges wrongs will fight injustice. Isabella is principled. Isabella does not believe in fairness. Isabella either supports others or challenges wrongs, but not both. Luca is principled. Isabella does not seek a judicial review. Isabella supports others.",
    "nl2fol": {
      "Faith either supports others or challenges wrongs, but not both.": "supports_others(Faith) ⊕ challenges_wrongs(Faith)",
      "If Isabella faces an accusation, then she either seeks a judicial review or defends her rights.": "faces_accusation(Isabella) → (seeks_judicial_review(Isabella) ∨ defends_rights(Isabella))",
      "All individuals with moral courage speak the truth and challenge wrongs.": "∀x (has_moral_courage(x) → (speaks_truth(x) ∧ challenges_wrongs(x)))",
      "If Isabella either speaks out against unfairness or demands accountability (but not both), then she defends her rights.": "(speaks_out_against_unfairness(Isabella) ⊕ demands_accountability(Isabella)) → defends_rights(Isabella)",
      "If Isabella is principled, then she either values integrity or believes in fairness, but not both.": "is_principled(Isabella) → (values_integrity(Isabella) ⊕ believes_in_fairness(Isabella))",
      "Isabella faces an accusation.": "faces_accusation(Isabella)",
      "For all humans, if someone stands up for themselves, then they gain respect and protect their reputation.": "∀x (stands_up_for_themselves(x) → (gains_respect(x) ∧ protects_their_reputation(x)))",
      "Anyone who fights injustice or values integrity will stand up for themselves.": "∀x ((fights_injustice(x) ∨ values_integrity(x)) → stands_up_for_themselves(x))",
      "Anyone who defends their rights or challenges wrongs will fight injustice.": "∀x ((defends_rights(x) ∨ challenges_wrongs(x)) → fights_injustice(x))",
      "Isabella is principled.": "is_principled(Isabella)",
      "Isabella does not believe in fairness.": "¬believes_in_fairness(Isabella)",
      "Isabella either supports others or challenges wrongs, but not both.": "supports_others(Isabella) ⊕ challenges_wrongs(Isabella)",
      "Luca is principled.": "is_principled(Luca)",
      "Isabella does not seek a judicial review.": "¬seeks_judicial_review(Isabella)",
      "Isabella supports others.": "supports_others(Isabella)"
    },
    "conclusion_fol": "gains_respect(Isabella)"
  },
  {
    "id": 279,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Justin does not inspire future generations.",
    "reasoning": "fact1: Justin values accuracy.\nfact2: Justin reads medical journals.\nrule: Anyone who values accuracy and reads medical journals is dedicated to research.\nconclusion: Justin is dedicated to research.\n\nfact1: Justin is curious.\nfact2: Justin does not work independently.\nrule: If Justin is curious, then he either has a medical background or works independently, but not both.\nconclusion: Justin has a medical background.\n\nfact1: Justin does not set high standards.\nrule: Justin sets high standards or strives for excellence.\nconclusion: Justin strives for excellence.\n\nfact1: Justin has a medical background.\nfact2: Justin collaborates with specialists.\nrule: If Justin has a medical background, then he either pursues medical advancements or collaborates with specialists, but not both.\nconclusion: Justin does not pursue medical advancements.\n\nfact1: Justin strives for excellence.\nfact2: Justin does not advance medical knowledge.\nrule: If Justin strives for excellence, then he either advances medical knowledge or develops new procedures (or both).\nconclusion: Justin develops new procedures.\n\nfact1: Justin does not pursue medical advancements.\nfact2: Justin develops new procedures.\nrule: Anyone who pursues medical advancements or develops new procedures can improve patient outcomes.\nconclusion: Justin improves patient outcomes.\n\nfact1: Justin is dedicated to research.\nfact2: Justin improves patient outcomes.\nrule: If Justin is dedicated to research, then he can either improve patient outcomes or inspire future generations, but not both.\nconclusion: Justin does not inspire future generations.\n\nTherefore, it is true that Justin does not inspire future generations. The correct option is: A.",
    "context": "If Justin either analyzes clinical data or creates treatment plans (but not both), then he improves patient outcomes. Anyone who pursues medical advancements or develops new procedures can improve patient outcomes. Justin does not advance medical knowledge. If Justin is dedicated to research, then he can either improve patient outcomes or inspire future generations, but not both. Justin is curious. If Aron has a medical background, then he either pursues medical advancements or collaborates with specialists, but not both. If Justin seeks knowledge and enjoys learning, then he is dedicated to research. Justin values accuracy. If Justin strives for excellence, then he either advances medical knowledge or develops new procedures (or both). Justin collaborates with specialists. Sincere collaborates with specialists. If Justin is curious, then he either has a medical background or works independently, but not both. Justin does not work independently. If Justin has a degree, then he either has a medical background or attends conferences, but not both. Celine values accuracy. Celine reads medical journals. Celine sets high standards or strives for excellence. Justin reads medical journals. If Justin has a medical background, then he either pursues medical advancements or collaborates with specialists, but not both. Justin sets high standards or strives for excellence. If Celine is curious, then he either has a medical background or works independently, but not both. Justin does not set high standards. Anyone who values accuracy and reads medical journals is dedicated to research.",
    "nl2fol": {
      "If Justin either analyzes clinical data or creates treatment plans (but not both), then he improves patient outcomes.": "(analyze_clinical_data(Justin) ⊕ create_treatment_plans(Justin)) → improve_patient_outcomes(Justin)",
      "Anyone who pursues medical advancements or develops new procedures can improve patient outcomes.": "∀x ((pursue_medical_advancements(x) ∨ develop_new_procedures(x)) → improve_patient_outcomes(x))",
      "Justin does not advance medical knowledge.": "¬advance_medical_knowledge(Justin)",
      "If Justin is dedicated to research, then he can either improve patient outcomes or inspire future generations, but not both.": "dedicated_to_research(Justin) → (improve_patient_outcomes(Justin) ⊕ inspire_future_generations(Justin))",
      "Justin is curious.": "is_curious(Justin)",
      "If Aron has a medical background, then he either pursues medical advancements or collaborates with specialists, but not both.": "has_medical_background(Aron) → (pursue_medical_advancements(Aron) ⊕ collaborate_with_specialists(Aron))",
      "If Justin seeks knowledge and enjoys learning, then he is dedicated to research.": "(seeks_knowledge(Justin) ∧ enjoys_learning(Justin)) → dedicated_to_research(Justin)",
      "Justin values accuracy.": "values_accuracy(Justin)",
      "If Justin strives for excellence, then he either advances medical knowledge or develops new procedures (or both).": "strive_for_excellence(Justin) → (advance_medical_knowledge(Justin) ∨ develop_new_procedures(Justin))",
      "Justin collaborates with specialists.": "collaborate_with_specialists(Justin)",
      "Sincere collaborates with specialists.": "collaborate_with_specialists(Sincere)",
      "If Justin is curious, then he either has a medical background or works independently, but not both.": "is_curious(Justin) → (has_medical_background(Justin) ⊕ work_independently(Justin))",
      "Justin does not work independently.": "¬work_independently(Justin)",
      "If Justin has a degree, then he either has a medical background or attends conferences, but not both.": "has_a_degree(Justin) → (has_medical_background(Justin) ⊕ attends_conferences(Justin))",
      "Celine values accuracy.": "value_accuracy(Celine)",
      "Celine reads medical journals.": "reads_medical_journals(Celine)",
      "Celine sets high standards or strives for excellence.": "sets_high_standards(Celine) ∨ strives_for_excellence(Celine)",
      "Justin reads medical journals.": "reads_medical_journals(Justin)",
      "If Justin has a medical background, then he either pursues medical advancements or collaborates with specialists, but not both.": "has_medical_background(Justin) → (pursue_medical_advancements(Justin) ⊕ collaborate_with_specialists(Justin))",
      "Justin sets high standards or strives for excellence.": "set_high_standards(Justin) ∨ strive_for_excellence(Justin)",
      "If Celine is curious, then he either has a medical background or works independently, but not both.": "is_curious(Celine) → (has_medical_background(Celine) ⊕ work_independently(Celine))",
      "Justin does not set high standards.": "¬set_high_standards(Justin)",
      "Anyone who values accuracy and reads medical journals is dedicated to research.": "∀x ((values_accuracy(x) ∧ reads_medical_journals(x)) → dedicated_to_research(x))"
    },
    "conclusion_fol": "¬inspire_future_generations(Justin)"
  },
  {
    "id": 280,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Callie is a creative writer.",
    "reasoning": "fact1: Callie publishes best sellers.\nrule: Anyone who publishes best sellers or wins literary awards is highly acclaimed.\nconclusion: Callie is highly acclaimed.\n\nfact1: Callie is an accomplished author.\nfact2: Callie is highly acclaimed.\nrule: If Callie is an accomplished author, then she is either highly acclaimed or respected, but not both.\nconclusion: Callie is not respected.\n\nfact1: Callie remains anonymous.\nrule: Callie either inspires followers or remains anonymous, but not both.\nconclusion: Callie cannot inspire followers.\n\nfact1: Callie cannot inspire followers.\nrule: Anyone who is a charismatic leader or tells great stories can inspire followers.\nconclusion: Callie is not a charismatic leader.\n\nfact1: Callie is not respected.\nrule: If someone is influential, then they are respected.\nconclusion: Callie is not influential.\n\nfact1: Callie is an eloquent orator.\nfact2: Callie is a strategic planner.\nrule: If Callie is an eloquent orator, then she is either a visionary thinker or a strategic planner (but not both).\nconclusion: Callie is not a visionary thinker.\n\nfact1: Callie is not a charismatic leader.\nfact2: Callie is not a visionary thinker.\nrule: If Callie is an inspiring speaker, then she is either a charismatic leader or a visionary thinker (but not both).\nconclusion: Callie is not an inspiring speaker.\n\nfact1: Callie is not an inspiring speaker.\nfact2: Callie is not influential.\nrule: If Callie is either a creative writer or an inspiring speaker (but not both), then she is influential.\nconclusion: Callie is a creative writer.\n\nTherefore, it is false that Callie is a creative writer. The correct option is: B.",
    "context": "If someone is influential, then they are respected. Anyone who is a charismatic leader or tells great stories can inspire followers. Callie either inspires followers or remains anonymous, but not both. If Callie is either a creative writer or an inspiring speaker (but not both), then she is influential. Anyone who publishes best sellers or wins literary awards is highly acclaimed. Callie is an accomplished author. Anyone who crafts beautiful prose or speaks from the heart is influential. Callie publishes best sellers. If Callie motivates others, then she is either a charismatic leader or a social activist (but not both). Callie is an eloquent orator. If Callie is an eloquent orator, then she is either a visionary thinker or a strategic planner (but not both). If Callie is an accomplished author, then she is either highly acclaimed or respected, but not both. If Callie is an inspiring speaker, then she is either a charismatic leader or a visionary thinker (but not both). Callie is a strategic planner. Callie remains anonymous.",
    "nl2fol": {
      "If someone is influential, then they are respected.": "∀x (influential(x) → respected(x))",
      "Anyone who is a charismatic leader or tells great stories can inspire followers.": "∀x ((charismatic_leader(x) ∨ tells_great_stories(x)) → inspires_followers(x))",
      "Callie either inspires followers or remains anonymous, but not both.": "inspires_followers(Callie) ⊕ remains_anonymous(Callie)",
      "If Callie is either a creative writer or an inspiring speaker (but not both), then she is influential.": "(creative_writer(Callie) ⊕ inspiring_speaker(Callie)) → influential(Callie)",
      "Anyone who publishes best sellers or wins literary awards is highly acclaimed.": "∀x ((publishes_best_sellers(x) ∨ wins_literary_awards(x)) → highly_acclaimed(x))",
      "Callie is an accomplished author.": "accomplished_author(Callie)",
      "Anyone who crafts beautiful prose or speaks from the heart is influential.": "∀x ((crafts_beautiful_prose(x) ∨ speaks_from_the_heart(x)) → influential(x))",
      "Callie publishes best sellers.": "publishes_best_sellers(Callie)",
      "If Callie motivates others, then she is either a charismatic leader or a social activist (but not both).": "motivates_others(Callie) → (charismatic_leader(Callie) ⊕ social_activist(Callie))",
      "Callie is an eloquent orator.": "eloquent_orator(Callie)",
      "If Callie is an eloquent orator, then she is either a visionary thinker or a strategic planner (but not both).": "eloquent_orator(Callie) → (visionary_thinker(Callie) ⊕ strategic_planner(Callie))",
      "If Callie is an accomplished author, then she is either highly acclaimed or respected, but not both.": "accomplished_author(Callie) → (highly_acclaimed(Callie) ⊕ respected(Callie))",
      "If Callie is an inspiring speaker, then she is either a charismatic leader or a visionary thinker (but not both).": "inspiring_speaker(Callie) → (charismatic_leader(Callie) ⊕ visionary_thinker(Callie))",
      "Callie is a strategic planner.": "strategic_planner(Callie)",
      "Callie remains anonymous.": "remains_anonymous(Callie)"
    },
    "conclusion_fol": "creative_writer(Callie)"
  },
  {
    "id": 281,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hadleigh will succeed in research.",
    "reasoning": "fact1: Hadleigh has curiosity.\nfact2: Hadleigh does not solve problems.\nrule: If Hadleigh has curiosity, then she either assesses situations or solves problems, but not both.\nconclusion: Hadleigh assesses situations.\n\nfact1: Hadleigh assesses situations.\nfact2: Hadleigh evaluates outcomes.\nrule: If someone assesses situations and evaluates outcomes, then they can take calculated risks.\nconclusion: Hadleigh takes calculated risks.\n\nfact1: Hadleigh takes calculated risks.\nfact2: Hadleigh does not question conventional wisdom.\nrule: If Hadleigh either takes calculated risks or questions conventional wisdom (but not both), then she thinks outside the box.\nconclusion: Hadleigh thinks outside the box.\n\nfact1: Hadleigh pursues her passion.\nfact2: Hadleigh thinks outside the box.\nrule: If someone pursues their passion, then they face challenges and think outside the box.\nconclusion: Hadleigh faces challenges.\n\nfact1: Hadleigh faces challenges.\nfact2: Hadleigh stays motivated.\nrule: If Hadleigh faces challenges, then she is either persistent or stays motivated, but not both.\nconclusion: Hadleigh does not have persistence.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Hadleigh will succeed in research. The correct option is: C.",
    "context": "Hadleigh evaluates outcomes. For anyone who appreciates botany and enjoys care giving, they can study horticultural therapy. Hadleigh has curiosity. If someone pursues their passion, then they face challenges and think outside the box. Hadleigh pursues her passion. If someone assesses situations and evaluates outcomes, then they can take calculated risks. If Hadleigh either sets high goals or overcomes obstacles (but not both), then she faces challenges. If Jayla either takes calculated risks or questions conventional wisdom (but not both), then she thinks outside the box. Jayla pursues her passion. If Jayla faces challenges, then she is either persistent or stays motivated, but not both. Anyone who explores new ideas and seeks innovative solutions is thinking outside the box. If Hadleigh has curiosity, then she either assesses situations or solves problems, but not both. Hadleigh does not question conventional wisdom. If Hadleigh either takes calculated risks or questions conventional wisdom (but not both), then she thinks outside the box. Hadleigh stays motivated. Issac evaluates outcomes. If Jayla studies horticultural therapy and has persistence, then she will succeed in research. Hadleigh does not solve problems. If Hadleigh faces challenges, then she is either persistent or stays motivated, but not both. If Hadleigh has experience, then she assesses situations and collaborates with others.",
    "nl2fol": {
      "Hadleigh evaluates outcomes.": "evaluate_outcomes(Hadleigh)",
      "For anyone who appreciates botany and enjoys care giving, they can study horticultural therapy.": "∀x ((appreciate_botany(x) ∧ enjoy_care_giving(x)) → study_horticultural_therapy(x))",
      "Hadleigh has curiosity.": "has_curiosity(Hadleigh)",
      "If someone pursues their passion, then they face challenges and think outside the box.": "∀x (pursue_passion(x) → (face_challenges(x) ∧ think_outside_box(x)))",
      "Hadleigh pursues her passion.": "pursue_passion(Hadleigh)",
      "If someone assesses situations and evaluates outcomes, then they can take calculated risks.": "∀x ((assess_situations(x) ∧ evaluate_outcomes(x)) → take_calculated_risks(x))",
      "If Hadleigh either sets high goals or overcomes obstacles (but not both), then she faces challenges.": "(set_high_goals(Hadleigh) ⊕ overcome_obstacles(Hadleigh)) → face_challenges(Hadleigh)",
      "If Jayla either takes calculated risks or questions conventional wisdom (but not both), then she thinks outside the box.": "(take_calculated_risks(Jayla) ⊕ question_conventional_wisdom(Jayla)) → think_outside_box(Jayla)",
      "Jayla pursues her passion.": "pursues_passion(Jayla)",
      "If Jayla faces challenges, then she is either persistent or stays motivated, but not both.": "face_challenges(Jayla) → (have_persistence(Jayla) ⊕ stay_motivated(Jayla))",
      "Anyone who explores new ideas and seeks innovative solutions is thinking outside the box.": "∀x ((explores_new_ideas(x) ∧ seeks_innovative_solutions(x)) → think_outside_box(x))",
      "If Hadleigh has curiosity, then she either assesses situations or solves problems, but not both.": "has_curiosity(Hadleigh) → (assess_situations(Hadleigh) ⊕ solve_problems(Hadleigh))",
      "Hadleigh does not question conventional wisdom.": "¬question_conventional_wisdom(Hadleigh)",
      "If Hadleigh either takes calculated risks or questions conventional wisdom (but not both), then she thinks outside the box.": "(take_calculated_risks(Hadleigh) ⊕ question_conventional_wisdom(Hadleigh)) → think_outside_box(Hadleigh)",
      "Hadleigh stays motivated.": "stay_motivated(Hadleigh)",
      "Issac evaluates outcomes.": "evaluate_outcomes(Issac)",
      "If Jayla studies horticultural therapy and has persistence, then she will succeed in research.": "(study_horticultural_therapy(Jayla) ∧ have_persistence(Jayla)) → succeed_in_research(Jayla)",
      "Hadleigh does not solve problems.": "¬solve_problems(Hadleigh)",
      "If Hadleigh faces challenges, then she is either persistent or stays motivated, but not both.": "face_challenges(Hadleigh) → (have_persistence(Hadleigh) ⊕ stay_motivated(Hadleigh))",
      "If Hadleigh has experience, then she assesses situations and collaborates with others.": "has_experience(Hadleigh) → (assess_situations(Hadleigh) ∧ collaborate_others(Hadleigh))"
    },
    "conclusion_fol": "succeed_in_research(Hadleigh)"
  },
  {
    "id": 282,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Damon is an established professional.",
    "reasoning": "fact1: Damon does not make a lasting impact.\nfact2: Damon does not inspire others.\nrule: Anyone who has original ideas either makes a lasting impact or inspires others (or both).\nconclusion: Damon does not have original ideas.\n\nfact1: Damon does not overcome obstacles.\nfact2: Damon does not become successful.\nrule: If Damon either overcomes obstacles or faces strong competition (but not both), then he becomes successful.\nconclusion: Damon does not face strong competition.\n\nfact1: Damon does not face strong competition.\nrule: For Damon, being a rising star and facing strong competition are mutually exclusive.\nconclusion: Damon is a rising star.\n\nfact1: Damon is not creative.\nrule: All gifted individuals are creative and value innovation.\nconclusion: Damon is not a gifted individual.\n\nfact1: Damon is a rising star.\nfact2: Damon is not a gifted individual.\nrule: If Damon is either an emerging talent or a rising star (but not both), then he is a gifted individual.\nconclusion: Damon is an emerging talent.\n\nfact1: Damon is an emerging talent.\nrule: Damon is either an established professional or an emerging talent, but not both.\nconclusion: Damon is an established professional.\n\nTherefore, it is false that Damon is an established professional. The correct option is: B.",
    "context": "Roger is either an established professional or an emerging talent, but not both. Anyone who has original ideas either makes a lasting impact or inspires others (or both). Damon does not become successful. Everyone who wins awards either gains recognition or is a rising star (or both). Damon is not creative. Roger does not inspire others. For Warren, being a rising star and facing strong competition are mutually exclusive. If Damon either overcomes obstacles or faces strong competition (but not both), then he becomes successful. If Damon is experienced, then he is either visionary or has original ideas, but not both. All gifted individuals are creative and value innovation. If Damon demonstrates skill, then he either receives recognition or is an emerging talent (or both). If Damon is either an emerging talent or a rising star (but not both), then he is a gifted individual. Damon does not make a lasting impact. Fiona does not make a lasting impact. If someone enters an industry and strives for recognition, then they face strong competition. Damon does not overcome obstacles. Damon is either an established professional or an emerging talent, but not both. Roger does not overcome obstacles. Anyone who possesses skill and demonstrates passion can be a gifted individual. For Damon, being a rising star and facing strong competition are mutually exclusive. If Warren is either an emerging talent or a rising star (but not both), then he is a gifted individual. Damon does not inspire others.",
    "nl2fol": {
      "Roger is either an established professional or an emerging talent, but not both.": "established_professional(Roger) ⊕ emerging_talent(Roger)",
      "Anyone who has original ideas either makes a lasting impact or inspires others (or both).": "∀x (has_original_ideas(x) → (makes_lasting_impact(x) ∨ inspires_others(x)))",
      "Damon does not become successful.": "¬becomes_successful(Damon)",
      "Everyone who wins awards either gains recognition or is a rising star (or both).": "∀x (wins_awards(x) → (gains_recognition(x) ∨ rising_star(x)))",
      "Damon is not creative.": "¬has_creativity(Damon)",
      "Roger does not inspire others.": "¬inspires_others(Roger)",
      "For Warren, being a rising star and facing strong competition are mutually exclusive.": "rising_star(Warren) ⊕ faces_strong_competition(Warren)",
      "If Damon either overcomes obstacles or faces strong competition (but not both), then he becomes successful.": "(overcomes_obstacles(Damon) ⊕ faces_strong_competition(Damon)) → becomes_successful(Damon)",
      "If Damon is experienced, then he is either visionary or has original ideas, but not both.": "is_experienced(Damon) → (has_original_ideas(Damon) ⊕ is_visionary(Damon))",
      "All gifted individuals are creative and value innovation.": "∀x (gifted_individual(x) → (has_creativity(x) ∧ values_innovation(x)))",
      "If Damon demonstrates skill, then he either receives recognition or is an emerging talent (or both).": "demonstrates_skill(Damon) → (receives_recognition(Damon) ∨ emerging_talent(Damon))",
      "If Damon is either an emerging talent or a rising star (but not both), then he is a gifted individual.": "(emerging_talent(Damon) ⊕ rising_star(Damon)) → gifted_individual(Damon)",
      "Damon does not make a lasting impact.": "¬makes_lasting_impact(Damon)",
      "Fiona does not make a lasting impact.": "¬makes_lasting_impact(Fiona)",
      "If someone enters an industry and strives for recognition, then they face strong competition.": "∀x ((enters_industry(x) ∧ strives_for_recognition(x)) → faces_strong_competition(x))",
      "Damon does not overcome obstacles.": "¬overcomes_obstacles(Damon)",
      "Damon is either an established professional or an emerging talent, but not both.": "established_professional(Damon) ⊕ emerging_talent(Damon)",
      "Roger does not overcome obstacles.": "¬overcomes_obstacles(Roger)",
      "Anyone who possesses skill and demonstrates passion can be a gifted individual.": "∀x ((possesses_skill(x) ∧ demonstrates_passion(x)) → gifted_individual(x))",
      "For Damon, being a rising star and facing strong competition are mutually exclusive.": "rising_star(Damon) ⊕ faces_strong_competition(Damon)",
      "If Warren is either an emerging talent or a rising star (but not both), then he is a gifted individual.": "(emerging_talent(Warren) ⊕ rising_star(Warren)) → gifted_individual(Warren)",
      "Damon does not inspire others.": "¬inspires_others(Damon)"
    },
    "conclusion_fol": "established_professional(Damon)"
  },
  {
    "id": 283,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Crew does not establish a sanctuary.",
    "reasoning": "fact1: Crew does not know biology.\nrule: Crew knows biology or understands ecology.\nconclusion: Crew understands ecology.\n\nfact1: Crew values wildlife.\nfact2: Crew helps endangered species.\nrule: For all humans, if they value wildlife and help endangered species, then they care for animals.\nconclusion: Crew cares for animals.\n\nfact1: Crew cares for animals.\nfact2: Crew understands ecology.\nrule: If someone cares for animals and understands ecology, then they can advocate for conservation.\nconclusion: Crew advocates for the conservation of axolotls.\n\nfact1: Crew does not have a passion for nature.\nrule: Crew has a passion for nature or loves aquatic life.\nconclusion: Crew loves aquatic life.\n\nfact1: Crew loves aquatic life.\nrule: If Crew loves aquatic life, then he will study axolotls.\nconclusion: Crew studies axolotls.\n\nfact1: Crew studies axolotls.\nfact2: Crew advocates for the conservation of axolotls.\nrule: If Crew studies axolotls, then he either establishes a sanctuary or advocates for their conservation, but not both.\nconclusion: Crew does not establish a sanctuary.\n\nTherefore, it is true that Crew does not establish a sanctuary. The correct option is: A.",
    "context": "Crew does not know biology. If Crew either rescues amphibians or researches marine life (but not both), then he studies axolotls. If Crew loves aquatic life, then he will study axolotls. Crew does not have a passion for nature. If someone cares for animals and understands ecology, then they can advocate for conservation. Anyone who enjoys scuba diving and appreciates marine life will love aquatic life. For all humans, if they value wildlife and help endangered species, then they care for animals. Crew helps endangered species. If Crew studies axolotls, then he either establishes a sanctuary or advocates for their conservation, but not both. Crew knows biology or understands ecology. Crew values wildlife. Crew has a passion for nature or loves aquatic life.",
    "nl2fol": {
      "Crew does not know biology.": "¬knows_biology(Crew)",
      "If Crew either rescues amphibians or researches marine life (but not both), then he studies axolotls.": "(rescue_amphibians(Crew) ⊕ research_marine_life(Crew)) → study_axolotls(Crew)",
      "If Crew loves aquatic life, then he will study axolotls.": "love_aquatic_life(Crew) → study_axolotls(Crew)",
      "Crew does not have a passion for nature.": "¬has_passion_nature(Crew)",
      "If someone cares for animals and understands ecology, then they can advocate for conservation.": "∀x ((cares_for_animals(x) ∧ understands_ecology(x)) → advocate_for_conservation(x))",
      "Anyone who enjoys scuba diving and appreciates marine life will love aquatic life.": "∀x ((enjoys_scuba_diving(x) ∧ appreciates_marine_life(x)) → love_aquatic_life(x))",
      "For all humans, if they value wildlife and help endangered species, then they care for animals.": "∀x ((values_wildlife(x) ∧ helps_endangered_species(x)) → cares_for_animals(x))",
      "Crew helps endangered species.": "helps_endangered_species(Crew)",
      "If Crew studies axolotls, then he either establishes a sanctuary or advocates for their conservation, but not both.": "study_axolotls(Crew) → (establish_sanctuary(Crew) ⊕ advocate_for_conservation(Crew))",
      "Crew knows biology or understands ecology.": "knows_biology(Crew) ∨ understands_ecology(Crew)",
      "Crew values wildlife.": "values_wildlife(Crew)",
      "Crew has a passion for nature or loves aquatic life.": "has_passion_nature(Crew) ∨ love_aquatic_life(Crew)"
    },
    "conclusion_fol": "¬establish_sanctuary(Crew)"
  },
  {
    "id": 284,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Muffin regains her health.",
    "reasoning": "fact1: Muffin does not seem playful.\nfact2: Muffin does not have a shiny coat.\nrule: If Muffin looks vibrant or seems playful, then she has a shiny coat.\nconclusion: Muffin does not look vibrant.\n\nfact1: Muffin stays hydrated.\nfact2: Muffin does not feel healthy.\nrule: For all cats, if they stay hydrated and groom themselves, then they feel healthy.\nconclusion: Muffin does not groom herself.\n\nfact1: Muffin does not groom herself.\nfact2: Muffin does not look vibrant.\nrule: If Muffin either grooms herself or improves her appearance (but not both), then she looks vibrant.\nconclusion: Muffin does not improve her appearance.\n\nfact1: Muffin reduces her appetite.\nfact2: Muffin does not improve her appearance.\nrule: If Muffin either loses weight or reduces her appetite (but not both), then she improves her appearance.\nconclusion: Muffin loses weight.\n\nfact1: Muffin loses weight.\nfact2: Muffin does not increase her energy.\nrule: If Muffin loses weight, then she either increases her energy or gets regular exercise (or both).\nconclusion: Muffin gets regular exercise.\n\nfact1: Muffin follows a strict diet.\nfact2: Muffin gets regular exercise.\nrule: For all cats, if a cat follows a strict diet and gets regular exercise, then it will regain its health.\nconclusion: Muffin regains her health.\n\nTherefore, it is true that Muffin regains her health. The correct option is: A.",
    "context": "Byron does not have a shiny coat. If Muffin either loses weight or reduces her appetite (but not both), then she improves her appearance. If Muffin looks vibrant or seems playful, then she has a shiny coat. If Muffin either grooms herself or improves her appearance (but not both), then she looks vibrant. For all cats, if they stay hydrated and groom themselves, then they feel healthy. Any cat that plays outside or chases toys will get regular exercise. Holland follows a strict diet. Byron reduces her appetite. Muffin follows a strict diet. If Holland either loses weight or reduces her appetite (but not both), then she improves her appearance. Muffin reduces her appetite. If Byron looks vibrant or seems playful, then she has a shiny coat. For all cats, if a cat follows a strict diet and gets regular exercise, then it will regain its health. If Muffin either sheds her fur or brightens her eyes (but not both), then she improves her appearance. Muffin does not increase her energy. Muffin stays hydrated. Muffin does not have a shiny coat. If Muffin loses weight, then she either increases her energy or gets regular exercise (or both). Byron does not feel healthy. Every cat that stays active either looks vibrant or has good posture (or both). Muffin does not seem playful. Muffin does not feel healthy.",
    "nl2fol": {
      "Byron does not have a shiny coat.": "¬have_shiny_coat(Byron)",
      "If Muffin either loses weight or reduces her appetite (but not both), then she improves her appearance.": "(lose_weight(Muffin) ⊕ reduce_appetite(Muffin)) → improve_appearance(Muffin)",
      "If Muffin looks vibrant or seems playful, then she has a shiny coat.": "(look_vibrant(Muffin) ∨ seem_playful(Muffin)) → have_shiny_coat(Muffin)",
      "If Muffin either grooms herself or improves her appearance (but not both), then she looks vibrant.": "(groom_themselves(Muffin) ⊕ improve_appearance(Muffin)) → look_vibrant(Muffin)",
      "For all cats, if they stay hydrated and groom themselves, then they feel healthy.": "∀x ((stay_hydrated(x) ∧ groom_themselves(x)) → feel_healthy(x))",
      "Any cat that plays outside or chases toys will get regular exercise.": "∀x ((play_outside(x) ∨ chase_toys(x)) → get_regular_exercise(x))",
      "Holland follows a strict diet.": "follow_a_strict_diet(Holland)",
      "Byron reduces her appetite.": "reduce_appetite(Byron)",
      "Muffin follows a strict diet.": "follow_a_strict_diet(Muffin)",
      "If Holland either loses weight or reduces her appetite (but not both), then she improves her appearance.": "(lose_weight(Holland) ⊕ reduce_appetite(Holland)) → improve_appearance(Holland)",
      "Muffin reduces her appetite.": "reduce_appetite(Muffin)",
      "If Byron looks vibrant or seems playful, then she has a shiny coat.": "(look_vibrant(Byron) ∨ seem_playful(Byron)) → have_shiny_coat(Byron)",
      "For all cats, if a cat follows a strict diet and gets regular exercise, then it will regain its health.": "∀x ((follow_a_strict_diet(x) ∧ get_regular_exercise(x)) → regain_health(x))",
      "If Muffin either sheds her fur or brightens her eyes (but not both), then she improves her appearance.": "(shed_fur(Muffin) ⊕ brighten_eyes(Muffin)) → improve_appearance(Muffin)",
      "Muffin does not increase her energy.": "¬increase_energy(Muffin)",
      "Muffin stays hydrated.": "stay_hydrated(Muffin)",
      "Muffin does not have a shiny coat.": "¬have_shiny_coat(Muffin)",
      "If Muffin loses weight, then she either increases her energy or gets regular exercise (or both).": "lose_weight(Muffin) → (increase_energy(Muffin) ∨ get_regular_exercise(Muffin))",
      "Byron does not feel healthy.": "¬feel_healthy(Byron)",
      "Every cat that stays active either looks vibrant or has good posture (or both).": "∀x (stay_active(x) → (look_vibrant(x) ∨ have_good_posture(x)))",
      "Muffin does not seem playful.": "¬seem_playful(Muffin)",
      "Muffin does not feel healthy.": "¬feel_healthy(Muffin)"
    },
    "conclusion_fol": "regain_health(Muffin)"
  },
  {
    "id": 285,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elian has exquisite taste.",
    "reasoning": "fact1: Elian admires refinement.\nfact2: Elian enjoys beautiful things.\nrule: Anyone who admires refinement and enjoys beautiful things appreciates elegance.\nconclusion: Elian appreciates elegance.\n\nfact1: Elian respects classics.\nrule: Elian either respects classics or stays updated on the latest fashion, but not both.\nconclusion: Elian does not stay updated on the latest fashion.\n\nfact1: Elian does not stay updated on the latest fashion.\nfact2: Elian attends design events.\nrule: If Elian either stays updated on the latest fashion or attends design events (but not both), then he follows current trends.\nconclusion: Elian follows current trends.\n\nfact1: Elian appreciates elegance.\nrule: If someone appreciates elegance, then they value attention to detail and have artistic flair.\nconclusion: Elian has artistic flair.\n\nfact1: Elian follows current trends.\nrule: Elian either follows current trends or creates beautiful spaces, but not necessarily both.\nconclusion: Elian does not create beautiful spaces.\n\nfact1: Elian has artistic flair.\nfact2: Elian is not a skilled craftsman.\nrule: If Elian has artistic flair, then he is either a skilled craftsman or an interior designer (but not both).\nconclusion: Elian is an interior designer.\n\nfact1: Elian is an interior designer.\nfact2: Elian does not create beautiful spaces.\nrule: For all humans, if someone is an interior designer, then they either create beautiful spaces or have exquisite taste (or both).\nconclusion: Elian has exquisite taste.\n\nTherefore, it is true that Elian has exquisite taste. The correct option is: A.",
    "context": "If someone appreciates elegance, then they value attention to detail and have artistic flair. Elian is not a skilled craftsman. Elian either follows current trends or creates beautiful spaces, but not necessarily both. If Elian loves decorating or understands drapery, then he can be an interior designer. Elian respects classics. Elian enjoys beautiful things. Elian admires refinement. If Elian has artistic flair, then he is either a skilled craftsman or an interior designer (but not both). Elian attends design events. If Elian either stays updated on the latest fashion or attends design events (but not both), then he follows current trends. Marcel either respects classics or stays updated on the latest fashion, but not both. Marcel attends design events. If someone either collects vintage items or adorns spaces luxuriously (but not both), then they appreciate elegance. Marcel is not a skilled craftsman. For all humans, if someone is an interior designer, then they either create beautiful spaces or have exquisite taste (or both). Anyone who admires refinement and enjoys beautiful things appreciates elegance. Elian either respects classics or stays updated on the latest fashion, but not both.",
    "nl2fol": {
      "If someone appreciates elegance, then they value attention to detail and have artistic flair.": "∀x (appreciate_elegance(x) → (value_attention_to_detail(x) ∧ has_artistic_flair(x)))",
      "Elian is not a skilled craftsman.": "¬is_skilled_craftsman(Elian)",
      "Elian either follows current trends or creates beautiful spaces, but not necessarily both.": "follows_current_trends(Elian) ⊕ create_beautiful_spaces(Elian)",
      "If Elian loves decorating or understands drapery, then he can be an interior designer.": "(love_decorating(Elian) ∨ understand_drapery(Elian)) → interior_designer(Elian)",
      "Elian respects classics.": "respects_classics(Elian)",
      "Elian enjoys beautiful things.": "enjoys_beautiful_things(Elian)",
      "Elian admires refinement.": "admires_refinement(Elian)",
      "If Elian has artistic flair, then he is either a skilled craftsman or an interior designer (but not both).": "has_artistic_flair(Elian) → (is_skilled_craftsman(Elian) ⊕ interior_designer(Elian))",
      "Elian attends design events.": "attends_design_events(Elian)",
      "If Elian either stays updated on the latest fashion or attends design events (but not both), then he follows current trends.": "(stays_updated_fashion(Elian) ⊕ attends_design_events(Elian)) → follows_current_trends(Elian)",
      "Marcel either respects classics or stays updated on the latest fashion, but not both.": "respects_classics(Marcel) ⊕ stays_updated_fashion(Marcel)",
      "Marcel attends design events.": "attends_design_events(Marcel)",
      "If someone either collects vintage items or adorns spaces luxuriously (but not both), then they appreciate elegance.": "∀x ((collects_vintage_items(x) ⊕ adorn_spaces_luxuriously(x)) → appreciate_elegance(x))",
      "Marcel is not a skilled craftsman.": "¬is_skilled_craftsman(Marcel)",
      "For all humans, if someone is an interior designer, then they either create beautiful spaces or have exquisite taste (or both).": "∀x (interior_designer(x) → (create_beautiful_spaces(x) ∨ have_exquisite_taste(x)))",
      "Anyone who admires refinement and enjoys beautiful things appreciates elegance.": "∀x ((admires_refinement(x) ∧ enjoys_beautiful_things(x)) → appreciate_elegance(x))",
      "Elian either respects classics or stays updated on the latest fashion, but not both.": "respects_classics(Elian) ⊕ stays_updated_fashion(Elian)"
    },
    "conclusion_fol": "have_exquisite_taste(Elian)"
  },
  {
    "id": 286,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Juliana learns traditional weaving.",
    "reasoning": "fact1: Juliana embraces change.\nrule: Juliana either pursues excellence or embraces change, but not both.\nconclusion: Juliana does not pursue excellence.\n\nfact1: Juliana does not pursue excellence.\nrule: Juliana values quality or pursues excellence.\nconclusion: Juliana values quality.\n\nfact1: Juliana values quality.\nrule: If Juliana values quality, then she is an artisan and has attention to detail.\nconclusion: Juliana is an artisan.\n\nfact1: Juliana is an artisan.\nfact2: Juliana supports local communities.\nrule: If Juliana is an artisan, then she either preserves cultural heritage or supports local communities, but not both.\nconclusion: Juliana does not preserve cultural heritage.\n\nfact1: Juliana does not preserve cultural heritage.\nrule: Juliana either preserves cultural heritage or creates unique textiles, but not both.\nconclusion: Juliana can create unique textiles.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Juliana learns traditional weaving. The correct option is: C.",
    "context": "Juliana values quality or pursues excellence. Mathew either pursues excellence or embraces change, but not both. If Mathew values quality, then she is an artisan and has attention to detail. If Lovie is an artisan, then she either preserves cultural heritage or supports local communities, but not both. If someone makes handmade goods, they are an artisan. If Juliana is an artisan, then she either preserves cultural heritage or supports local communities, but not both. Mathew supports local communities. Lovie either preserves cultural heritage or creates unique textiles, but not both. Juliana either pursues excellence or embraces change, but not both. If Juliana runs her own business, then she either strives for perfection or values quality, but not both. If someone focuses on details and strives for perfection, then they have attention to detail. Lovie takes pride in her work. Juliana embraces change. Juliana supports local communities. Hassan experiments with modern designs. Juliana either preserves cultural heritage or creates unique textiles, but not both. If Juliana values quality, then she is an artisan and has attention to detail. Hassan values quality or pursues excellence.",
    "nl2fol": {
      "Juliana values quality or pursues excellence.": "values_quality(Juliana) ∨ pursues_excellence(Juliana)",
      "Mathew either pursues excellence or embraces change, but not both.": "embraces_change(Mathew) ⊕ pursues_excellence(Mathew)",
      "If Mathew values quality, then she is an artisan and has attention to detail.": "values_quality(Mathew) → (is_artisan(Mathew) ∧ has_attention_to_detail(Mathew))",
      "If Lovie is an artisan, then she either preserves cultural heritage or supports local communities, but not both.": "is_artisan(Lovie) → (preserves_cultural_heritage(Lovie) ⊕ supports_local_community(Lovie))",
      "If someone makes handmade goods, they are an artisan.": "∀x (makes_handmade_goods(x) → is_artisan(x))",
      "If Juliana is an artisan, then she either preserves cultural heritage or supports local communities, but not both.": "is_artisan(Juliana) → (preserves_cultural_heritage(Juliana) ⊕ supports_local_community(Juliana))",
      "Mathew supports local communities.": "supports_local_communities(Mathew)",
      "Lovie either preserves cultural heritage or creates unique textiles, but not both.": "preserves_cultural_heritage(Lovie) ⊕ create_unique_textiles(Lovie)",
      "Juliana either pursues excellence or embraces change, but not both.": "embraces_change(Juliana) ⊕ pursues_excellence(Juliana)",
      "If Juliana runs her own business, then she either strives for perfection or values quality, but not both.": "runs_own_business(Juliana) → (strives_for_perfection(Juliana) ⊕ values_quality(Juliana))",
      "If someone focuses on details and strives for perfection, then they have attention to detail.": "∀x ((focuses_on_details(x) ∧ strives_for_perfection(x)) → has_attention_to_detail(x))",
      "Lovie takes pride in her work.": "takes_pride_in_work(Lovie)",
      "Juliana embraces change.": "embraces_change(Juliana)",
      "Juliana supports local communities.": "supports_local_community(Juliana)",
      "Hassan experiments with modern designs.": "experiment_with_modern_designs(Hassan)",
      "Juliana either preserves cultural heritage or creates unique textiles, but not both.": "preserves_cultural_heritage(Juliana) ⊕ create_unique_textiles(Juliana)",
      "If Juliana values quality, then she is an artisan and has attention to detail.": "values_quality(Juliana) → (is_artisan(Juliana) ∧ has_attention_to_detail(Juliana))",
      "Hassan values quality or pursues excellence.": "values_quality(Hassan) ∨ pursues_excellence(Hassan)"
    },
    "conclusion_fol": "learn_traditional_weaving(Juliana)"
  },
  {
    "id": 287,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Noel is adventurous.",
    "reasoning": "fact1: Noel does not read avidly.\nfact2: Noel analyzes data.\nrule: If Noel either reads avidly or analyzes data (but not both), then she is a fast learner.\nconclusion: Noel is a fast learner.\n\nfact1: Noel is a fast learner.\nfact2: Noel does not retain information.\nrule: Everyone who is a fast learner either has a good memory or retains information (or both).\nconclusion: Noel has a good memory.\n\nfact1: Noel is a polyglot.\nfact2: Noel has a good memory.\nrule: If Noel is a polyglot, then she either has a good memory or speaks multiple languages, but not both.\nconclusion: Noel does not speak multiple languages.\n\nfact1: Noel does not speak multiple languages.\nrule: Noel either speaks multiple languages or communicates effectively, but not both.\nconclusion: Noel communicates effectively.\n\nfact1: Noel communicates effectively.\nrule: Noel either communicates effectively or is intelligent, but not both.\nconclusion: Noel is not intelligent.\n\nfact1: Noel is not intelligent.\nrule: Noel is intelligent or adventurous.\nconclusion: Noel is adventurous.\n\nTherefore, it is true that Noel is adventurous. The correct option is: A.",
    "context": "If Andi either reads avidly or analyzes data (but not both), then she is a fast learner. Noel is intelligent or adventurous. Noel does not retain information. If Noel either reads avidly or analyzes data (but not both), then she is a fast learner. Noel is a polyglot. If someone significantly contributes to their field, then they are intelligent. Cielo does not read avidly. Everyone who is a fast learner either has a good memory or retains information (or both). If Noel is a polyglot, then she either has a good memory or speaks multiple languages, but not both. Noel either communicates effectively or is intelligent, but not both. Noel does not read avidly. If Noel conducts research, then she either uncovers secrets or has a good memory (or both). Cielo does not retain information. Evander is intelligent or adventurous. Noel either speaks multiple languages or communicates effectively, but not both. Noel analyzes data.",
    "nl2fol": {
      "If Andi either reads avidly or analyzes data (but not both), then she is a fast learner.": "(reads_avidly(Andi) ⊕ analyzes_data(Andi)) → fast_learner(Andi)",
      "Noel is intelligent or adventurous.": "intelligent(Noel) ∨ adventurous(Noel)",
      "Noel does not retain information.": "¬retains_information(Noel)",
      "If Noel either reads avidly or analyzes data (but not both), then she is a fast learner.": "(reads_avidly(Noel) ⊕ analyzes_data(Noel)) → fast_learner(Noel)",
      "Noel is a polyglot.": "is_polyglot(Noel)",
      "If someone significantly contributes to their field, then they are intelligent.": "∀x (contributes_to_field(x) → intelligent(x))",
      "Cielo does not read avidly.": "¬reads_avidly(Cielo)",
      "Everyone who is a fast learner either has a good memory or retains information (or both).": "∀x (fast_learner(x) → (has_good_memory(x) ∨ retains_information(x)))",
      "If Noel is a polyglot, then she either has a good memory or speaks multiple languages, but not both.": "is_polyglot(Noel) → (has_good_memory(Noel) ⊕ speaks_multiple_languages(Noel))",
      "Noel either communicates effectively or is intelligent, but not both.": "communicates_effectively(Noel) ⊕ intelligent(Noel)",
      "Noel does not read avidly.": "¬reads_avidly(Noel)",
      "If Noel conducts research, then she either uncovers secrets or has a good memory (or both).": "conducts_research(Noel) → (uncover_secrets(Noel) ∨ has_good_memory(Noel))",
      "Cielo does not retain information.": "¬retains_information(Cielo)",
      "Evander is intelligent or adventurous.": "intelligent(Evander) ∨ adventurous(Evander)",
      "Noel either speaks multiple languages or communicates effectively, but not both.": "speaks_multiple_languages(Noel) ⊕ communicates_effectively(Noel)",
      "Noel analyzes data.": "analyzes_data(Noel)"
    },
    "conclusion_fol": "adventurous(Noel)"
  },
  {
    "id": 288,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jasper has sailing experience and masters navigation skills.",
    "reasoning": "fact1: Jasper understands currents.\nfact2: Jasper does not plot his course.\nrule: Everyone who understands currents either plots their course or anticipates winds (or both).\nconclusion: Jasper anticipates winds.\n\nfact1: Jasper does not study tides.\nfact2: Jasper anticipates winds.\nrule: Everyone who either studies tides or anticipates winds (but not both) respects the ocean.\nconclusion: Jasper respects the ocean.\n\nfact1: Jasper respects the ocean.\nrule: If Jasper respects the ocean, then he wins sailing competitions and has strong determination.\nconclusion: Jasper can win sailing competitions.\n\nfact1: Jasper does not read sea conditions.\nfact2: Jasper is not a successful sailor.\nrule: If Jasper either knows weather patterns or reads sea conditions (but not both), then he is a successful sailor.\nconclusion: Jasper does not know weather patterns.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Jasper has sailing experience and masters navigation skills. The correct option is: C.",
    "context": "Jasper is not a successful sailor. If Quincy respects the ocean, then he wins sailing competitions and has strong determination. Everyone who either studies tides or anticipates winds (but not both) respects the ocean. If Jasper respects the ocean, then he wins sailing competitions and has strong determination. If Jasper either sets priorities or overcomes obstacles (but not both), then he has strong determination. Quincy does not set goals. Paula does not read sea conditions. If Elodie knows weather patterns or masters navigation skills, then he can win sailing competitions. Jasper does not read sea conditions. Everyone who understands currents either plots their course or anticipates winds (or both). Paula understands currents. Elodie is not a successful sailor. Jasper does not plot his course. Jasper does not study tides. If Jasper studies charts, then he masters navigation skills. If Quincy either knows weather patterns or reads sea conditions (but not both), then he is a successful sailor. Jasper understands currents. All confident individuals who can win competitions also stay focused. If Jasper either knows weather patterns or reads sea conditions (but not both), then he is a successful sailor. Paula does not love challenges. Elodie does not study tides.",
    "nl2fol": {
      "Jasper is not a successful sailor.": "¬is_successful_sailor(Jasper)",
      "If Quincy respects the ocean, then he wins sailing competitions and has strong determination.": "respects_ocean(Quincy) → (wins_competitions(Quincy) ∧ has_strong_determination(Quincy))",
      "Everyone who either studies tides or anticipates winds (but not both) respects the ocean.": "∀x ((studies_tides(x) ⊕ anticipates_winds(x)) → respects_ocean(x))",
      "If Jasper respects the ocean, then he wins sailing competitions and has strong determination.": "respects_ocean(Jasper) → (wins_competitions(Jasper) ∧ has_strong_determination(Jasper))",
      "If Jasper either sets priorities or overcomes obstacles (but not both), then he has strong determination.": "(sets_priorities(Jasper) ⊕ overcomes_obstacles(Jasper)) → has_strong_determination(Jasper)",
      "Quincy does not set goals.": "¬set_goals(Quincy)",
      "Paula does not read sea conditions.": "¬reads_sea_conditions(Paula)",
      "If Elodie knows weather patterns or masters navigation skills, then he can win sailing competitions.": "(knows_weather_patterns(Elodie) ∨ masters_navigation_skills(Elodie)) → wins_competitions(Elodie)",
      "Jasper does not read sea conditions.": "¬reads_sea_conditions(Jasper)",
      "Everyone who understands currents either plots their course or anticipates winds (or both).": "∀x (understands_currents(x) → (plots_course(x) ∨ anticipates_winds(x)))",
      "Paula understands currents.": "understands_currents(Paula)",
      "Elodie is not a successful sailor.": "¬is_successful_sailor(Elodie)",
      "Jasper does not plot his course.": "¬plots_course(Jasper)",
      "Jasper does not study tides.": "¬studies_tides(Jasper)",
      "If Jasper studies charts, then he masters navigation skills.": "studies_charts(Jasper) → masters_navigation_skills(Jasper)",
      "If Quincy either knows weather patterns or reads sea conditions (but not both), then he is a successful sailor.": "(knows_weather_patterns(Quincy) ⊕ reads_sea_conditions(Quincy)) → is_successful_sailor(Quincy)",
      "Jasper understands currents.": "understands_currents(Jasper)",
      "All confident individuals who can win competitions also stay focused.": "∀x (is_confident(x) → (wins_competitions(x) ∧ stays_focused(x)))",
      "If Jasper either knows weather patterns or reads sea conditions (but not both), then he is a successful sailor.": "(knows_weather_patterns(Jasper) ⊕ reads_sea_conditions(Jasper)) → is_successful_sailor(Jasper)",
      "Paula does not love challenges.": "¬loves_challenges(Paula)",
      "Elodie does not study tides.": "¬studies_tides(Elodie)"
    },
    "conclusion_fol": "has_sailing_experience(Jasper) ∧ masters_navigation_skills(Jasper)"
  },
  {
    "id": 289,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cynthia protects her interests.",
    "reasoning": "fact1: Cynthia is influential.\nfact2: Cynthia builds trust.\nrule: If Cynthia is influential, then she either builds trust or commands attention (but not both).\nconclusion: Cynthia does not command attention.\n\nfact1: Cynthia has vision.\nfact2: Cynthia does not drive innovation.\nrule: Anyone who holds leadership positions and has vision can drive innovation.\nconclusion: Cynthia does not hold leadership positions.\n\nfact1: Cynthia does not command attention.\nfact2: Cynthia does not hold leadership positions.\nrule: If Cynthia either earns respect or commands attention (but not both), then she holds leadership positions.\nconclusion: Cynthia does not earn respect.\n\nfact1: Cynthia does not achieve success.\nfact2: Cynthia does not earn respect.\nrule: Everyone who works hard either achieves success or earns respect (or both).\nconclusion: Cynthia does not work hard.\n\nfact1: Cynthia has authority.\nfact2: Cynthia trusts her instinct.\nrule: If Cynthia has authority, then she either thinks carefully or trusts her instinct, but not both.\nconclusion: Cynthia does not think carefully.\n\nfact1: Cynthia does not work hard.\nrule: Cynthia either works hard or is a manager.\nconclusion: Cynthia is a manager.\n\nfact1: Cynthia is a manager.\nfact2: Cynthia does not think carefully.\nrule: If Cynthia is a manager, then she either acts on impulse or thinks carefully, but not both.\nconclusion: Cynthia acts on impulse.\n\nfact1: Cynthia acts on impulse.\nrule: Cynthia either acts on impulse or makes informed decisions, but not both.\nconclusion: Cynthia does not make informed decisions.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Cynthia protects her interests. The correct option is: C.",
    "context": "Cynthia has vision. If Cynthia is a manager, then she either acts on impulse or thinks carefully, but not both. Cynthia either acts on impulse or makes informed decisions, but not both. Cynthia either works hard or is a manager. If Cynthia is influential, then she either builds trust or commands attention (but not both). Anyone who holds leadership positions and has vision can drive innovation. Cynthia builds trust. If Cynthia either earns respect or commands attention (but not both), then she holds leadership positions. If Cynthia has authority, then she either thinks carefully or trusts her instinct, but not both. Cynthia does not drive innovation. Cynthia has authority. Everyone who works hard either achieves success or earns respect (or both). Everyone considers options or thinks carefully. Cynthia does not achieve success. Cynthia is influential. Cynthia trusts her instinct. Cynthia solves problems or holds leadership positions.",
    "nl2fol": {
      "Cynthia has vision.": "has_vision(Cynthia)",
      "If Cynthia is a manager, then she either acts on impulse or thinks carefully, but not both.": "is_a_manager(Cynthia) → (acts_on_impulse(Cynthia) ⊕ thinks_carefully(Cynthia))",
      "Cynthia either acts on impulse or makes informed decisions, but not both.": "acts_on_impulse(Cynthia) ⊕ makes_informed_decisions(Cynthia)",
      "Cynthia either works hard or is a manager.": "works_hard(Cynthia) ∨ is_a_manager(Cynthia)",
      "If Cynthia is influential, then she either builds trust or commands attention (but not both).": "is_influential(Cynthia) → (builds_trust(Cynthia) ⊕ commands_attention(Cynthia))",
      "Anyone who holds leadership positions and has vision can drive innovation.": "∀x ((holds_leadership(x) ∧ has_vision(x)) → drives_innovation(x))",
      "Cynthia builds trust.": "builds_trust(Cynthia)",
      "If Cynthia either earns respect or commands attention (but not both), then she holds leadership positions.": "(earns_respect(Cynthia) ⊕ commands_attention(Cynthia)) → holds_leadership(Cynthia)",
      "If Cynthia has authority, then she either thinks carefully or trusts her instinct, but not both.": "has_authority(Cynthia) → (thinks_carefully(Cynthia) ⊕ trusts_instinct(Cynthia))",
      "Cynthia does not drive innovation.": "¬drives_innovation(Cynthia)",
      "Cynthia has authority.": "has_authority(Cynthia)",
      "Everyone who works hard either achieves success or earns respect (or both).": "∀x (works_hard(x) → (achieves_success(x) ∨ earns_respect(x)))",
      "Everyone considers options or thinks carefully.": "∀x (considers_options(x) ∨ thinks_carefully(x))",
      "Cynthia does not achieve success.": "¬achieves_success(Cynthia)",
      "Cynthia is influential.": "is_influential(Cynthia)",
      "Cynthia trusts her instinct.": "trusts_instinct(Cynthia)",
      "Cynthia solves problems or holds leadership positions.": "solves_problems(Cynthia) ∨ holds_leadership(Cynthia)"
    },
    "conclusion_fol": "protects_their_interests(Cynthia)"
  },
  {
    "id": 290,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Walter is devout.",
    "reasoning": "fact1: Walter faces challenges.\nrule: If someone faces challenges, then they seek guidance and look for answers.\nconclusion: Walter seeks guidance.\n\nfact1: Walter does not value morality.\nfact2: Walter does not lead a good life.\nrule: If someone either values morality or has faith, then they lead a good life.\nconclusion: Walter does not have faith.\n\nfact1: Walter does not live sincerely.\nfact2: Walter does not act with compassion.\nrule: Everyone who finds inner peace either lives sincerely or acts with compassion (or both).\nconclusion: Walter does not find inner peace.\n\nfact1: Walter attends church.\nfact2: Walter prays regularly.\nrule: If Walter reads scriptures, then he either attends church or prays regularly, but not both.\nconclusion: Walter does not read scriptures.\n\nfact1: Walter seeks guidance.\nfact2: Walter does not find inner peace.\nrule: If Walter either believes in a religion or seeks guidance, then he finds inner peace.\nconclusion: Walter believes in a religion.\n\nfact1: Walter does not read scriptures.\nfact2: Walter does not have faith.\nrule: If Walter either reads scriptures or practices meditation (but not both), then he has faith.\nconclusion: Walter does not practice meditation.\n\nfact1: Walter believes in a religion.\nfact2: Walter does not practice meditation.\nrule: If Walter believes in a religion, then he is either someone who practices meditation or someone who is atheistic, but not both.\nconclusion: Walter is atheistic.\n\nfact1: Walter is atheistic.\nrule: Everyone is either spiritual or atheistic, but not both.\nconclusion: Walter is not spiritual.\n\nfact1: Walter is not spiritual.\nrule: Walter is spiritual or devout.\nconclusion: Walter is devout.\n\nTherefore, it is true that Walter is devout. The correct option is: A.",
    "context": "Anyone who doubts the existence of a higher power and rejects religious doctrine is likely to be atheistic. Everyone who finds inner peace either lives sincerely or acts with compassion (or both). If someone faces challenges, then they seek guidance and look for answers. Everyone is either spiritual or atheistic, but not both. If Walter reads scriptures, then he either attends church or prays regularly, but not both. Walter is spiritual or devout. Walter does not value morality. Walter prays regularly. If someone either values morality or has faith, then they lead a good life. Walter does not lead a good life. If Isabel either believes in a religion or seeks guidance, then he finds inner peace. If Walter wears a symbol and feels protected, then he has faith. Walter does not act with compassion. If Walter either reads scriptures or practices meditation (but not both), then he has faith. Walter attends church. Walter does not live sincerely. If Walter believes in a religion, then he is either someone who practices meditation or someone who is atheistic, but not both. If Walter follows traditions, then he either listens to homilies or reads scriptures (but not both). Walter faces challenges. If Walter either believes in a religion or seeks guidance, then he finds inner peace.",
    "nl2fol": {
      "Anyone who doubts the existence of a higher power and rejects religious doctrine is likely to be atheistic.": "∀x ((doubts_existence(x) ∧ rejects_doctrine(x)) → atheistic(x))",
      "Everyone who finds inner peace either lives sincerely or acts with compassion (or both).": "∀x (finds_inner_peace(x) → (lives_sincerely(x) ∨ acts_with_compassion(x)))",
      "If someone faces challenges, then they seek guidance and look for answers.": "∀x (faces_challenges(x) → (looks_for_answers(x) ∧ seeks_guidance(x)))",
      "Everyone is either spiritual or atheistic, but not both.": "∀x (spiritual(x) ⊕ atheistic(x))",
      "If Walter reads scriptures, then he either attends church or prays regularly, but not both.": "reads_scriptures(Walter) → (attends_church(Walter) ⊕ prays_regularly(Walter))",
      "Walter is spiritual or devout.": "spiritual(Walter) ∨ devout(Walter)",
      "Walter does not value morality.": "¬values_morality(Walter)",
      "Walter prays regularly.": "prays_regularly(Walter)",
      "If someone either values morality or has faith, then they lead a good life.": "∀x ((values_morality(x) ⊕ has_faith(x)) → leads_a_good_life(x))",
      "Walter does not lead a good life.": "¬leads_a_good_life(Walter)",
      "If Isabel either believes in a religion or seeks guidance, then he finds inner peace.": "(believes_in_religion(Isabel) ⊕ seeks_guidance(Isabel)) → finds_inner_peace(Isabel)",
      "If Walter wears a symbol and feels protected, then he has faith.": "wears_symbol(Walter) → (feels_protected(Walter) ∧ has_faith(Walter))",
      "Walter does not act with compassion.": "¬acts_with_compassion(Walter)",
      "If Walter either reads scriptures or practices meditation (but not both), then he has faith.": "(reads_scriptures(Walter) ⊕ practices_meditation(Walter)) → has_faith(Walter)",
      "Walter attends church.": "attends_church(Walter)",
      "Walter does not live sincerely.": "¬lives_sincerely(Walter)",
      "If Walter believes in a religion, then he is either someone who practices meditation or someone who is atheistic, but not both.": "believes_in_religion(Walter) → (practices_meditation(Walter) ⊕ atheistic(Walter))",
      "If Walter follows traditions, then he either listens to homilies or reads scriptures (but not both).": "follows_traditions(Walter) → (listens_to_homilies(Walter) ⊕ reads_scriptures(Walter))",
      "Walter faces challenges.": "faces_challenges(Walter)",
      "If Walter either believes in a religion or seeks guidance, then he finds inner peace.": "(believes_in_religion(Walter) ⊕ seeks_guidance(Walter)) → finds_inner_peace(Walter)"
    },
    "conclusion_fol": "devout(Walter)"
  },
  {
    "id": 291,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hope achieves her mountaineering goals.",
    "reasoning": "fact1: Hope faces challenges.\nfact2: Hope does not build resilience.\nrule: Anyone who faces challenges and develops coping skills can build resilience.\nconclusion: Hope does not develop coping skills.\n\nfact1: Hope pushes beyond her limits.\nfact2: Hope does not develop coping skills.\nrule: Everyone who pushes beyond their limits either develops coping skills or is strategically grounded (or both).\nconclusion: Hope is strategically grounded.\n\nfact1: Hope is mentally tough.\nfact2: Hope is strategically grounded.\nrule: If Hope reaches the summit, then she is either mentally tough or strategically grounded (but not both).\nconclusion: Hope does not reach the summit.\n\nfact1: Hope does not seek adventure.\nrule: Hope seeks adventure or sets challenging goals.\nconclusion: Hope sets challenging goals.\n\nfact1: Hope sets challenging goals.\nfact2: Hope is not physically fit.\nrule: If Hope sets challenging goals, then she is either physically fit or well-prepared, but not both.\nconclusion: Hope is well-prepared.\n\nfact1: Hope does not have natural talent.\nfact2: Hope does not reach the summit.\nrule: If Hope is either experienced or has natural talent (but not both), then she reaches the summit.\nconclusion: Hope does not have experience.\n\nfact1: Hope does not have experience.\nfact2: Hope is well-prepared.\nrule: If Hope has experience or is well-prepared, then she achieves her mountaineering goals.\nconclusion: Hope achieves her mountaineering goals.\n\nTherefore, it is true that Hope achieves her mountaineering goals. The correct option is: A.",
    "context": "Hope is mentally tough. If Hope has experience or is well-prepared, then she achieves her mountaineering goals. Hope is not physically fit. Hope does not have natural talent. Hope learns quickly or has experience. If Hope sets challenging goals, then she is either physically fit or well-prepared, but not both. Hope seeks adventure or sets challenging goals. Hope does not build resilience. Hope does not seek adventure. Hope pushes beyond her limits. Everyone who pushes beyond their limits either develops coping skills or is strategically grounded (or both). If Hope is either experienced or has natural talent (but not both), then she reaches the summit. Hope faces challenges. Hope either sets goals or reaches the summit. If Hope reaches the summit, then she is either mentally tough or strategically grounded (but not both). Anyone who faces challenges and develops coping skills can build resilience.",
    "nl2fol": {
      "Hope is mentally tough.": "has_mental_toughness(Hope)",
      "If Hope has experience or is well-prepared, then she achieves her mountaineering goals.": "(have_experience(Hope) ∨ well_prepared(Hope)) → achieve_mountaineering_goals(Hope)",
      "Hope is not physically fit.": "¬is_physically_fit(Hope)",
      "Hope does not have natural talent.": "¬has_natural_talent(Hope)",
      "Hope learns quickly or has experience.": "learns_quickly(Hope) ∨ have_experience(Hope)",
      "If Hope sets challenging goals, then she is either physically fit or well-prepared, but not both.": "sets_challenging_goals(Hope) → (is_physically_fit(Hope) ⊕ well_prepared(Hope))",
      "Hope seeks adventure or sets challenging goals.": "seeks_adventure(Hope) ∨ sets_challenging_goals(Hope)",
      "Hope does not build resilience.": "¬builds_resilience(Hope)",
      "Hope does not seek adventure.": "¬seeks_adventure(Hope)",
      "Hope pushes beyond her limits.": "pushes_beyond_limits(Hope)",
      "Everyone who pushes beyond their limits either develops coping skills or is strategically grounded (or both).": "∀x (pushes_beyond_limits(x) → (develops_coping_skills(x) ∨ is_strategically_grounded(x)))",
      "If Hope is either experienced or has natural talent (but not both), then she reaches the summit.": "(have_experience(Hope) ⊕ has_natural_talent(Hope)) → reaches_summit(Hope)",
      "Hope faces challenges.": "faces_challenges(Hope)",
      "Hope either sets goals or reaches the summit.": "sets_goals(Hope) ∨ reaches_summit(Hope)",
      "If Hope reaches the summit, then she is either mentally tough or strategically grounded (but not both).": "reaches_summit(Hope) → (has_mental_toughness(Hope) ⊕ is_strategically_grounded(Hope))",
      "Anyone who faces challenges and develops coping skills can build resilience.": "∀x ((faces_challenges(x) ∧ develops_coping_skills(x)) → builds_resilience(x))"
    },
    "conclusion_fol": "achieve_mountaineering_goals(Hope)"
  },
  {
    "id": 292,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aliyah is not innovative.",
    "reasoning": "fact1: Aliyah meets deadlines.\nfact2: Aliyah does not work independently.\nrule: If Aliyah meets deadlines, then she either collaborates well or works independently, but not both.\nconclusion: Aliyah collaborates well.\n\nfact1: Aliyah trusts her instinct.\nrule: Aliyah either thinks logically or trusts her instinct, but not both.\nconclusion: Aliyah does not think logically.\n\nfact1: Aliyah collaborates well.\nfact2: Aliyah has strong intuition.\nrule: If Aliyah collaborates well, then she has strong intuition and can communicate complex ideas.\nconclusion: Aliyah can communicate complex ideas.\n\nfact1: Aliyah can communicate complex ideas.\nrule: For Aliyah, being able to communicate complex ideas and being reliable in findings are mutually exclusive.\nconclusion: Aliyah is not reliable in findings.\n\nfact1: Aliyah does not think logically.\nfact2: Aliyah does not evaluate data effectively.\nrule: If Aliyah makes accurate conclusions, then she either thinks logically or evaluates data effectively (but not both).\nconclusion: Aliyah does not make accurate conclusions.\n\nfact1: Aliyah does not have attention to detail.\nfact2: Aliyah does not make accurate conclusions.\nrule: If Aliyah is precise in measurements, then she either has attention to detail or makes accurate conclusions (but not both).\nconclusion: Aliyah is not precise in measurements.\n\nfact1: Aliyah is not precise in measurements.\nfact2: Aliyah is not reliable in findings.\nrule: If someone is accurate, then they are either precise in measurements or reliable in findings (or both).\nconclusion: Aliyah is not accurate.\n\nfact1: Aliyah is not accurate.\nrule: Aliyah is accurate or innovative.\nconclusion: Aliyah is not innovative.\n\nTherefore, it is false that Aliyah is not innovative. The correct option is: B.",
    "context": "Aliyah trusts her instinct. Aliyah has strong intuition. Anyone who speaks confidently or writes clearly can communicate complex ideas. If Aliyah meets deadlines, then she either collaborates well or works independently, but not both. If Aliyah collaborates well, then she has strong intuition and can communicate complex ideas. Aliyah does not work independently. Aliyah either thinks logically or trusts her instinct, but not both. Aliyah does not evaluate data effectively. If Aliyah makes accurate conclusions, then she either thinks logically or evaluates data effectively (but not both). If someone is accurate, then they are either precise in measurements or reliable in findings (or both). For Aliyah, being able to communicate complex ideas and being reliable in findings are mutually exclusive. Everyone who approaches problems systematically either thinks logically or considers multiple perspectives (or both). Aliyah does not have attention to detail. Aliyah is accurate or innovative. Aliyah meets deadlines. If Aliyah is precise in measurements, then she either has attention to detail or makes accurate conclusions (but not both).",
    "nl2fol": {
      "Aliyah trusts her instinct.": "trusts_instinct(Aliyah)",
      "Aliyah has strong intuition.": "has_strong_intuition(Aliyah)",
      "Anyone who speaks confidently or writes clearly can communicate complex ideas.": "∀x ((speaks_confidently(x) ∨ writes_clearly(x)) → communicates_complex_ideas(x))",
      "If Aliyah meets deadlines, then she either collaborates well or works independently, but not both.": "meets_deadlines(Aliyah) → (collaborates_well(Aliyah) ⊕ works_independently(Aliyah))",
      "If Aliyah collaborates well, then she has strong intuition and can communicate complex ideas.": "collaborates_well(Aliyah) → (has_strong_intuition(Aliyah) ∧ communicates_complex_ideas(Aliyah))",
      "Aliyah does not work independently.": "¬works_independently(Aliyah)",
      "Aliyah either thinks logically or trusts her instinct, but not both.": "thinks_logically(Aliyah) ⊕ trusts_instinct(Aliyah)",
      "Aliyah does not evaluate data effectively.": "¬evaluates_data_effectively(Aliyah)",
      "If Aliyah makes accurate conclusions, then she either thinks logically or evaluates data effectively (but not both).": "makes_accurate_conclusions(Aliyah) → (thinks_logically(Aliyah) ⊕ evaluates_data_effectively(Aliyah))",
      "If someone is accurate, then they are either precise in measurements or reliable in findings (or both).": "∀x (accurate(x) → (precise_in_measurements(x) ∨ reliable_in_findings(x)))",
      "For Aliyah, being able to communicate complex ideas and being reliable in findings are mutually exclusive.": "communicates_complex_ideas(Aliyah) ⊕ reliable_in_findings(Aliyah)",
      "Everyone who approaches problems systematically either thinks logically or considers multiple perspectives (or both).": "∀x (approaches_problems_systematically(x) → (considers_multiple_perspectives(x) ∨ thinks_logically(x)))",
      "Aliyah does not have attention to detail.": "¬has_attention_to_detail(Aliyah)",
      "Aliyah is accurate or innovative.": "accurate(Aliyah) ∨ innovative(Aliyah)",
      "Aliyah meets deadlines.": "meets_deadlines(Aliyah)",
      "If Aliyah is precise in measurements, then she either has attention to detail or makes accurate conclusions (but not both).": "precise_in_measurements(Aliyah) → (has_attention_to_detail(Aliyah) ⊕ makes_accurate_conclusions(Aliyah))"
    },
    "conclusion_fol": "¬innovative(Aliyah)"
  },
  {
    "id": 293,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Saeedi is a wild horse.",
    "reasoning": "fact1: Saeedi has strength.\nfact2: Saeedi is not fast.\nrule: If Saeedi has strength, then he is either fast or roams free, but not both.\nconclusion: Saeedi roams free.\n\nfact1: Saeedi roams free.\nrule: Saeedi either roams free or follows training, but not both.\nconclusion: Saeedi does not follow training.\n\nfact1: Saeedi participates in parades.\nfact2: Saeedi does not execute maneuvers.\nrule: Every horse that participates in parades either executes maneuvers or responds to cues.\nconclusion: Saeedi responds to cues.\n\nfact1: Saeedi is trained.\nfact2: Saeedi responds to cues.\nrule: If Saeedi is trained, then he either obeys commands or responds to cues (but not both).\nconclusion: Saeedi does not obey commands.\n\nfact1: Saeedi does not follow training.\nrule: Saeedi either follows training or performs tricks.\nconclusion: Saeedi performs tricks.\n\nfact1: Saeedi does not obey commands.\nfact2: Saeedi performs tricks.\nrule: If Saeedi either obeys commands or performs tricks (but not both), then he is domesticated.\nconclusion: Saeedi is a domesticated horse.\n\nfact1: Saeedi is a domesticated horse.\nrule: For every horse, it is either domesticated or wild, but not both.\nconclusion: Saeedi is not a wild horse.\n\nTherefore, it is false that Saeedi is a wild horse. The correct option is: B.",
    "context": "If Sloan either obeys commands or performs tricks (but not both), then he is domesticated. Every horse that participates in parades either executes maneuvers or responds to cues. Saeedi is not fast. Saeedi is trained. For every horse, it is either domesticated or wild, but not both. If Saeedi either obeys commands or performs tricks (but not both), then he is domesticated. If Saeedi has strength, then he is either fast or roams free, but not both. Dilan participates in parades. Saeedi either follows training or performs tricks. Saeedi does not execute maneuvers. If Saeedi has beauty, then he has a lovely gait and performs tricks. Dilan is not fast. Saeedi participates in parades. If Saeedi either listens carefully or reacts quickly (but not both), then he follows training. Dilan does not execute maneuvers. Fiona either roams free or follows training, but not both. If Dilan has strength, then he is either fast or roams free, but not both. Saeedi has strength. Sloan is trained. Saeedi either roams free or follows training, but not both. If Saeedi is trained, then he either obeys commands or responds to cues (but not both).",
    "nl2fol": {
      "If Sloan either obeys commands or performs tricks (but not both), then he is domesticated.": "(obeys_commands(Sloan) ⊕ performs_tricks(Sloan)) → domesticated(Sloan)",
      "Every horse that participates in parades either executes maneuvers or responds to cues.": "∀x (participates_parades(x) → (executes_maneuvers(x) ∨ responds_to_cues(x)))",
      "Saeedi is not fast.": "¬has_speed(Saeedi)",
      "Saeedi is trained.": "is_trained(Saeedi)",
      "For every horse, it is either domesticated or wild, but not both.": "∀x (domesticated(x) ⊕ wild(x))",
      "If Saeedi either obeys commands or performs tricks (but not both), then he is domesticated.": "(obeys_commands(Saeedi) ⊕ performs_tricks(Saeedi)) → domesticated(Saeedi)",
      "If Saeedi has strength, then he is either fast or roams free, but not both.": "has_strength(Saeedi) → (has_speed(Saeedi) ⊕ roams_free(Saeedi))",
      "Dilan participates in parades.": "participates_parades(Dilan)",
      "Saeedi either follows training or performs tricks.": "follows_training(Saeedi) ∨ performs_tricks(Saeedi)",
      "Saeedi does not execute maneuvers.": "¬executes_maneuvers(Saeedi)",
      "If Saeedi has beauty, then he has a lovely gait and performs tricks.": "has_beauty(Saeedi) → (has_lovely_gait(Saeedi) ∧ performs_tricks(Saeedi))",
      "Dilan is not fast.": "¬has_speed(Dilan)",
      "Saeedi participates in parades.": "participates_parades(Saeedi)",
      "If Saeedi either listens carefully or reacts quickly (but not both), then he follows training.": "(listens_carefully(Saeedi) ⊕ reacts_quickly(Saeedi)) → follows_training(Saeedi)",
      "Dilan does not execute maneuvers.": "¬executes_maneuvers(Dilan)",
      "Fiona either roams free or follows training, but not both.": "roams_free(Fiona) ⊕ follows_training(Fiona)",
      "If Dilan has strength, then he is either fast or roams free, but not both.": "has_strength(Dilan) → (has_speed(Dilan) ⊕ roams_free(Dilan))",
      "Saeedi has strength.": "has_strength(Saeedi)",
      "Sloan is trained.": "is_trained(Sloan)",
      "Saeedi either roams free or follows training, but not both.": "roams_free(Saeedi) ⊕ follows_training(Saeedi)",
      "If Saeedi is trained, then he either obeys commands or responds to cues (but not both).": "is_trained(Saeedi) → (obeys_commands(Saeedi) ⊕ responds_to_cues(Saeedi))"
    },
    "conclusion_fol": "wild(Saeedi)"
  },
  {
    "id": 294,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rosalina does not earn the respect of others.",
    "reasoning": "fact1: Rosalina does not save lives.\nrule: Rosalina saves lives or risks her life (or both).\nconclusion: Rosalina risks her life.\n\nfact1: Rosalina risks her life.\nfact2: Rosalina does not serve others.\nrule: Everyone who risks their life is either courageous or serves others (or both).\nconclusion: Rosalina is courageous.\n\nfact1: Rosalina does not provide medical aid.\nfact2: Rosalina puts others first.\nrule: Anyone who provides medical aid or puts others first protects the vulnerable.\nconclusion: Rosalina protects the vulnerable.\n\nfact1: Rosalina protects the vulnerable.\nrule: Rosalina either protects the vulnerable or empowers others, but not necessarily both.\nconclusion: Rosalina does not empower others.\n\nfact1: Rosalina does not empower others.\nrule: If someone empowers others, they may not necessarily inspire leadership in others, and if someone inspires leadership in others, they may not necessarily empower others.\nconclusion: Rosalina inspires leadership in others.\n\nfact1: Rosalina is courageous.\nfact2: Rosalina inspires leadership in others.\nrule: If Rosalina is courageous, then she can either earn the respect of others or inspire leadership in others, but not both.\nconclusion: Rosalina does not earn the respect of others.\n\nTherefore, it is true that Rosalina does not earn the respect of others. The correct option is: A.",
    "context": "If Rosalina either stands up for others or faces her fears head-on (but not both), then she is courageous. Anyone who provides medical aid or puts others first protects the vulnerable. If Rosalina is courageous, then she can either earn the respect of others or inspire leadership in others, but not both. Rosalina either protects the vulnerable or empowers others, but not necessarily both. Rosalina does not save lives. Everyone who dedicates their life to helping others either brings hope or empowers others (or both). Everyone who works selflessly either brings people together or protects the vulnerable (or both). Rosalina does not provide medical aid. Everyone who risks their life is either courageous or serves others (or both). Keaton saves lives or risks her life (or both). Rosalina saves lives or risks her life (or both). Keaton either protects the vulnerable or empowers others, but not necessarily both. Rosalina puts others first. Rosalina does not serve others. If someone empowers others, they may not necessarily inspire leadership in others, and if someone inspires leadership in others, they may not necessarily empower others.",
    "nl2fol": {
      "If Rosalina either stands up for others or faces her fears head-on (but not both), then she is courageous.": "(stands_up_for_others(Rosalina) ⊕ faces_fear_head_on(Rosalina)) → courageous(Rosalina)",
      "Anyone who provides medical aid or puts others first protects the vulnerable.": "∀x ((provides_medical_aid(x) ∨ puts_others_first(x)) → protects_the_vulnerable(x))",
      "If Rosalina is courageous, then she can either earn the respect of others or inspire leadership in others, but not both.": "courageous(Rosalina) → (earn_respect(Rosalina) ⊕ inspire_leadership(Rosalina))",
      "Rosalina either protects the vulnerable or empowers others, but not necessarily both.": "protects_the_vulnerable(Rosalina) ⊕ empowers_others(Rosalina)",
      "Rosalina does not save lives.": "¬saves_lives(Rosalina)",
      "Everyone who dedicates their life to helping others either brings hope or empowers others (or both).": "∀x (dedicates_life(x) → (brings_hope(x) ∨ empowers_others(x)))",
      "Everyone who works selflessly either brings people together or protects the vulnerable (or both).": "∀x (works_selflessly(x) → (brings_people_together(x) ∨ protects_the_vulnerable(x)))",
      "Rosalina does not provide medical aid.": "¬provides_medical_aid(Rosalina)",
      "Everyone who risks their life is either courageous or serves others (or both).": "∀x (risks_life(x) → (courageous(x) ∨ serves_others(x)))",
      "Keaton saves lives or risks her life (or both).": "saves_lives(Keaton) ∨ risks_life(Keaton)",
      "Rosalina saves lives or risks her life (or both).": "saves_lives(Rosalina) ∨ risks_life(Rosalina)",
      "Keaton either protects the vulnerable or empowers others, but not necessarily both.": "protects_the_vulnerable(Keaton) ⊕ empowers_others(Keaton)",
      "Rosalina puts others first.": "puts_others_first(Rosalina)",
      "Rosalina does not serve others.": "¬serves_others(Rosalina)",
      "If someone empowers others, they may not necessarily inspire leadership in others, and if someone inspires leadership in others, they may not necessarily empower others.": "∀x (empowers_others(x) ⊕ inspire_leadership(x))"
    },
    "conclusion_fol": "¬earn_respect(Rosalina)"
  },
  {
    "id": 295,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Andy does not earn global recognition.",
    "reasoning": "fact1: Andy does not value efficiency.\nrule: Andy values efficiency or has a strong work ethic.\nconclusion: Andy has a strong work ethic.\n\nfact1: Andy does not foster collaboration.\nrule: Andy is either an expert in his field or fosters collaboration, but not both.\nconclusion: Andy is an expert in his field.\n\nfact1: Andy does not share knowledge.\nfact2: Andy guides newcomers.\nrule: If Andy either shares knowledge or guides newcomers (but not both), then he mentors others.\nconclusion: Andy is mentoring others.\n\nfact1: Andy is an expert in his field.\nfact2: Andy is mentoring others.\nrule: If Andy is an expert in his field, then he is either mentoring others or pioneering new technology, but not both.\nconclusion: Andy is not pioneering new technology.\n\nfact1: Andy speaks at conferences.\nrule: If Andy speaks at conferences, then he leads project teams.\nconclusion: Andy leads project teams.\n\nfact1: Andy has a strong work ethic.\nfact2: Andy leads project teams.\nrule: If Andy has a strong work ethic, then he is either dedicated to innovation or leads project teams (but not both).\nconclusion: Andy is not dedicated to innovation.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Andy does not earn global recognition. The correct option is: C.",
    "context": "Devin does not share knowledge. Andy does not foster collaboration. Andy values efficiency or has a strong work ethic. If Andy has a strong work ethic, then he is either dedicated to innovation or leads project teams (but not both). Gunnar speaks at conferences. If Andy is an expert in his field, then he is either mentoring others or pioneering new technology, but not both. Andy does not value efficiency. Andy guides newcomers. Andy is either an expert in his field or fosters collaboration, but not both. If someone is passionate about data, then they drive progress and are dedicated to innovation. If Andy either shares knowledge or guides newcomers (but not both), then he mentors others. If Devin has a strong work ethic, then he is either dedicated to innovation or leads project teams (but not both). Andy speaks at conferences. Andy either pursues an academic degree or has a strong work ethic. Andy does not share knowledge. Gunnar guides newcomers. Gunnar does not value efficiency. If Andy speaks at conferences, then he leads project teams. If Martin either shares knowledge or guides newcomers (but not both), then he mentors others. If Devin is an expert in his field, then he is either mentoring others or pioneering new technology, but not both.",
    "nl2fol": {
      "Devin does not share knowledge.": "¬shares_knowledge(Devin)",
      "Andy does not foster collaboration.": "¬fosters_collaboration(Andy)",
      "Andy values efficiency or has a strong work ethic.": "values_efficiency(Andy) ∨ has_strong_work_ethic(Andy)",
      "If Andy has a strong work ethic, then he is either dedicated to innovation or leads project teams (but not both).": "has_strong_work_ethic(Andy) → (leads_project_teams(Andy) ⊕ dedicated_to_innovation(Andy))",
      "Gunnar speaks at conferences.": "speaks_at_conferences(Gunnar)",
      "If Andy is an expert in his field, then he is either mentoring others or pioneering new technology, but not both.": "experts_in_field(Andy) → (mentors_others(Andy) ⊕ pioneering_new_technology(Andy))",
      "Andy does not value efficiency.": "¬values_efficiency(Andy)",
      "Andy guides newcomers.": "guides_newcomers(Andy)",
      "Andy is either an expert in his field or fosters collaboration, but not both.": "fosters_collaboration(Andy) ⊕ experts_in_field(Andy)",
      "If someone is passionate about data, then they drive progress and are dedicated to innovation.": "∀x (passionate_about_data(x) → (drive_progress(x) ∧ dedicated_to_innovation(x)))",
      "If Andy either shares knowledge or guides newcomers (but not both), then he mentors others.": "(shares_knowledge(Andy) ⊕ guides_newcomers(Andy)) → mentors_others(Andy)",
      "If Devin has a strong work ethic, then he is either dedicated to innovation or leads project teams (but not both).": "has_strong_work_ethic(Devin) → (leads_project_teams(Devin) ⊕ dedicated_to_innovation(Devin))",
      "Andy speaks at conferences.": "speaks_at_conferences(Andy)",
      "Andy either pursues an academic degree or has a strong work ethic.": "pursues_academic_degree(Andy) ∨ has_strong_work_ethic(Andy)",
      "Andy does not share knowledge.": "¬shares_knowledge(Andy)",
      "Gunnar guides newcomers.": "guides_newcomers(Gunnar)",
      "Gunnar does not value efficiency.": "¬values_efficiency(Gunnar)",
      "If Andy speaks at conferences, then he leads project teams.": "speaks_at_conferences(Andy) → leads_project_teams(Andy)",
      "If Martin either shares knowledge or guides newcomers (but not both), then he mentors others.": "(shares_knowledge(Martin) ⊕ guides_newcomers(Martin)) → mentors_others(Martin)",
      "If Devin is an expert in his field, then he is either mentoring others or pioneering new technology, but not both.": "experts_in_field(Devin) → (mentors_others(Devin) ⊕ pioneering_new_technology(Devin))"
    },
    "conclusion_fol": "¬earn_global_recognition(Andy)"
  },
  {
    "id": 296,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jaxton finds personal strength.",
    "reasoning": "fact1: Jaxton has a medical condition.\nfact2: Jaxton does not engage in volunteer work.\nrule: If Jaxton has a medical condition, then he either engages in volunteer work or participates in sports, but not both.\nconclusion: Jaxton participates in sports.\n\nfact1: Jaxton has determination.\nfact2: Jaxton creates change.\nrule: If Jaxton has determination, then he can either make a positive impact or create change, but not both.\nconclusion: Jaxton does not make a positive impact.\n\nfact1: Jaxton has resilience.\nfact2: Jaxton does not make a positive impact.\nrule: If Jaxton has resilience, then he can either make a positive impact or inspire others, but not both.\nconclusion: Jaxton inspires others.\n\nfact1: Jaxton has a chronic illness.\nfact2: Jaxton participates in sports.\nrule: For every person, if they have a chronic illness and participate in sports, then they face challenges.\nconclusion: Jaxton faces challenges.\n\nfact1: Jaxton faces challenges.\nrule: Jaxton will overcome adversity if he faces challenges.\nconclusion: Jaxton can overcome adversity.\n\nfact1: Jaxton can overcome adversity.\nfact2: Jaxton inspires others.\nrule: If Jaxton can overcome adversity, then he can either find personal strength or inspire others, but not both.\nconclusion: Jaxton does not find personal strength.\n\nTherefore, it is false that Jaxton finds personal strength. The correct option is: B.",
    "context": "If Jaxton has resilience, then he can either make a positive impact or inspire others, but not both. Jaxton has a chronic illness. Jaxton will overcome adversity if he faces challenges. If Jaxton has determination, then he can either make a positive impact or create change, but not both. For every person, if they have a chronic illness and participate in sports, then they face challenges. If Jaxton experiences personal growth, then he either pursues new opportunities or faces challenges (but not both). If Jaxton can overcome adversity, then he can either find personal strength or inspire others, but not both. Jaxton has determination. Wynter does not engage in volunteer work. Wynter creates change. If Wynter has resilience, then he can either make a positive impact or inspire others, but not both. If Jaxton has a medical condition, then he either engages in volunteer work or participates in sports, but not both. Jaxton has resilience. If Wynter can overcome adversity, then he can either find personal strength or inspire others, but not both. Jaxton has a medical condition. Jaxton does not engage in volunteer work. Jaxton creates change.",
    "nl2fol": {
      "If Jaxton has resilience, then he can either make a positive impact or inspire others, but not both.": "has_resilience(Jaxton) → (make_positive_impact(Jaxton) ⊕ inspire_others(Jaxton))",
      "Jaxton has a chronic illness.": "has_chronic_illness(Jaxton)",
      "Jaxton will overcome adversity if he faces challenges.": "faces_challenges(Jaxton) → overcome_adversity(Jaxton)",
      "If Jaxton has determination, then he can either make a positive impact or create change, but not both.": "has_determination(Jaxton) → (create_change(Jaxton) ⊕ make_positive_impact(Jaxton))",
      "For every person, if they have a chronic illness and participate in sports, then they face challenges.": "∀x ((has_chronic_illness(x) ∧ participates_in_sports(x)) → faces_challenges(x))",
      "If Jaxton experiences personal growth, then he either pursues new opportunities or faces challenges (but not both).": "has_personal_growth(Jaxton) → (pursues_new_opportunities(Jaxton) ⊕ faces_challenges(Jaxton))",
      "If Jaxton can overcome adversity, then he can either find personal strength or inspire others, but not both.": "overcome_adversity(Jaxton) → (find_personal_strength(Jaxton) ⊕ inspire_others(Jaxton))",
      "Jaxton has determination.": "has_determination(Jaxton)",
      "Wynter does not engage in volunteer work.": "¬engages_in_volunteer_work(Wynter)",
      "Wynter creates change.": "create_change(Wynter)",
      "If Wynter has resilience, then he can either make a positive impact or inspire others, but not both.": "has_resilience(Wynter) → (make_positive_impact(Wynter) ⊕ inspire_others(Wynter))",
      "If Jaxton has a medical condition, then he either engages in volunteer work or participates in sports, but not both.": "has_medical_condition(Jaxton) → (engages_in_volunteer_work(Jaxton) ⊕ participates_in_sports(Jaxton))",
      "Jaxton has resilience.": "has_resilience(Jaxton)",
      "If Wynter can overcome adversity, then he can either find personal strength or inspire others, but not both.": "overcome_adversity(Wynter) → (find_personal_strength(Wynter) ⊕ inspire_others(Wynter))",
      "Jaxton has a medical condition.": "has_medical_condition(Jaxton)",
      "Jaxton does not engage in volunteer work.": "¬engages_in_volunteer_work(Jaxton)",
      "Jaxton creates change.": "create_change(Jaxton)"
    },
    "conclusion_fol": "find_personal_strength(Jaxton)"
  },
  {
    "id": 297,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Chosen is fearless.",
    "reasoning": "fact1: Chosen does not feel happiness.\nrule: If a lemur plays with others, then it feels happiness.\nconclusion: Chosen does not play with others.\n\nfact1: Chosen does not play with others.\nrule: Chosen either plays with others or leads the group.\nconclusion: Chosen leads the group.\n\nfact1: Chosen leads the group.\nfact2: Chosen does not inspire others.\nrule: If Chosen either has charisma or leads the group (but not both), then he inspires others.\nconclusion: Chosen has charisma.\n\nfact1: Chosen finds water.\nfact2: Chosen avoids hunters.\nrule: If Chosen thrives in Madagascar, then he can either find water or avoid hunters, but not both.\nconclusion: Chosen does not thrive in Madagascar.\n\nfact1: Chosen climbs trees.\nfact2: Chosen does not thrive in Madagascar.\nrule: All lemurs that eat berries and climb trees thrive in Madagascar.\nconclusion: Chosen does not eat berries.\n\nfact1: Chosen outsmarts predators.\nfact2: Chosen has charisma.\nrule: If Chosen outsmarts predators, then he will gain respect and have charisma.\nconclusion: Chosen will gain respect.\n\nfact1: Chosen does not eat berries.\nrule: If Chosen explores the rainforest, then he eats berries and lives in trees.\nconclusion: Chosen does not explore the rainforest.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Chosen is fearless. The correct option is: C.",
    "context": "If Chosen thrives in Madagascar, then he can either find water or avoid hunters, but not both. If a lemur plays with others, then it feels happiness. If Chosen ventures into the unknown, then he either makes quick decisions or is a leader (or both). Chosen avoids hunters. If Rocky explores the rainforest and is fearless, then Rocky will be a leader. Samantha does not feel happiness. If Rivka outsmarts predators, then he will gain respect and have charisma. Chosen climbs trees. Chosen outsmarts predators. If Chosen outsmarts predators, then he will gain respect and have charisma. If Chosen either has charisma or leads the group (but not both), then he inspires others. Chosen does not feel happiness. If Chosen explores the rainforest, then he eats berries and lives in trees. All lemurs that eat berries and climb trees thrive in Madagascar. Chosen does not inspire others. Samantha either plays with others or leads the group. Chosen finds water. Rivka finds water. Chosen either plays with others or leads the group. If Chosen is curious, then he either explores the rainforest or is playful (but not both). If Chosen is social, then he either thrives in Madagascar or adapts to change, but not both. Chosen finds food or has charisma.",
    "nl2fol": {
      "If Chosen thrives in Madagascar, then he can either find water or avoid hunters, but not both.": "thrive_in_madagascar(Chosen) → (find_water(Chosen) ⊕ avoid_hunters(Chosen))",
      "If a lemur plays with others, then it feels happiness.": "∀x (play_with_others(x) → feel_happiness(x))",
      "If Chosen ventures into the unknown, then he either makes quick decisions or is a leader (or both).": "venture_into_unknown(Chosen) → (make_quick_decisions(Chosen) ∨ be_a_leader(Chosen))",
      "Chosen avoids hunters.": "avoid_hunters(Chosen)",
      "If Rocky explores the rainforest and is fearless, then Rocky will be a leader.": "(explore_the_rainforest(Rocky) ∧ be_fearless(Rocky)) → be_a_leader(Rocky)",
      "Samantha does not feel happiness.": "¬feel_happiness(Samantha)",
      "If Rivka outsmarts predators, then he will gain respect and have charisma.": "outsmart_predators(Rivka) → (gain_respect(Rivka) ∧ have_charisma(Rivka))",
      "Chosen climbs trees.": "climb_trees(Chosen)",
      "Chosen outsmarts predators.": "outsmart_predators(Chosen)",
      "If Chosen outsmarts predators, then he will gain respect and have charisma.": "outsmart_predators(Chosen) → (gain_respect(Chosen) ∧ have_charisma(Chosen))",
      "If Chosen either has charisma or leads the group (but not both), then he inspires others.": "(have_charisma(Chosen) ⊕ lead_the_group(Chosen)) → inspire_others(Chosen)",
      "Chosen does not feel happiness.": "¬feel_happiness(Chosen)",
      "If Chosen explores the rainforest, then he eats berries and lives in trees.": "explore_the_rainforest(Chosen) → (eat_berries(Chosen) ∧ live_in_trees(Chosen))",
      "All lemurs that eat berries and climb trees thrive in Madagascar.": "∀x ((eat_berries(x) ∧ climb_trees(x)) → thrive_in_madagascar(x))",
      "Chosen does not inspire others.": "¬inspire_others(Chosen)",
      "Samantha either plays with others or leads the group.": "play_with_others(Samantha) ∨ lead_the_group(Samantha)",
      "Chosen finds water.": "find_water(Chosen)",
      "Rivka finds water.": "find_water(Rivka)",
      "Chosen either plays with others or leads the group.": "play_with_others(Chosen) ∨ lead_the_group(Chosen)",
      "If Chosen is curious, then he either explores the rainforest or is playful (but not both).": "be_curious(Chosen) → (explore_the_rainforest(Chosen) ⊕ be_playful(Chosen))",
      "If Chosen is social, then he either thrives in Madagascar or adapts to change, but not both.": "be_social(Chosen) → (thrive_in_madagascar(Chosen) ⊕ adapt_to_change(Chosen))",
      "Chosen finds food or has charisma.": "find_food(Chosen) ∨ have_charisma(Chosen)"
    },
    "conclusion_fol": "be_fearless(Chosen)"
  },
  {
    "id": 298,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Muppet can make informed decisions.",
    "reasoning": "fact1: Muppet acquires new skills.\nfact2: Muppet improves its performance.\nrule: All robots that acquire new skills learn from experience and improve their performance.\nconclusion: Muppet learns from experience.\n\nfact1: Muppet learns from experience.\nfact2: Muppet does not become more efficient.\nrule: If a robot learns from experience and achieves its mission objectives, then it becomes more efficient.\nconclusion: Muppet does not achieve its mission objectives.\n\nfact1: Muppet does not operate offline.\nrule: Muppet either receives remote commands or operates offline, but not both.\nconclusion: Muppet receives remote commands.\n\nfact1: Muppet receives remote commands.\nrule: Muppet either receives remote commands or performs tasks autonomously, but not both.\nconclusion: Muppet does not perform tasks autonomously.\n\nfact1: Muppet does not perform tasks autonomously.\nrule: Muppet either performs tasks autonomously or has advanced sensors.\nconclusion: Muppet has advanced sensors.\n\nfact1: Muppet does not achieve its mission objectives.\nrule: If Muppet makes precise calculations, then it will achieve its mission objectives.\nconclusion: Muppet cannot make precise calculations.\n\nfact1: Muppet can process information.\nrule: Any robot that can process information is able to analyze data.\nconclusion: Muppet can analyze data.\n\nfact1: Muppet can analyze data.\nfact2: Muppet cannot make precise calculations.\nrule: Every robot that can analyze data either has deep learning capabilities or can make precise calculations.\nconclusion: Muppet has deep learning capabilities.\n\nfact1: Muppet has advanced sensors.\nfact2: Muppet has deep learning capabilities.\nrule: For all robots, if a robot has advanced sensors and has deep learning capabilities, then it can make informed decisions.\nconclusion: Muppet can make informed decisions.\n\nTherefore, it is true that Muppet can make informed decisions. The correct option is: A.",
    "context": "Muppet does not become more efficient. All robots that acquire new skills learn from experience and improve their performance. If Muppet either executes predefined programs or follows scheduled routines (but not both), then it receives remote commands. Muppet improves its performance. Any robot that can process information is able to analyze data. If a robot learns from experience and achieves its mission objectives, then it becomes more efficient. Muppet does not operate offline. Muppet either performs tasks autonomously or has advanced sensors. For all robots, if a robot has advanced sensors and has deep learning capabilities, then it can make informed decisions. Muppet can process information. Muppet either receives remote commands or performs tasks autonomously, but not both. If Muppet makes precise calculations, then it will achieve its mission objectives. Muppet either receives remote commands or operates offline, but not both. Muppet acquires new skills. Every robot that can analyze data either has deep learning capabilities or can make precise calculations.",
    "nl2fol": {
      "Muppet does not become more efficient.": "¬becomes_more_efficient(Muppet)",
      "All robots that acquire new skills learn from experience and improve their performance.": "∀x (acquires_new_skills(x) → (learns_from_experience(x) ∧ improves_performance(x)))",
      "If Muppet either executes predefined programs or follows scheduled routines (but not both), then it receives remote commands.": "(executes_predefined_programs(Muppet) ⊕ follows_scheduled_routines(Muppet)) → receives_remote_commands(Muppet)",
      "Muppet improves its performance.": "improves_performance(Muppet)",
      "Any robot that can process information is able to analyze data.": "∀x (process_information(x) → analyze_data(x))",
      "If a robot learns from experience and achieves its mission objectives, then it becomes more efficient.": "∀x ((learns_from_experience(x) ∧ achieve_mission_objectives(x)) → becomes_more_efficient(x))",
      "Muppet does not operate offline.": "¬operates_offline(Muppet)",
      "Muppet either performs tasks autonomously or has advanced sensors.": "performs_tasks_autonomously(Muppet) ∨ has_advanced_sensors(Muppet)",
      "For all robots, if a robot has advanced sensors and has deep learning capabilities, then it can make informed decisions.": "∀x ((has_advanced_sensors(x) ∧ has_deep_learning_capabilities(x)) → can_make_informed_decisions(x))",
      "Muppet can process information.": "process_information(Muppet)",
      "Muppet either receives remote commands or performs tasks autonomously, but not both.": "receives_remote_commands(Muppet) ⊕ performs_tasks_autonomously(Muppet)",
      "If Muppet makes precise calculations, then it will achieve its mission objectives.": "make_precise_calculations(Muppet) → achieve_mission_objectives(Muppet)",
      "Muppet either receives remote commands or operates offline, but not both.": "receives_remote_commands(Muppet) ⊕ operates_offline(Muppet)",
      "Muppet acquires new skills.": "acquires_new_skills(Muppet)",
      "Every robot that can analyze data either has deep learning capabilities or can make precise calculations.": "∀x (analyze_data(x) → (has_deep_learning_capabilities(x) ∨ make_precise_calculations(x)))"
    },
    "conclusion_fol": "can_make_informed_decisions(Muppet)"
  },
  {
    "id": 299,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Faith is not passionate about art.",
    "reasoning": "fact1: Faith values community.\nfact2: Faith does not have strong connections.\nrule: For all people, if they volunteer frequently, then they value community and have strong connections.\nconclusion: Faith does not volunteer frequently.\n\nfact1: Faith has an outgoing nature.\nfact2: Faith does not volunteer frequently.\nrule: Everyone who has an outgoing nature either volunteers frequently or cares for others (or both).\nconclusion: Faith cares for others.\n\nfact1: Faith cares for others.\nfact2: Faith does not spread happiness.\nrule: Anyone with a joyful personality who cares for others will spread happiness.\nconclusion: Faith does not have a joyful personality.\n\nfact1: Faith does not have an uplifting influence.\nrule: If someone is inspirational, then they have an uplifting influence.\nconclusion: Faith is not inspirational.\n\nfact1: Faith appreciates beauty.\nrule: Anyone who appreciates beauty has good taste.\nconclusion: Faith has good taste.\n\nfact1: Faith has good taste.\nfact2: Faith is imaginative.\nrule: If Faith has creative expression, then she either has good taste or is imaginative (but not both).\nconclusion: Faith does not have a creative expression.\n\nfact1: Faith does not have a creative expression.\nfact2: Faith does not have a joyful personality.\nrule: Everyone who is passionate about music has a creative expression or a joyful personality (or both).\nconclusion: Faith is not passionate about music.\n\nfact1: Faith is not passionate about music.\nfact2: Faith is not inspirational.\nrule: If Faith is either passionate about art or passionate about music (but not both), then she is inspirational.\nconclusion: Faith is not passionate about art.\n\nTherefore, it is true that Faith is not passionate about art. The correct option is: A.",
    "context": "Faith has good energy or a joyful personality. Everyone who dedicates themselves to their craft either has a means of creative expression or inspires others (or both). Everyone who is passionate about music has a creative expression or a joyful personality (or both). Faith values community. Faith appreciates beauty. For all people, if they volunteer frequently, then they value community and have strong connections. Faith does not have an uplifting influence. Faith has an outgoing nature. If Faith has good energy, then she is an active listener and cares for others. Anyone with a joyful personality who cares for others will spread happiness. If Faith has a vision, then she is inspirational and encourages others. If Faith is either passionate about art or passionate about music (but not both), then she is inspirational. Everyone who has an outgoing nature either volunteers frequently or cares for others (or both). Anyone who appreciates beauty has good taste. If Faith either helps animals or donates to charity (but not both), then she volunteers frequently. If someone is inspirational, then they have an uplifting influence. Faith does not spread happiness. Faith is imaginative. If Faith has creative expression, then she either has good taste or is imaginative (but not both). Faith does not have strong connections. Anyone who values aesthetics or appreciates design has good taste.",
    "nl2fol": {
      "Faith has good energy or a joyful personality.": "has_good_energy(Faith) ∨ joyful_personality(Faith)",
      "Everyone who dedicates themselves to their craft either has a means of creative expression or inspires others (or both).": "∀x (dedicates_to_craft(x) → (creative_expression(x) ∨ inspires_others(x)))",
      "Everyone who is passionate about music has a creative expression or a joyful personality (or both).": "∀x (passionate_about_music(x) → (creative_expression(x) ∨ joyful_personality(x)))",
      "Faith values community.": "values_community(Faith)",
      "Faith appreciates beauty.": "appreciates_beauty(Faith)",
      "For all people, if they volunteer frequently, then they value community and have strong connections.": "∀x (volunteers_frequently(x) → (values_community(x) ∧ has_strong_connections(x)))",
      "Faith does not have an uplifting influence.": "¬uplifting_influence(Faith)",
      "Faith has an outgoing nature.": "has_outgoing_nature(Faith)",
      "If Faith has good energy, then she is an active listener and cares for others.": "has_good_energy(Faith) → (active_listener(Faith) ∧ cares_for_others(Faith))",
      "Anyone with a joyful personality who cares for others will spread happiness.": "∀x ((joyful_personality(x) ∧ cares_for_others(x)) → spreads_happiness(x))",
      "If Faith has a vision, then she is inspirational and encourages others.": "has_vision(Faith) → (inspirational(Faith) ∧ encourages_others(Faith))",
      "If Faith is either passionate about art or passionate about music (but not both), then she is inspirational.": "(passionate_about_art(Faith) ⊕ passionate_about_music(Faith)) → inspirational(Faith)",
      "Everyone who has an outgoing nature either volunteers frequently or cares for others (or both).": "∀x (has_outgoing_nature(x) → (volunteers_frequently(x) ∨ cares_for_others(x)))",
      "Anyone who appreciates beauty has good taste.": "∀x (appreciates_beauty(x) → has_good_taste(x))",
      "If Faith either helps animals or donates to charity (but not both), then she volunteers frequently.": "(helps_animals(Faith) ⊕ donates_to_charity(Faith)) → volunteers_frequently(Faith)",
      "If someone is inspirational, then they have an uplifting influence.": "∀x (inspirational(x) → uplifting_influence(x))",
      "Faith does not spread happiness.": "¬spreads_happiness(Faith)",
      "Faith is imaginative.": "is_imaginative(Faith)",
      "If Faith has creative expression, then she either has good taste or is imaginative (but not both).": "creative_expression(Faith) → (has_good_taste(Faith) ⊕ is_imaginative(Faith))",
      "Faith does not have strong connections.": "¬has_strong_connections(Faith)",
      "Anyone who values aesthetics or appreciates design has good taste.": "∀x ((values_aesthetics(x) ∨ appreciates_design(x)) → has_good_taste(x))"
    },
    "conclusion_fol": "¬passionate_about_art(Faith)"
  },
  {
    "id": 300,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Steven's patients get medical treatment, then they can improve their mental health.",
    "reasoning": "fact1: Steven does not practice mindfulness.\nfact2: Steven does not lead a balanced life.\nrule: If Steven either manages stress or practices mindfulness (but not both), then he leads a balanced life.\nconclusion: Steven does not manage stress.\n\nfact1: Steven is physically inactive.\nrule: Steven either leads a healthy lifestyle or is physically inactive, but not both.\nconclusion: Steven does not lead a healthy lifestyle.\n\nfact1: Steven does not regain confidence.\nrule: If Steven's patients feel better, then they regain confidence.\nconclusion: Steven does not feel better.\n\nfact1: Steven does not lead a healthy lifestyle.\nrule: Steven either has a debilitating condition or leads a healthy lifestyle, but not both.\nconclusion: Steven has a debilitating condition.\n\nfact1: Steven has a debilitating condition.\nfact2: Steven does not seek medical attention.\nrule: Everyone who has a debilitating condition either seeks medical attention or takes medicine (or both).\nconclusion: Steven takes medicine.\n\nfact1: Steven does not manage stress.\nrule: Steven's patients manage stress or overcome depression.\nconclusion: Steven overcomes depression.\n\nfact1: Steven takes medicine.\nfact2: Steven does not feel better.\nrule: If someone takes medicine and improves their mental health, then they feel better.\nconclusion: Steven's patients did not improve their mental health.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Steven's patients get medical treatment, then they can improve their mental health. The correct option is: C.",
    "context": "Lakelynn does not regain confidence. Steven does not practice mindfulness. Steven does not seek medical attention. Orion is physically inactive. If Orion's patients feel better, then they regain confidence. If Steven's patients feel better, then they regain confidence. If Steven's patients experience symptoms, then they either find a support network or overcome depression (or both). Brayan does not lead a balanced life. Steven's patients manage stress or overcome depression. If Lakelynn's patients get medical treatment and follow their prescription, then they can overcome depression. Steven does not regain confidence. Steven either has a debilitating condition or leads a healthy lifestyle, but not both. Lakelynn does not seek medical attention. If someone stays positive, then they can improve their mental health. Steven either leads a healthy lifestyle or is physically inactive, but not both. Steven does not lead a balanced life. Lakelynn's patients manage stress or overcome depression. If Steven either manages stress or practices mindfulness (but not both), then he leads a balanced life. Steven is physically inactive. For anyone who has a support system and engages in hobbies, they can manage stress. Everyone who has a debilitating condition either seeks medical attention or takes medicine (or both). For anyone who eats nutritious food and exercises regularly, they can lead a healthy lifestyle. If someone takes medicine and improves their mental health, then they feel better.",
    "nl2fol": {
      "Lakelynn does not regain confidence.": "¬regains_confidence(Lakelynn)",
      "Steven does not practice mindfulness.": "¬practices_mindfulness(Steven)",
      "Steven does not seek medical attention.": "¬seeks_medical_attention(Steven)",
      "Orion is physically inactive.": "is_physically_inactive(Orion)",
      "If Orion's patients feel better, then they regain confidence.": "feels_better(Orion) → regains_confidence(Orion)",
      "If Steven's patients feel better, then they regain confidence.": "feels_better(Steven) → regains_confidence(Steven)",
      "If Steven's patients experience symptoms, then they either find a support network or overcome depression (or both).": "experiences_symptoms(Steven) → (finds_support_network(Steven) ∨ overcome_depression(Steven))",
      "Brayan does not lead a balanced life.": "¬leads_balanced_life(Brayan)",
      "Steven's patients manage stress or overcome depression.": "manages_stress(Steven) ∨ overcome_depression(Steven)",
      "If Lakelynn's patients get medical treatment and follow their prescription, then they can overcome depression.": "(get_medical_treatment(Lakelynn) ∧ follow_prescription(Lakelynn)) → overcome_depression(Lakelynn)",
      "Steven does not regain confidence.": "¬regains_confidence(Steven)",
      "Steven either has a debilitating condition or leads a healthy lifestyle, but not both.": "has_debilitating_condition(Steven) ⊕ leads_healthy_lifestyle(Steven)",
      "Lakelynn does not seek medical attention.": "¬seek_medical_attention(Lakelynn)",
      "If someone stays positive, then they can improve their mental health.": "∀x (stay_positive(x) → improve_mental_health(x))",
      "Steven either leads a healthy lifestyle or is physically inactive, but not both.": "leads_healthy_lifestyle(Steven) ⊕ is_physically_inactive(Steven)",
      "Steven does not lead a balanced life.": "¬leads_balanced_life(Steven)",
      "Lakelynn's patients manage stress or overcome depression.": "manages_stress(Lakelynn) ∨ overcome_depression(Lakelynn)",
      "If Steven either manages stress or practices mindfulness (but not both), then he leads a balanced life.": "(manages_stress(Steven) ⊕ practices_mindfulness(Steven)) → leads_balanced_life(Steven)",
      "Steven is physically inactive.": "is_physically_inactive(Steven)",
      "For anyone who has a support system and engages in hobbies, they can manage stress.": "∀x ((has_support_system(x) ∧ engages_in_hobbies(x)) → manages_stress(x))",
      "Everyone who has a debilitating condition either seeks medical attention or takes medicine (or both).": "∀x (has_debilitating_condition(x) → (seeks_medical_attention(x) ∨ takes_medicine(x)))",
      "For anyone who eats nutritious food and exercises regularly, they can lead a healthy lifestyle.": "∀x ((eats_nutritious_food(x) ∧ exercises_regularly(x)) → leads_healthy_lifestyle(x))",
      "If someone takes medicine and improves their mental health, then they feel better.": "∀x ((takes_medicine(x) ∧ improve_mental_health(x)) → feels_better(x))"
    },
    "conclusion_fol": "get_medical_treatment(Steven) → improve_mental_health(Steven)"
  },
  {
    "id": 301,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hamza does not hold absolute power.",
    "reasoning": "fact1: Hamza learns quickly.\nfact2: Hamza adapts to situations.\nrule: Anyone who learns quickly and adapts to situations works strategically.\nconclusion: Hamza works strategically.\n\nfact1: Hamza has big ideas.\nfact2: Hamza thinks critically.\nrule: If someone has big ideas and thinks critically, then they set high goals.\nconclusion: Hamza sets high goals.\n\nfact1: Hamza sets high goals.\nfact2: Hamza works strategically.\nrule: If someone sets high goals and works strategically, then they are ambitious.\nconclusion: Hamza is ambitious.\n\nfact1: Hamza does not prioritize discipline.\nfact2: Hamza believes in authority.\nrule: If Hamza either prioritizes discipline or believes in authority (but not both), then he has strict views.\nconclusion: Hamza has strict views.\n\nfact1: Hamza prefers structure.\nrule: If someone prefers structure, then they will value order.\nconclusion: Hamza values order.\n\nfact1: Hamza values order.\nfact2: Hamza has strict views.\nrule: If Hamza values order and has strict views, then he will impose harsh laws.\nconclusion: Hamza imposes harsh laws.\n\nfact1: Hamza is ambitious.\nrule: If someone is ambitious, then they make tough decisions and seek control.\nconclusion: Hamza seeks control.\n\nfact1: Hamza seeks control.\nfact2: Hamza imposes harsh laws.\nrule: If Hamza seeks control, then he will suppress individual freedoms and impose harsh laws.\nconclusion: Hamza suppresses individual freedoms.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Hamza does not hold absolute power. The correct option is: C.",
    "context": "Kash prefers structure. If Judah seeks control, then he will suppress individual freedoms and impose harsh laws. Hamza believes in authority. Charley thinks critically. Charley has big ideas. Hamza thinks critically. Hamza does not prioritize discipline. If someone prefers structure, then they will value order. Everyone who pursues authority either enforces strict rules or seeks control (or both). If Hamza maintains order, then he will impose harsh laws. Everyone who demonstrates leadership either sets high goals or builds confidence (or both). If Hamza is naturally talented, then he either works strategically or is hardworking, but not both. If Hamza either prioritizes discipline or believes in authority (but not both), then he has strict views. If someone sets high goals and works strategically, then they are ambitious. Hamza learns quickly. If Kash holds absolute power, then he will suppress individual freedoms. Charley believes in authority. If someone is ambitious, then they make tough decisions and seek control. If someone has big ideas and thinks critically, then they set high goals. Anyone who learns quickly and adapts to situations works strategically. Hamza has big ideas. Charley adapts to situations. Hamza adapts to situations. Judah does not prioritize discipline. If Hamza seeks control, then he will suppress individual freedoms and impose harsh laws. If Hamza values order and has strict views, then he will impose harsh laws. Hamza prefers structure.",
    "nl2fol": {
      "Kash prefers structure.": "prefers_structure(Kash)",
      "If Judah seeks control, then he will suppress individual freedoms and impose harsh laws.": "seek_control(Judah) → (suppress_individual_freedoms(Judah) ∧ impose_harsh_laws(Judah))",
      "Hamza believes in authority.": "believes_in_authority(Hamza)",
      "Charley thinks critically.": "thinks_critically(Charley)",
      "Charley has big ideas.": "has_big_ideas(Charley)",
      "Hamza thinks critically.": "thinks_critically(Hamza)",
      "Hamza does not prioritize discipline.": "¬prioritizes_discipline(Hamza)",
      "If someone prefers structure, then they will value order.": "∀x (prefers_structure(x) → values_order(x))",
      "Everyone who pursues authority either enforces strict rules or seeks control (or both).": "∀x (pursue_authority(x) → (enforce_strict_rules(x) ∨ seek_control(x)))",
      "If Hamza maintains order, then he will impose harsh laws.": "maintain_order(Hamza) → impose_harsh_laws(Hamza)",
      "Everyone who demonstrates leadership either sets high goals or builds confidence (or both).": "∀x (demonstrates_leadership(x) → (sets_high_goals(x) ∨ builds_confidence(x)))",
      "If Hamza is naturally talented, then he either works strategically or is hardworking, but not both.": "naturally_talented(Hamza) → (works_strategically(Hamza) ⊕ hardworking(Hamza))",
      "If Hamza either prioritizes discipline or believes in authority (but not both), then he has strict views.": "(prioritizes_discipline(Hamza) ⊕ believes_in_authority(Hamza)) → has_strict_views(Hamza)",
      "If someone sets high goals and works strategically, then they are ambitious.": "∀x ((sets_high_goals(x) ∧ works_strategically(x)) → ambitious(x))",
      "Hamza learns quickly.": "learns_quickly(Hamza)",
      "If Kash holds absolute power, then he will suppress individual freedoms.": "hold_absolute_power(Kash) → suppress_individual_freedoms(Kash)",
      "Charley believes in authority.": "believes_in_authority(Charley)",
      "If someone is ambitious, then they make tough decisions and seek control.": "∀x (ambitious(x) → (make_tough_decisions(x) ∧ seek_control(x)))",
      "If someone has big ideas and thinks critically, then they set high goals.": "∀x ((has_big_ideas(x) ∧ thinks_critically(x)) → sets_high_goals(x))",
      "Anyone who learns quickly and adapts to situations works strategically.": "∀x ((learns_quickly(x) ∧ adapts_to_situations(x)) → works_strategically(x))",
      "Hamza has big ideas.": "has_big_ideas(Hamza)",
      "Charley adapts to situations.": "adapts_to_situations(Charley)",
      "Hamza adapts to situations.": "adapts_to_situations(Hamza)",
      "Judah does not prioritize discipline.": "¬prioritizes_discipline(Judah)",
      "If Hamza seeks control, then he will suppress individual freedoms and impose harsh laws.": "seek_control(Hamza) → (suppress_individual_freedoms(Hamza) ∧ impose_harsh_laws(Hamza))",
      "If Hamza values order and has strict views, then he will impose harsh laws.": "(values_order(Hamza) ∧ has_strict_views(Hamza)) → impose_harsh_laws(Hamza)",
      "Hamza prefers structure.": "prefers_structure(Hamza)"
    },
    "conclusion_fol": "¬hold_absolute_power(Hamza)"
  },
  {
    "id": 302,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Julio is not working primarily for social impact.",
    "reasoning": "fact1: Julio gains practical experience.\nrule: Julio either gains practical experience or publishes research, but not both.\nconclusion: Julio does not publish research.\n\nfact1: Julio does not publish research.\nrule: Julio either publishes research or holds patents.\nconclusion: Julio holds patents.\n\nfact1: Julio holds patents.\nrule: If someone holds patents, then they develop practical solutions.\nconclusion: Julio develops practical solutions.\n\nfact1: Julio develops practical solutions.\nrule: Julio either develops practical solutions or pursues academic research, but not both.\nconclusion: Julio does not pursue academic research.\n\nfact1: Julio does not pursue academic research.\nrule: Julio either works for profit or pursues academic research, but not both.\nconclusion: Julio is working primarily for profit.\n\nfact1: Julio is working primarily for profit.\nrule: Julio is either working primarily for profit or working primarily for social impact, but not both.\nconclusion: Julio is not working primarily for social impact.\n\nTherefore, it is true that Julio is not working primarily for social impact. The correct option is: A.",
    "context": "Julio is either working primarily for profit or working primarily for social impact, but not both. Gwen either works for profit or pursues academic research, but not both. Julio either publishes research or holds patents. If someone holds patents, then they develop practical solutions. Julio gains practical experience. Rosemary either publishes research or holds patents. Araceli either develops practical solutions or pursues academic research, but not both. Julio either pursues philanthropy or works for profit. Julio either works for profit or pursues academic research, but not both. Julio gains industry experience or pursues academic research. Julio either develops practical solutions or pursues academic research, but not both. Araceli either gains practical experience or publishes research, but not both. Julio either gains practical experience or publishes research, but not both.",
    "nl2fol": {
      "Julio is either working primarily for profit or working primarily for social impact, but not both.": "works_for_profit(Julio) ⊕ works_for_social_impact(Julio)",
      "Gwen either works for profit or pursues academic research, but not both.": "pursues_academic_research(Gwen) ⊕ works_for_profit(Gwen)",
      "Julio either publishes research or holds patents.": "publishes_research(Julio) ∨ holds_patents(Julio)",
      "If someone holds patents, then they develop practical solutions.": "∀x (holds_patents(x) → develops_practical_solutions(x))",
      "Julio gains practical experience.": "gains_practical_experience(Julio)",
      "Rosemary either publishes research or holds patents.": "publishes_research(Rosemary) ∨ holds_patents(Rosemary)",
      "Araceli either develops practical solutions or pursues academic research, but not both.": "develops_practical_solutions(Araceli) ⊕ pursues_academic_research(Araceli)",
      "Julio either pursues philanthropy or works for profit.": "pursues_philanthropy(Julio) ∨ works_for_profit(Julio)",
      "Julio either works for profit or pursues academic research, but not both.": "pursues_academic_research(Julio) ⊕ works_for_profit(Julio)",
      "Julio gains industry experience or pursues academic research.": "gains_industry_experience(Julio) ∨ pursues_academic_research(Julio)",
      "Julio either develops practical solutions or pursues academic research, but not both.": "develops_practical_solutions(Julio) ⊕ pursues_academic_research(Julio)",
      "Araceli either gains practical experience or publishes research, but not both.": "gains_practical_experience(Araceli) ⊕ publishes_research(Araceli)",
      "Julio either gains practical experience or publishes research, but not both.": "gains_practical_experience(Julio) ⊕ publishes_research(Julio)"
    },
    "conclusion_fol": "¬works_for_social_impact(Julio)"
  },
  {
    "id": 303,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Noelle does not have a green thumb.",
    "reasoning": "fact1: Noelle explores nature.\nfact2: Noelle does not document her findings.\nrule: If Noelle explores nature, then she either documents her findings or collects samples (or both).\nconclusion: Noelle collects samples.\n\nfact1: Noelle has curiosity.\nfact2: Noelle collects samples.\nrule: Anyone who has curiosity and collects samples can conduct botanical research.\nconclusion: Noelle conducts botanical research.\n\nfact1: Noelle examines fungi.\nrule: Noelle either examines fungi or studies common plants, but not both.\nconclusion: Noelle does not study common plants.\n\nfact1: Noelle conducts botanical research.\nfact2: Noelle does not study common plants.\nrule: If Noelle conducts botanical research, then she either cultivates rare species or studies common plants, but not both.\nconclusion: Noelle cultivates rare species.\n\nfact1: Noelle cultivates rare species.\nfact2: Noelle does not become an expert.\nrule: If someone tends to plants and cultivates rare species, then they can become an expert.\nconclusion: Noelle cannot tend to plants.\n\nfact1: Noelle cannot tend to plants.\nrule: If Noelle does not have a green thumb or receives training, then she can tend to plants.\nconclusion: Noelle does not not have a green thumb.\n\nfact1: Noelle does not not have a green thumb.\nrule: For every human, either they have a green thumb or they do not have a green thumb, but not both.\nconclusion: Noelle does not have a green thumb.\n\nTherefore, it is false that Noelle does not have a green thumb. The correct option is: B.",
    "context": "Noelle does not become an expert. Anyone who has curiosity and collects samples can conduct botanical research. Noelle does not document her findings. If Noelle does not have a green thumb or receives training, then she can tend to plants. If Noelle explores nature, then she either documents her findings or collects samples (or both). For every human, either they have a green thumb or they do not have a green thumb, but not both. If someone tends to plants and cultivates rare species, then they can become an expert. Noelle examines fungi. Noelle has curiosity. Noelle explores nature. Noelle either examines fungi or studies common plants, but not both. If Noelle conducts botanical research, then she either cultivates rare species or studies common plants, but not both.",
    "nl2fol": {
      "Noelle does not become an expert.": "¬becomes_expert(Noelle)",
      "Anyone who has curiosity and collects samples can conduct botanical research.": "∀x ((has_curiosity(x) ∧ collects_samples(x)) → conducts_botanical_research(x))",
      "Noelle does not document her findings.": "¬documents_findings(Noelle)",
      "If Noelle does not have a green thumb or receives training, then she can tend to plants.": "(has_no_green_thumb(Noelle) ∨ receives_training(Noelle)) → tends_plants(Noelle)",
      "If Noelle explores nature, then she either documents her findings or collects samples (or both).": "explores_nature(Noelle) → (documents_findings(Noelle) ∨ collects_samples(Noelle))",
      "For every human, either they have a green thumb or they do not have a green thumb, but not both.": "∀x (has_green_thumb(x) ⊕ has_no_green_thumb(x))",
      "If someone tends to plants and cultivates rare species, then they can become an expert.": "∀x ((tends_plants(x) ∧ cultivates_rare_species(x)) → becomes_expert(x))",
      "Noelle examines fungi.": "examines_fungi(Noelle)",
      "Noelle has curiosity.": "has_curiosity(Noelle)",
      "Noelle explores nature.": "explores_nature(Noelle)",
      "Noelle either examines fungi or studies common plants, but not both.": "examines_fungi(Noelle) ⊕ studies_common_plants(Noelle)",
      "If Noelle conducts botanical research, then she either cultivates rare species or studies common plants, but not both.": "conducts_botanical_research(Noelle) → (cultivates_rare_species(Noelle) ⊕ studies_common_plants(Noelle))"
    },
    "conclusion_fol": "¬has_green_thumb(Noelle)"
  },
  {
    "id": 304,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Anders is meticulous in his research.",
    "reasoning": "fact1: Anders does not pursue artistic interests.\nrule: Anders either pursues artistic interests or contributes to science, but not both.\nconclusion: Anders contributes to science.\n\nfact1: Anders does not explore nature.\nfact2: Anders contributes to science.\nrule: If Anders is passionate about botany, then he explores nature and contributes to science.\nconclusion: Anders is not passionate about botany.\n\nfact1: Anders does not earn accolades.\nrule: Anders either remains unnoticed or earns accolades, but not both.\nconclusion: Anders remains unnoticed.\n\nfact1: Anders remains unnoticed.\nrule: Anders either remains unnoticed or gains recognition, but not both.\nconclusion: Anders does not gain recognition.\n\nfact1: Anders publishes research.\nfact2: Anders does not gain recognition.\nrule: If Anders either makes notable discoveries or publishes research (but not both), then he gains recognition.\nconclusion: Anders makes notable discoveries.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Anders is meticulous in his research. The correct option is: C.",
    "context": "If someone avoids publicity and keeps a low profile, then they remain unnoticed. Anders publishes research. If someone either collects plant samples or studies flora (but not both), then they are passionate about botany. Anders does not earn accolades. Anders does not explore nature. If Anders is influential, then he either builds a network or gains recognition (but not both). Anders either remains unnoticed or earns accolades, but not both. Anders does not pursue artistic interests. Anders either remains unnoticed or gains recognition, but not both. If Anders is passionate about botany, then he explores nature and contributes to science. If Anders either makes notable discoveries or publishes research (but not both), then he gains recognition. Anders either pursues artistic interests or contributes to science, but not both.",
    "nl2fol": {
      "If someone avoids publicity and keeps a low profile, then they remain unnoticed.": "∀x ((avoids_publicity(x) ∧ keeps_low_profile(x)) → remain_unnoticed(x))",
      "Anders publishes research.": "publish_research(Anders)",
      "If someone either collects plant samples or studies flora (but not both), then they are passionate about botany.": "∀x ((collects_plant_samples(x) ⊕ studies_flora(x)) → passionate_about_botany(x))",
      "Anders does not earn accolades.": "¬earn_accolades(Anders)",
      "Anders does not explore nature.": "¬explore_nature(Anders)",
      "If Anders is influential, then he either builds a network or gains recognition (but not both).": "be_influential(Anders) → (build_network(Anders) ⊕ gain_recognition(Anders))",
      "Anders either remains unnoticed or earns accolades, but not both.": "remain_unnoticed(Anders) ⊕ earn_accolades(Anders)",
      "Anders does not pursue artistic interests.": "¬pursue_artistic_interests(Anders)",
      "Anders either remains unnoticed or gains recognition, but not both.": "remain_unnoticed(Anders) ⊕ gain_recognition(Anders)",
      "If Anders is passionate about botany, then he explores nature and contributes to science.": "passionate_about_botany(Anders) → (explore_nature(Anders) ∧ contribute_to_science(Anders))",
      "If Anders either makes notable discoveries or publishes research (but not both), then he gains recognition.": "(make_notable_discoveries(Anders) ⊕ publish_research(Anders)) → gain_recognition(Anders)",
      "Anders either pursues artistic interests or contributes to science, but not both.": "pursue_artistic_interests(Anders) ⊕ contribute_to_science(Anders)"
    },
    "conclusion_fol": "meticulous_in_research(Anders)"
  },
  {
    "id": 305,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Arlo contributes to conservation.",
    "reasoning": "fact1: Arlo appreciates nature.\nfact2: Arlo understands ecosystems.\nrule: If a botanist appreciates nature and understands ecosystems, then they can nurture gardens.\nconclusion: Arlo nurtures gardens.\n\nfact1: Arlo conducts outdoor experiments.\nrule: Anyone who conducts outdoor experiments will collect field data.\nconclusion: Arlo collects field data.\n\nfact1: Arlo studies genetics.\nfact2: Arlo collects field data.\nrule: If a botanist studies genetics and collects field data, then they can publish groundbreaking work.\nconclusion: Arlo publishes groundbreaking work.\n\nfact1: Arlo nurtures gardens.\nrule: If Arlo nurtures gardens, then he is passionate about plants and collaborates with experts.\nconclusion: Arlo is passionate about plants.\n\nfact1: Arlo is passionate about plants.\nrule: If Arlo is passionate about plants, then he is dedicated to research and mentors students.\nconclusion: Arlo is dedicated to research.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Arlo contributes to conservation. The correct option is: C.",
    "context": "Arlo understands ecosystems. Arlo appreciates nature. Diana conducts outdoor experiments. If Arlo is passionate about plants, then he is dedicated to research and mentors students. Francis studies genetics. Arlo studies genetics. If a botanist appreciates nature and understands ecosystems, then they can nurture gardens. If Rowen nurtures gardens, then he is passionate about plants and collaborates with experts. Francis understands ecosystems. If Diana loves the outdoors, then he experiments with new techniques and collaborates with experts. If a botanist studies genetics and collects field data, then they can publish groundbreaking work. If Rowen is passionate about plants, then he is dedicated to research and mentors students. Anyone who conducts outdoor experiments will collect field data. If Arlo owns an orchard, then he values biodiversity and collaborates with experts. Rowen does not love the outdoors. If Arlo nurtures gardens, then he is passionate about plants and collaborates with experts. Arlo conducts outdoor experiments.",
    "nl2fol": {
      "Arlo understands ecosystems.": "understands_ecosystems(Arlo)",
      "Arlo appreciates nature.": "appreciates_nature(Arlo)",
      "Diana conducts outdoor experiments.": "conducts_outdoor_experiments(Diana)",
      "If Arlo is passionate about plants, then he is dedicated to research and mentors students.": "passionate_about_plants(Arlo) → (dedicated_to_research(Arlo) ∧ mentor_students(Arlo))",
      "Francis studies genetics.": "studies_genetics(Francis)",
      "Arlo studies genetics.": "studies_genetics(Arlo)",
      "If a botanist appreciates nature and understands ecosystems, then they can nurture gardens.": "∀x ((appreciates_nature(x) ∧ understands_ecosystems(x)) → nurture_gardens(x))",
      "If Rowen nurtures gardens, then he is passionate about plants and collaborates with experts.": "nurture_gardens(Rowen) → (passionate_about_plants(Rowen) ∧ collaborate_with_experts(Rowen))",
      "Francis understands ecosystems.": "understand_ecosystems(Francis)",
      "If Diana loves the outdoors, then he experiments with new techniques and collaborates with experts.": "love_outdoors(Diana) → (experiment_new_techniques(Diana) ∧ collaborate_with_experts(Diana))",
      "If a botanist studies genetics and collects field data, then they can publish groundbreaking work.": "∀x ((studies_genetics(x) ∧ collects_field_data(x)) → publish_groundbreaking_work(x))",
      "If Rowen is passionate about plants, then he is dedicated to research and mentors students.": "passionate_about_plants(Rowen) → (dedicated_to_research(Rowen) ∧ mentor_students(Rowen))",
      "Anyone who conducts outdoor experiments will collect field data.": "∀x (conducts_outdoor_experiments(x) → collects_field_data(x))",
      "If Arlo owns an orchard, then he values biodiversity and collaborates with experts.": "owns_orchard(Arlo) → (values_biodiversity(Arlo) ∧ collaborate_with_experts(Arlo))",
      "Rowen does not love the outdoors.": "¬love_outdoors(Rowen)",
      "If Arlo nurtures gardens, then he is passionate about plants and collaborates with experts.": "nurture_gardens(Arlo) → (passionate_about_plants(Arlo) ∧ collaborate_with_experts(Arlo))",
      "Arlo conducts outdoor experiments.": "conducts_outdoor_experiments(Arlo)"
    },
    "conclusion_fol": "contribute_to_conservation(Arlo)"
  },
  {
    "id": 306,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Treasure is valued.",
    "reasoning": "fact1: Treasure has muscle mass.\nfact2: Treasure has light bones.\nrule: If Treasure has muscle mass or has light bones, then she is built for speed.\nconclusion: Treasure is built for speed.\n\nfact1: Treasure is prone to nervousness.\nrule: Treasure is either prone to nervousness or responds well to training, but not both.\nconclusion: Treasure does not respond to training.\n\nfact1: Treasure is disciplined.\nfact2: Treasure has stamina.\nrule: If Treasure is disciplined, then she is either enduring or has stamina, but not both.\nconclusion: Treasure does not have endurance.\n\nfact1: Treasure is built for speed.\nrule: Any horse that is built for speed or highly trained is athletic.\nconclusion: Treasure is athletic.\n\nfact1: Treasure is athletic.\nrule: All athletic horses are fast and strong-willed.\nconclusion: Treasure is fast.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Treasure is valued. The correct option is: C.",
    "context": "If Treasure is disciplined, then she is either enduring or has stamina, but not both. Treasure has light bones. Treasure has muscle mass. If Byron has endurance or responds to training, then she is strong-willed. Treasure has stamina. If Matteo is disciplined, then she is either enduring or has stamina, but not both. Matteo is loyal. For all horses, if they are agile, then they are athletic and have good reflexes. Treasure is either prone to nervousness or responds well to training, but not both. Treasure is prone to nervousness. All athletic horses are fast and strong-willed. Any horse that is built for speed or highly trained is athletic. If Treasure has muscle mass or has light bones, then she is built for speed. Byron is disciplined. Any horse that handles pressure has endurance or remains calm (or both). Treasure is disciplined.",
    "nl2fol": {
      "If Treasure is disciplined, then she is either enduring or has stamina, but not both.": "is_disciplined(Treasure) → (has_endurance(Treasure) ⊕ has_stamina(Treasure))",
      "Treasure has light bones.": "has_light_bones(Treasure)",
      "Treasure has muscle mass.": "has_muscle_mass(Treasure)",
      "If Byron has endurance or responds to training, then she is strong-willed.": "(has_endurance(Byron) ∨ responds_to_training(Byron)) → strong_willed(Byron)",
      "Treasure has stamina.": "has_stamina(Treasure)",
      "If Matteo is disciplined, then she is either enduring or has stamina, but not both.": "is_disciplined(Matteo) → (has_endurance(Matteo) ⊕ has_stamina(Matteo))",
      "Matteo is loyal.": "be_loyal(Matteo)",
      "For all horses, if they are agile, then they are athletic and have good reflexes.": "∀x (agile(x) → (athletic(x) ∧ has_good_reflexes(x)))",
      "Treasure is either prone to nervousness or responds well to training, but not both.": "gets_nervous(Treasure) ⊕ responds_to_training(Treasure)",
      "Treasure is prone to nervousness.": "gets_nervous(Treasure)",
      "All athletic horses are fast and strong-willed.": "∀x (athletic(x) → (fast(x) ∧ strong_willed(x)))",
      "Any horse that is built for speed or highly trained is athletic.": "∀x ((built_for_speed(x) ∨ highly_trained(x)) → athletic(x))",
      "If Treasure has muscle mass or has light bones, then she is built for speed.": "(has_muscle_mass(Treasure) ∨ has_light_bones(Treasure)) → built_for_speed(Treasure)",
      "Byron is disciplined.": "is_disciplined(Byron)",
      "Any horse that handles pressure has endurance or remains calm (or both).": "∀x (handles_pressure(x) → (has_endurance(x) ∨ remains_calm(x)))",
      "Treasure is disciplined.": "is_disciplined(Treasure)"
    },
    "conclusion_fol": "valued(Treasure)"
  },
  {
    "id": 307,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sevyn does not develop extraordinary abilities.",
    "reasoning": "fact1: Sevyn explores planetary environments.\nrule: Sevyn either explores planetary environments or conducts field research, but these two activities are not necessarily related.\nconclusion: Sevyn does not conduct field research.\n\nfact1: Sevyn does not conduct field research.\nrule: A being either conducts field research or experiments with DNA, but these two activities are not necessarily related.\nconclusion: Sevyn experiments with DNA.\n\nfact1: Sevyn analyzes data.\nrule: If Sevyn works in a lab or analyzes data, then she studies genetics.\nconclusion: Sevyn studies genetics.\n\nfact1: Sevyn studies genetics.\nrule: Sevyn either studies genetics or is exposed to a mutagenic serum, but not both.\nconclusion: Sevyn is not exposed to a mutagenic serum.\n\nfact1: Sevyn experiments with DNA.\nrule: Any being that experiments with DNA or uses unstable compounds can have genetic mutations.\nconclusion: Sevyn has genetic mutations.\n\nfact1: Sevyn is not exposed to a mutagenic serum.\nfact2: Sevyn has genetic mutations.\nrule: If Sevyn is exposed to a mutagenic serum or has genetic mutations, then she develops extraordinary abilities.\nconclusion: Sevyn develops extraordinary abilities.\n\nTherefore, it is false that Sevyn does not develop extraordinary abilities. The correct option is: B.",
    "context": "Any being that experiments with DNA or uses unstable compounds can have genetic mutations. Sevyn analyzes data. Sevyn explores planetary environments. Any being that is radiation sensitive or undergoes cell division can have genetic mutations. If Sevyn works in a lab or analyzes data, then she studies genetics. Sevyn either studies genetics or is exposed to a mutagenic serum, but not both. Jimena explores planetary environments. If Sevyn is exposed to a mutagenic serum or has genetic mutations, then she develops extraordinary abilities. If Lauryn works in a lab or analyzes data, then she studies genetics. Malakai analyzes data. Lauryn either studies genetics or is exposed to a mutagenic serum, but not both. If Sevyn craves knowledge, then she seeks new discoveries and conducts field research. A being either conducts field research or experiments with DNA, but these two activities are not necessarily related. Sevyn either explores planetary environments or conducts field research, but these two activities are not necessarily related.",
    "nl2fol": {
      "Any being that experiments with DNA or uses unstable compounds can have genetic mutations.": "∀x ((experiment_with_DNA(x) ∨ use_unstable_compounds(x)) → has_genetic_mutations(x))",
      "Sevyn analyzes data.": "analyzes_data(Sevyn)",
      "Sevyn explores planetary environments.": "explores_planetary_environments(Sevyn)",
      "Any being that is radiation sensitive or undergoes cell division can have genetic mutations.": "∀x ((is_radiation_sensitive(x) ∨ undergoes_cell_division(x)) → has_genetic_mutations(x))",
      "If Sevyn works in a lab or analyzes data, then she studies genetics.": "(works_in_lab(Sevyn) ∨ analyzes_data(Sevyn)) → studies_genetics(Sevyn)",
      "Sevyn either studies genetics or is exposed to a mutagenic serum, but not both.": "studies_genetics(Sevyn) ⊕ exposed_to_mutagenic_serum(Sevyn)",
      "Jimena explores planetary environments.": "explores_planetary_environments(Jimena)",
      "If Sevyn is exposed to a mutagenic serum or has genetic mutations, then she develops extraordinary abilities.": "(exposed_to_mutagenic_serum(Sevyn) ∨ has_genetic_mutations(Sevyn)) → develops_extraordinary_abilities(Sevyn)",
      "If Lauryn works in a lab or analyzes data, then she studies genetics.": "(works_in_lab(Lauryn) ∨ analyzes_data(Lauryn)) → studies_genetics(Lauryn)",
      "Malakai analyzes data.": "analyze_data(Malakai)",
      "Lauryn either studies genetics or is exposed to a mutagenic serum, but not both.": "studies_genetics(Lauryn) ⊕ exposed_to_mutagenic_serum(Lauryn)",
      "If Sevyn craves knowledge, then she seeks new discoveries and conducts field research.": "craves_knowledge(Sevyn) → (seeks_new_discoveries(Sevyn) ∧ conducts_field_research(Sevyn))",
      "A being either conducts field research or experiments with DNA, but these two activities are not necessarily related.": "∀x (conducts_field_research(x) ⊕ experiment_with_DNA(x))",
      "Sevyn either explores planetary environments or conducts field research, but these two activities are not necessarily related.": "explores_planetary_environments(Sevyn) ⊕ conducts_field_research(Sevyn)"
    },
    "conclusion_fol": "¬develops_extraordinary_abilities(Sevyn)"
  },
  {
    "id": 308,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lawson is not a talented writer.",
    "reasoning": "fact1: Lawson does not crave the spotlight.\nrule: Lawson either prefers anonymity or craves the spotlight.\nconclusion: Lawson prefers anonymity.\n\nfact1: Lawson desires wealth.\nfact2: Lawson values privacy.\nrule: If Lawson seeks recognition, then he either desires wealth or values privacy (but not both).\nconclusion: Lawson does not seek recognition.\n\nfact1: Lawson prefers anonymity.\nfact2: Lawson is highly skilled.\nrule: If Lawson prefers anonymity and is highly skilled, then he ghostwrites books.\nconclusion: Lawson ghostwrites books.\n\nfact1: Lawson does not seek recognition.\nrule: Lawson either seeks recognition or eschews fame, but not both.\nconclusion: Lawson eschews fame.\n\nfact1: Lawson ghostwrites books.\nfact2: Lawson eschews fame.\nrule: Anyone who ghostwrites books or eschews fame works behind the scenes.\nconclusion: Lawson works behind the scenes.\n\nfact1: Lawson works behind the scenes.\nfact2: Lawson is not influential.\nrule: If Lawson is a talented writer and works behind the scenes, then he is influential.\nconclusion: Lawson is not a talented writer.\n\nTherefore, it is true that Lawson is not a talented writer. The correct option is: A.",
    "context": "If Lawson seeks recognition, then he either desires wealth or values privacy (but not both). If Lawson writes for others, then he will ghostwrite books. Lawson contributes significantly or works behind the scenes. Edwin is highly skilled. Raphael is not influential. If Lawson avoids publicity, then he either shuns attention or eschews fame, but not both. Lawson is highly skilled. Raphael either prefers anonymity or craves the spotlight. If Lawson is a talented writer and works behind the scenes, then he is influential. Lawson either seeks recognition or eschews fame, but not both. Anyone who ghostwrites books or eschews fame works behind the scenes. Lawson is not influential. Raphael either seeks recognition or eschews fame, but not both. Lawson desires wealth. Lawson values privacy. Lawson does not crave the spotlight. If Edwin seeks recognition, then he either desires wealth or values privacy (but not both). If someone has achievements and wants accolades, then they seek recognition. If Raphael prefers anonymity and is highly skilled, then he ghostwrites books. Lawson either prefers anonymity or craves the spotlight. If Lawson prefers anonymity and is highly skilled, then he ghostwrites books.",
    "nl2fol": {
      "If Lawson seeks recognition, then he either desires wealth or values privacy (but not both).": "seeks_recognition(Lawson) → (desires_wealth(Lawson) ⊕ values_privacy(Lawson))",
      "If Lawson writes for others, then he will ghostwrite books.": "writes_for_others(Lawson) → ghostwrites_books(Lawson)",
      "Lawson contributes significantly or works behind the scenes.": "contributes_significantly(Lawson) ∨ works_behind_the_scenes(Lawson)",
      "Edwin is highly skilled.": "highly_skilled(Edwin)",
      "Raphael is not influential.": "¬influential(Raphael)",
      "If Lawson avoids publicity, then he either shuns attention or eschews fame, but not both.": "avoids_publicity(Lawson) → (shuns_attention(Lawson) ⊕ eschews_fame(Lawson))",
      "Lawson is highly skilled.": "highly_skilled(Lawson)",
      "Raphael either prefers anonymity or craves the spotlight.": "prefers_anonymity(Raphael) ∨ craves_spotlight(Raphael)",
      "If Lawson is a talented writer and works behind the scenes, then he is influential.": "(talented_writer(Lawson) ∧ works_behind_the_scenes(Lawson)) → influential(Lawson)",
      "Lawson either seeks recognition or eschews fame, but not both.": "eschews_fame(Lawson) ⊕ seeks_recognition(Lawson)",
      "Anyone who ghostwrites books or eschews fame works behind the scenes.": "∀x ((ghostwrites_books(x) ∨ eschews_fame(x)) → works_behind_the_scenes(x))",
      "Lawson is not influential.": "¬influential(Lawson)",
      "Raphael either seeks recognition or eschews fame, but not both.": "eschews_fame(Raphael) ⊕ seeks_recognition(Raphael)",
      "Lawson desires wealth.": "desires_wealth(Lawson)",
      "Lawson values privacy.": "values_privacy(Lawson)",
      "Lawson does not crave the spotlight.": "¬craves_spotlight(Lawson)",
      "If Edwin seeks recognition, then he either desires wealth or values privacy (but not both).": "seeks_recognition(Edwin) → (desires_wealth(Edwin) ⊕ values_privacy(Edwin))",
      "If someone has achievements and wants accolades, then they seek recognition.": "∀x ((has_achievements(x) ∧ wants_accolades(x)) → seeks_recognition(x))",
      "If Raphael prefers anonymity and is highly skilled, then he ghostwrites books.": "prefers_anonymity(Raphael) → (highly_skilled(Raphael) ∧ ghostwrites_books(Raphael))",
      "Lawson either prefers anonymity or craves the spotlight.": "prefers_anonymity(Lawson) ∨ craves_spotlight(Lawson)",
      "If Lawson prefers anonymity and is highly skilled, then he ghostwrites books.": "prefers_anonymity(Lawson) → (highly_skilled(Lawson) ∧ ghostwrites_books(Lawson))"
    },
    "conclusion_fol": "¬talented_writer(Lawson)"
  },
  {
    "id": 309,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dakari can weave illusions.",
    "reasoning": "fact1: Dakari roams dreamscapes.\nfact2: Dakari does not inspire awe.\nrule: For any mythical creature that roams dreamscapes and is omnipotent, they will inspire awe.\nconclusion: Dakari is not omnipotent.\n\nfact1: Dakari sees beyond the surface.\nrule: If Dakari sees beyond the surface or listens deeply, then he can hold wisdom.\nconclusion: Dakari holds wisdom.\n\nfact1: Dakari embodies balance.\nfact2: Dakari holds wisdom.\nrule: If Dakari embodies balance, then he either holds wisdom or masters the cosmos, but not both.\nconclusion: Dakari does not master the cosmos.\n\nfact1: Dakari understands nature.\nfact2: Dakari does not master the cosmos.\nrule: If Dakari understands nature and controls elements, then he masters the cosmos.\nconclusion: Dakari does not control elements.\n\nfact1: Dakari does not control elements.\nfact2: Dakari is not omnipotent.\nrule: If Dakari either controls elements or has powers (but not both), then he is omnipotent.\nconclusion: Dakari does not have powers.\n\nfact1: Dakari does not have powers.\nrule: Every mythical creature has powers or possesses magic.\nconclusion: Dakari possesses magic.\n\nfact1: Dakari possesses magic.\nrule: If Dakari possesses magic, then he can weave illusions.\nconclusion: Dakari can weave illusions.\n\nTherefore, it is true that Dakari can weave illusions. The correct option is: A.",
    "context": "For any mythical creature that roams dreamscapes and is omnipotent, they will inspire awe. If Elaine sees beyond the surface or listens deeply, then he can hold wisdom. If Elaine embodies balance, then he either holds wisdom or masters the cosmos, but not both. If Dakari possesses magic, then he can weave illusions. If Dakari understands nature and controls elements, then he masters the cosmos. If Dakari sees beyond the surface or listens deeply, then he can hold wisdom. Dakari does not inspire awe. Dakari sees beyond the surface. Dakari embodies balance. If Dakari shapeshifts his form, then he either navigates realms or controls elements. Dakari understands nature. If Dakari possesses intuition, then he either holds wisdom or speaks the truth, but not both. Every mythical creature has powers or possesses magic. If Dakari embodies balance, then he either holds wisdom or masters the cosmos, but not both. Dakari roams dreamscapes. If Dakari either controls elements or has powers (but not both), then he is omnipotent.",
    "nl2fol": {
      "For any mythical creature that roams dreamscapes and is omnipotent, they will inspire awe.": "∀x ((roams_dreamscapes(x) ∧ is_omnipotent(x)) → inspires_awe(x))",
      "If Elaine sees beyond the surface or listens deeply, then he can hold wisdom.": "(sees_beyond(Elaine) ∨ listens_deeply(Elaine)) → holds_wisdom(Elaine)",
      "If Elaine embodies balance, then he either holds wisdom or masters the cosmos, but not both.": "embodies_balance(Elaine) → (holds_wisdom(Elaine) ⊕ masters_cosmos(Elaine))",
      "If Dakari possesses magic, then he can weave illusions.": "possesses_magic(Dakari) → weave_illusions(Dakari)",
      "If Dakari understands nature and controls elements, then he masters the cosmos.": "(understands_nature(Dakari) ∧ controls_elements(Dakari)) → masters_cosmos(Dakari)",
      "If Dakari sees beyond the surface or listens deeply, then he can hold wisdom.": "(sees_beyond(Dakari) ∨ listens_deeply(Dakari)) → holds_wisdom(Dakari)",
      "Dakari does not inspire awe.": "¬inspires_awe(Dakari)",
      "Dakari sees beyond the surface.": "sees_beyond(Dakari)",
      "Dakari embodies balance.": "embodies_balance(Dakari)",
      "If Dakari shapeshifts his form, then he either navigates realms or controls elements.": "shapeshifts_form(Dakari) → (navigates_realms(Dakari) ∨ controls_elements(Dakari))",
      "Dakari understands nature.": "understands_nature(Dakari)",
      "If Dakari possesses intuition, then he either holds wisdom or speaks the truth, but not both.": "possesses_intuition(Dakari) → (speaks_truth(Dakari) ⊕ holds_wisdom(Dakari))",
      "Every mythical creature has powers or possesses magic.": "∀x (has_powers(x) ∨ possesses_magic(x))",
      "If Dakari embodies balance, then he either holds wisdom or masters the cosmos, but not both.": "embodies_balance(Dakari) → (holds_wisdom(Dakari) ⊕ masters_cosmos(Dakari))",
      "Dakari roams dreamscapes.": "roams_dreamscapes(Dakari)",
      "If Dakari either controls elements or has powers (but not both), then he is omnipotent.": "(controls_elements(Dakari) ⊕ has_powers(Dakari)) → is_omnipotent(Dakari)"
    },
    "conclusion_fol": "weave_illusions(Dakari)"
  },
  {
    "id": 310,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Melissa starts a food business.",
    "reasoning": "fact1: Melissa does not create menus.\nfact2: Melissa develops recipes.\nrule: If Melissa either creates menus or develops recipes (but not both), then she is a skilled chef.\nconclusion: Melissa is a skilled chef.\n\nfact1: Melissa is a skilled chef.\nfact2: Melissa writes cookbooks.\nrule: If Melissa is a skilled chef, then she either hosts cooking classes or writes cookbooks, but not both.\nconclusion: Melissa does not host cooking classes.\n\nfact1: Melissa does not create unique recipes.\nfact2: Melissa experiments with spice combinations.\nrule: If Melissa either creates unique recipes or experiments with spice combinations (but not both), then she understands flavor profiles.\nconclusion: Melissa understands flavor profiles.\n\nfact1: Melissa is a foodie.\nfact2: Melissa understands flavor profiles.\nrule: If Melissa is a foodie, then she either masters cooking skills or understands flavor profiles (but not both).\nconclusion: Melissa does not master cooking skills.\n\nfact1: Melissa does not master cooking skills.\nrule: Melissa masters cooking skills or learns preservation techniques.\nconclusion: Melissa learns preservation techniques.\n\nfact1: Melissa does not host cooking classes.\nrule: Melissa either hosts cooking classes or becomes a culinary influencer, but not both.\nconclusion: Melissa becomes a culinary influencer.\n\nfact1: Melissa learns preservation techniques.\nfact2: Melissa becomes a culinary influencer.\nrule: If Melissa learns preservation techniques, then she can either start a food business or become a culinary influencer, but not both.\nconclusion: Melissa does not start a food business.\n\nTherefore, it is false that Melissa starts a food business. The correct option is: B.",
    "context": "Melissa experiments with spice combinations. If Lottie learns preservation techniques, then she can either start a food business or become a culinary influencer, but not both. Anyone who shares cooking tips or builds an online presence can become a culinary influencer. Melissa masters cooking skills or learns preservation techniques. Melissa is a foodie. Maxwell writes cookbooks. Melissa develops recipes. Lottie either hosts cooking classes or becomes a culinary influencer, but not both. If Melissa either creates menus or develops recipes (but not both), then she is a skilled chef. If Melissa either creates unique recipes or experiments with spice combinations (but not both), then she understands flavor profiles. Melissa writes cookbooks. Lottie does not create menus. If Lottie either creates menus or develops recipes (but not both), then she is a skilled chef. If Melissa enjoys experimenting, then she appreciates quality ingredients and masters cooking skills. Melissa either hosts cooking classes or becomes a culinary influencer, but not both. If Corbin either creates unique recipes or experiments with spice combinations (but not both), then she understands flavor profiles. Melissa does not create menus. If Melissa is a foodie, then she either masters cooking skills or understands flavor profiles (but not both). If Melissa is a skilled chef, then she either hosts cooking classes or writes cookbooks, but not both. Anyone who grows their own produce either learns preservation techniques or appreciates traditional cuisine (or both). Melissa does not create unique recipes. If Melissa shares knowledge, then she hosts cooking classes and teaches others. If Melissa learns preservation techniques, then she can either start a food business or become a culinary influencer, but not both. If Corbin is a foodie, then she either masters cooking skills or understands flavor profiles (but not both). If Melissa has culinary experience and practices cooking, then she can be a skilled chef. If Melissa either pairs wine with food or balances spices (but not both), then she understands flavor profiles.",
    "nl2fol": {
      "Melissa experiments with spice combinations.": "experiment_spice_combinations(Melissa)",
      "If Lottie learns preservation techniques, then she can either start a food business or become a culinary influencer, but not both.": "learn_preservation_techniques(Lottie) → (start_food_business(Lottie) ⊕ become_culinary_influencer(Lottie))",
      "Anyone who shares cooking tips or builds an online presence can become a culinary influencer.": "∀x ((share_cooking_tips(x) ∨ build_online_presence(x)) → become_culinary_influencer(x))",
      "Melissa masters cooking skills or learns preservation techniques.": "master_cooking_skills(Melissa) ∨ learn_preservation_techniques(Melissa)",
      "Melissa is a foodie.": "is_foodie(Melissa)",
      "Maxwell writes cookbooks.": "write_cookbooks(Maxwell)",
      "Melissa develops recipes.": "develops_recipes(Melissa)",
      "Lottie either hosts cooking classes or becomes a culinary influencer, but not both.": "host_cooking_classes(Lottie) ⊕ become_culinary_influencer(Lottie)",
      "If Melissa either creates menus or develops recipes (but not both), then she is a skilled chef.": "(creates_menu(Melissa) ⊕ develops_recipes(Melissa)) → is_skilled_chef(Melissa)",
      "If Melissa either creates unique recipes or experiments with spice combinations (but not both), then she understands flavor profiles.": "(create_unique_recipes(Melissa) ⊕ experiment_spice_combinations(Melissa)) → understand_flavor_profiles(Melissa)",
      "Melissa writes cookbooks.": "write_cookbooks(Melissa)",
      "Lottie does not create menus.": "¬creates_menu(Lottie)",
      "If Lottie either creates menus or develops recipes (but not both), then she is a skilled chef.": "(creates_menu(Lottie) ⊕ develops_recipes(Lottie)) → is_skilled_chef(Lottie)",
      "If Melissa enjoys experimenting, then she appreciates quality ingredients and masters cooking skills.": "enjoy_experimenting(Melissa) → (appreciate_quality_ingredients(Melissa) ∧ master_cooking_skills(Melissa))",
      "Melissa either hosts cooking classes or becomes a culinary influencer, but not both.": "host_cooking_classes(Melissa) ⊕ become_culinary_influencer(Melissa)",
      "If Corbin either creates unique recipes or experiments with spice combinations (but not both), then she understands flavor profiles.": "(create_unique_recipes(Corbin) ⊕ experiment_spice_combinations(Corbin)) → understand_flavor_profiles(Corbin)",
      "Melissa does not create menus.": "¬creates_menu(Melissa)",
      "If Melissa is a foodie, then she either masters cooking skills or understands flavor profiles (but not both).": "is_foodie(Melissa) → (master_cooking_skills(Melissa) ⊕ understand_flavor_profiles(Melissa))",
      "If Melissa is a skilled chef, then she either hosts cooking classes or writes cookbooks, but not both.": "is_skilled_chef(Melissa) → (host_cooking_classes(Melissa) ⊕ write_cookbooks(Melissa))",
      "Anyone who grows their own produce either learns preservation techniques or appreciates traditional cuisine (or both).": "∀x (grow_own_produce(x) → (learn_preservation_techniques(x) ∨ appreciate_traditional_cuisine(x)))",
      "Melissa does not create unique recipes.": "¬create_unique_recipes(Melissa)",
      "If Melissa shares knowledge, then she hosts cooking classes and teaches others.": "share_knowledge(Melissa) → (host_cooking_classes(Melissa) ∧ teach_others(Melissa))",
      "If Melissa learns preservation techniques, then she can either start a food business or become a culinary influencer, but not both.": "learn_preservation_techniques(Melissa) → (start_food_business(Melissa) ⊕ become_culinary_influencer(Melissa))",
      "If Corbin is a foodie, then she either masters cooking skills or understands flavor profiles (but not both).": "is_foodie(Corbin) → (master_cooking_skills(Corbin) ⊕ understand_flavor_profiles(Corbin))",
      "If Melissa has culinary experience and practices cooking, then she can be a skilled chef.": "(has_culinary_experience(Melissa) ∧ practices_cooking(Melissa)) → is_skilled_chef(Melissa)",
      "If Melissa either pairs wine with food or balances spices (but not both), then she understands flavor profiles.": "(pair_wine_with_food(Melissa) ⊕ balance_spices(Melissa)) → understand_flavor_profiles(Melissa)"
    },
    "conclusion_fol": "start_food_business(Melissa)"
  },
  {
    "id": 311,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Shmoops shares knowledge.",
    "reasoning": "fact1: Shmoops does not detect vibrations.\nfact2: Shmoops is not intuitive.\nrule: If Shmoops either detects vibrations or senses energy (but not both), then it is intuitive.\nconclusion: Shmoops does not sense energy.\n\nfact1: Shmoops prioritizes coexistence.\nrule: Any being that prioritizes coexistence respects boundaries.\nconclusion: Shmoops respects boundaries.\n\nfact1: Shmoops respects boundaries.\nfact2: Shmoops does not value harmony.\nrule: If Shmoops either respects boundaries or has empathy (but not both), then it values harmony.\nconclusion: Shmoops has empathy.\n\nfact1: Shmoops has empathy.\nfact2: Shmoops can read minds.\nrule: If Shmoops has empathy, then it either builds trust or can read minds, but not both.\nconclusion: Shmoops cannot build trust.\n\nfact1: Shmoops does not sense energy.\nfact2: Shmoops cannot build trust.\nrule: If Shmoops senses energy or understands emotions, then it can build trust.\nconclusion: Shmoops does not understand emotions.\n\nfact1: Shmoops does not understand emotions.\nrule: Shmoops connects with others or understands emotions.\nconclusion: Shmoops connects with others.\n\nfact1: Shmoops connects with others.\nrule: If Shmoops connects with others, then it will form a telepathic bond.\nconclusion: Shmoops forms a telepathic bond.\n\nfact1: Shmoops forms a telepathic bond.\nrule: If Shmoops forms a telepathic bond, then it shares knowledge.\nconclusion: Shmoops shares knowledge.\n\nTherefore, it is true that Shmoops shares knowledge. The correct option is: A.",
    "context": "If Shmoops senses energy or understands emotions, then it can build trust. If Shmoops either respects boundaries or has empathy (but not both), then it values harmony. Shmoops can understand emotions if Shmoops has compassion. Any being that prioritizes coexistence respects boundaries. If Shmoops either detects vibrations or senses energy (but not both), then it is intuitive. Shmoops does not detect vibrations. If Shmoops either reads body language or shares thoughts (but not both), then it is able to connect with others. Shmoops is not intuitive. If Shmoops has empathy, then it either builds trust or can read minds, but not both. Shmoops connects with others or understands emotions. Shmoops can read minds. Shmoops does not value harmony. If Shmoops forms a telepathic bond, then it shares knowledge. Shmoops prioritizes coexistence. If Shmoops connects with others, then it will form a telepathic bond.",
    "nl2fol": {
      "If Shmoops senses energy or understands emotions, then it can build trust.": "(sense_energy(Shmoops) ∨ understand_emotions(Shmoops)) → build_trust(Shmoops)",
      "If Shmoops either respects boundaries or has empathy (but not both), then it values harmony.": "(respects_boundaries(Shmoops) ⊕ has_empathy(Shmoops)) → values_harmony(Shmoops)",
      "Shmoops can understand emotions if Shmoops has compassion.": "has_compassion(Shmoops) → understand_emotions(Shmoops)",
      "Any being that prioritizes coexistence respects boundaries.": "∀x (prioritizes_coexistence(x) → respects_boundaries(x))",
      "If Shmoops either detects vibrations or senses energy (but not both), then it is intuitive.": "(detect_vibrations(Shmoops) ⊕ sense_energy(Shmoops)) → is_intuitive(Shmoops)",
      "Shmoops does not detect vibrations.": "¬detect_vibrations(Shmoops)",
      "If Shmoops either reads body language or shares thoughts (but not both), then it is able to connect with others.": "(reads_body_language(Shmoops) ⊕ shares_thoughts(Shmoops)) → connect_with_others(Shmoops)",
      "Shmoops is not intuitive.": "¬is_intuitive(Shmoops)",
      "If Shmoops has empathy, then it either builds trust or can read minds, but not both.": "has_empathy(Shmoops) → (build_trust(Shmoops) ⊕ can_read_minds(Shmoops))",
      "Shmoops connects with others or understands emotions.": "connect_with_others(Shmoops) ∨ understand_emotions(Shmoops)",
      "Shmoops can read minds.": "can_read_minds(Shmoops)",
      "Shmoops does not value harmony.": "¬values_harmony(Shmoops)",
      "If Shmoops forms a telepathic bond, then it shares knowledge.": "form_telepathic_bond(Shmoops) → share_knowledge(Shmoops)",
      "Shmoops prioritizes coexistence.": "prioritizes_coexistence(Shmoops)",
      "If Shmoops connects with others, then it will form a telepathic bond.": "connect_with_others(Shmoops) → form_telepathic_bond(Shmoops)"
    },
    "conclusion_fol": "share_knowledge(Shmoops)"
  },
  {
    "id": 312,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rocco raises awareness.",
    "reasoning": "fact1: Rocco is a philanthropist.\nfact2: Rocco supports local initiatives.\nrule: If Rocco is a philanthropist, then he either develops community programs or supports local initiatives (but not both).\nconclusion: Rocco does not develop community programs.\n\nfact1: Rocco does not seek personal gain.\nrule: Rocco either seeks personal gain or identifies injustice, but not both.\nconclusion: Rocco identifies injustice.\n\nfact1: Rocco identifies injustice.\nfact2: Rocco advocates for change.\nrule: If someone identifies injustice and advocates for change, then they can fight for social justice.\nconclusion: Rocco fights for social justice.\n\nfact1: Rocco does not develop community programs.\nrule: Rocco develops community programs or builds strategic partnerships.\nconclusion: Rocco builds strategic partnerships.\n\nfact1: Rocco builds strategic partnerships.\nrule: For Rocco, either he builds strategic partnerships or he mobilizes support, but not necessarily both.\nconclusion: Rocco does not mobilize support.\n\nfact1: Rocco fights for social justice.\nfact2: Rocco does not mobilize support.\nrule: For all humans, if someone fights for social justice, then they either raise awareness or mobilize support (or both).\nconclusion: Rocco raises awareness.\n\nTherefore, it is true that Rocco raises awareness. The correct option is: A.",
    "context": "Rocco either seeks personal gain or identifies injustice, but not both. If Rocco is a philanthropist, then he either develops community programs or supports local initiatives (but not both). Rocco is a philanthropist. Sasha supports local initiatives. Anyone who challenges the status quo either empowers others or fights for social justice (or both). If Rocco has empathy, then he identifies injustice and speaks the truth. Rocco develops community programs or builds strategic partnerships. Anyone who values collaboration will build strategic partnerships. Rocco advocates for change. For Rocco, either he builds strategic partnerships or he mobilizes support, but not necessarily both. If Trenton is a philanthropist, then he either develops community programs or supports local initiatives (but not both). Rocco does not seek personal gain. If someone identifies injustice and advocates for change, then they can fight for social justice. Rocco supports local initiatives. For all humans, if someone fights for social justice, then they either raise awareness or mobilize support (or both). Marvin does not seek personal gain.",
    "nl2fol": {
      "Rocco either seeks personal gain or identifies injustice, but not both.": "seeks_personal_gain(Rocco) ⊕ identifies_injustice(Rocco)",
      "If Rocco is a philanthropist, then he either develops community programs or supports local initiatives (but not both).": "is_philanthropist(Rocco) → (develop_community_programs(Rocco) ⊕ supports_local_initiatives(Rocco))",
      "Rocco is a philanthropist.": "is_philanthropist(Rocco)",
      "Sasha supports local initiatives.": "supports_local_initiatives(Sasha)",
      "Anyone who challenges the status quo either empowers others or fights for social justice (or both).": "∀x (challenges_status_quo(x) → (empowers_others(x) ∨ fight_for_social_justice(x)))",
      "If Rocco has empathy, then he identifies injustice and speaks the truth.": "has_empathy(Rocco) → (identifies_injustice(Rocco) ∧ speaks_truth(Rocco))",
      "Rocco develops community programs or builds strategic partnerships.": "develop_community_programs(Rocco) ∨ build_strategic_partnerships(Rocco)",
      "Anyone who values collaboration will build strategic partnerships.": "∀x (values_collaboration(x) → build_strategic_partnerships(x))",
      "Rocco advocates for change.": "advocates_for_change(Rocco)",
      "For Rocco, either he builds strategic partnerships or he mobilizes support, but not necessarily both.": "build_strategic_partnerships(Rocco) ⊕ mobilize_support(Rocco)",
      "If Trenton is a philanthropist, then he either develops community programs or supports local initiatives (but not both).": "is_philanthropist(Trenton) → (develop_community_programs(Trenton) ⊕ supports_local_initiatives(Trenton))",
      "Rocco does not seek personal gain.": "¬seeks_personal_gain(Rocco)",
      "If someone identifies injustice and advocates for change, then they can fight for social justice.": "∀x ((identifies_injustice(x) ∧ advocates_for_change(x)) → fight_for_social_justice(x))",
      "Rocco supports local initiatives.": "supports_local_initiatives(Rocco)",
      "For all humans, if someone fights for social justice, then they either raise awareness or mobilize support (or both).": "∀x (fight_for_social_justice(x) → (raise_awareness(x) ∨ mobilize_support(x)))",
      "Marvin does not seek personal gain.": "¬seeks_personal_gain(Marvin)"
    },
    "conclusion_fol": "raise_awareness(Rocco)"
  },
  {
    "id": 313,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fiona is not a conventional thinker.",
    "reasoning": "fact1: Fiona does not take risks.\nrule: Fiona either acts boldly or takes risks.\nconclusion: Fiona acts boldly.\n\nfact1: Fiona does not speak freely.\nfact2: Fiona acts boldly.\nrule: If Fiona either speaks freely or acts boldly (but not both), then she dismisses critics.\nconclusion: Fiona dismisses critics.\n\nfact1: Fiona dismisses critics.\nfact2: Fiona does not challenge authority.\nrule: If Fiona either dismisses critics or challenges authority (but not both), then she breaks the rules.\nconclusion: Fiona breaks the rules.\n\nfact1: Fiona does not value tradition.\nrule: If someone values tradition, they may not necessarily seek innovation, and vice versa.\nconclusion: Fiona seeks innovation.\n\nfact1: Fiona breaks the rules.\nrule: If Fiona breaks the rules, then she will inspire others.\nconclusion: Fiona inspires others.\n\nfact1: Fiona seeks innovation.\nfact2: Fiona does not drive progress.\nrule: For any person, if they either embrace change or seek innovation, then they drive progress.\nconclusion: Fiona is embracing change.\n\nfact1: Fiona is embracing change.\nfact2: Fiona inspires others.\nrule: If someone is embracing change, then they are open-minded and inspire others.\nconclusion: Fiona is open-minded.\n\nfact1: Fiona is open-minded.\nfact2: Fiona is not a forward thinker.\nrule: If someone is either an unconventional thinker or open-minded, then they are a forward thinker.\nconclusion: Fiona is an unconventional thinker.\n\nfact1: Fiona is an unconventional thinker.\nrule: Fiona is either a conventional thinker or an unconventional thinker, but not both.\nconclusion: Fiona is not a conventional thinker.\n\nTherefore, it is true that Fiona is not a conventional thinker. The correct option is: A.",
    "context": "Nash is not a forward thinker. If someone has confidence, then they act boldly and value authenticity. Fiona either acts boldly or takes risks. If Fiona is an artist, then she is either an unconventional thinker or a methodical person, but not both. Fiona does not drive progress. Fiona does not take risks. Laura does not drive progress. If Nash either speaks freely or acts boldly (but not both), then she dismisses critics. If Fiona either explores new ideas or questions assumptions (but not both), then she is embracing change. Fiona does not value tradition. Fiona does not speak freely. Anyone who explores new ideas or pushes boundaries seeks innovation. If Fiona either speaks freely or acts boldly (but not both), then she dismisses critics. If Helen breaks the rules, then she will inspire others. If Fiona either dismisses critics or challenges authority (but not both), then she breaks the rules. Fiona is not a forward thinker. Fiona is either a conventional thinker or an unconventional thinker, but not both. For any person, if they either embrace change or seek innovation, then they drive progress. Nash does not value tradition. If someone values tradition, they may not necessarily seek innovation, and vice versa. If Fiona breaks the rules, then she will inspire others. Fiona does not challenge authority. Helen does not take risks. If someone is either an unconventional thinker or open-minded, then they are a forward thinker. If Fiona has confidence, then she either ignores opinions or dismisses critics (or both). Helen does not speak freely. If someone is embracing change, then they are open-minded and inspire others.",
    "nl2fol": {
      "Nash is not a forward thinker.": "¬forward_thinker(Nash)",
      "If someone has confidence, then they act boldly and value authenticity.": "∀x (has_confidence(x) → (acts_boldly(x) ∧ values_authenticity(x)))",
      "Fiona either acts boldly or takes risks.": "acts_boldly(Fiona) ∨ takes_risks(Fiona)",
      "If Fiona is an artist, then she is either an unconventional thinker or a methodical person, but not both.": "artist(Fiona) → (unconventional_thinker(Fiona) ⊕ methodical_person(Fiona))",
      "Fiona does not drive progress.": "¬drives_progress(Fiona)",
      "Fiona does not take risks.": "¬takes_risks(Fiona)",
      "Laura does not drive progress.": "¬drives_progress(Laura)",
      "If Nash either speaks freely or acts boldly (but not both), then she dismisses critics.": "(speaks_freely(Nash) ⊕ acts_boldly(Nash)) → dismisses_critics(Nash)",
      "If Fiona either explores new ideas or questions assumptions (but not both), then she is embracing change.": "(explores_new_ideas(Fiona) ⊕ questions_assumptions(Fiona)) → embracing_change(Fiona)",
      "Fiona does not value tradition.": "¬values_tradition(Fiona)",
      "Fiona does not speak freely.": "¬speaks_freely(Fiona)",
      "Anyone who explores new ideas or pushes boundaries seeks innovation.": "∀x ((explores_new_ideas(x) ∨ pushes_boundaries(x)) → seeks_innovation(x))",
      "If Fiona either speaks freely or acts boldly (but not both), then she dismisses critics.": "(speaks_freely(Fiona) ⊕ acts_boldly(Fiona)) → dismisses_critics(Fiona)",
      "If Helen breaks the rules, then she will inspire others.": "breaks_rules(Helen) → inspire_others(Helen)",
      "If Fiona either dismisses critics or challenges authority (but not both), then she breaks the rules.": "(dismisses_critics(Fiona) ⊕ challenges_authority(Fiona)) → breaks_rules(Fiona)",
      "Fiona is not a forward thinker.": "¬forward_thinker(Fiona)",
      "Fiona is either a conventional thinker or an unconventional thinker, but not both.": "conventional_thinker(Fiona) ⊕ unconventional_thinker(Fiona)",
      "For any person, if they either embrace change or seek innovation, then they drive progress.": "∀x ((embracing_change(x) ⊕ seeks_innovation(x)) → drives_progress(x))",
      "Nash does not value tradition.": "¬values_tradition(Nash)",
      "If someone values tradition, they may not necessarily seek innovation, and vice versa.": "∀x (seeks_innovation(x) ⊕ values_tradition(x))",
      "If Fiona breaks the rules, then she will inspire others.": "breaks_rules(Fiona) → inspire_others(Fiona)",
      "Fiona does not challenge authority.": "¬challenges_authority(Fiona)",
      "Helen does not take risks.": "¬takes_risks(Helen)",
      "If someone is either an unconventional thinker or open-minded, then they are a forward thinker.": "∀x ((unconventional_thinker(x) ⊕ open_minded(x)) → forward_thinker(x))",
      "If Fiona has confidence, then she either ignores opinions or dismisses critics (or both).": "has_confidence(Fiona) → (ignores_opinions(Fiona) ∨ dismisses_critics(Fiona))",
      "Helen does not speak freely.": "¬speaks_freely(Helen)",
      "If someone is embracing change, then they are open-minded and inspire others.": "∀x (embracing_change(x) → (open_minded(x) ∧ inspire_others(x)))"
    },
    "conclusion_fol": "¬conventional_thinker(Fiona)"
  },
  {
    "id": 314,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jaziel is a prodigious writer.",
    "reasoning": "fact1: Jaziel learns quickly.\nrule: Anyone who learns quickly or adapts easily has versatile skills.\nconclusion: Jaziel has versatile skills.\n\nfact1: Jaziel does not work hard.\nfact2: Jaziel does not gain recognition.\nrule: If Jaziel works hard or achieves success, then he will gain recognition.\nconclusion: Jaziel does not achieve success.\n\nfact1: Jaziel does not achieve success.\nfact2: Jaziel is not someone who makes an impact.\nrule: Everyone who is either influential or achieves success is someone who makes an impact.\nconclusion: Jaziel is not influential.\n\nfact1: Jaziel has specialized knowledge.\nfact2: Jaziel has versatile skills.\nrule: If Jaziel has wide interests, then he either has specialized knowledge or versatile skills, but not both.\nconclusion: Jaziel does not have wide interests.\n\nfact1: Jaziel does not have wide interests.\nrule: Jaziel is either an avid reader or has wide interests, but not both.\nconclusion: Jaziel is an avid reader.\n\nfact1: Jaziel is an avid reader.\nrule: Jaziel is either an inspiring teacher or an avid reader, but not both.\nconclusion: Jaziel is not an inspiring teacher.\n\nfact1: Jaziel is not an inspiring teacher.\nfact2: Jaziel is not influential.\nrule: For every human, if a person is either a prodigious writer or an inspiring teacher (but not both), then they are influential.\nconclusion: Jaziel is a prodigious writer.\n\nTherefore, it is false that Jaziel is a prodigious writer. The correct option is: B.",
    "context": "If Jaziel has wide interests, then he either has specialized knowledge or versatile skills, but not both. Jaziel has specialized knowledge. Erick has specialized knowledge. If Jaziel loves classics or enjoys writing, then he is an avid reader. Erick is either an inspiring teacher or an avid reader, but not both. Jaziel does not gain recognition. If Erick either adapts easily or handles pressure (but not both), then he thrives professionally. Calum learns quickly. Anyone who learns quickly or adapts easily has versatile skills. If Jaziel works hard or achieves success, then he will gain recognition. Jaziel is either an avid reader or has wide interests, but not both. Erick is not someone who makes an impact. For every human, if a person is either a prodigious writer or an inspiring teacher (but not both), then they are influential. Calum thrives professionally. Jaziel learns quickly. Jaziel is not someone who makes an impact. Erick is either an avid reader or has wide interests, but not both. Everyone who is either influential or achieves success is someone who makes an impact. Erick does not work hard. Jaziel is either an inspiring teacher or an avid reader, but not both. Jaziel has creative talent or versatile skills. Calum handles pressure. If Erick works hard or achieves success, then he will gain recognition. Jaziel does not work hard.",
    "nl2fol": {
      "If Jaziel has wide interests, then he either has specialized knowledge or versatile skills, but not both.": "has_wide_interests(Jaziel) → (specialized_knowledge(Jaziel) ⊕ versatile_skills(Jaziel))",
      "Jaziel has specialized knowledge.": "specialized_knowledge(Jaziel)",
      "Erick has specialized knowledge.": "specialized_knowledge(Erick)",
      "If Jaziel loves classics or enjoys writing, then he is an avid reader.": "(loves_classics(Jaziel) ∨ enjoys_writing(Jaziel)) → avid_reader(Jaziel)",
      "Erick is either an inspiring teacher or an avid reader, but not both.": "inspiring_teacher(Erick) ⊕ avid_reader(Erick)",
      "Jaziel does not gain recognition.": "¬gains_recognition(Jaziel)",
      "If Erick either adapts easily or handles pressure (but not both), then he thrives professionally.": "(adapts_easily(Erick) ⊕ handles_pressure(Erick)) → thrives_professionally(Erick)",
      "Calum learns quickly.": "learn_quickly(Calum)",
      "Anyone who learns quickly or adapts easily has versatile skills.": "∀x ((learns_quickly(x) ∨ adapts_easily(x)) → versatile_skills(x))",
      "If Jaziel works hard or achieves success, then he will gain recognition.": "(works_hard(Jaziel) ∨ achieves_success(Jaziel)) → gains_recognition(Jaziel)",
      "Jaziel is either an avid reader or has wide interests, but not both.": "avid_reader(Jaziel) ⊕ has_wide_interests(Jaziel)",
      "Erick is not someone who makes an impact.": "¬makes_impact(Erick)",
      "For every human, if a person is either a prodigious writer or an inspiring teacher (but not both), then they are influential.": "∀x ((prodigious_writer(x) ⊕ inspiring_teacher(x)) → influential(x))",
      "Calum thrives professionally.": "thrives_professionally(Calum)",
      "Jaziel learns quickly.": "learns_quickly(Jaziel)",
      "Jaziel is not someone who makes an impact.": "¬makes_impact(Jaziel)",
      "Erick is either an avid reader or has wide interests, but not both.": "avid_reader(Erick) ⊕ has_wide_interests(Erick)",
      "Everyone who is either influential or achieves success is someone who makes an impact.": "∀x ((influential(x) ⊕ achieves_success(x)) → makes_impact(x))",
      "Erick does not work hard.": "¬works_hard(Erick)",
      "Jaziel is either an inspiring teacher or an avid reader, but not both.": "inspiring_teacher(Jaziel) ⊕ avid_reader(Jaziel)",
      "Jaziel has creative talent or versatile skills.": "has_creative_talent(Jaziel) ∨ versatile_skills(Jaziel)",
      "Calum handles pressure.": "handles_pressure(Calum)",
      "If Erick works hard or achieves success, then he will gain recognition.": "(works_hard(Erick) ∨ achieves_success(Erick)) → gains_recognition(Erick)",
      "Jaziel does not work hard.": "¬works_hard(Jaziel)"
    },
    "conclusion_fol": "prodigious_writer(Jaziel)"
  },
  {
    "id": 315,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emmy does not become a leading expert.",
    "reasoning": "fact1: Emmy does not inspire others.\nrule: If Emmy sheds new light on history, then she will inspire others.\nconclusion: Emmy cannot shed new light on history.\n\nfact1: Emmy cannot shed new light on history.\nrule: Anyone who uncovers lost artifacts or deciphers ancient texts can shed new light on history.\nconclusion: Emmy does not uncover lost artifacts.\n\nfact1: Emmy does not pursue alternate careers.\nrule: Emmy either pursues alternate careers or is dedicated to archaeology, but not both.\nconclusion: Emmy is dedicated to archaeology.\n\nfact1: Emmy does not gain recognition.\nrule: If Emmy advances historical knowledge, then she will gain recognition.\nconclusion: Emmy does not advance historical knowledge.\n\nfact1: Emmy does not uncover lost artifacts.\nfact2: Emmy does not advance historical knowledge.\nrule: If Emmy either makes groundbreaking discoveries or uncovers lost artifacts (but not both), then she advances historical knowledge.\nconclusion: Emmy does not make groundbreaking discoveries.\n\nfact1: Emmy is dedicated to archaeology.\nfact2: Emmy does not make groundbreaking discoveries.\nrule: If Emmy is dedicated to archaeology, then she can either make groundbreaking discoveries or become a leading expert, but not both.\nconclusion: Emmy does not become a leading expert.\n\nTherefore, it is false that Emmy does not become a leading expert. The correct option is: B.",
    "context": "Emmy does not inspire others. If Emmy is dedicated to archaeology, then she can either make groundbreaking discoveries or become a leading expert, but not both. If Emmy advances historical knowledge, then she will gain recognition. Emmy either pursues alternate careers or is dedicated to archaeology, but not both. If Emmy either makes groundbreaking discoveries or uncovers lost artifacts (but not both), then she advances historical knowledge. Anyone who uncovers lost artifacts or deciphers ancient texts can shed new light on history. Emmy does not gain recognition. If Emmy sheds new light on history, then she will inspire others. Emmy does not pursue alternate careers.",
    "nl2fol": {
      "Emmy does not inspire others.": "¬inspire_others(Emmy)",
      "If Emmy is dedicated to archaeology, then she can either make groundbreaking discoveries or become a leading expert, but not both.": "dedicated(Emmy) → (make_groundbreaking_discoveries(Emmy) ⊕ become_a_leading_expert(Emmy))",
      "If Emmy advances historical knowledge, then she will gain recognition.": "advance_historical_knowledge(Emmy) → gain_recognition(Emmy)",
      "Emmy either pursues alternate careers or is dedicated to archaeology, but not both.": "pursue_alternate_careers(Emmy) ⊕ dedicated(Emmy)",
      "If Emmy either makes groundbreaking discoveries or uncovers lost artifacts (but not both), then she advances historical knowledge.": "(make_groundbreaking_discoveries(Emmy) ⊕ uncover_lost_artifacts(Emmy)) → advance_historical_knowledge(Emmy)",
      "Anyone who uncovers lost artifacts or deciphers ancient texts can shed new light on history.": "∀x ((uncover_lost_artifacts(x) ∨ decipher_ancient_texts(x)) → shed_new_light(x))",
      "Emmy does not gain recognition.": "¬gain_recognition(Emmy)",
      "If Emmy sheds new light on history, then she will inspire others.": "shed_new_light(Emmy) → inspire_others(Emmy)",
      "Emmy does not pursue alternate careers.": "¬pursue_alternate_careers(Emmy)"
    },
    "conclusion_fol": "¬become_a_leading_expert(Emmy)"
  },
  {
    "id": 316,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ali expresses her emotions freely.",
    "reasoning": "fact1: Ali follows tradition.\nrule: Ali either follows tradition or pursues her passions, but not both at the same time.\nconclusion: Ali does not pursue her passions.\n\nfact1: Ali has a creative job.\nfact2: Ali works in a nonprofit.\nrule: If Ali has a creative job, then she either works in a corporate environment or a nonprofit, but not both.\nconclusion: Ali does not work in a corporate environment.\n\nfact1: Ali does not pursue her passions.\nrule: Ali either pursues her passions or finds inner peace.\nconclusion: Ali finds inner peace.\n\nfact1: Ali finds inner peace.\nrule: Ali either finds inner peace or inspires others, but not necessarily both.\nconclusion: Ali does not inspire others.\n\nfact1: Ali does not work in a corporate environment.\nrule: Ali is either an artist or works in a corporate environment, but not both.\nconclusion: Ali is an artist.\n\nfact1: Ali is an artist.\nfact2: Ali does not inspire others.\nrule: For all humans, if someone is an artist, then they either express their emotions freely or inspire others (or both).\nconclusion: Ali expresses her emotions freely.\n\nTherefore, it is true that Ali expresses her emotions freely. The correct option is: A.",
    "context": "Ali has a creative job. Frances is either an artist or works in a corporate environment, but not both. Elliott either pursues her passions or finds inner peace. If Ali has a creative job, then she either works in a corporate environment or a nonprofit, but not both. Ali either follows tradition or pursues her passions, but not both at the same time. If someone embraces freedom, then they will pursue their passions. Elliott works in a nonprofit. Anyone who has office skills and follows schedules is likely to work in a corporate environment. For all humans, if someone is an artist, then they either express their emotions freely or inspire others (or both). Ali either finds inner peace or inspires others, but not necessarily both. If Frances has a creative job, then she either works in a corporate environment or a nonprofit, but not both. Ali either pursues her passions or finds inner peace. Ali works in a nonprofit. Cameron has a creative job. Ali follows tradition. Ali is either an artist or works in a corporate environment, but not both. Anyone who has an imaginative mind or creates original works is an artist.",
    "nl2fol": {
      "Ali has a creative job.": "has_creative_job(Ali)",
      "Frances is either an artist or works in a corporate environment, but not both.": "works_in_corporate(Frances) ⊕ artist(Frances)",
      "Elliott either pursues her passions or finds inner peace.": "pursue_passions(Elliott) ∨ find_Inner_peace(Elliott)",
      "If Ali has a creative job, then she either works in a corporate environment or a nonprofit, but not both.": "has_creative_job(Ali) → (works_in_corporate(Ali) ⊕ works_in_nonprofit(Ali))",
      "Ali either follows tradition or pursues her passions, but not both at the same time.": "follows_tradition(Ali) ⊕ pursue_passions(Ali)",
      "If someone embraces freedom, then they will pursue their passions.": "∀x (embraces_freedom(x) → pursue_passions(x))",
      "Elliott works in a nonprofit.": "works_in_nonprofit(Elliott)",
      "Anyone who has office skills and follows schedules is likely to work in a corporate environment.": "∀x ((has_office_skills(x) ∧ follows_schedules(x)) → works_in_corporate(x))",
      "For all humans, if someone is an artist, then they either express their emotions freely or inspire others (or both).": "∀x (artist(x) → (express_emotions_freely(x) ∨ inspire_others(x)))",
      "Ali either finds inner peace or inspires others, but not necessarily both.": "find_Inner_peace(Ali) ⊕ inspire_others(Ali)",
      "If Frances has a creative job, then she either works in a corporate environment or a nonprofit, but not both.": "has_creative_job(Frances) → (works_in_corporate(Frances) ⊕ works_in_nonprofit(Frances))",
      "Ali either pursues her passions or finds inner peace.": "pursue_passions(Ali) ∨ find_Inner_peace(Ali)",
      "Ali works in a nonprofit.": "works_in_nonprofit(Ali)",
      "Cameron has a creative job.": "has_creative_job(Cameron)",
      "Ali follows tradition.": "follows_tradition(Ali)",
      "Ali is either an artist or works in a corporate environment, but not both.": "works_in_corporate(Ali) ⊕ artist(Ali)",
      "Anyone who has an imaginative mind or creates original works is an artist.": "∀x ((has_imaginative_mind(x) ∨ creates_original_works(x)) → artist(x))"
    },
    "conclusion_fol": "express_emotions_freely(Ali)"
  },
  {
    "id": 317,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ember does not find a creative outlet.",
    "reasoning": "fact1: Ember builds strong relationships.\nrule: For Ember, either building strong relationships or achieving success is a priority, but not both.\nconclusion: Ember does not achieve success.\n\nfact1: Ember loses someone.\nfact2: Ember does not experience loss.\nrule: If Ember either loses someone or experiences loss (but not both), then she feels emotional pain.\nconclusion: Ember feels emotional pain.\n\nfact1: Ember practices self-reflection.\nfact2: Ember does not gain a new perspective.\nrule: If Ember practices self-reflection, then she will either become more resilient or gain a new perspective (but not both).\nconclusion: Ember becomes more resilient.\n\nfact1: Ember encounters challenges.\nfact2: Ember feels emotional pain.\nrule: Anyone who encounters challenges and feels emotional pain will face adversity.\nconclusion: Ember faces adversity.\n\nfact1: Ember learns from failure.\nfact2: Ember becomes more resilient.\nrule: If Ember learns from failure, then she will either become more resilient or overcome obstacles (but not both).\nconclusion: Ember does not overcome obstacles.\n\nfact1: Ember faces adversity.\nrule: If Ember faces adversity, then she will find a creative outlet and experience personal growth.\nconclusion: Ember finds a creative outlet.\n\nTherefore, it is false that Ember does not find a creative outlet. The correct option is: B.",
    "context": "Anyone who encounters challenges and feels emotional pain will face adversity. Ember encounters challenges. Santiago builds strong relationships. If Ember either loses someone or experiences loss (but not both), then she feels emotional pain. Everyone who adapts to change either develops coping skills or becomes more resilient (or both). Santiago does not gain a new perspective. If Blair either loses someone or experiences loss (but not both), then she feels emotional pain. Santiago learns from failure. For Ember, either building strong relationships or achieving success is a priority, but not both. If Ember practices self-reflection, then she will either become more resilient or gain a new perspective (but not both). Blair does not experience loss. Rose encounters challenges. If Ember learns from failure, then she will either become more resilient or overcome obstacles (but not both). Ember practices self-reflection. Blair practices self-reflection. Ember learns from failure. Ember makes art or experiences personal growth. If Ember either meets difficulties or handles hardships (but not both), then she faces adversity. Ember builds strong relationships. If Blair overcomes obstacles, then she will either experience personal growth or achieve success (but not both). For Blair, either building strong relationships or achieving success is a priority, but not both. Ember does not gain a new perspective. Ember does not experience loss. Ember loses someone. If someone sets goals and works hard, then they can achieve success. If Rose practices self-reflection, then she will either become more resilient or gain a new perspective (but not both). If Blair learns from failure, then she will either become more resilient or overcome obstacles (but not both). If Santiago faces adversity, then she will find a creative outlet and experience personal growth. If Ember faces adversity, then she will find a creative outlet and experience personal growth.",
    "nl2fol": {
      "Anyone who encounters challenges and feels emotional pain will face adversity.": "∀x ((encounters_challenges(x) ∧ feels_emotional_pain(x)) → face_adversity(x))",
      "Ember encounters challenges.": "encounters_challenges(Ember)",
      "Santiago builds strong relationships.": "build_strong_relationships(Santiago)",
      "If Ember either loses someone or experiences loss (but not both), then she feels emotional pain.": "(loses_someone(Ember) ⊕ experiences_loss(Ember)) → feels_emotional_pain(Ember)",
      "Everyone who adapts to change either develops coping skills or becomes more resilient (or both).": "∀x (adapts_to_change(x) → (develops_coping_skills(x) ∨ become_more_resilient(x)))",
      "Santiago does not gain a new perspective.": "¬gain_new_perspective(Santiago)",
      "If Blair either loses someone or experiences loss (but not both), then she feels emotional pain.": "(loses_someone(Blair) ⊕ experiences_loss(Blair)) → feels_emotional_pain(Blair)",
      "Santiago learns from failure.": "learns_from_failure(Santiago)",
      "For Ember, either building strong relationships or achieving success is a priority, but not both.": "builds_strong_relationships(Ember) ⊕ achieve_success(Ember)",
      "If Ember practices self-reflection, then she will either become more resilient or gain a new perspective (but not both).": "practice_self_reflection(Ember) → (become_more_resilient(Ember) ⊕ gain_new_perspective(Ember))",
      "Blair does not experience loss.": "¬experiences_loss(Blair)",
      "Rose encounters challenges.": "encounters_challenges(Rose)",
      "If Ember learns from failure, then she will either become more resilient or overcome obstacles (but not both).": "learn_from_failure(Ember) → (become_more_resilient(Ember) ⊕ overcome_obstacles(Ember))",
      "Ember practices self-reflection.": "practice_self_reflection(Ember)",
      "Blair practices self-reflection.": "practice_self_reflection(Blair)",
      "Ember learns from failure.": "learn_from_failure(Ember)",
      "Ember makes art or experiences personal growth.": "makes_art(Ember) ∨ experience_personal_growth(Ember)",
      "If Ember either meets difficulties or handles hardships (but not both), then she faces adversity.": "(meets_difficulties(Ember) ⊕ handles_hardships(Ember)) → face_adversity(Ember)",
      "Ember builds strong relationships.": "builds_strong_relationships(Ember)",
      "If Blair overcomes obstacles, then she will either experience personal growth or achieve success (but not both).": "overcome_obstacles(Blair) → (experience_personal_growth(Blair) ⊕ achieve_success(Blair))",
      "For Blair, either building strong relationships or achieving success is a priority, but not both.": "builds_strong_relationships(Blair) ⊕ achieve_success(Blair)",
      "Ember does not gain a new perspective.": "¬gain_new_perspective(Ember)",
      "Ember does not experience loss.": "¬experiences_loss(Ember)",
      "Ember loses someone.": "loses_someone(Ember)",
      "If someone sets goals and works hard, then they can achieve success.": "∀x ((sets_goals(x) ∧ works_hard(x)) → achieve_success(x))",
      "If Rose practices self-reflection, then she will either become more resilient or gain a new perspective (but not both).": "practice_self_reflection(Rose) → (become_more_resilient(Rose) ⊕ gain_new_perspective(Rose))",
      "If Blair learns from failure, then she will either become more resilient or overcome obstacles (but not both).": "learn_from_failure(Blair) → (become_more_resilient(Blair) ⊕ overcome_obstacles(Blair))",
      "If Santiago faces adversity, then she will find a creative outlet and experience personal growth.": "face_adversity(Santiago) → (find_creative_outlet(Santiago) ∧ experience_personal_growth(Santiago))",
      "If Ember faces adversity, then she will find a creative outlet and experience personal growth.": "face_adversity(Ember) → (find_creative_outlet(Ember) ∧ experience_personal_growth(Ember))"
    },
    "conclusion_fol": "¬find_creative_outlet(Ember)"
  },
  {
    "id": 318,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Julio is not specialized in Commelinidae.",
    "reasoning": "fact1: Julio publishes scientific papers.\nrule: Every botanist either publishes scientific papers or discovers new species, but not necessarily both.\nconclusion: Julio does not discover new species.\n\nfact1: Julio identifies plant habitats.\nrule: Julio either identifies plant habitats or analyzes botanical data, but not necessarily both.\nconclusion: Julio does not analyze botanical data.\n\nfact1: Julio does not discover new species.\nfact2: Julio does not earn academic recognition.\nrule: Every botanist who explores botany either discovers new species or earns academic recognition (or both).\nconclusion: Julio does not explore botany.\n\nfact1: Julio does not analyze botanical data.\nrule: Every botanist either researches plant species or analyzes botanical data.\nconclusion: Julio researches plant species.\n\nfact1: Julio does not explore botany.\nrule: Every botanist either explores botany or studies plant classification.\nconclusion: Julio studies plant classification.\n\nfact1: Julio studies plant classification.\nrule: If Julio studies plant classification, then he travels to rainforests and specializes in Commelinidae.\nconclusion: Julio is specialized in Commelinidae.\n\nfact1: Julio is specialized in Commelinidae.\nrule: For every botanist, either they are specialized in Commelinidae or they are not specialized in Commelinidae, but not both.\nconclusion: Julio is not specialized in Commelinidae.\n\nTherefore, it is false that Julio is not specialized in Commelinidae. The correct option is: B.",
    "context": "If a botanist examines plant structures and collects botanical samples, then they explore botany. Every botanist either publishes scientific papers or discovers new species, but not necessarily both. Julio either identifies plant habitats or analyzes botanical data, but not necessarily both. Every botanist who explores botany either discovers new species or earns academic recognition (or both). Julio publishes scientific papers. If Julio studies plant classification, then he travels to rainforests and specializes in Commelinidae. Julio does not earn academic recognition. For every botanist, either they are specialized in Commelinidae or they are not specialized in Commelinidae, but not both. Every botanist either researches plant species or analyzes botanical data. Julio identifies plant habitats. Every botanist either explores botany or studies plant classification.",
    "nl2fol": {
      "If a botanist examines plant structures and collects botanical samples, then they explore botany.": "∀x ((examines_plant_structures(x) ∧ collects_botanical_samples(x)) → explore_botany(x))",
      "Every botanist either publishes scientific papers or discovers new species, but not necessarily both.": "∀x (publish_scientific_papers(x) ⊕ discover_new_species(x))",
      "Julio either identifies plant habitats or analyzes botanical data, but not necessarily both.": "identifies_plant_habitats(Julio) ⊕ analyzes_botanical_data(Julio)",
      "Every botanist who explores botany either discovers new species or earns academic recognition (or both).": "∀x (explore_botany(x) → (discover_new_species(x) ∨ earn_academic_recognition(x)))",
      "Julio publishes scientific papers.": "publish_scientific_papers(Julio)",
      "If Julio studies plant classification, then he travels to rainforests and specializes in Commelinidae.": "study_plant_classification(Julio) → (travel_to_rainforests(Julio) ∧ specialized_in_Commelinidae(Julio))",
      "Julio does not earn academic recognition.": "¬earn_academic_recognition(Julio)",
      "For every botanist, either they are specialized in Commelinidae or they are not specialized in Commelinidae, but not both.": "∀x (specialized_in_Commelinidae(x) ⊕ not_specialized_in_Commelinidae(x))",
      "Every botanist either researches plant species or analyzes botanical data.": "∀x (researches_plant_species(x) ∨ analyzes_botanical_data(x))",
      "Julio identifies plant habitats.": "identifies_plant_habitats(Julio)",
      "Every botanist either explores botany or studies plant classification.": "∀x (explore_botany(x) ∨ study_plant_classification(x))"
    },
    "conclusion_fol": "not_specialized_in_Commelinidae(Julio)"
  },
  {
    "id": 319,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Isaac is confident.",
    "reasoning": "fact1: Isaac does not gain confidence.\nrule: If someone deserves acclaim or receives praise, then they gain confidence.\nconclusion: Isaac does not deserve acclaim.\n\nfact1: Isaac has a unique style.\nfact2: Isaac does not deserve acclaim.\nrule: If Isaac has a unique style and lacks recognition, then he deserves acclaim.\nconclusion: Isaac does not lack recognition.\n\nfact1: Isaac does not lack recognition.\nrule: If Isaac is self-doubting, then he will lack recognition.\nconclusion: Isaac is not self-doubting.\n\nfact1: Isaac is not self-doubting.\nrule: Isaac is either confident or self-doubting, but not both.\nconclusion: Isaac is confident.\n\nTherefore, it is true that Isaac is confident. The correct option is: A.",
    "context": "Isaac does not gain confidence. If Isaac has a unique style and lacks recognition, then he deserves acclaim. If someone deserves acclaim or receives praise, then they gain confidence. Everyone either believes in themselves or is self-doubting. Isaac has a unique style. Isaac is either confident or self-doubting, but not both. If Isaac is self-doubting, then he will lack recognition.",
    "nl2fol": {
      "Isaac does not gain confidence.": "¬gains_confidence(Isaac)",
      "If Isaac has a unique style and lacks recognition, then he deserves acclaim.": "(has_unique_style(Isaac) ∧ lacks_recognition(Isaac)) → deserves_acclaim(Isaac)",
      "If someone deserves acclaim or receives praise, then they gain confidence.": "∀x ((deserves_acclaim(x) ∨ receives_praise(x)) → gains_confidence(x))",
      "Everyone either believes in themselves or is self-doubting.": "∀x (believes_himself(x) ∨ self_doubting(x))",
      "Isaac has a unique style.": "has_unique_style(Isaac)",
      "Isaac is either confident or self-doubting, but not both.": "confident(Isaac) ⊕ self_doubting(Isaac)",
      "If Isaac is self-doubting, then he will lack recognition.": "self_doubting(Isaac) → lacks_recognition(Isaac)"
    },
    "conclusion_fol": "confident(Isaac)"
  },
  {
    "id": 320,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kayson is not agile.",
    "reasoning": "fact1: Kayson has adaptability.\nfact2: Kayson cannot survive in harsh environments.\nrule: If a snake is adaptable and camouflaged, then it can survive in harsh environments.\nconclusion: Kayson is not camouflaged.\n\nfact1: Kayson lives in an arid land.\nfact2: Kayson does not have strong coils.\nrule: If Kayson lives in an arid land, then he either has strong coils or specialized scales, but not both.\nconclusion: Kayson has specialized scales.\n\nfact1: Kayson has stealth.\nfact2: Kayson does not dominate his territory.\nrule: If a snake is a skilled predator and has stealth, then it dominates its territory.\nconclusion: Kayson is not a skilled predator.\n\nfact1: Kayson is not a fast mover.\nrule: All snakes that slide through the sand are fast movers.\nconclusion: Kayson does not slide through the sand.\n\nfact1: Kayson has specialized scales.\nfact2: Kayson is not a skilled predator.\nrule: All snakes with specialized scales are either skilled predators or have a deadly reputation (or both).\nconclusion: Kayson has a deadly reputation.\n\nfact1: Kayson is an expert hunter.\nfact2: Kayson does not slide through the sand.\nrule: If a snake is either an expert hunter or a desert dweller (but not both), then it slides through the sand.\nconclusion: Kayson lives in the desert.\n\nfact1: Kayson lives in the desert.\nfact2: Kayson is not camouflaged.\nrule: If Kayson lives in the desert, then he is either camouflaged or has a striking pattern (or both).\nconclusion: Kayson has a striking pattern.\n\nfact1: Kayson has a striking pattern.\nfact2: Kayson has a deadly reputation.\nrule: If Kayson has a striking pattern, then he is venomous and has a deadly reputation.\nconclusion: Kayson is venomous.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Kayson is not agile. The correct option is: C.",
    "context": "Kayson has adaptability. If Kayson lives in an arid land, then he either has strong coils or specialized scales, but not both. Kayson does not have strong coils. Kayson cannot survive in harsh environments. If Kayson lives in the desert, then he is either camouflaged or has a striking pattern (or both). All snakes that live in the desert have good vision and are camouflaged. If a snake is either an expert hunter or a desert dweller (but not both), then it slides through the sand. Kayson has stealth. All snakes with effortless movement either have remarkable speed or specialized scales (or both). If Kayson has a striking pattern, then he is venomous and has a deadly reputation. Edith lives in an arid land. Kayson does not dominate his territory. If a snake is a skilled predator and has stealth, then it dominates its territory. If a snake is adaptable and camouflaged, then it can survive in harsh environments. Kayson lives in an arid land. Carla is not a fast mover. Kayson is an expert hunter. All snakes with specialized scales are either skilled predators or have a deadly reputation (or both). For all snakes, having venom glands and injecting toxic fluid makes them venomous. Kayson is not a fast mover. All snakes that slide through the sand are fast movers.",
    "nl2fol": {
      "Kayson has adaptability.": "has_adaptability(Kayson)",
      "If Kayson lives in an arid land, then he either has strong coils or specialized scales, but not both.": "lives_in_arid_land(Kayson) → (has_strong_coils(Kayson) ⊕ specialized_scales(Kayson))",
      "Kayson does not have strong coils.": "¬has_strong_coils(Kayson)",
      "Kayson cannot survive in harsh environments.": "¬survives_in_harsh_environment(Kayson)",
      "If Kayson lives in the desert, then he is either camouflaged or has a striking pattern (or both).": "desert_dweller(Kayson) → (camouflaged(Kayson) ∨ striking_pattern(Kayson))",
      "All snakes that live in the desert have good vision and are camouflaged.": "∀x (lives_in_desert(x) → (has_good_vision(x) ∧ camouflaged(x)))",
      "If a snake is either an expert hunter or a desert dweller (but not both), then it slides through the sand.": "∀x ((expert_hunter(x) ⊕ desert_dweller(x)) → sand_slider(x))",
      "Kayson has stealth.": "has_stealth(Kayson)",
      "All snakes with effortless movement either have remarkable speed or specialized scales (or both).": "∀x (effortless_movement(x) → (remarkable_speed(x) ∨ specialized_scales(x)))",
      "If Kayson has a striking pattern, then he is venomous and has a deadly reputation.": "striking_pattern(Kayson) → (venomous(Kayson) ∧ deadly_reputation(Kayson))",
      "Edith lives in an arid land.": "lives_in_arid_land(Edith)",
      "Kayson does not dominate his territory.": "¬dominates_territory(Kayson)",
      "If a snake is a skilled predator and has stealth, then it dominates its territory.": "∀x ((skilled_predator(x) ∧ has_stealth(x)) → dominates_territory(x))",
      "If a snake is adaptable and camouflaged, then it can survive in harsh environments.": "∀x ((has_adaptability(x) ∧ camouflaged(x)) → survives_in_harsh_environment(x))",
      "Kayson lives in an arid land.": "lives_in_arid_land(Kayson)",
      "Carla is not a fast mover.": "¬fast_mover(Carla)",
      "Kayson is an expert hunter.": "expert_hunter(Kayson)",
      "All snakes with specialized scales are either skilled predators or have a deadly reputation (or both).": "∀x (specialized_scales(x) → (skilled_predator(x) ∨ deadly_reputation(x)))",
      "For all snakes, having venom glands and injecting toxic fluid makes them venomous.": "∀x ((has_venom_glands(x) ∧ injects_toxic_fluid(x)) → venomous(x))",
      "Kayson is not a fast mover.": "¬fast_mover(Kayson)",
      "All snakes that slide through the sand are fast movers.": "∀x (sand_slider(x) → fast_mover(x))"
    },
    "conclusion_fol": "¬agile(Kayson)"
  },
  {
    "id": 321,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candy is well-designed.",
    "reasoning": "fact1: Candy meets user expectations.\nfact2: Candy does not continue to evolve.\nrule: If Candy stays relevant forever and meets user expectations, then she continues to evolve.\nconclusion: Candy does not stay relevant forever.\n\nfact1: Candy receives regular updates.\nfact2: Candy does not stay relevant forever.\nrule: If Candy becomes an indispensable tool and receives regular updates, then she stays relevant forever.\nconclusion: Candy does not become an indispensable tool.\n\nfact1: Candy does not handle large capacity.\nrule: Candy either predicts user needs or handles large capacity, but not necessarily both.\nconclusion: Candy predicts user needs.\n\nfact1: Candy does not process data quickly.\nrule: Candy either processes data quickly or enhances accuracy.\nconclusion: Candy enhances accuracy.\n\nfact1: Candy predicts user needs.\nfact2: Candy does not become an indispensable tool.\nrule: If a computer program efficiently manages data and predicts user needs, then it becomes an indispensable tool.\nconclusion: Candy does not efficiently manage data.\n\nfact1: Candy enhances accuracy.\nfact2: Candy does not boost research.\nrule: A computer program that improves productivity and enhances accuracy will boost research.\nconclusion: Candy does not improve productivity.\n\nfact1: Candy does not improve productivity.\nrule: Any computer program that streamlines processes will improve productivity.\nconclusion: Candy does not streamline processes.\n\nfact1: Candy does not efficiently manage data.\nfact2: Candy does not streamline processes.\nrule: For all computer programs, if a program is well-designed, then it efficiently manages data and streamlines processes.\nconclusion: Candy is well-designed.\n\nTherefore, it is false that Candy is well-designed. The correct option is: B.",
    "context": "Candy does not continue to evolve. Candy either processes data quickly or enhances accuracy. Candy does not process data quickly. If Candy stays relevant forever and meets user expectations, then she continues to evolve. Candy receives regular updates. Candy either predicts user needs or handles large capacity, but not necessarily both. If a computer program efficiently manages data and predicts user needs, then it becomes an indispensable tool. If Iker becomes an indispensable tool and receives regular updates, then she stays relevant forever. Skyla does not handle large capacity. If Candy becomes an indispensable tool and receives regular updates, then she stays relevant forever. Candy does not boost research. Skyla does not continue to evolve. Any computer program that streamlines processes will improve productivity. Candy does not handle large capacity. Candy meets user expectations. For all computer programs, if a program is well-designed, then it efficiently manages data and streamlines processes. Any computer program that is refined will enhance accuracy. A computer program that improves productivity and enhances accuracy will boost research.",
    "nl2fol": {
      "Candy does not continue to evolve.": "¬continues_to_evolve(Candy)",
      "Candy either processes data quickly or enhances accuracy.": "process_data_quickly(Candy) ∨ enhance_accuracy(Candy)",
      "Candy does not process data quickly.": "¬process_data_quickly(Candy)",
      "If Candy stays relevant forever and meets user expectations, then she continues to evolve.": "(stays_relevant_forever(Candy) ∧ meets_user_expectations(Candy)) → continues_to_evolve(Candy)",
      "Candy receives regular updates.": "receives_regular_updates(Candy)",
      "Candy either predicts user needs or handles large capacity, but not necessarily both.": "predict_user_needs(Candy) ⊕ handle_large_capacity(Candy)",
      "If a computer program efficiently manages data and predicts user needs, then it becomes an indispensable tool.": "∀x ((efficiently_manage_data(x) ∧ predict_user_needs(x)) → become_indispensable_tool(x))",
      "If Iker becomes an indispensable tool and receives regular updates, then she stays relevant forever.": "(become_indispensable_tool(Iker) ∧ receives_regular_updates(Iker)) → stays_relevant_forever(Iker)",
      "Skyla does not handle large capacity.": "¬handle_large_capacity(Skyla)",
      "If Candy becomes an indispensable tool and receives regular updates, then she stays relevant forever.": "(become_indispensable_tool(Candy) ∧ receives_regular_updates(Candy)) → stays_relevant_forever(Candy)",
      "Candy does not boost research.": "¬boost_research(Candy)",
      "Skyla does not continue to evolve.": "¬continues_to_evolve(Skyla)",
      "Any computer program that streamlines processes will improve productivity.": "∀x (streamline_processes(x) → improve_productivity(x))",
      "Candy does not handle large capacity.": "¬handle_large_capacity(Candy)",
      "Candy meets user expectations.": "meets_user_expectations(Candy)",
      "For all computer programs, if a program is well-designed, then it efficiently manages data and streamlines processes.": "∀x (well_designed(x) → (efficiently_manage_data(x) ∧ streamline_processes(x)))",
      "Any computer program that is refined will enhance accuracy.": "∀x (is_refined(x) → enhance_accuracy(x))",
      "A computer program that improves productivity and enhances accuracy will boost research.": "∀x ((improve_productivity(x) ∧ enhance_accuracy(x)) → boost_research(x))"
    },
    "conclusion_fol": "well_designed(Candy)"
  },
  {
    "id": 322,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gracelyn has not found her artistic voice.",
    "reasoning": "fact1: Gracelyn explores options.\nfact2: Gracelyn does not seek new challenges.\nrule: If Gracelyn explores options or seeks new challenges, then she can discover a new medium.\nconclusion: Gracelyn discovers a new medium.\n\nfact1: Gracelyn is motivated.\nfact2: Gracelyn does not have a clear mind.\nrule: If Gracelyn is motivated, then she either finds her flow or has a clear mind, but not both.\nconclusion: Gracelyn finds her flow.\n\nfact1: Gracelyn discovers a new medium.\nfact2: Gracelyn finds her flow.\nrule: Anyone who discovers a new medium or finds their flow can feel fulfilled.\nconclusion: Gracelyn has found fulfillment.\n\nfact1: Gracelyn struggles to create.\nfact2: Gracelyn has found fulfillment.\nrule: If Gracelyn struggles to create, then she has either found fulfillment or is disillusioned, but not both.\nconclusion: Gracelyn is not disillusioned.\n\nfact1: Gracelyn is passionate.\nfact2: Gracelyn is not inspired.\nrule: If Gracelyn is passionate, then she is either inspired or creative (but not both).\nconclusion: Gracelyn is creative.\n\nfact1: Gracelyn is creative.\nfact2: Gracelyn is not disillusioned.\nrule: If Gracelyn is creative, then she has either found her artistic voice or is disillusioned, but not both.\nconclusion: Gracelyn has found her artistic voice.\n\nfact1: Gracelyn has found her artistic voice.\nrule: For every human, either they have found their artistic voice or they have not found it, but not both.\nconclusion: Gracelyn has found her artistic voice.\n\nTherefore, it is false that Gracelyn has not found her artistic voice. The correct option is: B.",
    "context": "If Gracelyn has talent, then she is either content or disillusioned, but not both. Gracelyn is not inspired. If Gracelyn is passionate, then she is either inspired or creative (but not both). Gracelyn does not seek new challenges. For every human, either they have found their artistic voice or they have not found it, but not both. If Amalia is creative, then she has either found her artistic voice or is disillusioned, but not both. If Gracelyn struggles to create, then she has either found fulfillment or is disillusioned, but not both. Gracelyn does not have a clear mind. If Gracelyn is creative, then she has either found her artistic voice or is disillusioned, but not both. Gracelyn is motivated. If Gracelyn explores options or seeks new challenges, then she can discover a new medium. If Gracelyn is motivated, then she either finds her flow or has a clear mind, but not both. Gracelyn struggles to create. Gracelyn explores options. Gracelyn is passionate. Anyone who discovers a new medium or finds their flow can feel fulfilled.",
    "nl2fol": {
      "If Gracelyn has talent, then she is either content or disillusioned, but not both.": "has_talent(Gracelyn) → (feels_content(Gracelyn) ⊕ is_disillusioned(Gracelyn))",
      "Gracelyn is not inspired.": "¬is_inspired(Gracelyn)",
      "If Gracelyn is passionate, then she is either inspired or creative (but not both).": "is_passionate(Gracelyn) → (is_inspired(Gracelyn) ⊕ is_creative(Gracelyn))",
      "Gracelyn does not seek new challenges.": "¬seeks_new_challenges(Gracelyn)",
      "For every human, either they have found their artistic voice or they have not found it, but not both.": "∀x (has_found_their_artistic_voice(x) ⊕ has_not_found_their_artistic_voice(x))",
      "If Amalia is creative, then she has either found her artistic voice or is disillusioned, but not both.": "is_creative(Amalia) → (has_found_their_artistic_voice(Amalia) ⊕ is_disillusioned(Amalia))",
      "If Gracelyn struggles to create, then she has either found fulfillment or is disillusioned, but not both.": "struggles_to_create(Gracelyn) → (feels_fulfilled(Gracelyn) ⊕ is_disillusioned(Gracelyn))",
      "Gracelyn does not have a clear mind.": "¬has_clear_mind(Gracelyn)",
      "If Gracelyn is creative, then she has either found her artistic voice or is disillusioned, but not both.": "is_creative(Gracelyn) → (has_found_their_artistic_voice(Gracelyn) ⊕ is_disillusioned(Gracelyn))",
      "Gracelyn is motivated.": "is_motivated(Gracelyn)",
      "If Gracelyn explores options or seeks new challenges, then she can discover a new medium.": "(explores_options(Gracelyn) ∨ seeks_new_challenges(Gracelyn)) → discovers_new_medium(Gracelyn)",
      "If Gracelyn is motivated, then she either finds her flow or has a clear mind, but not both.": "is_motivated(Gracelyn) → (finds_flow(Gracelyn) ⊕ has_clear_mind(Gracelyn))",
      "Gracelyn struggles to create.": "struggles_to_create(Gracelyn)",
      "Gracelyn explores options.": "explores_options(Gracelyn)",
      "Gracelyn is passionate.": "is_passionate(Gracelyn)",
      "Anyone who discovers a new medium or finds their flow can feel fulfilled.": "∀x ((discovers_new_medium(x) ∨ finds_flow(x)) → feels_fulfilled(x))"
    },
    "conclusion_fol": "has_not_found_their_artistic_voice(Gracelyn)"
  },
  {
    "id": 323,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ezrah does not gain people's trust.",
    "reasoning": "fact1: Ezrah tells stories.\nfact2: Ezrah has conviction.\nrule: If Ezrah tells stories, then she speaks passionately and has conviction.\nconclusion: Ezrah speaks passionately.\n\nfact1: Ezrah is attuned to others.\nrule: If Ezrah is attuned to others, then she interprets symbols and has intuitive abilities.\nconclusion: Ezrah interprets symbols.\n\nfact1: Ezrah speaks passionately.\nfact2: Ezrah does not inspire others.\nrule: If someone conveys complex ideas and speaks passionately, then they can inspire others.\nconclusion: Ezrah cannot convey complex ideas.\n\nfact1: Ezrah does not listen actively.\nfact2: Ezrah cannot convey complex ideas.\nrule: If Ezrah either communicates effectively or listens actively (but not both), then she can convey complex ideas.\nconclusion: Ezrah does not communicate effectively.\n\nfact1: Ezrah does not understand human nature.\nfact2: Ezrah does not communicate effectively.\nrule: If Ezrah possesses a gift, then she either understands human nature or communicates effectively (or both).\nconclusion: Ezrah does not possess a gift.\n\nfact1: Ezrah interprets symbols.\nfact2: Ezrah cannot uncover hidden truths.\nrule: For anyone who interprets symbols and offers valuable insights, they can uncover hidden truths.\nconclusion: Ezrah does not offer valuable insights.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Ezrah does not gain people's trust. The correct option is: C.",
    "context": "Scarlet tells stories. If Ezrah either communicates effectively or listens actively (but not both), then she can convey complex ideas. Ezrah does not understand human nature. Camilo cannot uncover hidden truths. Ezrah tells stories. For anyone who interprets symbols and offers valuable insights, they can uncover hidden truths. Ezrah does not listen actively. Ezrah is attuned to others. If Ezrah has charisma, then she either speaks passionately or has authority, but not both. If Ezrah possesses a gift, then she either understands human nature or communicates effectively (or both). If Camilo possesses a gift, then she either understands human nature or communicates effectively (or both). If Olivia tells stories, then she speaks passionately and has conviction. Ezrah does not inspire others. Ezrah cannot uncover hidden truths. If someone conveys complex ideas and speaks passionately, then they can inspire others. If Olivia is attuned to others, then she interprets symbols and has intuitive abilities. If Camilo either communicates effectively or listens actively (but not both), then she can convey complex ideas. Ezrah has conviction. If Ezrah either reads energy or senses vibrations (but not both), then she possesses a gift. If Ezrah is attuned to others, then she interprets symbols and has intuitive abilities. If Ezrah tells stories, then she speaks passionately and has conviction.",
    "nl2fol": {
      "Scarlet tells stories.": "tell_stories(Scarlet)",
      "If Ezrah either communicates effectively or listens actively (but not both), then she can convey complex ideas.": "(communicate_effectively(Ezrah) ⊕ listen_actively(Ezrah)) → convey_complex_ideas(Ezrah)",
      "Ezrah does not understand human nature.": "¬understands_human_nature(Ezrah)",
      "Camilo cannot uncover hidden truths.": "¬uncover_hidden_truths(Camilo)",
      "Ezrah tells stories.": "tell_stories(Ezrah)",
      "For anyone who interprets symbols and offers valuable insights, they can uncover hidden truths.": "∀x ((interprets_symbols(x) ∧ offer_valuable_insights(x)) → uncover_hidden_truths(x))",
      "Ezrah does not listen actively.": "¬listen_actively(Ezrah)",
      "Ezrah is attuned to others.": "attuned_to_others(Ezrah)",
      "If Ezrah has charisma, then she either speaks passionately or has authority, but not both.": "has_charisma(Ezrah) → (speaks_passionately(Ezrah) ⊕ has_authority(Ezrah))",
      "If Ezrah possesses a gift, then she either understands human nature or communicates effectively (or both).": "possesses_gift(Ezrah) → (understands_human_nature(Ezrah) ∨ communicate_effectively(Ezrah))",
      "If Camilo possesses a gift, then she either understands human nature or communicates effectively (or both).": "possesses_gift(Camilo) → (understands_human_nature(Camilo) ∨ communicate_effectively(Camilo))",
      "If Olivia tells stories, then she speaks passionately and has conviction.": "tell_stories(Olivia) → (speaks_passionately(Olivia) ∧ has_conviction(Olivia))",
      "Ezrah does not inspire others.": "¬inspires_others(Ezrah)",
      "Ezrah cannot uncover hidden truths.": "¬uncover_hidden_truths(Ezrah)",
      "If someone conveys complex ideas and speaks passionately, then they can inspire others.": "∀x ((convey_complex_ideas(x) ∧ speaks_passionately(x)) → inspires_others(x))",
      "If Olivia is attuned to others, then she interprets symbols and has intuitive abilities.": "attuned_to_others(Olivia) → (interprets_symbols(Olivia) ∧ has_intuitive_abilities(Olivia))",
      "If Camilo either communicates effectively or listens actively (but not both), then she can convey complex ideas.": "(communicate_effectively(Camilo) ⊕ listen_actively(Camilo)) → convey_complex_ideas(Camilo)",
      "Ezrah has conviction.": "has_conviction(Ezrah)",
      "If Ezrah either reads energy or senses vibrations (but not both), then she possesses a gift.": "(reads_energy(Ezrah) ⊕ senses_vibrations(Ezrah)) → possesses_gift(Ezrah)",
      "If Ezrah is attuned to others, then she interprets symbols and has intuitive abilities.": "attuned_to_others(Ezrah) → (interprets_symbols(Ezrah) ∧ has_intuitive_abilities(Ezrah))",
      "If Ezrah tells stories, then she speaks passionately and has conviction.": "tell_stories(Ezrah) → (speaks_passionately(Ezrah) ∧ has_conviction(Ezrah))"
    },
    "conclusion_fol": "¬gain_people_trust(Ezrah)"
  },
  {
    "id": 324,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leilani is not distinguished.",
    "reasoning": "fact1: Leilani examines mineral formations.\nrule: For any mineralogist, they either examine mineral formations or study crystal structures, but it's possible to do both.\nconclusion: Leilani does not study crystal structures.\n\nfact1: Leilani does not study crystal structures.\nfact2: Leilani does not contribute to technology advancements.\nrule: Every mineralogist who draws accurate conclusions either studies crystal structures or contributes to technology advancements (or both).\nconclusion: Leilani does not draw accurate conclusions.\n\nfact1: Leilani does not draw accurate conclusions.\nrule: All meticulous mineralogists analyze samples and draw accurate conclusions.\nconclusion: Leilani is not meticulous.\n\nfact1: Leilani focuses on theoretical work.\nrule: Leilani either publishes research or focuses on theoretical work, but not both.\nconclusion: Leilani does not publish research.\n\nfact1: Leilani is not meticulous.\nfact2: Leilani does not publish research.\nrule: All diligent mineralogists are meticulous and publish research.\nconclusion: Leilani is not diligent.\n\nfact1: Leilani is not diligent.\nfact2: Leilani is innovative.\nrule: If Leilani is either diligent or innovative (but not both), then she is distinguished.\nconclusion: Leilani is not distinguished.\n\nTherefore, it is false that Leilani is not distinguished. The correct option is: B.",
    "context": "Leilani examines mineral formations. For any mineralogist, they either examine mineral formations or study crystal structures, but it's possible to do both. Any mineralogist who works hard or sets goals is diligent. Every mineralogist who draws accurate conclusions either studies crystal structures or contributes to technology advancements (or both). Leilani either publishes research or focuses on theoretical work, but not both. If Leilani is either diligent or innovative (but not both), then she is distinguished. If Leilani is an experienced mineralogist, then she either evaluates results or draws accurate conclusions, but not both. Leilani is innovative. Leilani focuses on theoretical work. All meticulous mineralogists analyze samples and draw accurate conclusions. Leilani does not contribute to technology advancements. All diligent mineralogists are meticulous and publish research.",
    "nl2fol": {
      "Leilani examines mineral formations.": "examine_mineral_formations(Leilani)",
      "For any mineralogist, they either examine mineral formations or study crystal structures, but it's possible to do both.": "∀x (examine_mineral_formations(x) ⊕ study_crystal_structures(x))",
      "Any mineralogist who works hard or sets goals is diligent.": "∀x ((works_hard(x) ∨ sets_goals(x)) → diligent(x))",
      "Every mineralogist who draws accurate conclusions either studies crystal structures or contributes to technology advancements (or both).": "∀x (draw_accurate_conclusions(x) → (study_crystal_structures(x) ∨ contribute_to_technology(x)))",
      "Leilani either publishes research or focuses on theoretical work, but not both.": "publish_research(Leilani) ⊕ focus_on_theory(Leilani)",
      "If Leilani is either diligent or innovative (but not both), then she is distinguished.": "(diligent(Leilani) ⊕ innovative(Leilani)) → distinguished(Leilani)",
      "If Leilani is an experienced mineralogist, then she either evaluates results or draws accurate conclusions, but not both.": "experienced(Leilani) → (evaluate_results(Leilani) ⊕ draw_accurate_conclusions(Leilani))",
      "Leilani is innovative.": "innovative(Leilani)",
      "Leilani focuses on theoretical work.": "focus_on_theory(Leilani)",
      "All meticulous mineralogists analyze samples and draw accurate conclusions.": "∀x (meticulous(x) → (analyze_samples(x) ∧ draw_accurate_conclusions(x)))",
      "Leilani does not contribute to technology advancements.": "¬contribute_to_technology(Leilani)",
      "All diligent mineralogists are meticulous and publish research.": "∀x (diligent(x) → (meticulous(x) ∧ publish_research(x)))"
    },
    "conclusion_fol": "¬distinguished(Leilani)"
  },
  {
    "id": 325,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gustavo is not an activist.",
    "reasoning": "fact1: Gustavo does not seek power.\nrule: Gustavo either seeks power or speaks truth, but not both.\nconclusion: Gustavo speaks truth to power.\n\nfact1: Gustavo stands up for his rights.\nfact2: Gustavo does not raise awareness.\nrule: Anyone who stands up for their rights either challenges authority or raises awareness (or both).\nconclusion: Gustavo challenges authority.\n\nfact1: Gustavo challenges authority.\nfact2: Gustavo does not inspire change.\nrule: If Gustavo challenges authority, then he either empowers others or inspires change (or both).\nconclusion: Gustavo empowers others.\n\nfact1: Gustavo does not mobilize crowds.\nfact2: Gustavo empowers others.\nrule: If Gustavo either mobilizes crowds or empowers others (but not both), then he is a community organizer.\nconclusion: Gustavo is a community organizer.\n\nfact1: Gustavo speaks truth to power.\nrule: Anyone who speaks truth to power or fights against injustice is a social advocate.\nconclusion: Gustavo is a social advocate.\n\nfact1: Gustavo is a community organizer.\nfact2: Gustavo is a social advocate.\nrule: If Gustavo is a community organizer, then he is either a social advocate or a leader, but not both.\nconclusion: Gustavo is not a leader.\n\nfact1: Gustavo is not a leader.\nrule: Gustavo is a leader or an activist (or both).\nconclusion: Gustavo is an activist.\n\nTherefore, it is false that Gustavo is not an activist. The correct option is: B.",
    "context": "Gustavo does not mobilize crowds. Gustavo does not seek power. If Gustavo builds support or develops strategies, then he can be a community organizer. Gustavo is a leader or an activist (or both). Gustavo does not raise awareness. If Gustavo either mobilizes crowds or empowers others (but not both), then he is a community organizer. Anyone who speaks truth to power or fights against injustice is a social advocate. If Gustavo has charisma and makes decisions, then he can be a leader. Gustavo does not inspire change. Gustavo stands up for his rights. If Gustavo is a community organizer, then he is either a social advocate or a leader, but not both. If Gustavo challenges authority, then he either empowers others or inspires change (or both). Anyone who stands up for their rights either challenges authority or raises awareness (or both). Gustavo either seeks power or speaks truth, but not both.",
    "nl2fol": {
      "Gustavo does not mobilize crowds.": "¬mobilizes_crowds(Gustavo)",
      "Gustavo does not seek power.": "¬seeks_power(Gustavo)",
      "If Gustavo builds support or develops strategies, then he can be a community organizer.": "(builds_support(Gustavo) ∨ develops_strategies(Gustavo)) → community_Organizer(Gustavo)",
      "Gustavo is a leader or an activist (or both).": "a_leader(Gustavo) ∨ an_activist(Gustavo)",
      "Gustavo does not raise awareness.": "¬raises_awareness(Gustavo)",
      "If Gustavo either mobilizes crowds or empowers others (but not both), then he is a community organizer.": "(mobilizes_crowds(Gustavo) ⊕ empowers_others(Gustavo)) → community_Organizer(Gustavo)",
      "Anyone who speaks truth to power or fights against injustice is a social advocate.": "∀x ((speaks_truth(x) ∨ fights_injustice(x)) → social_Advocate(x))",
      "If Gustavo has charisma and makes decisions, then he can be a leader.": "(has_charisma(Gustavo) ∧ makes_decisions(Gustavo)) → a_leader(Gustavo)",
      "Gustavo does not inspire change.": "¬inspires_change(Gustavo)",
      "Gustavo stands up for his rights.": "stands_up_for_rights(Gustavo)",
      "If Gustavo is a community organizer, then he is either a social advocate or a leader, but not both.": "community_Organizer(Gustavo) → (social_Advocate(Gustavo) ⊕ a_leader(Gustavo))",
      "If Gustavo challenges authority, then he either empowers others or inspires change (or both).": "challenges_authority(Gustavo) → (empowers_others(Gustavo) ∨ inspires_change(Gustavo))",
      "Anyone who stands up for their rights either challenges authority or raises awareness (or both).": "∀x (stands_up_for_rights(x) → (challenges_authority(x) ∨ raises_awareness(x)))",
      "Gustavo either seeks power or speaks truth, but not both.": "seeks_power(Gustavo) ⊕ speaks_truth(Gustavo)"
    },
    "conclusion_fol": "¬an_activist(Gustavo)"
  },
  {
    "id": 326,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jaylani is a sea goer.",
    "reasoning": "fact1: Jaylani is adaptable.\nrule: If Jaylani is adaptable, then she thrives alone and embraces freedom.\nconclusion: Jaylani embraces freedom.\n\nfact1: Jaylani loves nature.\nfact2: Jaylani does not appreciate routine.\nrule: If Jaylani loves nature, then she either values comfort or appreciates routine, but not both.\nconclusion: Jaylani values comfort.\n\nfact1: Jaylani embraces freedom.\nrule: Jaylani either settles down or embraces freedom, but not both.\nconclusion: Jaylani does not settle down.\n\nfact1: Jaylani values comfort.\nfact2: Jaylani does not settle down.\nrule: Everyone who values comfort either enjoys stability or settles down (or both).\nconclusion: Jaylani enjoys stability.\n\nfact1: Jaylani enjoys stability.\nrule: Jaylani either enjoys stability or likes travel, but not both.\nconclusion: Jaylani is not a person who likes travel.\n\nfact1: Jaylani is not a person who likes travel.\nrule: Jaylani either likes travel or is a land lover.\nconclusion: Jaylani is a land lover.\n\nfact1: Jaylani is a land lover.\nrule: Jaylani is either a land lover or a sea goer, but not both.\nconclusion: Jaylani is not a sea goer.\n\nTherefore, it is false that Jaylani is a sea goer. The correct option is: B.",
    "context": "If Jaylani is adaptable, then she thrives alone and embraces freedom. Jaylani loves nature. Jaylani either enjoys stability or likes travel, but not both. Everyone who values comfort either enjoys stability or settles down (or both). If Jaylani loves nature, then she either values comfort or appreciates routine, but not both. Jaylani is adaptable. Jaylani either settles down or embraces freedom, but not both. Jaylani is either a land lover or a sea goer, but not both. Anyone who has a family tends to enjoy stability. Jaylani does not appreciate routine. Jaylani either likes travel or is a land lover.",
    "nl2fol": {
      "If Jaylani is adaptable, then she thrives alone and embraces freedom.": "adaptable(Jaylani) → (thrives_alone(Jaylani) ∧ embraces_freedom(Jaylani))",
      "Jaylani loves nature.": "loves_nature(Jaylani)",
      "Jaylani either enjoys stability or likes travel, but not both.": "enjoys_stability(Jaylani) ⊕ likes_travel(Jaylani)",
      "Everyone who values comfort either enjoys stability or settles down (or both).": "∀x (values_comfort(x) → (enjoys_stability(x) ∨ settles_down(x)))",
      "If Jaylani loves nature, then she either values comfort or appreciates routine, but not both.": "loves_nature(Jaylani) → (values_comfort(Jaylani) ⊕ appreciates_routine(Jaylani))",
      "Jaylani is adaptable.": "adaptable(Jaylani)",
      "Jaylani either settles down or embraces freedom, but not both.": "embraces_freedom(Jaylani) ⊕ settles_down(Jaylani)",
      "Jaylani is either a land lover or a sea goer, but not both.": "land_lover(Jaylani) ⊕ sea_goer(Jaylani)",
      "Anyone who has a family tends to enjoy stability.": "∀x (has_family(x) → enjoys_stability(x))",
      "Jaylani does not appreciate routine.": "¬appreciates_routine(Jaylani)",
      "Jaylani either likes travel or is a land lover.": "likes_travel(Jaylani) ∨ land_lover(Jaylani)"
    },
    "conclusion_fol": "sea_goer(Jaylani)"
  },
  {
    "id": 327,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Demi is not challenging to others.",
    "reasoning": "fact1: Demi has a unique style.\nfact2: Demi does not create masterpieces.\nrule: If someone inspires others and has a unique style, then they can create masterpieces.\nconclusion: Demi does not inspire others.\n\nfact1: Demi has vibrant energy.\nrule: If Demi has vibrant energy, then she is both adventurous and seeks inspiration.\nconclusion: Demi is adventurous.\n\nfact1: Demi values stability.\nrule: Demi is either fearless or values stability, but not both.\nconclusion: Demi is not fearless.\n\nfact1: Demi is adventurous.\nfact2: Demi is not fearless.\nrule: If Demi is adventurous, then she is either spontaneous or fearless (but not both).\nconclusion: Demi acts spontaneously.\n\nfact1: Demi does not follow her instinct.\nfact2: Demi acts spontaneously.\nrule: If Demi either follows her instinct or acts spontaneously (but not both), then she has passion.\nconclusion: Demi has passion.\n\nfact1: Demi has passion.\nrule: All people who have passion express themselves freely and take risks.\nconclusion: Demi expresses herself freely.\n\nfact1: Demi expresses herself freely.\nfact2: Demi does not inspire others.\nrule: Anyone who expresses themselves freely is either brilliant or inspires others (or both).\nconclusion: Demi is brilliant.\n\nfact1: Demi is unpredictable.\nfact2: Demi is brilliant.\nrule: If Demi is unpredictable, then she is either brilliant or challenging to others, but not both.\nconclusion: Demi is not challenging to others.\n\nTherefore, it is true that Demi is not challenging to others. The correct option is: A.",
    "context": "Demi is unpredictable. If Demi is unpredictable, then she is either brilliant or challenging to others, but not both. Demi values stability. If Demi has vibrant energy, then she is both adventurous and seeks inspiration. Demi does not follow her instinct. Elliot values stability. Elliot has vibrant energy. Demi does not create masterpieces. Demi has vibrant energy. Vicente does not create masterpieces. If Davian has vibrant energy, then she is both adventurous and seeks inspiration. If someone inspires others and has a unique style, then they can create masterpieces. If Demi either follows her instinct or acts spontaneously (but not both), then she has passion. Davian does not follow her instinct. If Elliot either follows her instinct or acts spontaneously (but not both), then she has passion. Davian is either fearless or values stability, but not both. Demi has a unique style. All people who have passion express themselves freely and take risks. If Demi is adventurous, then she is either spontaneous or fearless (but not both). Davian is unpredictable. Demi is either fearless or values stability, but not both. If Davian is unpredictable, then she is either brilliant or challenging to others, but not both. Demi either embraces uncertainty or is fearless. If Elliot is adventurous, then she is either spontaneous or fearless (but not both). Anyone who expresses themselves freely is either brilliant or inspires others (or both). If someone has a creative vision and connects with people, then they can inspire others.",
    "nl2fol": {
      "Demi is unpredictable.": "unpredictable(Demi)",
      "If Demi is unpredictable, then she is either brilliant or challenging to others, but not both.": "unpredictable(Demi) → (brilliant(Demi) ⊕ challenging_to_others(Demi))",
      "Demi values stability.": "values_stability(Demi)",
      "If Demi has vibrant energy, then she is both adventurous and seeks inspiration.": "has_vibrant_energy(Demi) → (is_adventurous(Demi) ∧ seeks_inspiration(Demi))",
      "Demi does not follow her instinct.": "¬follows_instinct(Demi)",
      "Elliot values stability.": "values_stability(Elliot)",
      "Elliot has vibrant energy.": "has_vibrant_energy(Elliot)",
      "Demi does not create masterpieces.": "¬creates_masterpieces(Demi)",
      "Demi has vibrant energy.": "has_vibrant_energy(Demi)",
      "Vicente does not create masterpieces.": "¬create_masterpieces(Vicente)",
      "If Davian has vibrant energy, then she is both adventurous and seeks inspiration.": "has_vibrant_energy(Davian) → (is_adventurous(Davian) ∧ seeks_inspiration(Davian))",
      "If someone inspires others and has a unique style, then they can create masterpieces.": "∀x ((inspires_others(x) ∧ has_unique_style(x)) → creates_masterpieces(x))",
      "If Demi either follows her instinct or acts spontaneously (but not both), then she has passion.": "(follows_instinct(Demi) ⊕ acts_spontaneously(Demi)) → has_passion(Demi)",
      "Davian does not follow her instinct.": "¬follows_instinct(Davian)",
      "If Elliot either follows her instinct or acts spontaneously (but not both), then she has passion.": "(follows_instinct(Elliot) ⊕ acts_spontaneously(Elliot)) → has_passion(Elliot)",
      "Davian is either fearless or values stability, but not both.": "is_fearless(Davian) ⊕ values_stability(Davian)",
      "Demi has a unique style.": "has_unique_style(Demi)",
      "All people who have passion express themselves freely and take risks.": "∀x (has_passion(x) → (expresses_freely(x) ∧ takes_risks(x)))",
      "If Demi is adventurous, then she is either spontaneous or fearless (but not both).": "is_adventurous(Demi) → (acts_spontaneously(Demi) ⊕ is_fearless(Demi))",
      "Davian is unpredictable.": "unpredictable(Davian)",
      "Demi is either fearless or values stability, but not both.": "is_fearless(Demi) ⊕ values_stability(Demi)",
      "If Davian is unpredictable, then she is either brilliant or challenging to others, but not both.": "unpredictable(Davian) → (brilliant(Davian) ⊕ challenging_to_others(Davian))",
      "Demi either embraces uncertainty or is fearless.": "embraces_uncertainty(Demi) ∨ is_fearless(Demi)",
      "If Elliot is adventurous, then she is either spontaneous or fearless (but not both).": "is_adventurous(Elliot) → (acts_spontaneously(Elliot) ⊕ is_fearless(Elliot))",
      "Anyone who expresses themselves freely is either brilliant or inspires others (or both).": "∀x (expresses_freely(x) → (brilliant(x) ∨ inspires_others(x)))",
      "If someone has a creative vision and connects with people, then they can inspire others.": "∀x ((has_creative_vision(x) ∧ connects_with_people(x)) → inspires_others(x))"
    },
    "conclusion_fol": "¬challenging_to_others(Demi)"
  },
  {
    "id": 328,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Paloma travels extensively.",
    "reasoning": "fact1: Paloma composes framing well.\nrule: If someone understands lighting, then they may not necessarily compose framing well, and vice versa.\nconclusion: Paloma does not understand lighting.\n\nfact1: Paloma does not understand lighting.\nfact2: Paloma cannot edit images.\nrule: If Paloma has a creative vision, then she either understands lighting or can edit images, but not both.\nconclusion: Paloma does not have a creative vision.\n\nfact1: Paloma is detail-oriented.\nfact2: Paloma is culturally sensitive.\nrule: If Paloma has good eyesight, then she is either detail-oriented or culturally sensitive (but not both).\nconclusion: Paloma does not have good eyesight.\n\nfact1: Paloma does not have good eyesight.\nfact2: Paloma does not have artistic talent.\nrule: If Paloma takes stunning photos, then she either has good eyesight or artistic talent (but not both).\nconclusion: Paloma does not take stunning photos.\n\nfact1: Paloma does not take stunning photos.\nrule: If Paloma becomes a professional photographer, then she will take stunning photos.\nconclusion: Paloma does not become a professional photographer.\n\nfact1: Paloma does not have a creative vision.\nrule: Paloma either buys quality equipment or has a creative vision.\nconclusion: Paloma buys quality equipment.\n\nfact1: Paloma knows photography techniques.\nfact2: Paloma buys quality equipment.\nrule: If Paloma knows photography techniques and buys quality equipment, then she has a good camera.\nconclusion: Paloma has a good camera.\n\nfact1: Paloma has a good camera.\nfact2: Paloma does not become a professional photographer.\nrule: If Paloma travels extensively and has a good camera, then she can become a professional photographer.\nconclusion: Paloma travels extensively.\n\nTherefore, it is false that Paloma travels extensively. The correct option is: B.",
    "context": "If Paloma is attentive to details, then she understands lighting and visualizes compositions. If someone understands lighting, then they may not necessarily compose framing well, and vice versa. If Quinn has good eyesight, then she is either detail-oriented or culturally sensitive (but not both). Paloma cannot edit images. Jordan does not have artistic talent. If Paloma has good eyesight, then she is either detail-oriented or culturally sensitive (but not both). Paloma either buys quality equipment or has a creative vision. If Paloma either sees beyond appearance or finds unique angles (but not both), then she has a creative vision. If Paloma knows photography techniques and buys quality equipment, then she has a good camera. If Paloma has a creative vision, then she either understands lighting or can edit images, but not both. Quinn cannot edit images. Paloma is detail-oriented. If Paloma travels extensively and has a good camera, then she can become a professional photographer. If Paloma becomes a professional photographer, then she will take stunning photos. Doobie is culturally sensitive. Paloma does not have artistic talent. Paloma knows photography techniques. If Paloma takes stunning photos, then she either has good eyesight or artistic talent (but not both). Anyone who captures intimate moments or tells powerful stories can take stunning photos. Paloma composes framing well. Paloma is culturally sensitive.",
    "nl2fol": {
      "If Paloma is attentive to details, then she understands lighting and visualizes compositions.": "attentive_to_details(Paloma) → (understands_lighting(Paloma) ∧ visualize_compositions(Paloma))",
      "If someone understands lighting, then they may not necessarily compose framing well, and vice versa.": "∀x (understands_lighting(x) ⊕ composes_framing_well(x))",
      "If Quinn has good eyesight, then she is either detail-oriented or culturally sensitive (but not both).": "has_good_eyesight(Quinn) → (has_attention_to_detail(Quinn) ⊕ is_culturally_sensitive(Quinn))",
      "Paloma cannot edit images.": "¬can_edit_images(Paloma)",
      "Jordan does not have artistic talent.": "¬has_artistic_talent(Jordan)",
      "If Paloma has good eyesight, then she is either detail-oriented or culturally sensitive (but not both).": "has_good_eyesight(Paloma) → (has_attention_to_detail(Paloma) ⊕ is_culturally_sensitive(Paloma))",
      "Paloma either buys quality equipment or has a creative vision.": "buys_quality_equipment(Paloma) ∨ has_creative_vision(Paloma)",
      "If Paloma either sees beyond appearance or finds unique angles (but not both), then she has a creative vision.": "(sees_beyond_appearance(Paloma) ⊕ finds_unique_angles(Paloma)) → has_creative_vision(Paloma)",
      "If Paloma knows photography techniques and buys quality equipment, then she has a good camera.": "(knows_photography_techniques(Paloma) ∧ buys_quality_equipment(Paloma)) → have_a_good_camera(Paloma)",
      "If Paloma has a creative vision, then she either understands lighting or can edit images, but not both.": "has_creative_vision(Paloma) → (understands_lighting(Paloma) ⊕ can_edit_images(Paloma))",
      "Quinn cannot edit images.": "¬can_edit_images(Quinn)",
      "Paloma is detail-oriented.": "has_attention_to_detail(Paloma)",
      "If Paloma travels extensively and has a good camera, then she can become a professional photographer.": "(travel_extensively(Paloma) ∧ have_a_good_camera(Paloma)) → become_a_professional_photographer(Paloma)",
      "If Paloma becomes a professional photographer, then she will take stunning photos.": "become_a_professional_photographer(Paloma) → takes_stunning_photos(Paloma)",
      "Doobie is culturally sensitive.": "is_culturally_sensitive(Doobie)",
      "Paloma does not have artistic talent.": "¬has_artistic_talent(Paloma)",
      "Paloma knows photography techniques.": "knows_photography_techniques(Paloma)",
      "If Paloma takes stunning photos, then she either has good eyesight or artistic talent (but not both).": "takes_stunning_photos(Paloma) → (has_good_eyesight(Paloma) ⊕ has_artistic_talent(Paloma))",
      "Anyone who captures intimate moments or tells powerful stories can take stunning photos.": "∀x ((capture_intimate_moments(x) ∨ tell_powerful_stories(x)) → takes_stunning_photos(x))",
      "Paloma composes framing well.": "composes_framing_well(Paloma)",
      "Paloma is culturally sensitive.": "is_culturally_sensitive(Paloma)"
    },
    "conclusion_fol": "travel_extensively(Paloma)"
  },
  {
    "id": 329,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If King Cruz is a just ruler, then he either brings prosperity or forges unity (or both).",
    "reasoning": "fact1: King Cruz seeks counsel.\nfact2: King Cruz does not evaluate options.\nrule: Everyone who seeks counsel either evaluates options or possesses good judgment (or both).\nconclusion: Cruz possesses good judgment.\n\nfact1: Cruz possesses good judgment.\nrule: Anyone who possesses good judgment will make wise decisions.\nconclusion: Cruz makes wise decisions.\n\nfact1: King Cruz has leadership skills.\nfact2: Cruz makes wise decisions.\nrule: If King Cruz has leadership skills, then he either makes wise decisions or shows empathy, but not both.\nconclusion: King Cruz does not show empathy.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If King Cruz is a just ruler, then he either brings prosperity or forges unity (or both). The correct option is: C.",
    "context": "King Cruz does not evaluate options. If King Cruz has leadership skills, then he either makes wise decisions or shows empathy, but not both. If King Cruz either analyzes situations or considers alternatives (but not both), then he makes wise decisions. King Cruz has leadership skills. Anyone who possesses good judgment will make wise decisions. Everyone who seeks counsel either evaluates options or possesses good judgment (or both). King Quinn does not rule wisely. If King Ezra has leadership skills, then he either makes wise decisions or shows empathy, but not both. King Cruz seeks counsel. King Adriana does not evaluate options. Anyone who considers others or understands feelings can show empathy.",
    "nl2fol": {
      "King Cruz does not evaluate options.": "¬evaluate_options(Cruz)",
      "If King Cruz has leadership skills, then he either makes wise decisions or shows empathy, but not both.": "has_leadership_skills(Cruz) → (make_wise_decisions(Cruz) ⊕ show_empathy(Cruz))",
      "If King Cruz either analyzes situations or considers alternatives (but not both), then he makes wise decisions.": "(analyze_situations(Cruz) ⊕ consider_alternatives(Cruz)) → make_wise_decisions(Cruz)",
      "King Cruz has leadership skills.": "has_leadership_skills(Cruz)",
      "Anyone who possesses good judgment will make wise decisions.": "∀x (possesses_good_judgment(x) → make_wise_decisions(x))",
      "Everyone who seeks counsel either evaluates options or possesses good judgment (or both).": "∀x (seek_counsel(x) → (evaluate_options(x) ∨ possesses_good_judgment(x)))",
      "King Quinn does not rule wisely.": "¬rule_wisely(Quinn)",
      "If King Ezra has leadership skills, then he either makes wise decisions or shows empathy, but not both.": "has_leadership_skills(Ezra) → (make_wise_decisions(Ezra) ⊕ show_empathy(Ezra))",
      "King Cruz seeks counsel.": "seek_counsel(Cruz)",
      "King Adriana does not evaluate options.": "¬evaluate_options(Adriana)",
      "Anyone who considers others or understands feelings can show empathy.": "∀x ((consider_others(x) ∨ understand_feelings(x)) → show_empathy(x))"
    },
    "conclusion_fol": "just_ruler(Cruz) → (bring_prosperity(Cruz) ∨ forge_unity(Cruz))"
  },
  {
    "id": 330,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ayan is not careless.",
    "reasoning": "fact1: Ayan interprets data.\nrule: Ayan either analyses results or interprets data, but not both.\nconclusion: Ayan does not analyse results.\n\nfact1: Ayan collects samples.\nfact2: Ayan does not analyse results.\nrule: If someone is either a researcher or collects samples, then they analyse results.\nconclusion: Ayan is a researcher.\n\nfact1: Ayan is a researcher.\nfact2: Ayan maintains a database.\nrule: If Ayan is a researcher, then he either keeps records or maintains a database, but not both.\nconclusion: Ayan does not keep records.\n\nfact1: Ayan does not keep records.\nrule: Ayan keeps records or organizes notes.\nconclusion: Ayan organizes notes.\n\nfact1: Ayan organizes notes.\nfact2: Ayan does not track data.\nrule: If Ayan either organizes notes or tracks data (but not both), then he is meticulous.\nconclusion: Ayan is meticulous.\n\nfact1: Ayan is meticulous.\nrule: If someone is meticulous, then they pay attention to details and are careful.\nconclusion: Ayan is careful.\n\nfact1: Ayan is careful.\nrule: Ayan is either careful or careless, but not both.\nconclusion: Ayan is not careless.\n\nTherefore, it is true that Ayan is not careless. The correct option is: A.",
    "context": "Ayan keeps records or organizes notes. Ayan is either careful or careless, but not both. Ayan does not track data. Ayan maintains a database. If someone is either a researcher or collects samples, then they analyse results. If Ayan either organizes notes or tracks data (but not both), then he is meticulous. Ayan interprets data. Ayan follows protocol or is meticulous. Ayan either analyses results or interprets data, but not both. Oscar keeps records or organizes notes. Gunnar is either careful or careless, but not both. Ayan collects samples. If Ayan is a researcher, then he either keeps records or maintains a database, but not both. Oscar collects samples. Coraline interprets data. If someone is meticulous, then they pay attention to details and are careful. Coraline either analyses results or interprets data, but not both.",
    "nl2fol": {
      "Ayan keeps records or organizes notes.": "keeps_records(Ayan) ∨ organizes_notes(Ayan)",
      "Ayan is either careful or careless, but not both.": "careful(Ayan) ⊕ careless(Ayan)",
      "Ayan does not track data.": "¬tracks_data(Ayan)",
      "Ayan maintains a database.": "maintains_database(Ayan)",
      "If someone is either a researcher or collects samples, then they analyse results.": "∀x ((researcher(x) ⊕ collects_samples(x)) → analyses_results(x))",
      "If Ayan either organizes notes or tracks data (but not both), then he is meticulous.": "(organizes_notes(Ayan) ⊕ tracks_data(Ayan)) → meticulous(Ayan)",
      "Ayan interprets data.": "interprets_data(Ayan)",
      "Ayan follows protocol or is meticulous.": "follows_protocol(Ayan) ∨ meticulous(Ayan)",
      "Ayan either analyses results or interprets data, but not both.": "analyses_results(Ayan) ⊕ interprets_data(Ayan)",
      "Oscar keeps records or organizes notes.": "keeps_records(Oscar) ∨ organizes_notes(Oscar)",
      "Gunnar is either careful or careless, but not both.": "careful(Gunnar) ⊕ careless(Gunnar)",
      "Ayan collects samples.": "collects_samples(Ayan)",
      "If Ayan is a researcher, then he either keeps records or maintains a database, but not both.": "researcher(Ayan) → (keeps_records(Ayan) ⊕ maintains_database(Ayan))",
      "Oscar collects samples.": "collect_samples(Oscar)",
      "Coraline interprets data.": "interprets_data(Coraline)",
      "If someone is meticulous, then they pay attention to details and are careful.": "∀x (meticulous(x) → (attention_to_details(x) ∧ careful(x)))",
      "Coraline either analyses results or interprets data, but not both.": "analyses_results(Coraline) ⊕ interprets_data(Coraline)"
    },
    "conclusion_fol": "¬careless(Ayan)"
  },
  {
    "id": 331,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tate becomes an expert in his field.",
    "reasoning": "fact1: Tate is ambitious.\nfact2: Tate does not enjoy freedom.\nrule: If Tate is ambitious, then he either prioritizes leisure or enjoys freedom, but not both.\nconclusion: Tate prioritizes leisure.\n\nfact1: Tate prioritizes leisure.\nrule: Tate either prioritizes leisure or works tirelessly, but not both.\nconclusion: Tate does not work tirelessly.\n\nfact1: Tate acts on impulse.\nrule: For Tate, he either acts on impulse or thinks critically, but not both.\nconclusion: Tate does not think critically.\n\nfact1: Tate has career goals.\nfact2: Tate does not have strong motivation.\nrule: If Tate has career goals, then he either has strong motivation or pursues his passion, but not both.\nconclusion: Tate pursues his passion.\n\nfact1: Tate pursues his passion.\nfact2: Tate achieves success.\nrule: If Tate pursues his passion, then he is either dedicated or achieves success, but not both.\nconclusion: Tate is not dedicated to his work.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Tate becomes an expert in his field. The correct option is: C.",
    "context": "Tate acts on impulse. Tate achieves success. Tate either prioritizes leisure or works tirelessly, but not both. If Tate is ambitious, then he either prioritizes leisure or enjoys freedom, but not both. Tate does not enjoy freedom. Tate has career goals. If Tate pursues his passion, then he is either dedicated or achieves success, but not both. For Tate, he either acts on impulse or thinks critically, but not both. If Tate loves nature, then he prioritizes leisure. Tate is ambitious. Tate does not have strong motivation. If Tate has career goals, then he either has strong motivation or pursues his passion, but not both.",
    "nl2fol": {
      "Tate acts on impulse.": "acts_on_impulse(Tate)",
      "Tate achieves success.": "achieve_success(Tate)",
      "Tate either prioritizes leisure or works tirelessly, but not both.": "prioritizes_leisure(Tate) ⊕ works_tirelessly(Tate)",
      "If Tate is ambitious, then he either prioritizes leisure or enjoys freedom, but not both.": "is_ambitious(Tate) → (prioritizes_leisure(Tate) ⊕ enjoys_freedom(Tate))",
      "Tate does not enjoy freedom.": "¬enjoys_freedom(Tate)",
      "Tate has career goals.": "has_career_goals(Tate)",
      "If Tate pursues his passion, then he is either dedicated or achieves success, but not both.": "pursue_passion(Tate) → (achieve_success(Tate) ⊕ dedicated(Tate))",
      "For Tate, he either acts on impulse or thinks critically, but not both.": "acts_on_impulse(Tate) ⊕ thinks_critically(Tate)",
      "If Tate loves nature, then he prioritizes leisure.": "loves_nature(Tate) → prioritizes_leisure(Tate)",
      "Tate is ambitious.": "is_ambitious(Tate)",
      "Tate does not have strong motivation.": "¬has_strong_motivation(Tate)",
      "If Tate has career goals, then he either has strong motivation or pursues his passion, but not both.": "has_career_goals(Tate) → (pursue_passion(Tate) ⊕ has_strong_motivation(Tate))"
    },
    "conclusion_fol": "become_an_expert(Tate)"
  },
  {
    "id": 332,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dr. Giana does not improve patient lives.",
    "reasoning": "fact1: Dr. Giana cares for her families.\nfact2: Giana does not prioritize the wellbeing of others.\nrule: For all humans, if they are either passionate about health or care for their families, then they prioritize the wellbeing of others.\nconclusion: Dr. Giana is passionate about health.\n\nfact1: Dr. Giana dedicates her life to something.\nfact2: Dr. Giana does not leave a lasting impact.\nrule: If Dr. Giana dedicates her life to something, then she either earns recognition or leaves a lasting impact (or both).\nconclusion: Dr. Giana earns recognition.\n\nfact1: Dr. Giana is passionate about health.\nrule: If Dr. Giana is passionate about health, then she conducts medical research and helps others.\nconclusion: Dr. Giana conducts medical research.\n\nfact1: Dr. Giana receives accolades.\nfact2: Dr. Giana earns recognition.\nrule: If Dr. Giana makes groundbreaking discoveries, then she either receives accolades or earns recognition (but not both).\nconclusion: Dr. Giana does not make groundbreaking discoveries.\n\nfact1: Dr. Giana conducts medical research.\nfact2: Dr. Giana does not pioneer new treatments.\nrule: If Dr. Giana conducts medical research, then she is either a leading endocrinologist or pioneers new treatments (or both).\nconclusion: Dr. Giana is a leading endocrinologist.\n\nfact1: Dr. Giana is a leading endocrinologist.\nfact2: Dr. Giana does not make groundbreaking discoveries.\nrule: For all humans, if someone is a leading endocrinologist, then they either make groundbreaking discoveries or improve patient lives (or both).\nconclusion: Dr. Giana does not improve patient lives.\n\nTherefore, it is false that Dr. Giana does not improve patient lives. The correct option is: B.",
    "context": "Dr. Giana does not leave a lasting impact. Giana does not prioritize the wellbeing of others. If Dr. Giana is passionate about health, then she conducts medical research and helps others. Dr. Philip dedicates her life to something. For all humans, if someone is a leading endocrinologist, then they either make groundbreaking discoveries or improve patient lives (or both). If Dr. Giana dedicates her life to something, then she either earns recognition or leaves a lasting impact (or both). Dr. Giana cares for her families. If Dr. Giana conducts medical research, then she is either a leading endocrinologist or pioneers new treatments (or both). Dr. Silas receives accolades. If Dr. Giana makes groundbreaking discoveries, then she either receives accolades or earns recognition (but not both). Dr. Philip does not leave a lasting impact. Dr. Giana does not pioneer new treatments. Dr. Giana receives accolades. Dr. Aubree does not pioneer new treatments. Dr. Aubree cares for her families. If Dr. Aubree makes groundbreaking discoveries, then she either receives accolades or earns recognition (but not both). If Dr. Giana has a medical degree or works in a hospital, then she can conduct medical research. Dr. Giana dedicates her life to something. For all humans, if they are either passionate about health or care for their families, then they prioritize the wellbeing of others. If Dr. Giana has a medical degree, then she either makes groundbreaking discoveries or teaches medicine, but not both. Dr. Giana publishes papers or earns recognition.",
    "nl2fol": {
      "Dr. Giana does not leave a lasting impact.": "¬leave_lasting_impact(Giana)",
      "Giana does not prioritize the wellbeing of others.": "¬prioritize_wellbeing(Giana)",
      "If Dr. Giana is passionate about health, then she conducts medical research and helps others.": "passionate_about_health(Giana) → (conduct_medical_research(Giana) ∧ help_others(Giana))",
      "Dr. Philip dedicates her life to something.": "dedicate_their_life(Philip)",
      "For all humans, if someone is a leading endocrinologist, then they either make groundbreaking discoveries or improve patient lives (or both).": "∀x (leading_endocrinologist(x) → (make_groundbreaking_discoveries(x) ∨ improve_patient_lives(x)))",
      "If Dr. Giana dedicates her life to something, then she either earns recognition or leaves a lasting impact (or both).": "dedicate_their_life(Giana) → (earn_recognition(Giana) ∨ leave_lasting_impact(Giana))",
      "Dr. Giana cares for her families.": "care_for_families(Giana)",
      "If Dr. Giana conducts medical research, then she is either a leading endocrinologist or pioneers new treatments (or both).": "conduct_medical_research(Giana) → (leading_endocrinologist(Giana) ∨ pioneer_new_treatments(Giana))",
      "Dr. Silas receives accolades.": "receive_accolades(Silas)",
      "If Dr. Giana makes groundbreaking discoveries, then she either receives accolades or earns recognition (but not both).": "make_groundbreaking_discoveries(Giana) → (receive_accolades(Giana) ⊕ earn_recognition(Giana))",
      "Dr. Philip does not leave a lasting impact.": "¬leave_lasting_impact(Philip)",
      "Dr. Giana does not pioneer new treatments.": "¬pioneer_new_treatments(Giana)",
      "Dr. Giana receives accolades.": "receive_accolades(Giana)",
      "Dr. Aubree does not pioneer new treatments.": "¬pioneer_new_treatments(Aubree)",
      "Dr. Aubree cares for her families.": "care_for_families(Aubree)",
      "If Dr. Aubree makes groundbreaking discoveries, then she either receives accolades or earns recognition (but not both).": "make_groundbreaking_discoveries(Aubree) → (receive_accolades(Aubree) ⊕ earn_recognition(Aubree))",
      "If Dr. Giana has a medical degree or works in a hospital, then she can conduct medical research.": "(have_medical_degree(Giana) ∨ work_in_hospital(Giana)) → conduct_medical_research(Giana)",
      "Dr. Giana dedicates her life to something.": "dedicate_their_life(Giana)",
      "For all humans, if they are either passionate about health or care for their families, then they prioritize the wellbeing of others.": "∀x ((passionate_about_health(x) ⊕ care_for_families(x)) → prioritize_wellbeing(x))",
      "If Dr. Giana has a medical degree, then she either makes groundbreaking discoveries or teaches medicine, but not both.": "has_medical_degree(Giana) → (make_groundbreaking_discoveries(Giana) ⊕ teach_medicine(Giana))",
      "Dr. Giana publishes papers or earns recognition.": "publish_papers(Giana) ∨ earn_recognition(Giana)"
    },
    "conclusion_fol": "¬improve_patient_lives(Giana)"
  },
  {
    "id": 333,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jude values scientific discovery.",
    "reasoning": "fact1: Jude does not share ideas.\nrule: Jude shares ideas or communicates effectively.\nconclusion: Jude communicates effectively.\n\nfact1: Jude has curiosity.\nrule: Jude either has curiosity or understands cellular processes, but it is possible for Jude to have both.\nconclusion: Jude does not understand cellular processes.\n\nfact1: Jude does not make new discoveries.\nfact2: Jude does not achieve recognition.\nrule: Anyone who inspires others or makes new discoveries will achieve recognition.\nconclusion: Jude does not inspire others.\n\nfact1: Jude communicates effectively.\nfact2: Jude does not inspire others.\nrule: If someone advances medical knowledge and communicates effectively, then they can inspire others.\nconclusion: Jude does not advance medical knowledge.\n\nfact1: Jude does not understand cellular processes.\nfact2: Jude does not advance medical knowledge.\nrule: Anyone who appreciates biological complexity understands cellular processes or advances medical knowledge (or both).\nconclusion: Jude does not appreciate biological complexity.\n\nfact1: Jude does not appreciate biological complexity.\nrule: Jude either appreciates biological complexity or values scientific discovery (or both).\nconclusion: Jude values scientific discovery.\n\nTherefore, it is true that Jude values scientific discovery. The correct option is: A.",
    "context": "If someone advances medical knowledge and communicates effectively, then they can inspire others. Jude either appreciates biological complexity or values scientific discovery (or both). Anyone who studies morphogenesis either identifies developmental mechanisms or understands cellular processes (or both). Rosemary either appreciates biological complexity or values scientific discovery (or both). Jude does not make new discoveries. Jude shares ideas or communicates effectively. Jude does not achieve recognition. Anyone who inspires others or makes new discoveries will achieve recognition. Anyone who appreciates biological complexity understands cellular processes or advances medical knowledge (or both). Ryan does not achieve recognition. Ryan either has curiosity or understands cellular processes, but it is possible for Ryan to have both. Jude has curiosity. Jude either has curiosity or understands cellular processes, but it is possible for Jude to have both. Saint has curiosity. Anyone who speaks clearly and listens actively can communicate effectively. Jude does not share ideas.",
    "nl2fol": {
      "If someone advances medical knowledge and communicates effectively, then they can inspire others.": "∀x ((advances_medical_knowledge(x) ∧ communicates_effectively(x)) → inspires_others(x))",
      "Jude either appreciates biological complexity or values scientific discovery (or both).": "appreciates_biological_complexity(Jude) ∨ values_scientific_discovery(Jude)",
      "Anyone who studies morphogenesis either identifies developmental mechanisms or understands cellular processes (or both).": "∀x (studies_morphogenesis(x) → (identifies_developmental_mechanisms(x) ∨ understands_cellular_processes(x)))",
      "Rosemary either appreciates biological complexity or values scientific discovery (or both).": "appreciates_biological_complexity(Rosemary) ∨ values_scientific_discovery(Rosemary)",
      "Jude does not make new discoveries.": "¬makes_new_discoveries(Jude)",
      "Jude shares ideas or communicates effectively.": "shares_ideas(Jude) ∨ communicates_effectively(Jude)",
      "Jude does not achieve recognition.": "¬achieves_recognition(Jude)",
      "Anyone who inspires others or makes new discoveries will achieve recognition.": "∀x ((inspires_others(x) ∨ makes_new_discoveries(x)) → achieves_recognition(x))",
      "Anyone who appreciates biological complexity understands cellular processes or advances medical knowledge (or both).": "∀x (appreciates_biological_complexity(x) → (understands_cellular_processes(x) ∨ advances_medical_knowledge(x)))",
      "Ryan does not achieve recognition.": "¬achieves_recognition(Ryan)",
      "Ryan either has curiosity or understands cellular processes, but it is possible for Ryan to have both.": "has_curiosity(Ryan) ⊕ understands_cellular_processes(Ryan)",
      "Jude has curiosity.": "has_curiosity(Jude)",
      "Jude either has curiosity or understands cellular processes, but it is possible for Jude to have both.": "has_curiosity(Jude) ⊕ understands_cellular_processes(Jude)",
      "Saint has curiosity.": "has_curiosity(Saint)",
      "Anyone who speaks clearly and listens actively can communicate effectively.": "∀x ((speaks_clearly(x) ∧ listens_actively(x)) → communicates_effectively(x))",
      "Jude does not share ideas.": "¬shares_ideas(Jude)"
    },
    "conclusion_fol": "values_scientific_discovery(Jude)"
  },
  {
    "id": 334,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Muffinhead does not preserve critical data.",
    "reasoning": "fact1: Muffinhead analyzes sensors.\nfact2: Muffinhead does not process information.\nrule: For all robots, if the robot either analyzes sensors or tracks the environment (but not both), then it processes information.\nconclusion: Muffinhead tracks the environment.\n\nfact1: Muffinhead does not monitor systems.\nfact2: Muffinhead tracks the environment.\nrule: If Muffinhead either monitors systems or tracks the environment (but not both), then it transmits real-time data.\nconclusion: Muffinhead transmits real-time data.\n\nfact1: Muffinhead does not require human control.\nrule: Muffinhead either requires human control or functions independently, but not both.\nconclusion: Muffinhead functions independently.\n\nfact1: Muffinhead functions independently.\nrule: If Muffinhead functions independently, then it stores vital information and is designed for rescue.\nconclusion: Muffinhead is designed for rescue.\n\nfact1: Muffinhead is designed for rescue.\nfact2: Muffinhead transmits real-time data.\nrule: If Muffinhead is designed for rescue, then it either transmits real-time data or recovers mission data, but not both.\nconclusion: Muffinhead does not recover mission data.\n\nfact1: Muffinhead operates in space.\nfact2: Muffinhead does not recover mission data.\nrule: Every robot that operates in space either withstands extreme conditions or recovers mission data (or both).\nconclusion: Muffinhead can withstand extreme conditions.\n\nfact1: Muffinhead has nonvolatile memory.\nfact2: Muffinhead can withstand extreme conditions.\nrule: If Muffinhead has nonvolatile memory, then it can either withstand extreme conditions or preserve critical data, but not both.\nconclusion: Muffinhead does not preserve critical data.\n\nTherefore, it is true that Muffinhead does not preserve critical data. The correct option is: A.",
    "context": "Muffinhead does not monitor systems. If Muffinhead is designed for rescue, then it either transmits real-time data or recovers mission data, but not both. For all robots, if the robot either analyzes sensors or tracks the environment (but not both), then it processes information. Muffinhead operates in space. If Muffinhead functions independently, then it stores vital information and is designed for rescue. Atharv either requires human control or functions independently, but not both. If Muffinhead either monitors systems or tracks the environment (but not both), then it transmits real-time data. Atharv does not monitor systems. Muffinhead either requires human control or functions independently, but not both. If Muffinhead has advanced sensors, then it can either withstand extreme conditions or perform autonomous tasks, but not both. If Muffinhead is autonomous, then it is either able to function independently or follow commands, but not both. If Muffinhead either detects anomalies or sends status updates (but not both), then it transmits real-time data. Olivia analyzes sensors. Muffinhead does not process information. Muffinhead does not require human control. Atharv does not require human control. If Muffinhead performs autonomous tasks, then it is either designed for rescue or executes preprogrammed commands, but not both. If Olivia either monitors systems or tracks the environment (but not both), then it transmits real-time data. Muffinhead has nonvolatile memory. Every robot that operates in space either withstands extreme conditions or recovers mission data (or both). If Olivia is designed for rescue, then it either transmits real-time data or recovers mission data, but not both. If Olivia functions independently, then it stores vital information and is designed for rescue. If a robot has advanced sensors and remains active during a disaster, then it can recover mission data. Muffinhead analyzes sensors. If Muffinhead has nonvolatile memory, then it can either withstand extreme conditions or preserve critical data, but not both. Olivia does not process information. If Devin has nonvolatile memory, then it can either withstand extreme conditions or preserve critical data, but not both. Devin has nonvolatile memory.",
    "nl2fol": {
      "Muffinhead does not monitor systems.": "¬monitors_systems(Muffinhead)",
      "If Muffinhead is designed for rescue, then it either transmits real-time data or recovers mission data, but not both.": "is_designed_for_rescue(Muffinhead) → (transmits_real_time_data(Muffinhead) ⊕ recovers_mission_data(Muffinhead))",
      "For all robots, if the robot either analyzes sensors or tracks the environment (but not both), then it processes information.": "∀x ((analyzes_sensors(x) ⊕ tracks_environment(x)) → processes_information(x))",
      "Muffinhead operates in space.": "operates_in_space(Muffinhead)",
      "If Muffinhead functions independently, then it stores vital information and is designed for rescue.": "functions_independently(Muffinhead) → (stores_vital_information(Muffinhead) ∧ is_designed_for_rescue(Muffinhead))",
      "Atharv either requires human control or functions independently, but not both.": "requires_human_control(Atharv) ⊕ functions_independently(Atharv)",
      "If Muffinhead either monitors systems or tracks the environment (but not both), then it transmits real-time data.": "(monitors_systems(Muffinhead) ⊕ tracks_environment(Muffinhead)) → transmits_real_time_data(Muffinhead)",
      "Atharv does not monitor systems.": "¬monitors_systems(Atharv)",
      "Muffinhead either requires human control or functions independently, but not both.": "requires_human_control(Muffinhead) ⊕ functions_independently(Muffinhead)",
      "If Muffinhead has advanced sensors, then it can either withstand extreme conditions or perform autonomous tasks, but not both.": "has_advanced_sensors(Muffinhead) → (performs_autonomous_tasks(Muffinhead) ⊕ withstands_extreme_conditions(Muffinhead))",
      "If Muffinhead is autonomous, then it is either able to function independently or follow commands, but not both.": "is_autonomous(Muffinhead) → (functions_independently(Muffinhead) ⊕ follows_commands(Muffinhead))",
      "If Muffinhead either detects anomalies or sends status updates (but not both), then it transmits real-time data.": "(detects_anomalies(Muffinhead) ⊕ sends_status_updates(Muffinhead)) → transmits_real_time_data(Muffinhead)",
      "Olivia analyzes sensors.": "analyzes_sensors(Olivia)",
      "Muffinhead does not process information.": "¬processes_information(Muffinhead)",
      "Muffinhead does not require human control.": "¬requires_human_control(Muffinhead)",
      "Atharv does not require human control.": "¬requires_human_control(Atharv)",
      "If Muffinhead performs autonomous tasks, then it is either designed for rescue or executes preprogrammed commands, but not both.": "performs_autonomous_tasks(Muffinhead) → (is_designed_for_rescue(Muffinhead) ⊕ executes_preprogrammed_commands(Muffinhead))",
      "If Olivia either monitors systems or tracks the environment (but not both), then it transmits real-time data.": "(monitors_systems(Olivia) ⊕ tracks_environment(Olivia)) → transmits_real_time_data(Olivia)",
      "Muffinhead has nonvolatile memory.": "has_nonvolatile_memory(Muffinhead)",
      "Every robot that operates in space either withstands extreme conditions or recovers mission data (or both).": "∀x (operates_in_space(x) → (withstands_extreme_conditions(x) ∨ recovers_mission_data(x)))",
      "If Olivia is designed for rescue, then it either transmits real-time data or recovers mission data, but not both.": "is_designed_for_rescue(Olivia) → (transmits_real_time_data(Olivia) ⊕ recovers_mission_data(Olivia))",
      "If Olivia functions independently, then it stores vital information and is designed for rescue.": "functions_independently(Olivia) → (stores_vital_information(Olivia) ∧ is_designed_for_rescue(Olivia))",
      "If a robot has advanced sensors and remains active during a disaster, then it can recover mission data.": "∀x ((has_advanced_sensors(x) ∧ remains_active(x)) → recovers_mission_data(x))",
      "Muffinhead analyzes sensors.": "analyzes_sensors(Muffinhead)",
      "If Muffinhead has nonvolatile memory, then it can either withstand extreme conditions or preserve critical data, but not both.": "has_nonvolatile_memory(Muffinhead) → (withstands_extreme_conditions(Muffinhead) ⊕ preserves_critical_data(Muffinhead))",
      "Olivia does not process information.": "¬processes_information(Olivia)",
      "If Devin has nonvolatile memory, then it can either withstand extreme conditions or preserve critical data, but not both.": "has_nonvolatile_memory(Devin) → (withstands_extreme_conditions(Devin) ⊕ preserves_critical_data(Devin))",
      "Devin has nonvolatile memory.": "has_nonvolatile_memory(Devin)"
    },
    "conclusion_fol": "¬preserves_critical_data(Muffinhead)"
  },
  {
    "id": 335,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bridger is revered as a prophet.",
    "reasoning": "fact1: Bridger does not speak from the heart.\nfact2: Bridger tells profound stories.\nrule: If Bridger either speaks from the heart or tells profound stories (but not both), then he has high inspirational value.\nconclusion: Bridger has high inspirational value.\n\nfact1: Bridger lives in harmony with nature.\nrule: Bridger either lives in harmony with nature or understands cosmic principles, but no one necessarily does both.\nconclusion: Bridger does not understand cosmic principles.\n\nfact1: Bridger has high inspirational value.\nfact2: Bridger is highly intellectually capable.\nrule: If Bridger has high inspirational value, then he is either receiving divine messages or is highly intellectually capable, but not both.\nconclusion: Bridger does not receive divine messages.\n\nfact1: Bridger does not understand cosmic principles.\nrule: Bridger understands cosmic principles or has extensive knowledge.\nconclusion: Bridger has extensive knowledge.\n\nfact1: Bridger has intuitive insight.\nfact2: Bridger has extensive knowledge.\nrule: If Bridger has intuitive insight, then he either has extensive knowledge or possesses great wisdom, but not both.\nconclusion: Bridger does not possess great wisdom.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Bridger is revered as a prophet. The correct option is: C.",
    "context": "Bridger lives in harmony with nature. Jayson is highly intellectually capable. Bridger is highly intellectually capable. Bridger does not speak from the heart. If Bridger either speaks from the heart or tells profound stories (but not both), then he has high inspirational value. Tinkerbell has intuitive insight. If Bridger has intuitive insight, then he either has extensive knowledge or possesses great wisdom, but not both. Bridger has intuitive insight. Jayson tells profound stories. If Timothy either speaks from the heart or tells profound stories (but not both), then he has high inspirational value. Bridger either lives in harmony with nature or understands cosmic principles, but no one necessarily does both. If Bridger has high inspirational value, then he is either receiving divine messages or is highly intellectually capable, but not both. Tinkerbell understands cosmic principles or has extensive knowledge. Bridger understands cosmic principles or has extensive knowledge. If Bridger lives in spiritual harmony, then he believes in cosmic balance and receives divine messages. Bridger tells profound stories. If Jayson receives divine messages or possesses great wisdom, then he is revered as a prophet. If Bridger communicates clearly or thinks critically, then he has high inspirational value. If Bridger studies ancient texts or seeks new discoveries, then he has extensive knowledge. If Jayson has high inspirational value, then he is either receiving divine messages or is highly intellectually capable, but not both.",
    "nl2fol": {
      "Bridger lives in harmony with nature.": "lives_in_harmony_with_nature(Bridger)",
      "Jayson is highly intellectually capable.": "is_highly_intellectually_capable(Jayson)",
      "Bridger is highly intellectually capable.": "is_highly_intellectually_capable(Bridger)",
      "Bridger does not speak from the heart.": "¬speaks_from_the_heart(Bridger)",
      "If Bridger either speaks from the heart or tells profound stories (but not both), then he has high inspirational value.": "(speaks_from_the_heart(Bridger) ⊕ tells_profound_stories(Bridger)) → has_high_inspirational_value(Bridger)",
      "Tinkerbell has intuitive insight.": "has_intuitive_insight(Tinkerbell)",
      "If Bridger has intuitive insight, then he either has extensive knowledge or possesses great wisdom, but not both.": "has_intuitive_insight(Bridger) → (has_extensive_knowledge(Bridger) ⊕ possess_great_wisdom(Bridger))",
      "Bridger has intuitive insight.": "has_intuitive_insight(Bridger)",
      "Jayson tells profound stories.": "tells_profound_stories(Jayson)",
      "If Timothy either speaks from the heart or tells profound stories (but not both), then he has high inspirational value.": "(speaks_from_the_heart(Timothy) ⊕ tells_profound_stories(Timothy)) → has_high_inspirational_value(Timothy)",
      "Bridger either lives in harmony with nature or understands cosmic principles, but no one necessarily does both.": "lives_in_harmony_with_nature(Bridger) ⊕ understands_cosmic_principles(Bridger)",
      "If Bridger has high inspirational value, then he is either receiving divine messages or is highly intellectually capable, but not both.": "has_high_inspirational_value(Bridger) → (receive_divine_messages(Bridger) ⊕ is_highly_intellectually_capable(Bridger))",
      "Tinkerbell understands cosmic principles or has extensive knowledge.": "understands_cosmic_principles(Tinkerbell) ∨ has_extensive_knowledge(Tinkerbell)",
      "Bridger understands cosmic principles or has extensive knowledge.": "understands_cosmic_principles(Bridger) ∨ has_extensive_knowledge(Bridger)",
      "If Bridger lives in spiritual harmony, then he believes in cosmic balance and receives divine messages.": "live_in_spiritual_harmony(Bridger) → (believe_in_cosmic_balance(Bridger) ∧ receive_divine_messages(Bridger))",
      "Bridger tells profound stories.": "tells_profound_stories(Bridger)",
      "If Jayson receives divine messages or possesses great wisdom, then he is revered as a prophet.": "(receive_divine_messages(Jayson) ∨ possess_great_wisdom(Jayson)) → be_revered_as_a_prophet(Jayson)",
      "If Bridger communicates clearly or thinks critically, then he has high inspirational value.": "(communicates_clearly(Bridger) ∨ thinks_critically(Bridger)) → has_high_inspirational_value(Bridger)",
      "If Bridger studies ancient texts or seeks new discoveries, then he has extensive knowledge.": "(study_ancient_texts(Bridger) ∨ seek_new_discoveries(Bridger)) → has_extensive_knowledge(Bridger)",
      "If Jayson has high inspirational value, then he is either receiving divine messages or is highly intellectually capable, but not both.": "has_high_inspirational_value(Jayson) → (receive_divine_messages(Jayson) ⊕ is_highly_intellectually_capable(Jayson))"
    },
    "conclusion_fol": "be_revered_as_a_prophet(Bridger)"
  },
  {
    "id": 336,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ellis offers support.",
    "reasoning": "fact1: Ellis makes time for others.\nrule: Anyone who puts others first or makes time for others is thoughtful.\nconclusion: Ellis is thoughtful.\n\nfact1: Ellis does not stand up for himself.\nrule: Ellis either stands up for himself or treats others kindly, but not necessarily both.\nconclusion: Ellis treats others kindly.\n\nfact1: Ellis treats others kindly.\nfact2: Ellis does not act selflessly.\nrule: Anyone who treats others kindly or acts selflessly has good intentions.\nconclusion: Ellis has good intentions.\n\nfact1: Ellis has good intentions.\nfact2: Ellis is thoughtful.\nrule: If Ellis has good intentions, then he is either thoughtful or empathetic, but not both.\nconclusion: Ellis is not empathetic.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Ellis offers support. The correct option is: C.",
    "context": "Anyone who puts others first or makes time for others is thoughtful. Ellis makes time for others. Ellis does not stand up for himself. Anyone who treats others kindly or acts selflessly has good intentions. Ellis does not act selflessly. If someone builds trust, then they have good intentions and respect boundaries. If Ellis has good intentions, then he is either thoughtful or empathetic, but not both. Ellis either stands up for himself or treats others kindly, but not necessarily both.",
    "nl2fol": {
      "Anyone who puts others first or makes time for others is thoughtful.": "∀x ((puts_others_first(x) ∨ makes_time_for_others(x)) → is_thoughtful(x))",
      "Ellis makes time for others.": "makes_time_for_others(Ellis)",
      "Ellis does not stand up for himself.": "¬stands_up_for_themself(Ellis)",
      "Anyone who treats others kindly or acts selflessly has good intentions.": "∀x ((treats_others_kindly(x) ∨ acts_selflessly(x)) → has_good_intentions(x))",
      "Ellis does not act selflessly.": "¬acts_selflessly(Ellis)",
      "If someone builds trust, then they have good intentions and respect boundaries.": "∀x (builds_trust(x) → (has_good_intentions(x) ∧ respects_boundaries(x)))",
      "If Ellis has good intentions, then he is either thoughtful or empathetic, but not both.": "has_good_intentions(Ellis) → (is_thoughtful(Ellis) ⊕ empathetic(Ellis))",
      "Ellis either stands up for himself or treats others kindly, but not necessarily both.": "stands_up_for_themself(Ellis) ⊕ treats_others_kindly(Ellis)"
    },
    "conclusion_fol": "offer_support(Ellis)"
  },
  {
    "id": 337,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Maia does not study cacti.",
    "reasoning": "fact1: Maia does not contribute to society.\nrule: Any cactus lover who documents plants or supports research can contribute to society.\nconclusion: Maia does not support research.\n\nfact1: Maia cultivates succulents.\nrule: Maia either cultivates succulents or understands ecosystems, but not both.\nconclusion: Maia does not understand ecosystems.\n\nfact1: Maia does not support research.\nrule: All cactus lovers who share their findings appreciate nature and support research.\nconclusion: Maia does not share her findings.\n\nfact1: Maia does not protect succulents.\nrule: Maia either explores deserts or protects succulents (or both).\nconclusion: Maia explores deserts.\n\nfact1: Maia collects specimens.\nfact2: Maia does not share her findings.\nrule: If Maia collects specimens, then she either shares her findings or conserves plants, but not both.\nconclusion: Maia conserves plants.\n\nfact1: Maia explores deserts.\nfact2: Maia conserves plants.\nrule: If Maia explores deserts, then she gains deeper knowledge and conserves plants.\nconclusion: Maia gains deeper knowledge.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Maia does not study cacti. The correct option is: C.",
    "context": "Maia does not protect succulents. Maia collects specimens. Any cactus lover who documents plants or supports research can contribute to society. If Maia either nurtures plants or promotes sustainability (but not both), then she understands ecosystems. All cactus lovers who share their findings appreciate nature and support research. If Maia either reads botany books or joins online forums (but not both), then she supports research. Maia either explores deserts or protects succulents (or both). Any cactus lover who values biodiversity or cares for plants can appreciate nature. Sweetkins respects the environment. Rosalina cultivates succulents. If Maia explores deserts, then she gains deeper knowledge and conserves plants. Sweetkins either explores deserts or protects succulents (or both). Maia does not contribute to society. If Porter explores deserts, then she gains deeper knowledge and conserves plants. If Maia cares for plants, then she either creates green spaces or conserves plants, but not both. If Maia travels extensively, then she gains deeper knowledge and finds rare species. Maia cultivates succulents. If Porter collects specimens, then she either shares her findings or conserves plants, but not both. If Maia collects specimens, then she either shares her findings or conserves plants, but not both. Maia either cultivates succulents or understands ecosystems, but not both. Any cactus lover who analyzes data or catalogs discoveries can share their findings. If Maia has an adventure spirit or loves succulents, then she explores deserts.",
    "nl2fol": {
      "Maia does not protect succulents.": "¬protect_succulents(Maia)",
      "Maia collects specimens.": "collect_specimens(Maia)",
      "Any cactus lover who documents plants or supports research can contribute to society.": "∀x ((document_plants(x) ∨ support_research(x)) → contribute_society(x))",
      "If Maia either nurtures plants or promotes sustainability (but not both), then she understands ecosystems.": "(nurture_plants(Maia) ⊕ promote_sustainability(Maia)) → understand_ecosystems(Maia)",
      "All cactus lovers who share their findings appreciate nature and support research.": "∀x (share_findings(x) → (appreciate_nature(x) ∧ support_research(x)))",
      "If Maia either reads botany books or joins online forums (but not both), then she supports research.": "(read_botany_books(Maia) ⊕ join_online_forums(Maia)) → support_research(Maia)",
      "Maia either explores deserts or protects succulents (or both).": "explore_deserts(Maia) ∨ protect_succulents(Maia)",
      "Any cactus lover who values biodiversity or cares for plants can appreciate nature.": "∀x ((value_biodiversity(x) ∨ care_for_plants(x)) → appreciate_nature(x))",
      "Sweetkins respects the environment.": "respect_environment(Sweetkins)",
      "Rosalina cultivates succulents.": "cultivate_succulents(Rosalina)",
      "If Maia explores deserts, then she gains deeper knowledge and conserves plants.": "explore_deserts(Maia) → (gain_deeper_knowledge(Maia) ∧ conserve_plants(Maia))",
      "Sweetkins either explores deserts or protects succulents (or both).": "explore_deserts(Sweetkins) ∨ protect_succulents(Sweetkins)",
      "Maia does not contribute to society.": "¬contribute_society(Maia)",
      "If Porter explores deserts, then she gains deeper knowledge and conserves plants.": "explore_deserts(Porter) → (gain_deeper_knowledge(Porter) ∧ conserve_plants(Porter))",
      "If Maia cares for plants, then she either creates green spaces or conserves plants, but not both.": "care_for_plants(Maia) → (create_green_spaces(Maia) ⊕ conserve_plants(Maia))",
      "If Maia travels extensively, then she gains deeper knowledge and finds rare species.": "travel_extensively(Maia) → (gain_deeper_knowledge(Maia) ∧ find_rare_species(Maia))",
      "Maia cultivates succulents.": "cultivate_succulents(Maia)",
      "If Porter collects specimens, then she either shares her findings or conserves plants, but not both.": "collect_specimens(Porter) → (share_findings(Porter) ⊕ conserve_plants(Porter))",
      "If Maia collects specimens, then she either shares her findings or conserves plants, but not both.": "collect_specimens(Maia) → (share_findings(Maia) ⊕ conserve_plants(Maia))",
      "Maia either cultivates succulents or understands ecosystems, but not both.": "cultivate_succulents(Maia) ⊕ understand_ecosystems(Maia)",
      "Any cactus lover who analyzes data or catalogs discoveries can share their findings.": "∀x ((analyze_data(x) ∨ catalog_discoveries(x)) → share_findings(x))",
      "If Maia has an adventure spirit or loves succulents, then she explores deserts.": "(has_adventure_spirit(Maia) ∨ loves_succulents(Maia)) → explore_deserts(Maia)"
    },
    "conclusion_fol": "¬study_cacti(Maia)"
  },
  {
    "id": 338,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ameer does not study hard.",
    "reasoning": "fact1: Ameer is passionate about research.\nfact2: Ameer collaborates with others.\nrule: If Ameer is passionate about research, then he collaborates with others and specializes in a field.\nconclusion: Ameer specializes in a specific field.\n\nfact1: Ameer specializes in a specific field.\nrule: Everyone either specializes in a specific field or advances knowledge, but not necessarily both.\nconclusion: Ameer cannot advance knowledge.\n\nfact1: Ameer prioritizes the wellbeing of others.\nrule: If someone prioritizes the wellbeing of others, then they have strong ethics.\nconclusion: Ameer has strong ethics.\n\nfact1: Ameer cannot advance knowledge.\nrule: If Ameer earns recognition or leads by example, then he can advance knowledge.\nconclusion: Ameer does not lead by example.\n\nfact1: Ameer has strong ethics.\nfact2: Ameer does not inspire others.\nrule: Anyone who has strong ethics and pursues noble goals will inspire others.\nconclusion: Ameer does not pursue noble goals.\n\nfact1: Ameer does not pursue noble goals.\nfact2: Ameer does not lead by example.\nrule: If Ameer either makes meaningful contributions or pursues noble goals (but not both), then he leads by example.\nconclusion: Ameer does not make meaningful contributions to society.\n\nfact1: Ameer does not make meaningful contributions to society.\nrule: If Ameer studies hard, then he makes meaningful contributions to society.\nconclusion: Ameer does not study hard.\n\nTherefore, it is true that Ameer does not study hard. The correct option is: A.",
    "context": "If Ameer earns recognition or leads by example, then he can advance knowledge. If Dahlia studies hard, then he makes meaningful contributions to society. If Ameer is passionate about research, then he collaborates with others and specializes in a field. If Ameer pursues higher education, then he either becomes an expert or makes meaningful contributions to society (or both). Everyone either specializes in a specific field or advances knowledge, but not necessarily both. Ameer is passionate about research. If someone prioritizes the wellbeing of others, then they have strong ethics. If someone has vision and takes initiative, then they can lead by example. Ameer collaborates with others. Ameer prioritizes the wellbeing of others. Ameer values integrity or pursues noble goals. If Declan either makes meaningful contributions or pursues noble goals (but not both), then he leads by example. If Ameer either makes meaningful contributions or pursues noble goals (but not both), then he leads by example. If Ameer either publishes research or mentors students (but not both), then he can advance knowledge. Ameer does not inspire others. Anyone who has strong ethics and pursues noble goals will inspire others. If Ameer studies hard, then he makes meaningful contributions to society.",
    "nl2fol": {
      "If Ameer earns recognition or leads by example, then he can advance knowledge.": "(earn_recognition(Ameer) ∨ lead_by_example(Ameer)) → advance_knowledge(Ameer)",
      "If Dahlia studies hard, then he makes meaningful contributions to society.": "study_hard(Dahlia) → make_meaningful_contributions(Dahlia)",
      "If Ameer is passionate about research, then he collaborates with others and specializes in a field.": "passionate_about_research(Ameer) → (collaborate_with_others(Ameer) ∧ specialize_in_field(Ameer))",
      "If Ameer pursues higher education, then he either becomes an expert or makes meaningful contributions to society (or both).": "pursue_higher_education(Ameer) → (become_expert(Ameer) ∨ make_meaningful_contributions(Ameer))",
      "Everyone either specializes in a specific field or advances knowledge, but not necessarily both.": "∀x (specialize_in_field(x) ⊕ advance_knowledge(x))",
      "Ameer is passionate about research.": "passionate_about_research(Ameer)",
      "If someone prioritizes the wellbeing of others, then they have strong ethics.": "∀x (prioritizes_wellbeing(x) → has_strong_ethics(x))",
      "If someone has vision and takes initiative, then they can lead by example.": "∀x ((has_vision(x) ∧ takes_initiative(x)) → lead_by_example(x))",
      "Ameer collaborates with others.": "collaborate_with_others(Ameer)",
      "Ameer prioritizes the wellbeing of others.": "prioritizes_wellbeing(Ameer)",
      "Ameer values integrity or pursues noble goals.": "values_integrity(Ameer) ∨ pursue_noble_goals(Ameer)",
      "If Declan either makes meaningful contributions or pursues noble goals (but not both), then he leads by example.": "(make_meaningful_contributions(Declan) ⊕ pursue_noble_goals(Declan)) → lead_by_example(Declan)",
      "If Ameer either makes meaningful contributions or pursues noble goals (but not both), then he leads by example.": "(make_meaningful_contributions(Ameer) ⊕ pursue_noble_goals(Ameer)) → lead_by_example(Ameer)",
      "If Ameer either publishes research or mentors students (but not both), then he can advance knowledge.": "(publish_research(Ameer) ⊕ mentor_students(Ameer)) → advance_knowledge(Ameer)",
      "Ameer does not inspire others.": "¬inspires_others(Ameer)",
      "Anyone who has strong ethics and pursues noble goals will inspire others.": "∀x ((has_strong_ethics(x) ∧ pursue_noble_goals(x)) → inspires_others(x))",
      "If Ameer studies hard, then he makes meaningful contributions to society.": "study_hard(Ameer) → make_meaningful_contributions(Ameer)"
    },
    "conclusion_fol": "¬study_hard(Ameer)"
  },
  {
    "id": 339,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Presley applies mathematical principles in his art.",
    "reasoning": "fact1: Presley does not try new techniques.\nfact2: Presley takes creative risks.\nrule: If Presley either tries new techniques or takes creative risks (but not both), then he is comfortable with uncertainty.\nconclusion: Presley is comfortable with taking risks.\n\nfact1: Presley does not pursue creative expression.\nrule: For Presley, either his work focuses on functionality or he pursues creative expression, but these two aspects are mutually exclusive.\nconclusion: Presley's work focuses on functionality.\n\nfact1: Presley is comfortable with taking risks.\nrule: If an artist is comfortable with taking risks, they will experiment fearlessly.\nconclusion: Presley experiments fearlessly.\n\nfact1: Presley experiments fearlessly.\nrule: Every artist who experiments fearlessly pushes boundaries.\nconclusion: Presley pushes boundaries.\n\nfact1: Presley's work focuses on functionality.\nrule: For Presley, either his work focuses on functionality or it creates visually stunning effects, but these two aspects are mutually exclusive.\nconclusion: Presley does not create visually stunning work.\n\nfact1: Presley pushes boundaries.\nrule: All artists who push boundaries are innovative artists.\nconclusion: Presley is an innovative artist.\n\nfact1: Presley is an innovative artist.\nfact2: Presley does not create visually stunning work.\nrule: If Presley is an innovative artist, then he either creates visually stunning work or applies mathematical principles in his art (or both).\nconclusion: Presley applies mathematical principles in his art.\n\nTherefore, it is true that Presley applies mathematical principles in his art. The correct option is: A.",
    "context": "Presley does not try new techniques. If Presley is an innovative artist, then he either creates visually stunning work or applies mathematical principles in his art (or both). Presley takes creative risks. If an artist understands color theory and uses natural light effectively, then they can create visually stunning work. Presley does not pursue creative expression. For Presley, either his work focuses on functionality or it creates visually stunning effects, but these two aspects are mutually exclusive. If an artist is comfortable with taking risks, they will experiment fearlessly. Every artist who experiments fearlessly pushes boundaries. If Presley either tries new techniques or takes creative risks (but not both), then he is comfortable with uncertainty. All artists who push boundaries are innovative artists. For Presley, either his work focuses on functionality or he pursues creative expression, but these two aspects are mutually exclusive.",
    "nl2fol": {
      "Presley does not try new techniques.": "¬tries_new_techniques(Presley)",
      "If Presley is an innovative artist, then he either creates visually stunning work or applies mathematical principles in his art (or both).": "innovative_artist(Presley) → (create_visually_stunning_work(Presley) ∨ apply_mathematical_principles(Presley))",
      "Presley takes creative risks.": "takes_creative_risks(Presley)",
      "If an artist understands color theory and uses natural light effectively, then they can create visually stunning work.": "∀x ((understands_color_theory(x) ∧ uses_natural_light(x)) → create_visually_stunning_work(x))",
      "Presley does not pursue creative expression.": "¬pursues_creative_expression(Presley)",
      "For Presley, either his work focuses on functionality or it creates visually stunning effects, but these two aspects are mutually exclusive.": "focuses_on_functionality(Presley) ⊕ create_visually_stunning_work(Presley)",
      "If an artist is comfortable with taking risks, they will experiment fearlessly.": "∀x (embraces_uncertainty(x) → experiments_fearlessly(x))",
      "Every artist who experiments fearlessly pushes boundaries.": "∀x (experiments_fearlessly(x) → pushes_boundaries(x))",
      "If Presley either tries new techniques or takes creative risks (but not both), then he is comfortable with uncertainty.": "(tries_new_techniques(Presley) ⊕ takes_creative_risks(Presley)) → embraces_uncertainty(Presley)",
      "All artists who push boundaries are innovative artists.": "∀x (pushes_boundaries(x) → innovative_artist(x))",
      "For Presley, either his work focuses on functionality or he pursues creative expression, but these two aspects are mutually exclusive.": "pursues_creative_expression(Presley) ⊕ focuses_on_functionality(Presley)"
    },
    "conclusion_fol": "apply_mathematical_principles(Presley)"
  },
  {
    "id": 340,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dimples enjoys cool temperatures.",
    "reasoning": "fact1: Dimples exercises outside.\nfact2: Dimples does not live in the desert.\nrule: Any elephant that exercises outside or lives in the desert feels hot.\nconclusion: Dimples feels hot.\n\nfact1: Dimples has good memory.\nrule: If Dimples has good memory, then she does not necessarily have large ears, and if Dimples has large ears, then she does not necessarily have good memory.\nconclusion: Dimples does not have large ears.\n\nfact1: Dimples does not have large ears.\nfact2: Dimples does not need relaxation.\nrule: All elephants that seek shade have large ears and need relaxation.\nconclusion: Dimples does not seek shade.\n\nfact1: Dimples feels hot.\nfact2: Dimples does not stay cool.\nrule: For any elephant that avoids sunlight and feels hot, it stays cool.\nconclusion: Dimples does not avoid sunlight.\n\nfact1: Dimples does not avoid sunlight.\nfact2: Dimples does not seek shade.\nrule: All elephants who either avoid sunlight or prefer warm temperatures (but not both) seek shade.\nconclusion: Dimples does not prefer warm temperatures.\n\nfact1: Dimples does not prefer warm temperatures.\nrule: Either Dimples enjoys cool temperatures or she prefers warm temperatures, but not both.\nconclusion: Dimples enjoys cool temperatures.\n\nTherefore, it is true that Dimples enjoys cool temperatures. The correct option is: A.",
    "context": "Mccoy has good memory. For any elephant that avoids sunlight and feels hot, it stays cool. If Dimples has good memory, then she does not necessarily have large ears, and if Dimples has large ears, then she does not necessarily have good memory. Mccoy does not need relaxation. Dimples does not stay cool. Either Dimples enjoys cool temperatures or she prefers warm temperatures, but not both. Dimples does not need relaxation. Any elephant that exercises outside or lives in the desert feels hot. Dimples does not live in the desert. Either Ocean enjoys cool temperatures or she prefers warm temperatures, but not both. All elephants who either avoid sunlight or prefer warm temperatures (but not both) seek shade. Dimples has good memory. Dimples exercises outside. All elephants that seek shade have large ears and need relaxation. Any elephant that has good hearing or lives in the savannah has large ears. Ocean does not live in the desert. Mccoy does not stay cool. If Dimples loves refrigerators, then she either avoids sunlight or has sensitive skin (or both).",
    "nl2fol": {
      "Mccoy has good memory.": "has_good_memory(Mccoy)",
      "For any elephant that avoids sunlight and feels hot, it stays cool.": "∀x ((avoids_sunlight(x) ∧ feels_hot(x)) → stays_cool(x))",
      "If Dimples has good memory, then she does not necessarily have large ears, and if Dimples has large ears, then she does not necessarily have good memory.": "has_large_ears(Dimples) ⊕ has_good_memory(Dimples)",
      "Mccoy does not need relaxation.": "¬needs_relaxation(Mccoy)",
      "Dimples does not stay cool.": "¬stays_cool(Dimples)",
      "Either Dimples enjoys cool temperatures or she prefers warm temperatures, but not both.": "enjoys_cool_temperatures(Dimples) ⊕ prefers_warm_temperatures(Dimples)",
      "Dimples does not need relaxation.": "¬needs_relaxation(Dimples)",
      "Any elephant that exercises outside or lives in the desert feels hot.": "∀x ((exercises_outside(x) ∨ lives_in_desert(x)) → feels_hot(x))",
      "Dimples does not live in the desert.": "¬lives_in_desert(Dimples)",
      "Either Ocean enjoys cool temperatures or she prefers warm temperatures, but not both.": "enjoys_cool_temperatures(Ocean) ⊕ prefers_warm_temperatures(Ocean)",
      "All elephants who either avoid sunlight or prefer warm temperatures (but not both) seek shade.": "∀x ((avoids_sunlight(x) ⊕ prefers_warm_temperatures(x)) → seeks_shade(x))",
      "Dimples has good memory.": "has_good_memory(Dimples)",
      "Dimples exercises outside.": "exercises_outside(Dimples)",
      "All elephants that seek shade have large ears and need relaxation.": "∀x (seeks_shade(x) → (has_large_ears(x) ∧ needs_relaxation(x)))",
      "Any elephant that has good hearing or lives in the savannah has large ears.": "∀x ((has_good_hearing(x) ∨ lives_in_savannah(x)) → has_large_ears(x))",
      "Ocean does not live in the desert.": "¬lives_in_desert(Ocean)",
      "Mccoy does not stay cool.": "¬stays_cool(Mccoy)",
      "If Dimples loves refrigerators, then she either avoids sunlight or has sensitive skin (or both).": "loves_refrigerators(Dimples) → (avoids_sunlight(Dimples) ∨ has_sensitive_skin(Dimples))"
    },
    "conclusion_fol": "enjoys_cool_temperatures(Dimples)"
  },
  {
    "id": 341,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ahmad achieves recognition.",
    "reasoning": "fact1: Ahmad is inquisitive.\nfact2: Ahmad reads widely.\nrule: If Ahmad is inquisitive, then he either reads widely or explores concepts (but not both).\nconclusion: Ahmad does not explore concepts.\n\nfact1: Ahmad asks questions.\nfact2: Ahmad does not explore concepts.\nrule: If Ahmad either asks questions or explores concepts (but not both), then he is curious.\nconclusion: Ahmad has curiosity.\n\nfact1: Ahmad has curiosity.\nfact2: Ahmad makes discoveries.\nrule: If Ahmad is curious, then he can either make discoveries or drive innovation, but not both.\nconclusion: Ahmad does not drive innovation.\n\nfact1: Ahmad thinks critically.\nrule: Anyone who thinks critically will solve problems.\nconclusion: Ahmad solves problems.\n\nfact1: Ahmad solves problems.\nfact2: Ahmad enhances his knowledge.\nrule: If Ahmad solves problems, then he pursues research and enhances his knowledge.\nconclusion: Ahmad pursues research.\n\nfact1: Ahmad pursues research.\nfact2: Ahmad does not drive innovation.\nrule: If Ahmad pursues research, then he can either achieve recognition or drive innovation, but not both.\nconclusion: Ahmad achieves recognition.\n\nTherefore, it is true that Ahmad achieves recognition. The correct option is: A.",
    "context": "Ahmad makes discoveries. Jasiah makes discoveries. Anyone who thinks critically will solve problems. Ahmad enhances his knowledge. If Ahmad is curious, then he can either make discoveries or drive innovation, but not both. Riley enhances his knowledge. Ahmad asks questions. Riley is inquisitive. If Ahmad pursues research, then he can either achieve recognition or drive innovation, but not both. Ahmad thinks critically. If someone has imagination, then they seek answers and explore concepts. If Ahmad either asks questions or explores concepts (but not both), then he is curious. Creed thinks critically. If Creed pursues research, then he can either achieve recognition or drive innovation, but not both. If Ahmad either examines data or investigates phenomena (but not both), then he has curiosity. Riley asks questions. Ahmad reads widely. Ahmad is inquisitive. Anyone who has expertise or collaborates widely can drive innovation. If Ahmad solves problems, then he pursues research and enhances his knowledge. If Ahmad either analyzes data or identifies patterns (but not both), then he solves problems. Creed reads widely. If Ahmad is inquisitive, then he either reads widely or explores concepts (but not both). If Creed either asks questions or explores concepts (but not both), then he is curious.",
    "nl2fol": {
      "Ahmad makes discoveries.": "make_discoveries(Ahmad)",
      "Jasiah makes discoveries.": "make_discoveries(Jasiah)",
      "Anyone who thinks critically will solve problems.": "∀x (think_critically(x) → solve_problems(x))",
      "Ahmad enhances his knowledge.": "enhance_knowledge(Ahmad)",
      "If Ahmad is curious, then he can either make discoveries or drive innovation, but not both.": "has_curiosity(Ahmad) → (make_discoveries(Ahmad) ⊕ drive_innovation(Ahmad))",
      "Riley enhances his knowledge.": "enhance_knowledge(Riley)",
      "Ahmad asks questions.": "asks_questions(Ahmad)",
      "Riley is inquisitive.": "inquisitive(Riley)",
      "If Ahmad pursues research, then he can either achieve recognition or drive innovation, but not both.": "pursue_research(Ahmad) → (achieve_recognition(Ahmad) ⊕ drive_innovation(Ahmad))",
      "Ahmad thinks critically.": "think_critically(Ahmad)",
      "If someone has imagination, then they seek answers and explore concepts.": "∀x (has_imagination(x) → (seeks_answers(x) ∧ explores_concepts(x)))",
      "If Ahmad either asks questions or explores concepts (but not both), then he is curious.": "(asks_questions(Ahmad) ⊕ explores_concepts(Ahmad)) → has_curiosity(Ahmad)",
      "Creed thinks critically.": "thinks_critically(Creed)",
      "If Creed pursues research, then he can either achieve recognition or drive innovation, but not both.": "pursue_research(Creed) → (achieve_recognition(Creed) ⊕ drive_innovation(Creed))",
      "If Ahmad either examines data or investigates phenomena (but not both), then he has curiosity.": "(examines_data(Ahmad) ⊕ investigate_phenomena(Ahmad)) → has_curiosity(Ahmad)",
      "Riley asks questions.": "asks_questions(Riley)",
      "Ahmad reads widely.": "reads_widely(Ahmad)",
      "Ahmad is inquisitive.": "is_inquisitive(Ahmad)",
      "Anyone who has expertise or collaborates widely can drive innovation.": "∀x ((has_expertise(x) ∨ collaborates_widely(x)) → drive_innovation(x))",
      "If Ahmad solves problems, then he pursues research and enhances his knowledge.": "solve_problems(Ahmad) → (pursue_research(Ahmad) ∧ enhance_knowledge(Ahmad))",
      "If Ahmad either analyzes data or identifies patterns (but not both), then he solves problems.": "(analyze_data(Ahmad) ⊕ identify_patterns(Ahmad)) → solve_problems(Ahmad)",
      "Creed reads widely.": "reads_widely(Creed)",
      "If Ahmad is inquisitive, then he either reads widely or explores concepts (but not both).": "is_inquisitive(Ahmad) → (reads_widely(Ahmad) ⊕ explores_concepts(Ahmad))",
      "If Creed either asks questions or explores concepts (but not both), then he is curious.": "(asks_questions(Creed) ⊕ explores_concepts(Creed)) → has_curiosity(Creed)"
    },
    "conclusion_fol": "achieve_recognition(Ahmad)"
  },
  {
    "id": 342,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Raphael is a doubted expert.",
    "reasoning": "fact1: Raphael values critique.\nfact2: Raphael does not embrace debate.\nrule: Everyone who values critique either embraces debate or is open-minded (or both).\nconclusion: Raphael is open-minded.\n\nfact1: Raphael has extensive knowledge.\nfact2: Raphael does not gain recognition.\nrule: Anyone who has extensive knowledge and speaks authoritatively gains recognition.\nconclusion: Raphael does not speak authoritatively.\n\nfact1: Raphael does not write influential books.\nfact2: Raphael does not speak authoritatively.\nrule: If Raphael challenges the status quo, then he either writes influential books or speaks authoritatively (or both).\nconclusion: Raphael does not challenge the status quo.\n\nfact1: Raphael is open-minded.\nfact2: Raphael does not challenge the status quo.\nrule: If someone is open-minded and has unconventional views, then they challenge the status quo.\nconclusion: Raphael does not have unconventional views.\n\nfact1: Raphael does not have unconventional views.\nrule: Raphael is either a respected authority or has unconventional views, but not both.\nconclusion: Raphael is a respected authority.\n\nfact1: Raphael is a respected authority.\nrule: Raphael is either a respected authority or a doubted expert, but not both.\nconclusion: Raphael is a doubted expert.\n\nTherefore, it is false that Raphael is a doubted expert. The correct option is: B.",
    "context": "Everyone who values critique either embraces debate or is open-minded (or both). Anyone who considers alternatives and questions assumptions can challenge the status quo. Raphael has extensive knowledge. Raphael does not write influential books. Raphael is either a respected authority or has unconventional views, but not both. Anyone who has extensive knowledge and speaks authoritatively gains recognition. Raphael is either a respected authority or a doubted expert, but not both. Raphael does not embrace debate. Raphael does not gain recognition. If Raphael challenges the status quo, then he either writes influential books or speaks authoritatively (or both). If someone is open-minded and has unconventional views, then they challenge the status quo. Raphael values critique.",
    "nl2fol": {
      "Everyone who values critique either embraces debate or is open-minded (or both).": "∀x (values_critique(x) → (embraces_debate(x) ∨ is_open_minded(x)))",
      "Anyone who considers alternatives and questions assumptions can challenge the status quo.": "∀x ((considers_alternatives(x) ∧ questions_assumptions(x)) → challenges_status_quo(x))",
      "Raphael has extensive knowledge.": "has_extensive_knowledge(Raphael)",
      "Raphael does not write influential books.": "¬writes_influential_books(Raphael)",
      "Raphael is either a respected authority or has unconventional views, but not both.": "respected_authority(Raphael) ⊕ has_unconventional_views(Raphael)",
      "Anyone who has extensive knowledge and speaks authoritatively gains recognition.": "∀x ((has_extensive_knowledge(x) ∧ speaks_authoritatively(x)) → gains_recognition(x))",
      "Raphael is either a respected authority or a doubted expert, but not both.": "respected_authority(Raphael) ⊕ doubted_expert(Raphael)",
      "Raphael does not embrace debate.": "¬embraces_debate(Raphael)",
      "Raphael does not gain recognition.": "¬gains_recognition(Raphael)",
      "If Raphael challenges the status quo, then he either writes influential books or speaks authoritatively (or both).": "challenges_status_quo(Raphael) → (writes_influential_books(Raphael) ∨ speaks_authoritatively(Raphael))",
      "If someone is open-minded and has unconventional views, then they challenge the status quo.": "∀x ((is_open_minded(x) ∧ has_unconventional_views(x)) → challenges_status_quo(x))",
      "Raphael values critique.": "values_critique(Raphael)"
    },
    "conclusion_fol": "doubted_expert(Raphael)"
  },
  {
    "id": 343,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kenna does not welcome diverse perspectives.",
    "reasoning": "fact1: Kenna encourages free expression.\nrule: Kenna either encourages free expression or follows conventional rules, but not both.\nconclusion: Kenna does not follow conventional rules.\n\nfact1: Kenna does not appreciate conformity.\nrule: Kenna either appreciates conformity or values individuality, but not both.\nconclusion: Kenna values individuality.\n\nfact1: Kenna does not follow conventional rules.\nrule: Kenna either follows conventional rules or thinks outside the box, but not both.\nconclusion: Kenna thinks outside the box.\n\nfact1: Kenna values individuality.\nrule: If someone values individuality, they may not always foster creative growth, and vice versa.\nconclusion: Kenna does not foster creative growth.\n\nfact1: Kenna thinks outside the box.\nfact2: Kenna does not foster creative growth.\nrule: If someone creates innovative work, then they think outside the box and foster creative growth.\nconclusion: Kenna does not create innovative work.\n\nfact1: Kenna does not create innovative work.\nrule: If Kenna collaborates with others or welcomes diverse perspectives (or both), then she creates innovative work.\nconclusion: Kenna does not welcome diverse perspectives.\n\nTherefore, it is true that Kenna does not welcome diverse perspectives. The correct option is: A.",
    "context": "Everyone who embraces new ideas either creates innovative work or inspires others. Kenna either encourages free expression or follows conventional rules, but not both. If someone creates innovative work, then they think outside the box and foster creative growth. Kenna either appreciates conformity or values individuality, but not both. Kenna does not appreciate conformity. Kenna either follows conventional rules or thinks outside the box, but not both. Kenna either embraces new ideas or collaborates with others. If someone values individuality, they may not always foster creative growth, and vice versa. If Kenna collaborates with others or welcomes diverse perspectives (or both), then she creates innovative work. Kenna encourages free expression. If someone values order and prefers structure, then they follow conventional rules.",
    "nl2fol": {
      "Everyone who embraces new ideas either creates innovative work or inspires others.": "∀x (embrace_new_ideas(x) → (create_innovative_work(x) ∨ inspire_others(x)))",
      "Kenna either encourages free expression or follows conventional rules, but not both.": "encourage_free_expression(Kenna) ⊕ follow_conventional_rules(Kenna)",
      "If someone creates innovative work, then they think outside the box and foster creative growth.": "∀x (create_innovative_work(x) → (think_outside_box(x) ∧ foster_creative_growth(x)))",
      "Kenna either appreciates conformity or values individuality, but not both.": "appreciate_conformity(Kenna) ⊕ value_individuality(Kenna)",
      "Kenna does not appreciate conformity.": "¬appreciate_conformity(Kenna)",
      "Kenna either follows conventional rules or thinks outside the box, but not both.": "follow_conventional_rules(Kenna) ⊕ think_outside_box(Kenna)",
      "Kenna either embraces new ideas or collaborates with others.": "embrace_new_ideas(Kenna) ∨ collaborate_with_others(Kenna)",
      "If someone values individuality, they may not always foster creative growth, and vice versa.": "∀x (value_individuality(x) ⊕ foster_creative_growth(x))",
      "If Kenna collaborates with others or welcomes diverse perspectives (or both), then she creates innovative work.": "(collaborate_with_others(Kenna) ∨ welcome_diverse_perspectives(Kenna)) → create_innovative_work(Kenna)",
      "Kenna encourages free expression.": "encourage_free_expression(Kenna)",
      "If someone values order and prefers structure, then they follow conventional rules.": "∀x ((values_order(x) ∧ prefers_structure(x)) → follow_conventional_rules(x))"
    },
    "conclusion_fol": "¬welcome_diverse_perspectives(Kenna)"
  },
  {
    "id": 344,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jasper leaves a lasting impact.",
    "reasoning": "fact1: Jasper does not value humility.\nrule: For Jasper, being knowledgeable about economics and valuing humility are mutually exclusive traits.\nconclusion: Jasper understands economics.\n\nfact1: Jasper understands economics.\nfact2: Jasper reads market trends.\nrule: If someone understands economics and reads market trends, then they have financial knowledge.\nconclusion: Jasper has financial knowledge.\n\nfact1: Jasper has financial knowledge.\nrule: If Jasper has financial knowledge, then he invests wisely.\nconclusion: Jasper invests wisely.\n\nfact1: Jasper invests wisely.\nfact2: Jasper does not build businesses.\nrule: If Jasper either invests wisely or builds businesses (but not both), then he pursues material wealth.\nconclusion: Jasper pursues material wealth.\n\nfact1: Jasper pursues material wealth.\nrule: Jasper either pursues material wealth or is philanthropic, but not both.\nconclusion: Jasper is not philanthropic.\n\nfact1: Jasper lives a private life.\nrule: Jasper either lives a private life or is respected by others, but not both.\nconclusion: Jasper is not respected by others.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Jasper leaves a lasting impact. The correct option is: C.",
    "context": "Jasper does not build businesses. If Jasper has financial knowledge, then he invests wisely. For Jasper, being knowledgeable about economics and valuing humility are mutually exclusive traits. Jasper manages his assets or has financial knowledge. Jasper either pursues material wealth or is philanthropic, but not both. Jasper reads market trends. Jasper lives a private life. If Jasper either donates to charity or supports local communities (but not both), then he is philanthropic. If someone understands economics and reads market trends, then they have financial knowledge. Jasper does not value humility. If Jasper either invests wisely or builds businesses (but not both), then he pursues material wealth. Jasper either lives a private life or is respected by others, but not both. If Philip either invests wisely or builds businesses (but not both), then he pursues material wealth. Jasper manages assets or invests wisely.",
    "nl2fol": {
      "Jasper does not build businesses.": "¬builds_businesses(Jasper)",
      "If Jasper has financial knowledge, then he invests wisely.": "has_financial_knowledge(Jasper) → invests_wisely(Jasper)",
      "For Jasper, being knowledgeable about economics and valuing humility are mutually exclusive traits.": "values_humility(Jasper) ⊕ understands_economics(Jasper)",
      "Jasper manages his assets or has financial knowledge.": "manages_assets(Jasper) ∨ has_financial_knowledge(Jasper)",
      "Jasper either pursues material wealth or is philanthropic, but not both.": "pursues_material_wealth(Jasper) ⊕ philanthropic(Jasper)",
      "Jasper reads market trends.": "reads_market_trends(Jasper)",
      "Jasper lives a private life.": "lives_privately(Jasper)",
      "If Jasper either donates to charity or supports local communities (but not both), then he is philanthropic.": "(donates_to_charity(Jasper) ⊕ supports_local_communities(Jasper)) → philanthropic(Jasper)",
      "If someone understands economics and reads market trends, then they have financial knowledge.": "∀x ((understands_economics(x) ∧ reads_market_trends(x)) → has_financial_knowledge(x))",
      "Jasper does not value humility.": "¬values_humility(Jasper)",
      "If Jasper either invests wisely or builds businesses (but not both), then he pursues material wealth.": "(invests_wisely(Jasper) ⊕ builds_businesses(Jasper)) → pursues_material_wealth(Jasper)",
      "Jasper either lives a private life or is respected by others, but not both.": "lives_privately(Jasper) ⊕ respected_by_others(Jasper)",
      "If Philip either invests wisely or builds businesses (but not both), then he pursues material wealth.": "(invests_wisely(Philip) ⊕ builds_businesses(Philip)) → pursues_material_wealth(Philip)",
      "Jasper manages assets or invests wisely.": "manages_assets(Jasper) ∨ invests_wisely(Jasper)"
    },
    "conclusion_fol": "leave_a_lasting_impact(Jasper)"
  },
  {
    "id": 345,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nathaniel does not make new discoveries.",
    "reasoning": "fact1: Nathaniel does not educate local residents.\nfact2: Nathaniel does not promote eco-tourism.\nrule: If Nathaniel develops environmental initiatives, then he either educates local residents or promotes eco-tourism, but not both.\nconclusion: Nathaniel does not develop environmental initiatives.\n\nfact1: Nathaniel does not have special skills.\nrule: Nathaniel has expert knowledge or has special skills.\nconclusion: Nathaniel has expert knowledge.\n\nfact1: Nathaniel has expert knowledge.\nfact2: Nathaniel does not write academic publications.\nrule: If Nathaniel has expert knowledge, then he either writes academic publications or is a consultant (or both).\nconclusion: Nathaniel is a consultant.\n\nfact1: Nathaniel is a consultant.\nfact2: Nathaniel does not develop environmental initiatives.\nrule: If Nathaniel is a consultant, then he either works with communities or develops environmental initiatives, but not both.\nconclusion: Nathaniel works with communities.\n\nfact1: Nathaniel works with communities.\nfact2: Nathaniel collaborates with experts.\nrule: If someone works with communities, then they collaborate with experts and apply practical solutions.\nconclusion: Nathaniel applies practical solutions.\n\nfact1: Nathaniel applies practical solutions.\nrule: Nathaniel either pursues theoretical knowledge or applies practical solutions, but not both.\nconclusion: Nathaniel does not pursue theoretical knowledge.\n\nfact1: Nathaniel does not pursue theoretical knowledge.\nrule: Nathaniel either pursues theoretical knowledge or is dedicated to research, but not both.\nconclusion: Nathaniel is dedicated to research.\n\nfact1: Nathaniel is dedicated to research.\nrule: If Nathaniel is dedicated to research, then he makes new discoveries.\nconclusion: Nathaniel does not make new discoveries.\n\nTherefore, it is false that Nathaniel does not make new discoveries. The correct option is: B.",
    "context": "If Nathaniel has expert knowledge, then he either writes academic publications or is a consultant (or both). If someone works with communities, then they collaborate with experts and apply practical solutions. If Georgia is a consultant, then he either works with communities or develops environmental initiatives, but not both. If Nathaniel either analyzes data or collects samples (but not both), then he is dedicated to research. Nathaniel has expert knowledge or has special skills. Nathaniel does not have special skills. Pumpkin does not write academic publications. Nathaniel either pursues theoretical knowledge or is dedicated to research, but not both. If Nathaniel is dedicated to research, then he makes new discoveries. If Nathaniel has field experience and values social impact, then he will work with communities. Phillip either pursues theoretical knowledge or applies practical solutions, but not both. Anyone who is curious and seeks answers can pursue theoretical knowledge. Nathaniel does not write academic publications. Nathaniel does not promote eco-tourism. Nathaniel either pursues theoretical knowledge or applies practical solutions, but not both. Phillip either pursues theoretical knowledge or is dedicated to research, but not both. Nathaniel collaborates with experts. Nathaniel does not educate local residents. If Nathaniel develops environmental initiatives, then he either educates local residents or promotes eco-tourism, but not both. Phillip does not educate local residents. If someone identifies real problems and thinks creatively, then they can apply practical solutions. If Nathaniel is a consultant, then he either works with communities or develops environmental initiatives, but not both.",
    "nl2fol": {
      "If Nathaniel has expert knowledge, then he either writes academic publications or is a consultant (or both).": "has_expert_knowledge(Nathaniel) → (write_academic_publications(Nathaniel) ∨ is_consultant(Nathaniel))",
      "If someone works with communities, then they collaborate with experts and apply practical solutions.": "∀x (work_with_communities(x) → (collaborate_with_experts(x) ∧ apply_practical_solutions(x)))",
      "If Georgia is a consultant, then he either works with communities or develops environmental initiatives, but not both.": "is_consultant(Georgia) → (develop_environmental_initiatives(Georgia) ⊕ work_with_communities(Georgia))",
      "If Nathaniel either analyzes data or collects samples (but not both), then he is dedicated to research.": "(analyze_data(Nathaniel) ⊕ collect_samples(Nathaniel)) → dedicated_to_research(Nathaniel)",
      "Nathaniel has expert knowledge or has special skills.": "has_expert_knowledge(Nathaniel) ∨ has_special_skills(Nathaniel)",
      "Nathaniel does not have special skills.": "¬has_special_skills(Nathaniel)",
      "Pumpkin does not write academic publications.": "¬write_academic_publications(Pumpkin)",
      "Nathaniel either pursues theoretical knowledge or is dedicated to research, but not both.": "pursue_theoretical_knowledge(Nathaniel) ⊕ dedicated_to_research(Nathaniel)",
      "If Nathaniel is dedicated to research, then he makes new discoveries.": "dedicated_to_research(Nathaniel) → make_new_discoveries(Nathaniel)",
      "If Nathaniel has field experience and values social impact, then he will work with communities.": "(has_field_experience(Nathaniel) ∧ values_social_impact(Nathaniel)) → work_with_communities(Nathaniel)",
      "Phillip either pursues theoretical knowledge or applies practical solutions, but not both.": "pursue_theoretical_knowledge(Phillip) ⊕ apply_practical_solutions(Phillip)",
      "Anyone who is curious and seeks answers can pursue theoretical knowledge.": "∀x ((is_curious(x) ∧ seeks_answers(x)) → pursue_theoretical_knowledge(x))",
      "Nathaniel does not write academic publications.": "¬write_academic_publications(Nathaniel)",
      "Nathaniel does not promote eco-tourism.": "¬promote_eco_tourism(Nathaniel)",
      "Nathaniel either pursues theoretical knowledge or applies practical solutions, but not both.": "pursue_theoretical_knowledge(Nathaniel) ⊕ apply_practical_solutions(Nathaniel)",
      "Phillip either pursues theoretical knowledge or is dedicated to research, but not both.": "pursue_theoretical_knowledge(Phillip) ⊕ dedicated_to_research(Phillip)",
      "Nathaniel collaborates with experts.": "collaborate_with_experts(Nathaniel)",
      "Nathaniel does not educate local residents.": "¬educate_local_residents(Nathaniel)",
      "If Nathaniel develops environmental initiatives, then he either educates local residents or promotes eco-tourism, but not both.": "develop_environmental_initiatives(Nathaniel) → (educate_local_residents(Nathaniel) ⊕ promote_eco_tourism(Nathaniel))",
      "Phillip does not educate local residents.": "¬educate_local_residents(Phillip)",
      "If someone identifies real problems and thinks creatively, then they can apply practical solutions.": "∀x ((identifies_real_problems(x) ∧ thinks_creatively(x)) → apply_practical_solutions(x))",
      "If Nathaniel is a consultant, then he either works with communities or develops environmental initiatives, but not both.": "is_consultant(Nathaniel) → (develop_environmental_initiatives(Nathaniel) ⊕ work_with_communities(Nathaniel))"
    },
    "conclusion_fol": "¬make_new_discoveries(Nathaniel)"
  },
  {
    "id": 346,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Araya does not lead a balanced life.",
    "reasoning": "fact1: Araya does not make plans.\nrule: Everyone makes plans or sets goals.\nconclusion: Araya sets goals.\n\nfact1: Araya follows her intuition.\nfact2: Araya enjoys exploration.\nrule: Anyone who follows their intuition and enjoys exploration can embrace spontaneity.\nconclusion: Araya embraces spontaneity.\n\nfact1: Araya embraces spontaneity.\nrule: Araya either values practicality or embraces spontaneity, but not both.\nconclusion: Araya does not value practicality.\n\nfact1: Araya does not value practicality.\nrule: Araya either values practicality or has a creative passion, but not both.\nconclusion: Araya has a creative passion.\n\nfact1: Araya sets goals.\nrule: Anyone who sets goals is motivated.\nconclusion: Araya is motivated.\n\nfact1: Araya is motivated.\nfact2: Araya is pursuing hobbies.\nrule: If Araya is motivated, then she is either pursuing hobbies or has a stable job, but not both.\nconclusion: Araya does not have a stable job.\n\nfact1: Araya has a creative passion.\nfact2: Araya does not have a stable job.\nrule: If Araya has a creative passion or a stable job (or both), then she leads a balanced life.\nconclusion: Araya leads a balanced life.\n\nTherefore, it is false that Araya does not lead a balanced life. The correct option is: B.",
    "context": "Anyone who sets goals is motivated. Araya either values practicality or has a creative passion, but not both. If someone meets deadlines and respects their schedule, then they value practicality. If Araya has a creative passion or a stable job (or both), then she leads a balanced life. Everyone makes plans or sets goals. Araya does not make plans. Anyone who has ambition either works hard or sets goals (or both). Araya follows her intuition. Araya either values practicality or embraces spontaneity, but not both. If Araya is motivated, then she is either pursuing hobbies or has a stable job, but not both. Anyone who follows their intuition and enjoys exploration can embrace spontaneity. Araya is pursuing hobbies. Araya enjoys exploration.",
    "nl2fol": {
      "Anyone who sets goals is motivated.": "∀x (sets_goals(x) → is_motivated(x))",
      "Araya either values practicality or has a creative passion, but not both.": "values_practicality(Araya) ⊕ has_creative_passion(Araya)",
      "If someone meets deadlines and respects their schedule, then they value practicality.": "∀x ((meets_deadlines(x) ∧ respects_schedule(x)) → values_practicality(x))",
      "If Araya has a creative passion or a stable job (or both), then she leads a balanced life.": "(has_creative_passion(Araya) ∨ has_stable_job(Araya)) → leads_balanced_life(Araya)",
      "Everyone makes plans or sets goals.": "∀x (makes_plans(x) ∨ sets_goals(x))",
      "Araya does not make plans.": "¬makes_plans(Araya)",
      "Anyone who has ambition either works hard or sets goals (or both).": "∀x (has_ambition(x) → (works_hard(x) ∨ sets_goals(x)))",
      "Araya follows her intuition.": "follows_intuition(Araya)",
      "Araya either values practicality or embraces spontaneity, but not both.": "embraces_spontaneity(Araya) ⊕ values_practicality(Araya)",
      "If Araya is motivated, then she is either pursuing hobbies or has a stable job, but not both.": "is_motivated(Araya) → (pursues_hobbies(Araya) ⊕ has_stable_job(Araya))",
      "Anyone who follows their intuition and enjoys exploration can embrace spontaneity.": "∀x ((follows_intuition(x) ∧ enjoys_exploration(x)) → embraces_spontaneity(x))",
      "Araya is pursuing hobbies.": "pursues_hobbies(Araya)",
      "Araya enjoys exploration.": "enjoys_exploration(Araya)"
    },
    "conclusion_fol": "¬leads_balanced_life(Araya)"
  },
  {
    "id": 347,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ayleen does not lack expertise in botany.",
    "reasoning": "fact1: Ayleen pursues artistic interests.\nrule: Ayleen either enjoys nature or pursues artistic interests, but these two are not necessarily related.\nconclusion: Ayleen does not enjoy nature.\n\nfact1: Ayleen works outdoors.\nfact2: Ayleen appreciates landscaping.\nrule: If Ayleen works outdoors, then she either studies horticulture or appreciates landscaping (but not both).\nconclusion: Ayleen does not study horticulture.\n\nfact1: Ayleen does not enjoy nature.\nrule: Ayleen enjoys nature or loves gardening.\nconclusion: Ayleen loves gardening.\n\nfact1: Ayleen loves gardening.\nfact2: Ayleen does not study horticulture.\nrule: If someone either loves gardening or studies horticulture (but not both), then they care for plants.\nconclusion: Ayleen cares for plants.\n\nfact1: Ayleen cares for plants.\nfact2: Ayleen is passionate about research.\nrule: If Ayleen cares for plants, then she is passionate about research and has expertise in botany.\nconclusion: Ayleen has expertise in botany.\n\nfact1: Ayleen has expertise in botany.\nrule: Either Ayleen has expertise in botany or she lacks expertise in botany, but not both.\nconclusion: Ayleen does not lack expertise in botany.\n\nTherefore, it is true that Ayleen does not lack expertise in botany. The correct option is: A.",
    "context": "Ezequiel either enjoys nature or pursues artistic interests, but these two are not necessarily related. Ayleen values science or enjoys nature. Either Ayleen has expertise in botany or she lacks expertise in botany, but not both. Either Keilani has expertise in botany or she lacks expertise in botany, but not both. If Ayleen cares for plants, then she is passionate about research and has expertise in botany. Ayleen either enjoys nature or pursues artistic interests, but these two are not necessarily related. If Ayleen nurtures growth and values beauty, then she loves gardening. If Ayleen works outdoors, then she either studies horticulture or appreciates landscaping (but not both). If Ayleen collects seeds or reads botany books, then she studies horticulture. Ezequiel pursues artistic interests. If Miles works outdoors, then she either studies horticulture or appreciates landscaping (but not both). Ayleen pursues artistic interests. If Miles cares for plants, then she is passionate about research and has expertise in botany. Ayleen appreciates landscaping. Keilani is passionate about research. Ayleen works outdoors. Miles works outdoors. Ayleen is passionate about research. If someone either loves gardening or studies horticulture (but not both), then they care for plants. Keilani appreciates landscaping. Ayleen enjoys nature or loves gardening.",
    "nl2fol": {
      "Ezequiel either enjoys nature or pursues artistic interests, but these two are not necessarily related.": "pursues_artistic_interests(Ezequiel) ⊕ enjoys_nature(Ezequiel)",
      "Ayleen values science or enjoys nature.": "values_science(Ayleen) ∨ enjoys_nature(Ayleen)",
      "Either Ayleen has expertise in botany or she lacks expertise in botany, but not both.": "has_expertise_in_botany(Ayleen) ⊕ lacks_expertise_in_botany(Ayleen)",
      "Either Keilani has expertise in botany or she lacks expertise in botany, but not both.": "has_expertise_in_botany(Keilani) ⊕ lacks_expertise_in_botany(Keilani)",
      "If Ayleen cares for plants, then she is passionate about research and has expertise in botany.": "care_for_plants(Ayleen) → (passionate_about_research(Ayleen) ∧ has_expertise_in_botany(Ayleen))",
      "Ayleen either enjoys nature or pursues artistic interests, but these two are not necessarily related.": "pursues_artistic_interests(Ayleen) ⊕ enjoys_nature(Ayleen)",
      "If Ayleen nurtures growth and values beauty, then she loves gardening.": "(nurtures_growth(Ayleen) ∧ values_beauty(Ayleen)) → loves_gardening(Ayleen)",
      "If Ayleen works outdoors, then she either studies horticulture or appreciates landscaping (but not both).": "works_outdoors(Ayleen) → (studies_horticulture(Ayleen) ⊕ appreciates_landscaping(Ayleen))",
      "If Ayleen collects seeds or reads botany books, then she studies horticulture.": "(collects_seeds(Ayleen) ∨ reads_botany_books(Ayleen)) → studies_horticulture(Ayleen)",
      "Ezequiel pursues artistic interests.": "pursues_artistic_interests(Ezequiel)",
      "If Miles works outdoors, then she either studies horticulture or appreciates landscaping (but not both).": "works_outdoors(Miles) → (studies_horticulture(Miles) ⊕ appreciates_landscaping(Miles))",
      "Ayleen pursues artistic interests.": "pursues_artistic_interests(Ayleen)",
      "If Miles cares for plants, then she is passionate about research and has expertise in botany.": "care_for_plants(Miles) → (passionate_about_research(Miles) ∧ has_expertise_in_botany(Miles))",
      "Ayleen appreciates landscaping.": "appreciates_landscaping(Ayleen)",
      "Keilani is passionate about research.": "passionate_about_research(Keilani)",
      "Ayleen works outdoors.": "works_outdoors(Ayleen)",
      "Miles works outdoors.": "work_outdoors(Miles)",
      "Ayleen is passionate about research.": "passionate_about_research(Ayleen)",
      "If someone either loves gardening or studies horticulture (but not both), then they care for plants.": "∀x ((loves_gardening(x) ⊕ studies_horticulture(x)) → care_for_plants(x))",
      "Keilani appreciates landscaping.": "appreciates_landscaping(Keilani)",
      "Ayleen enjoys nature or loves gardening.": "enjoys_nature(Ayleen) ∨ loves_gardening(Ayleen)"
    },
    "conclusion_fol": "¬lacks_expertise_in_botany(Ayleen)"
  },
  {
    "id": 348,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Saul does not become a success.",
    "reasoning": "fact1: Saul values feedback.\nfact2: Saul does not remain authentic.\nrule: If Saul either stays true to himself or values feedback (but not both), then he will remain authentic.\nconclusion: Saul stays true to himself.\n\nfact1: Saul practices diligently.\nfact2: Saul stays true to himself.\nrule: If Saul diligently practices and stays true to himself, then he will gain recognition.\nconclusion: Saul gains recognition.\n\nfact1: Saul gains recognition.\nfact2: Saul does not continue to create.\nrule: If someone gains recognition and develops a unique voice, then they will continue to create.\nconclusion: Saul does not develop a unique voice.\n\nfact1: Saul does not earn critical acclaim.\nrule: If Saul produces original work, then he will earn critical acclaim.\nconclusion: Saul does not produce original work.\n\nfact1: Saul does not develop a unique voice.\nrule: If someone explores their own style, then they will develop a unique voice.\nconclusion: Saul does not explore his own style.\n\nfact1: Saul draws from influences.\nfact2: Saul does not produce original work.\nrule: If Saul either draws from influences or pays tribute to a figure, then he produces original work.\nconclusion: Saul pays tribute to that figure.\n\nfact1: Saul does not explore his own style.\nrule: If someone explores their own style, they may not necessarily find an inspirational figure, and vice versa.\nconclusion: Saul finds an inspirational figure.\n\nfact1: Saul finds an inspirational figure.\nfact2: Saul pays tribute to that figure.\nrule: If Saul finds an inspirational figure, then he will either become a success or pay tribute to that figure, but not both.\nconclusion: Saul does not become a success.\n\nTherefore, it is true that Saul does not become a success. The correct option is: A.",
    "context": "If Saul finds an inspirational figure, then he will either become a success or pay tribute to that figure, but not both. Saul does not continue to create. Saul practices diligently. If someone gains recognition and develops a unique voice, then they will continue to create. If someone explores their own style, they may not necessarily find an inspirational figure, and vice versa. Saul draws from influences. Saul values feedback. If Saul produces original work, then he will earn critical acclaim. Saul does not earn critical acclaim. If Saul either stays true to himself or values feedback (but not both), then he will remain authentic. If Saul diligently practices and stays true to himself, then he will gain recognition. Saul does not remain authentic. If Saul either draws from influences or pays tribute to a figure, then he produces original work. If someone explores their own style, then they will develop a unique voice.",
    "nl2fol": {
      "If Saul finds an inspirational figure, then he will either become a success or pay tribute to that figure, but not both.": "finds_inspirational_figure(Saul) → (becomes_a_success(Saul) ⊕ pays_tribute_to_figure(Saul))",
      "Saul does not continue to create.": "¬keeps_creating(Saul)",
      "Saul practices diligently.": "diligently_practices(Saul)",
      "If someone gains recognition and develops a unique voice, then they will continue to create.": "∀x ((gains_recognition(x) ∧ develops_unique_voice(x)) → keeps_creating(x))",
      "If someone explores their own style, they may not necessarily find an inspirational figure, and vice versa.": "∀x (explores_own_style(x) ⊕ finds_inspirational_figure(x))",
      "Saul draws from influences.": "draws_from_influences(Saul)",
      "Saul values feedback.": "values_feedback(Saul)",
      "If Saul produces original work, then he will earn critical acclaim.": "produces_original_work(Saul) → earns_critical_acclaim(Saul)",
      "Saul does not earn critical acclaim.": "¬earns_critical_acclaim(Saul)",
      "If Saul either stays true to himself or values feedback (but not both), then he will remain authentic.": "(stays_True_to_himself(Saul) ⊕ values_feedback(Saul)) → remains_authentic(Saul)",
      "If Saul diligently practices and stays true to himself, then he will gain recognition.": "(diligently_practices(Saul) ∧ stays_True_to_himself(Saul)) → gains_recognition(Saul)",
      "Saul does not remain authentic.": "¬remains_authentic(Saul)",
      "If Saul either draws from influences or pays tribute to a figure, then he produces original work.": "(draws_from_influences(Saul) ⊕ pays_tribute_to_figure(Saul)) → produces_original_work(Saul)",
      "If someone explores their own style, then they will develop a unique voice.": "∀x (explores_own_style(x) → develops_unique_voice(x))"
    },
    "conclusion_fol": "¬becomes_a_success(Saul)"
  },
  {
    "id": 349,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emmy is not complex.",
    "reasoning": "fact1: Emmy does not help others.\nrule: Emmy helps others or volunteers generously.\nconclusion: Emmy volunteers generously.\n\nfact1: Emmy does not support others.\nfact2: Emmy volunteers generously.\nrule: Anyone who supports others or volunteers generously is compassionate.\nconclusion: Emmy is compassionate.\n\nfact1: Emmy is famous.\nrule: If someone is famous, then they are a public figure.\nconclusion: Emmy is a public figure.\n\nfact1: Emmy holds a leadership role.\nfact2: Emmy is compassionate.\nrule: If Emmy holds a leadership role, then she is either in a position of authority or compassionate, but not both.\nconclusion: Emmy does not have authority.\n\nfact1: Emmy is a public figure.\nfact2: Emmy is sophisticated.\nrule: If Emmy is a public figure, then she is either ruthless or sophisticated (but not both).\nconclusion: Emmy is not ruthless.\n\nfact1: Emmy does not have authority.\nrule: Emmy is either kind or has authority, but not both.\nconclusion: Emmy is kind.\n\nfact1: Emmy is not ruthless.\nfact2: Emmy is kind.\nrule: If Emmy is either ruthless or kind (but not both), then she is complex.\nconclusion: Emmy is complex.\n\nTherefore, it is false that Emmy is not complex. The correct option is: B.",
    "context": "If Aadhya is a public figure, then she is either ruthless or sophisticated (but not both). If someone is famous, then they are a public figure. Emmy does not support others. If Emmy manipulates others or has a cunning nature, then she is ruthless. If Emmy holds a leadership role, then she is either in a position of authority or compassionate, but not both. If Eliel is either ruthless or kind (but not both), then she is complex. Emmy does not help others. Sugams does not help others. Emmy helps others or volunteers generously. If Emmy is a public figure, then she is either ruthless or sophisticated (but not both). Anyone who portrays leaders either has authority or gains recognition (or both). Emmy is famous. Emmy is either kind or has authority, but not both. Emmy is sophisticated. Eliel holds a leadership role. Eliel is either kind or has authority, but not both. If Emmy is multi-talented, then she is either intriguing off-screen or kind (or both). If Emmy is either ruthless or kind (but not both), then she is complex. Emmy holds a leadership role. Anyone who supports others or volunteers generously is compassionate.",
    "nl2fol": {
      "If Aadhya is a public figure, then she is either ruthless or sophisticated (but not both).": "is_public_figure(Aadhya) → (ruthless(Aadhya) ⊕ is_sophisticated(Aadhya))",
      "If someone is famous, then they are a public figure.": "∀x (famous(x) → is_public_figure(x))",
      "Emmy does not support others.": "¬supports_others(Emmy)",
      "If Emmy manipulates others or has a cunning nature, then she is ruthless.": "(manipulates_others(Emmy) ∨ has_cunning_nature(Emmy)) → ruthless(Emmy)",
      "If Emmy holds a leadership role, then she is either in a position of authority or compassionate, but not both.": "holds_leadership_role(Emmy) → (has_authority(Emmy) ⊕ is_compassionate(Emmy))",
      "If Eliel is either ruthless or kind (but not both), then she is complex.": "(ruthless(Eliel) ⊕ kind(Eliel)) → complex(Eliel)",
      "Emmy does not help others.": "¬helps_others(Emmy)",
      "Sugams does not help others.": "¬help_others(Sugams)",
      "Emmy helps others or volunteers generously.": "helps_others(Emmy) ∨ volunteers_generously(Emmy)",
      "If Emmy is a public figure, then she is either ruthless or sophisticated (but not both).": "is_public_figure(Emmy) → (ruthless(Emmy) ⊕ is_sophisticated(Emmy))",
      "Anyone who portrays leaders either has authority or gains recognition (or both).": "∀x (portrays_leaders(x) → (has_authority(x) ∨ gains_recognition(x)))",
      "Emmy is famous.": "famous(Emmy)",
      "Emmy is either kind or has authority, but not both.": "has_authority(Emmy) ⊕ kind(Emmy)",
      "Emmy is sophisticated.": "is_sophisticated(Emmy)",
      "Eliel holds a leadership role.": "holds_leadership_role(Eliel)",
      "Eliel is either kind or has authority, but not both.": "has_authority(Eliel) ⊕ kind(Eliel)",
      "If Emmy is multi-talented, then she is either intriguing off-screen or kind (or both).": "multi_talented(Emmy) → (intriguing_off_screen(Emmy) ∨ kind(Emmy))",
      "If Emmy is either ruthless or kind (but not both), then she is complex.": "(ruthless(Emmy) ⊕ kind(Emmy)) → complex(Emmy)",
      "Emmy holds a leadership role.": "holds_leadership_role(Emmy)",
      "Anyone who supports others or volunteers generously is compassionate.": "∀x ((supports_others(x) ∨ volunteers_generously(x)) → is_compassionate(x))"
    },
    "conclusion_fol": "¬complex(Emmy)"
  },
  {
    "id": 350,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rebekah does not study butterflies.",
    "reasoning": "fact1: Rebekah does not explore remote areas.\nfact2: Rebekah does not develop new theories.\nrule: Every innovative entomologist either explores remote areas or develops new theories (or both).\nconclusion: Rebekah is not innovative.\n\nfact1: Rebekah investigates ecosystems.\nfact2: Rebekah is not innovative.\nrule: If Rebekah either investigates ecosystems or pursues independent projects (but not both), then she is innovative.\nconclusion: Rebekah pursues independent projects.\n\nfact1: Rebekah collaborates with colleagues.\nrule: An entomologist either inspires others or collaborates with colleagues, but not necessarily both.\nconclusion: Rebekah does not inspire others.\n\nfact1: Rebekah pursues independent projects.\nrule: Rebekah is either a dedicated researcher or pursues independent projects, but not both.\nconclusion: Rebekah is not a dedicated researcher.\n\nfact1: Rebekah is not a dedicated researcher.\nfact2: Rebekah does not inspire others.\nrule: All entomologists who advance their field are dedicated researchers and inspire others.\nconclusion: Rebekah does not advance her field.\n\nfact1: Rebekah does not publish papers.\nfact2: Rebekah does not advance her field.\nrule: If Rebekah either makes breakthroughs or publishes papers (but not both), then she advances her field.\nconclusion: Rebekah does not make breakthroughs.\n\nfact1: Rebekah does not make breakthroughs.\nrule: If Rebekah is successful or has experience, then she makes breakthroughs.\nconclusion: Rebekah is not successful.\n\nfact1: Rebekah specializes in bees.\nfact2: Rebekah studies wasps.\nrule: If Rebekah studies moths, then she either specializes in bees or studies wasps, but not both.\nconclusion: Rebekah does not study moths.\n\nfact1: Rebekah does not study moths.\nfact2: Rebekah is not successful.\nrule: If Rebekah either studies butterflies or studies moths (but not both), then she is successful.\nconclusion: Rebekah does not study butterflies.\n\nTherefore, it is true that Rebekah does not study butterflies. The correct option is: A.",
    "context": "Rebekah is either a dedicated researcher or pursues independent projects, but not both. If Rebekah is a well-funded entomologist, then she either has a mentor or makes breakthroughs (but not both). Rebekah specializes in bees. If Rebekah is successful or has experience, then she makes breakthroughs. If Rebekah is curious, then she can solve complex problems and pursue independent projects. Every innovative entomologist either explores remote areas or develops new theories (or both). Rebekah does not explore remote areas. If Rebekah either investigates ecosystems or pursues independent projects (but not both), then she is innovative. Rebekah studies wasps. If Rebekah either makes breakthroughs or publishes papers (but not both), then she advances her field. All entomologists who advance their field are dedicated researchers and inspire others. Rebekah does not publish papers. If Molly either investigates ecosystems or pursues independent projects (but not both), then she is innovative. Rebekah investigates ecosystems. Any entomologist who either collects rare samples or discovers new species can be successful. Rebekah collaborates with colleagues. If Rebekah studies moths, then she either specializes in bees or studies wasps, but not both. Bryce does not develop new theories. If Rebekah either classifies insects or analyzes wing patterns (but not both), then she studies moths. Rebekah does not develop new theories. An entomologist either inspires others or collaborates with colleagues, but not necessarily both. For any entomologist, examining nocturnal behaviors and analyzing camouflage techniques can lead to innovation. If Rebekah either studies butterflies or studies moths (but not both), then she is successful.",
    "nl2fol": {
      "Rebekah is either a dedicated researcher or pursues independent projects, but not both.": "dedicated_researcher(Rebekah) ⊕ pursues_independent_projects(Rebekah)",
      "If Rebekah is a well-funded entomologist, then she either has a mentor or makes breakthroughs (but not both).": "well_funded(Rebekah) → (has_mentor(Rebekah) ⊕ makes_breakthrough(Rebekah))",
      "Rebekah specializes in bees.": "specialize_in_bees(Rebekah)",
      "If Rebekah is successful or has experience, then she makes breakthroughs.": "(successful(Rebekah) ∨ has_experience(Rebekah)) → makes_breakthrough(Rebekah)",
      "If Rebekah is curious, then she can solve complex problems and pursue independent projects.": "has_curiosity(Rebekah) → (solve_complex_problems(Rebekah) ∧ pursues_independent_projects(Rebekah))",
      "Every innovative entomologist either explores remote areas or develops new theories (or both).": "∀x (is_innovative(x) → (explores_remote_areas(x) ∨ develops_new_theories(x)))",
      "Rebekah does not explore remote areas.": "¬explores_remote_areas(Rebekah)",
      "If Rebekah either investigates ecosystems or pursues independent projects (but not both), then she is innovative.": "(investigates_ecosystems(Rebekah) ⊕ pursues_independent_projects(Rebekah)) → is_innovative(Rebekah)",
      "Rebekah studies wasps.": "study_wasps(Rebekah)",
      "If Rebekah either makes breakthroughs or publishes papers (but not both), then she advances her field.": "(makes_breakthrough(Rebekah) ⊕ publishes_papers(Rebekah)) → advances_field(Rebekah)",
      "All entomologists who advance their field are dedicated researchers and inspire others.": "∀x (advances_field(x) → (dedicated_researcher(x) ∧ inspires_others(x)))",
      "Rebekah does not publish papers.": "¬publishes_papers(Rebekah)",
      "If Molly either investigates ecosystems or pursues independent projects (but not both), then she is innovative.": "(investigates_ecosystems(Molly) ⊕ pursues_independent_projects(Molly)) → is_innovative(Molly)",
      "Rebekah investigates ecosystems.": "investigates_ecosystems(Rebekah)",
      "Any entomologist who either collects rare samples or discovers new species can be successful.": "∀x ((collect_rare_samples(x) ∨ discover_new_species(x)) → successful(x))",
      "Rebekah collaborates with colleagues.": "collaborates_with_colleagues(Rebekah)",
      "If Rebekah studies moths, then she either specializes in bees or studies wasps, but not both.": "study_moths(Rebekah) → (specialize_in_bees(Rebekah) ⊕ study_wasps(Rebekah))",
      "Bryce does not develop new theories.": "¬develop_new_theories(Bryce)",
      "If Rebekah either classifies insects or analyzes wing patterns (but not both), then she studies moths.": "(classify_insects(Rebekah) ⊕ analyze_wing_patterns(Rebekah)) → study_moths(Rebekah)",
      "Rebekah does not develop new theories.": "¬develops_new_theories(Rebekah)",
      "An entomologist either inspires others or collaborates with colleagues, but not necessarily both.": "∀x (inspires_others(x) ⊕ collaborates_with_colleagues(x))",
      "For any entomologist, examining nocturnal behaviors and analyzing camouflage techniques can lead to innovation.": "∀x ((examines_nocturnal_behaviors(x) ∧ analyzes_camouflage_techniques(x)) → is_innovative(x))",
      "If Rebekah either studies butterflies or studies moths (but not both), then she is successful.": "(study_butterflies(Rebekah) ⊕ study_moths(Rebekah)) → successful(Rebekah)"
    },
    "conclusion_fol": "¬study_butterflies(Rebekah)"
  },
  {
    "id": 351,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Isabela is fearful.",
    "reasoning": "fact1: Isabela does not overcome obstacles.\nfact2: Isabela pursues her passions.\nrule: If Isabela either overcomes obstacles or pursues passions (but not both), then she has ambition.\nconclusion: Isabela has ambition.\n\nfact1: Isabela prioritizes her own well-being.\nfact2: Isabela values her community.\nrule: If Isabela supports her family, then she either prioritizes her own well-being or values her community, but not both.\nconclusion: Isabela does not support her family.\n\nfact1: Isabela has ambition.\nfact2: Isabela achieves success.\nrule: If Isabela has ambition, then she either sets goals or achieves success, but not both.\nconclusion: Isabela does not set goals.\n\nfact1: Isabela encounters problems.\nfact2: Isabela does not support her family.\nrule: If Isabela encounters problems, then she either helps others or supports her family, but not both.\nconclusion: Isabela helps others.\n\nfact1: Isabela does not set goals.\nrule: Isabela either sets goals or meets deadlines, but not both.\nconclusion: Isabela meets deadlines.\n\nfact1: Isabela meets deadlines.\nfact2: Isabela does not stay motivated.\nrule: If Isabela either meets deadlines or faces challenges (but not both), then she stays motivated.\nconclusion: Isabela faces challenges.\n\nfact1: Isabela faces challenges.\nfact2: Isabela helps others.\nrule: Anyone who faces challenges and helps others is brave.\nconclusion: Isabela is brave.\n\nfact1: Isabela is brave.\nrule: Isabela is either brave or fearful, but not both.\nconclusion: Isabela is fearful.\n\nTherefore, it is false that Isabela is fearful. The correct option is: B.",
    "context": "Isabela is either brave or fearful, but not both. If Isabela either meets deadlines or faces challenges (but not both), then she stays motivated. Isabela achieves success. Janiyah achieves success. If Isabela has ambition, then she either sets goals or achieves success, but not both. Isabela does not overcome obstacles. Paislee either sets goals or meets deadlines, but not both. Anyone who works hard or stays organized can meet deadlines. Isabela pursues her passions. Isabela encounters problems. Isabela does not stay motivated. If Isabela either overcomes obstacles or pursues passions (but not both), then she has ambition. If Isabela either makes plans or tracks progress (but not both), then she sets goals. If Isabela encounters problems, then she either helps others or supports her family, but not both. Anyone who lives in a disaster area will face challenges. Isabela values her community. All persevering people are brave and take risks. Isabela prioritizes her own well-being. Anyone who faces challenges and helps others is brave. If Isabela supports her family, then she either prioritizes her own well-being or values her community, but not both. Isabela either sets goals or meets deadlines, but not both.",
    "nl2fol": {
      "Isabela is either brave or fearful, but not both.": "brave(Isabela) ⊕ fearful(Isabela)",
      "If Isabela either meets deadlines or faces challenges (but not both), then she stays motivated.": "(meets_deadlines(Isabela) ⊕ faces_challenges(Isabela)) → stays_motivated(Isabela)",
      "Isabela achieves success.": "achieves_success(Isabela)",
      "Janiyah achieves success.": "achieve_success(Janiyah)",
      "If Isabela has ambition, then she either sets goals or achieves success, but not both.": "has_ambition(Isabela) → (achieves_success(Isabela) ⊕ sets_goals(Isabela))",
      "Isabela does not overcome obstacles.": "¬overcomes_obstacles(Isabela)",
      "Paislee either sets goals or meets deadlines, but not both.": "sets_goals(Paislee) ⊕ meets_deadlines(Paislee)",
      "Anyone who works hard or stays organized can meet deadlines.": "∀x ((works_hard(x) ∨ stays_organized(x)) → meets_deadlines(x))",
      "Isabela pursues her passions.": "pursues_passions(Isabela)",
      "Isabela encounters problems.": "encounters_problems(Isabela)",
      "Isabela does not stay motivated.": "¬stays_motivated(Isabela)",
      "If Isabela either overcomes obstacles or pursues passions (but not both), then she has ambition.": "(overcomes_obstacles(Isabela) ⊕ pursues_passions(Isabela)) → has_ambition(Isabela)",
      "If Isabela either makes plans or tracks progress (but not both), then she sets goals.": "(makes_plans(Isabela) ⊕ tracks_progress(Isabela)) → sets_goals(Isabela)",
      "If Isabela encounters problems, then she either helps others or supports her family, but not both.": "encounters_problems(Isabela) → (helps_others(Isabela) ⊕ supports_family(Isabela))",
      "Anyone who lives in a disaster area will face challenges.": "∀x (lives_in_disaster_area(x) → faces_challenges(x))",
      "Isabela values her community.": "values_community(Isabela)",
      "All persevering people are brave and take risks.": "∀x (persevering(x) → (brave(x) ∧ takes_risks(x)))",
      "Isabela prioritizes her own well-being.": "prioritizes_self(Isabela)",
      "Anyone who faces challenges and helps others is brave.": "∀x ((faces_challenges(x) ∧ helps_others(x)) → brave(x))",
      "If Isabela supports her family, then she either prioritizes her own well-being or values her community, but not both.": "supports_family(Isabela) → (prioritizes_self(Isabela) ⊕ values_community(Isabela))",
      "Isabela either sets goals or meets deadlines, but not both.": "sets_goals(Isabela) ⊕ meets_deadlines(Isabela)"
    },
    "conclusion_fol": "fearful(Isabela)"
  },
  {
    "id": 352,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Boden does not bring people joy.",
    "reasoning": "fact1: Boden has a creative vision.\nrule: If Boden has a creative vision, then he expresses emotions deeply and writes lyrics.\nconclusion: Boden writes lyrics.\n\nfact1: Boden conveys emotions through his music.\nrule: For any person, they either convey emotions through their art or create harmonies, but not necessarily both.\nconclusion: Boden does not create harmonies.\n\nfact1: Boden appreciates silence.\nrule: For Boden, either he appreciates silence or he plays an instrument, but not both.\nconclusion: Boden does not play an instrument.\n\nfact1: Boden writes lyrics.\nfact2: Boden does not create harmonies.\nrule: If Boden either writes lyrics or creates harmonies (but not both), then he composes music.\nconclusion: Boden composes music.\n\nfact1: Boden does not play an instrument.\nfact2: Boden composes music.\nrule: For all humans, if they play an instrument or compose music (or both), then they bring people joy.\nconclusion: Boden brings people joy.\n\nTherefore, it is false that Boden does not bring people joy. The correct option is: B.",
    "context": "For Looker, either he appreciates silence or he plays an instrument, but not both. Looker has a creative vision. For all humans, if they play an instrument or compose music (or both), then they bring people joy. If Boden is attuned to nature, then he expresses emotions deeply and values sincerity. Boden appreciates silence. If Looker has a creative vision, then he expresses emotions deeply and writes lyrics. Aidan appreciates silence. If Boden has a creative vision, then he expresses emotions deeply and writes lyrics. If Boden either writes lyrics or creates harmonies (but not both), then he composes music. For any person, they either convey emotions through their art or create harmonies, but not necessarily both. Isaac conveys emotions through his music. For Boden, either he appreciates silence or he plays an instrument, but not both. Boden conveys emotions through his music. Boden has a creative vision.",
    "nl2fol": {
      "For Looker, either he appreciates silence or he plays an instrument, but not both.": "appreciate_silence(Looker) ⊕ play_instrument(Looker)",
      "Looker has a creative vision.": "have_creative_vision(Looker)",
      "For all humans, if they play an instrument or compose music (or both), then they bring people joy.": "∀x ((play_instrument(x) ∨ compose_music(x)) → bring_people_joy(x))",
      "If Boden is attuned to nature, then he expresses emotions deeply and values sincerity.": "attuned_to_nature(Boden) → (express_emotionally(Boden) ∧ value_sincerity(Boden))",
      "Boden appreciates silence.": "appreciate_silence(Boden)",
      "If Looker has a creative vision, then he expresses emotions deeply and writes lyrics.": "have_creative_vision(Looker) → (express_emotionally(Looker) ∧ write_lyrics(Looker))",
      "Aidan appreciates silence.": "appreciate_silence(Aidan)",
      "If Boden has a creative vision, then he expresses emotions deeply and writes lyrics.": "have_creative_vision(Boden) → (express_emotionally(Boden) ∧ write_lyrics(Boden))",
      "If Boden either writes lyrics or creates harmonies (but not both), then he composes music.": "(write_lyrics(Boden) ⊕ create_harmonies(Boden)) → compose_music(Boden)",
      "For any person, they either convey emotions through their art or create harmonies, but not necessarily both.": "∀x (convey_emotions(x) ⊕ create_harmonies(x))",
      "Isaac conveys emotions through his music.": "convey_emotions(Isaac)",
      "For Boden, either he appreciates silence or he plays an instrument, but not both.": "appreciate_silence(Boden) ⊕ play_instrument(Boden)",
      "Boden conveys emotions through his music.": "convey_emotions(Boden)",
      "Boden has a creative vision.": "have_creative_vision(Boden)"
    },
    "conclusion_fol": "¬bring_people_joy(Boden)"
  },
  {
    "id": 353,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Devin is not responsible.",
    "reasoning": "fact1: Devin does not explore caves.\nfact2: Devin collects rocks.\nrule: If Devin either explores caves or collects rocks (but not both), then he enjoys hiking.\nconclusion: Devin enjoys hiking.\n\nfact1: Devin enjoys hiking.\nfact2: Devin does not appreciate biodiversity.\nrule: If Devin enjoys hiking, then he either grows up outdoors or appreciates biodiversity, but not both.\nconclusion: Devin grows up outdoors.\n\nfact1: Devin grows up outdoors.\nrule: If Devin grows up outdoors, then he values the ecosystem and promotes sustainability.\nconclusion: Devin promotes sustainability.\n\nfact1: Devin loves marine life.\nfact2: Devin promotes sustainability.\nrule: For anyone, if they love marine life and promote sustainability, then they conserve wildlife.\nconclusion: Devin conserves wildlife.\n\nfact1: Devin conserves wildlife.\nrule: For Devin, he either conserves wildlife or harms nature, but not both.\nconclusion: Devin does not harm nature.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Devin is not responsible. The correct option is: C.",
    "context": "If Cuddlebug either respects nature or harms nature (but not both), then he is responsible. Devin visits beaches or enjoys hiking. If Devin enjoys hiking, then he either grows up outdoors or appreciates biodiversity, but not both. For Devin, he either conserves wildlife or harms nature, but not both. If Cuddlebug grows up outdoors, then he values the ecosystem and promotes sustainability. For anyone, if they love marine life and promote sustainability, then they conserve wildlife. If Devin either protects habitats or preserves water quality (but not both), then he conserves wildlife. Devin does not appreciate biodiversity. If Devin grows up outdoors, then he values the ecosystem and promotes sustainability. Devin does not explore caves. Cuddlebug does not explore caves. Devin loves marine life. Devin collects rocks. If Devin either explores caves or collects rocks (but not both), then he enjoys hiking.",
    "nl2fol": {
      "If Cuddlebug either respects nature or harms nature (but not both), then he is responsible.": "(respects_nature(Cuddlebug) ⊕ harms_nature(Cuddlebug)) → responsible(Cuddlebug)",
      "Devin visits beaches or enjoys hiking.": "visits_beaches(Devin) ∨ enjoys_hiking(Devin)",
      "If Devin enjoys hiking, then he either grows up outdoors or appreciates biodiversity, but not both.": "enjoys_hiking(Devin) → (grows_up_outdoors(Devin) ⊕ appreciates_biodiversity(Devin))",
      "For Devin, he either conserves wildlife or harms nature, but not both.": "conserves_wildlife(Devin) ⊕ harms_nature(Devin)",
      "If Cuddlebug grows up outdoors, then he values the ecosystem and promotes sustainability.": "grows_up_outdoors(Cuddlebug) → (values_ecosystem(Cuddlebug) ∧ promotes_sustainability(Cuddlebug))",
      "For anyone, if they love marine life and promote sustainability, then they conserve wildlife.": "∀x ((loves_marine_life(x) ∧ promotes_sustainability(x)) → conserves_wildlife(x))",
      "If Devin either protects habitats or preserves water quality (but not both), then he conserves wildlife.": "(protects_habitats(Devin) ⊕ preserves_water_quality(Devin)) → conserves_wildlife(Devin)",
      "Devin does not appreciate biodiversity.": "¬appreciates_biodiversity(Devin)",
      "If Devin grows up outdoors, then he values the ecosystem and promotes sustainability.": "grows_up_outdoors(Devin) → (values_ecosystem(Devin) ∧ promotes_sustainability(Devin))",
      "Devin does not explore caves.": "¬explore_caves(Devin)",
      "Cuddlebug does not explore caves.": "¬explore_caves(Cuddlebug)",
      "Devin loves marine life.": "loves_marine_life(Devin)",
      "Devin collects rocks.": "collect_rocks(Devin)",
      "If Devin either explores caves or collects rocks (but not both), then he enjoys hiking.": "(explore_caves(Devin) ⊕ collect_rocks(Devin)) → enjoys_hiking(Devin)"
    },
    "conclusion_fol": "¬responsible(Devin)"
  },
  {
    "id": 354,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Zain struggles with his identity.",
    "reasoning": "fact1: Zain experiences different cultures.\nfact2: Zain values his heritage.\nrule: Anyone who experiences different cultures and values their heritage can have a unique perspective.\nconclusion: Zain has a unique perspective.\n\nfact1: Zain has a unique perspective.\nrule: Zain either has a unique perspective or identifies with multiple cultures, but not both.\nconclusion: Zain does not identify with multiple cultures.\n\nfact1: Zain does not identify with multiple cultures.\nrule: For Zain, he either identifies with multiple cultures or has a homogeneous upbringing, but not both.\nconclusion: Zain has a homogeneous upbringing.\n\nfact1: Zain has a homogeneous upbringing.\nrule: For Zain, he either has a homogeneous upbringing or fully embraces his cultural diversity, but not both.\nconclusion: Zain does not fully embrace his cultural diversity.\n\nfact1: Zain does not fully embrace his cultural diversity.\nrule: Zain either has a strong sense of belonging or fully embraces his cultural diversity, but not both.\nconclusion: Zain has a strong sense of belonging.\n\nfact1: Zain has a strong sense of belonging.\nrule: Either Zain has a strong sense of belonging or he struggles with his identity, but not both.\nconclusion: Zain does not struggle with his identity.\n\nTherefore, it is false that Zain struggles with his identity. The correct option is: B.",
    "context": "For Zain, he either identifies with multiple cultures or has a homogeneous upbringing, but not both. Either Zain has a strong sense of belonging or he struggles with his identity, but not both. Anyone who experiences different cultures and values their heritage can have a unique perspective. Zain either has a strong sense of belonging or fully embraces his cultural diversity, but not both. Zain experiences different cultures. For Zain, he either has a homogeneous upbringing or fully embraces his cultural diversity, but not both. Zain values his heritage. If someone grows up abroad and speaks multiple languages, then they have a unique perspective. Zain either has a unique perspective or identifies with multiple cultures, but not both.",
    "nl2fol": {
      "For Zain, he either identifies with multiple cultures or has a homogeneous upbringing, but not both.": "identifies_multiple_cultures(Zain) ⊕ has_homogeneous_upbringing(Zain)",
      "Either Zain has a strong sense of belonging or he struggles with his identity, but not both.": "has_a_strong_sense_of_belonging(Zain) ⊕ struggles_with_identity(Zain)",
      "Anyone who experiences different cultures and values their heritage can have a unique perspective.": "∀x ((experiences_different_cultures(x) ∧ values_heritage(x)) → has_unique_perspective(x))",
      "Zain either has a strong sense of belonging or fully embraces his cultural diversity, but not both.": "embraces_cultural_diversity(Zain) ⊕ has_a_strong_sense_of_belonging(Zain)",
      "Zain experiences different cultures.": "experiences_different_cultures(Zain)",
      "For Zain, he either has a homogeneous upbringing or fully embraces his cultural diversity, but not both.": "has_homogeneous_upbringing(Zain) ⊕ embraces_cultural_diversity(Zain)",
      "Zain values his heritage.": "values_heritage(Zain)",
      "If someone grows up abroad and speaks multiple languages, then they have a unique perspective.": "∀x ((grows_up_abroad(x) ∧ speaks_multiple_languages(x)) → has_unique_perspective(x))",
      "Zain either has a unique perspective or identifies with multiple cultures, but not both.": "has_unique_perspective(Zain) ⊕ identifies_multiple_cultures(Zain)"
    },
    "conclusion_fol": "struggles_with_identity(Zain)"
  },
  {
    "id": 355,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Quentin receives proper medical care.",
    "reasoning": "fact1: Quentin has good posture.\nfact2: Quentin enjoys outdoor games.\nrule: Anyone who has good posture and enjoys outdoor games is physically active.\nconclusion: Quentin is physically active.\n\nfact1: Quentin has a high-pressure job.\nfact2: Quentin practices mindfulness.\nrule: If Quentin has a high-pressure job, then he either manages stress or practices mindfulness, but not both.\nconclusion: Quentin does not manage stress.\n\nfact1: Quentin does not manage stress.\nrule: If Quentin gets enough sleep or manages stress, but not both, then he is likely to maintain his overall well-being.\nconclusion: Quentin gets enough sleep.\n\nfact1: Quentin is physically active.\nfact2: Quentin has good habits.\nrule: If Quentin is physically active, then he either exercises regularly or has good habits, but not both.\nconclusion: Quentin does not exercise regularly.\n\nfact1: Quentin gets enough sleep.\nfact2: Quentin does not have good energy.\nrule: If Quentin either gets enough sleep or stays hydrated (but not both), then he has good energy.\nconclusion: Quentin stays hydrated.\n\nfact1: Quentin does not exercise regularly.\nrule: If someone leads a healthy life, then they eat nutritious food and exercise regularly.\nconclusion: Quentin does not lead a healthy life.\n\nfact1: Quentin does not lead a healthy life.\nrule: If Quentin overcomes health challenges, then he will lead a healthy life.\nconclusion: Quentin cannot overcome health challenges.\n\nfact1: Quentin cannot overcome health challenges.\nrule: For all humans, if they receive proper medical care, then they can overcome health challenges.\nconclusion: Quentin receives proper medical care.\n\nTherefore, it is false that Quentin receives proper medical care. The correct option is: B.",
    "context": "Hunky enjoys outdoor games. If Quentin gets enough sleep or manages stress, but not both, then he is likely to maintain his overall well-being. If Trace is physically active, then he either exercises regularly or has good habits, but not both. Hunky either eats nutritious food or stays hydrated (or both). For all humans, if they receive proper medical care, then they can overcome health challenges. Oliver does not have good energy. Quentin feels happy or leads a healthy life. Quentin has good habits. If Quentin either gets enough sleep or stays hydrated (but not both), then he has good energy. If someone has a strong will and is surrounded by a supportive family, then they can overcome health challenges. If Trace either gets enough sleep or stays hydrated (but not both), then he has good energy. Anyone who has good posture and enjoys outdoor games is physically active. Hunky practices mindfulness. Quentin enjoys outdoor games. If Quentin has a high-pressure job, then he either manages stress or practices mindfulness, but not both. Quentin has a high-pressure job. Quentin practices mindfulness. If Oliver overcomes health challenges, then he will lead a healthy life. If Quentin overcomes health challenges, then he will lead a healthy life. Quentin has good posture. If Oliver gets enough sleep or manages stress, but not both, then he is likely to maintain his overall well-being. Quentin does not have good energy. If someone leads a healthy life, then they eat nutritious food and exercise regularly. If Quentin is physically active, then he either exercises regularly or has good habits, but not both.",
    "nl2fol": {
      "Hunky enjoys outdoor games.": "enjoys_outdoor_games(Hunky)",
      "If Quentin gets enough sleep or manages stress, but not both, then he is likely to maintain his overall well-being.": "get_enough_sleep(Quentin) ⊕ manage_stress(Quentin)",
      "If Trace is physically active, then he either exercises regularly or has good habits, but not both.": "is_physically_active(Trace) → (exercise_regularly(Trace) ⊕ has_good_habits(Trace))",
      "Hunky either eats nutritious food or stays hydrated (or both).": "eat_nutritious_food(Hunky) ∨ stay_hydrated(Hunky)",
      "For all humans, if they receive proper medical care, then they can overcome health challenges.": "∀x (receive_proper_medical_care(x) → overcome_health_challenges(x))",
      "Oliver does not have good energy.": "¬has_good_energy(Oliver)",
      "Quentin feels happy or leads a healthy life.": "feels_happy(Quentin) ∨ lead_healthy_life(Quentin)",
      "Quentin has good habits.": "has_good_habits(Quentin)",
      "If Quentin either gets enough sleep or stays hydrated (but not both), then he has good energy.": "(get_enough_sleep(Quentin) ⊕ stay_hydrated(Quentin)) → has_good_energy(Quentin)",
      "If someone has a strong will and is surrounded by a supportive family, then they can overcome health challenges.": "∀x ((has_strong_will(x) ∧ surrounds_by_supportive_family(x)) → overcome_health_challenges(x))",
      "If Trace either gets enough sleep or stays hydrated (but not both), then he has good energy.": "(get_enough_sleep(Trace) ⊕ stay_hydrated(Trace)) → has_good_energy(Trace)",
      "Anyone who has good posture and enjoys outdoor games is physically active.": "∀x ((has_good_posture(x) ∧ enjoys_outdoor_games(x)) → is_physically_active(x))",
      "Hunky practices mindfulness.": "practices_mindfulness(Hunky)",
      "Quentin enjoys outdoor games.": "enjoys_outdoor_games(Quentin)",
      "If Quentin has a high-pressure job, then he either manages stress or practices mindfulness, but not both.": "has_high_pressure_job(Quentin) → (practices_mindfulness(Quentin) ⊕ manage_stress(Quentin))",
      "Quentin has a high-pressure job.": "has_high_pressure_job(Quentin)",
      "Quentin practices mindfulness.": "practices_mindfulness(Quentin)",
      "If Oliver overcomes health challenges, then he will lead a healthy life.": "overcome_health_challenges(Oliver) → lead_healthy_life(Oliver)",
      "If Quentin overcomes health challenges, then he will lead a healthy life.": "overcome_health_challenges(Quentin) → lead_healthy_life(Quentin)",
      "Quentin has good posture.": "has_good_posture(Quentin)",
      "If Oliver gets enough sleep or manages stress, but not both, then he is likely to maintain his overall well-being.": "get_enough_sleep(Oliver) ⊕ manage_stress(Oliver)",
      "Quentin does not have good energy.": "¬has_good_energy(Quentin)",
      "If someone leads a healthy life, then they eat nutritious food and exercise regularly.": "∀x (lead_healthy_life(x) → (eat_nutritious_food(x) ∧ exercise_regularly(x)))",
      "If Quentin is physically active, then he either exercises regularly or has good habits, but not both.": "is_physically_active(Quentin) → (exercise_regularly(Quentin) ⊕ has_good_habits(Quentin))"
    },
    "conclusion_fol": "receive_proper_medical_care(Quentin)"
  },
  {
    "id": 356,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adelina does not inspire others.",
    "reasoning": "fact1: Adelina has imagination.\nfact2: Adelina solves problems creatively.\nrule: If Adelina has imagination, then she either thinks outside the box or solves problems creatively, but not both.\nconclusion: Adelina does not think outside the box.\n\nfact1: Adelina is willing to help.\nrule: Anyone who has experience or is willing to help can provide guidance.\nconclusion: Adelina provides guidance.\n\nfact1: Adelina provides guidance.\nfact2: Adelina is not supportive.\nrule: If Adelina either provides guidance or offers feedback (but not both), then she is supportive.\nconclusion: Adelina offers feedback.\n\nfact1: Adelina offers feedback.\nrule: Adelina either offers feedback or listens to others, but not both.\nconclusion: Adelina does not listen to others.\n\nfact1: Adelina does not listen to others.\nrule: Adelina either shares her experiences or listens to others, but not both.\nconclusion: Adelina shares her experiences.\n\nfact1: Adelina is innovative.\nfact2: Adelina does not think outside the box.\nrule: If Adelina is innovative, then she either harnesses her creativity or thinks outside the box, but not both.\nconclusion: Adelina harnesses her creativity.\n\nfact1: Adelina harnesses her creativity.\nrule: If Adelina harnesses her creativity, then she develops a unique voice and gains recognition.\nconclusion: Adelina gains recognition.\n\nfact1: Adelina writes poetry.\nfact2: Adelina gains recognition.\nrule: If Adelina writes poetry, then she can either gain recognition or inspire others, but not both.\nconclusion: Adelina does not inspire others.\n\nTherefore, it is true that Adelina does not inspire others. The correct option is: A.",
    "context": "Adelina writes poetry. If Adelina excels at art, then she will gain recognition and earn acclaim. If Adelina either provides guidance or offers feedback (but not both), then she is supportive. Elian either shares her experiences or listens to others, but not both. If someone values opinions and respects perspectives, then they listen to others. Adelina has imagination. If Adelina has imagination, then she either thinks outside the box or solves problems creatively, but not both. Adelina is willing to help. Adelina solves problems creatively. If Adelina pursues artistic interests, then she either develops a unique voice or cultivates an original style, but not both. Adelina either shares her experiences or listens to others, but not both. Adelina is innovative. Adelina is not supportive. If Elian either provides guidance or offers feedback (but not both), then she is supportive. Anyone who has experience or is willing to help can provide guidance. If Adelina is innovative, then she either harnesses her creativity or thinks outside the box, but not both. Elian solves problems creatively. If Adelina harnesses her creativity, then she develops a unique voice and gains recognition. If Adelina writes poetry, then she can either gain recognition or inspire others, but not both. For anyone who gathers knowledge and builds connections, they can share their experiences. Everyone who mentors apprentices either provides guidance or shares knowledge (or both). Elian has imagination. Adelina either offers feedback or listens to others, but not both.",
    "nl2fol": {
      "Adelina writes poetry.": "write_poetry(Adelina)",
      "If Adelina excels at art, then she will gain recognition and earn acclaim.": "excel_at_art(Adelina) → (gain_recognition(Adelina) ∧ earn_acclaim(Adelina))",
      "If Adelina either provides guidance or offers feedback (but not both), then she is supportive.": "(provide_guidance(Adelina) ⊕ offer_feedback(Adelina)) → is_supportive(Adelina)",
      "Elian either shares her experiences or listens to others, but not both.": "listen_to_others(Elian) ⊕ share_experiences(Elian)",
      "If someone values opinions and respects perspectives, then they listen to others.": "∀x ((values_opinions(x) ∧ respects_perspectives(x)) → listen_to_others(x))",
      "Adelina has imagination.": "has_imagination(Adelina)",
      "If Adelina has imagination, then she either thinks outside the box or solves problems creatively, but not both.": "has_imagination(Adelina) → (solve_problems_creatively(Adelina) ⊕ think_outside_box(Adelina))",
      "Adelina is willing to help.": "is_willing_to_help(Adelina)",
      "Adelina solves problems creatively.": "solve_problems_creatively(Adelina)",
      "If Adelina pursues artistic interests, then she either develops a unique voice or cultivates an original style, but not both.": "pursue_artistic_interests(Adelina) → (develop_unique_voice(Adelina) ⊕ cultivate_original_style(Adelina))",
      "Adelina either shares her experiences or listens to others, but not both.": "listen_to_others(Adelina) ⊕ share_experiences(Adelina)",
      "Adelina is innovative.": "is_innovative(Adelina)",
      "Adelina is not supportive.": "¬is_supportive(Adelina)",
      "If Elian either provides guidance or offers feedback (but not both), then she is supportive.": "(provide_guidance(Elian) ⊕ offer_feedback(Elian)) → is_supportive(Elian)",
      "Anyone who has experience or is willing to help can provide guidance.": "∀x ((has_experience(x) ∨ is_willing_to_help(x)) → provide_guidance(x))",
      "If Adelina is innovative, then she either harnesses her creativity or thinks outside the box, but not both.": "is_innovative(Adelina) → (harness_creativity(Adelina) ⊕ think_outside_box(Adelina))",
      "Elian solves problems creatively.": "solve_problems_creatively(Elian)",
      "If Adelina harnesses her creativity, then she develops a unique voice and gains recognition.": "harness_creativity(Adelina) → (develop_unique_voice(Adelina) ∧ gain_recognition(Adelina))",
      "If Adelina writes poetry, then she can either gain recognition or inspire others, but not both.": "write_poetry(Adelina) → (gain_recognition(Adelina) ⊕ inspire_others(Adelina))",
      "For anyone who gathers knowledge and builds connections, they can share their experiences.": "∀x ((gathers_knowledge(x) ∧ builds_connections(x)) → share_experiences(x))",
      "Everyone who mentors apprentices either provides guidance or shares knowledge (or both).": "∀x (mentor_apprentices(x) → (provide_guidance(x) ∨ share_knowledge(x)))",
      "Elian has imagination.": "has_imagination(Elian)",
      "Adelina either offers feedback or listens to others, but not both.": "offer_feedback(Adelina) ⊕ listen_to_others(Adelina)"
    },
    "conclusion_fol": "¬inspire_others(Adelina)"
  },
  {
    "id": 357,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Faye did not study fungi.",
    "reasoning": "fact1: Faye does not develop new techniques.\nfact2: Faye shares knowledge.\nrule: All mycologists who collaborate with others develop new techniques and share knowledge.\nconclusion: Faye does not collaborate with others.\n\nfact1: Faye does not collaborate with others.\nrule: If Faye is influential, then she collaborates with others and mentors students.\nconclusion: Faye is not influential.\n\nfact1: Faye leads workshops.\nfact2: Faye is not influential.\nrule: If Faye either publishes research or leads workshops (but not both), then she is influential.\nconclusion: Faye publishes research.\n\nfact1: Faye is not respected.\nrule: If a mycologist receives awards, then they are respected.\nconclusion: Faye does not receive awards.\n\nfact1: Faye publishes research.\nfact2: Faye does not receive awards.\nrule: If a mycologist publishes research and is renowned, then they receive awards.\nconclusion: Faye is not renowned.\n\nfact1: Faye did not discover a new species.\nfact2: Faye is not renowned.\nrule: If Faye either studied fungi or discovered a new species (but not both), then she is renowned.\nconclusion: Faye did not study fungi.\n\nTherefore, it is true that Faye did not study fungi. The correct option is: A.",
    "context": "If Addison either publishes research or leads workshops (but not both), then she is influential. If Faye either studied fungi or discovered a new species (but not both), then she is renowned. If Faye is influential, then she collaborates with others and mentors students. If Muffinhead either studied fungi or discovered a new species (but not both), then she is renowned. If a mycologist receives awards, then they are respected. Faye leads workshops. Faye is not respected. Addison leads workshops. All mycologists who collaborate with others develop new techniques and share knowledge. Faye shares knowledge. Every mycologist who contributes to the field is either influential or advances scientific knowledge (or both). If Faye has passion, then she is renowned and makes an impact. Muffinhead is not respected. Faye did not discover a new species. Addison shares knowledge. Faye does not develop new techniques. If Faye either publishes research or leads workshops (but not both), then she is influential. If a mycologist publishes research and is renowned, then they receive awards.",
    "nl2fol": {
      "If Addison either publishes research or leads workshops (but not both), then she is influential.": "(publishes_research(Addison) ⊕ leads_workshops(Addison)) → is_influential(Addison)",
      "If Faye either studied fungi or discovered a new species (but not both), then she is renowned.": "(studied_fungi(Faye) ⊕ discovered_new_species(Faye)) → renowned(Faye)",
      "If Faye is influential, then she collaborates with others and mentors students.": "is_influential(Faye) → (collaborate_with_others(Faye) ∧ mentor_students(Faye))",
      "If Muffinhead either studied fungi or discovered a new species (but not both), then she is renowned.": "(studied_fungi(Muffinhead) ⊕ discovered_new_species(Muffinhead)) → renowned(Muffinhead)",
      "If a mycologist receives awards, then they are respected.": "∀x (receives_awards(x) → respected(x))",
      "Faye leads workshops.": "leads_workshops(Faye)",
      "Faye is not respected.": "¬respected(Faye)",
      "Addison leads workshops.": "leads_workshops(Addison)",
      "All mycologists who collaborate with others develop new techniques and share knowledge.": "∀x (collaborate_with_others(x) → (develop_new_techniques(x) ∧ share_knowledge(x)))",
      "Faye shares knowledge.": "share_knowledge(Faye)",
      "Every mycologist who contributes to the field is either influential or advances scientific knowledge (or both).": "∀x (contributes_to_field(x) → (is_influential(x) ∨ advances_scientific_knowledge(x)))",
      "If Faye has passion, then she is renowned and makes an impact.": "has_passion(Faye) → (renowned(Faye) ∧ makes_impact(Faye))",
      "Muffinhead is not respected.": "¬is_respected(Muffinhead)",
      "Faye did not discover a new species.": "¬discovered_new_species(Faye)",
      "Addison shares knowledge.": "shares_knowledge(Addison)",
      "Faye does not develop new techniques.": "¬develop_new_techniques(Faye)",
      "If Faye either publishes research or leads workshops (but not both), then she is influential.": "(publishes_research(Faye) ⊕ leads_workshops(Faye)) → is_influential(Faye)",
      "If a mycologist publishes research and is renowned, then they receive awards.": "∀x ((publishes_research(x) ∧ renowned(x)) → receives_awards(x))"
    },
    "conclusion_fol": "¬studied_fungi(Faye)"
  },
  {
    "id": 358,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alfonso does not have advanced skills.",
    "reasoning": "fact1: Alfonso does not value human life.\nfact2: Alfonso does not prioritize patient care.\nrule: For all humans, if someone is either passionate about healthcare or values human life, then they prioritize patient care.\nconclusion: Alfonso is not passionate about healthcare.\n\nfact1: Alfonso does not pursue personal gain.\nrule: Alfonso is either compassionate or pursues personal gain, but not both.\nconclusion: Alfonso is compassionate.\n\nfact1: Alfonso has strong morals.\nfact2: Alfonso is not generous.\nrule: If Alfonso has strong morals, then he is either selfless or generous, but not both.\nconclusion: Alfonso is selfless.\n\nfact1: Alfonso pursues continuing education.\nrule: Alfonso either has strong ethics or pursues continuing education, but not both.\nconclusion: Alfonso does not have strong ethics.\n\nfact1: Alfonso is compassionate.\nfact2: Alfonso is selfless.\nrule: If Alfonso is compassionate, then he is either empathetic or selfless, but not both.\nconclusion: Alfonso does not have empathy.\n\nfact1: Alfonso does not have empathy.\nfact2: Alfonso does not have strong ethics.\nrule: If Alfonso is motivated to help others, then he either has empathy or has strong ethics, but not both.\nconclusion: Alfonso is not motivated to help others.\n\nfact1: Alfonso is not passionate about healthcare.\nfact2: Alfonso is not motivated to help others.\nrule: If someone is either dedicated to osteopathy or passionate about healthcare, then they are motivated to help others.\nconclusion: Alfonso is not dedicated to osteopathy.\n\nfact1: Alfonso does not gain the trust of his patients.\nrule: Anyone who improves patient outcomes will gain the trust of their patients.\nconclusion: Alfonso does not improve patient outcomes.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Alfonso does not have advanced skills. The correct option is: C.",
    "context": "Salma has strong morals. If Salma is compassionate, then he is either empathetic or selfless, but not both. If someone is either dedicated to osteopathy or passionate about healthcare, then they are motivated to help others. Tiffany does not prioritize patient care. Alfonso does not pursue personal gain. If Salma is motivated to help others, then he either has empathy or has strong ethics, but not both. Alfonso does not value human life. Alfonso either has strong ethics or pursues continuing education, but not both. Nalani is not generous. Salma is either compassionate or pursues personal gain, but not both. Alfonso pursues continuing education. Alfonso is either compassionate or pursues personal gain, but not both. Alfonso does not gain the trust of his patients. If Alfonso is a strong communicator who understands anatomy, then he is dedicated to osteopathy. Nalani does not pursue personal gain. Tiffany pursues continuing education. Anyone who improves patient outcomes will gain the trust of their patients. Salma does not gain the trust of his patients. For all humans, if someone is either passionate about healthcare or values human life, then they prioritize patient care. If Alfonso is motivated to help others, then he either has empathy or has strong ethics, but not both. Alfonso has strong morals. Alfonso is not generous. If Alfonso either volunteers regularly or donates to charity (but not both), then he is motivated to help others. If Alfonso has strong morals, then he is either selfless or generous, but not both. Everyone who cares for others either puts others first or is compassionate (or both). If Alfonso is compassionate, then he is either empathetic or selfless, but not both. Alfonso does not prioritize patient care.",
    "nl2fol": {
      "Salma has strong morals.": "has_strong_morals(Salma)",
      "If Salma is compassionate, then he is either empathetic or selfless, but not both.": "is_compassionate(Salma) → (has_empathy(Salma) ⊕ is_selfless(Salma))",
      "If someone is either dedicated to osteopathy or passionate about healthcare, then they are motivated to help others.": "∀x ((dedicated_to_osteopathy(x) ⊕ passionate_about_healthcare(x)) → motivated_to_help_others(x))",
      "Tiffany does not prioritize patient care.": "¬prioritizes_patient_care(Tiffany)",
      "Alfonso does not pursue personal gain.": "¬pursues_personal_gain(Alfonso)",
      "If Salma is motivated to help others, then he either has empathy or has strong ethics, but not both.": "motivated_to_help_others(Salma) → (has_empathy(Salma) ⊕ has_strong_ethics(Salma))",
      "Alfonso does not value human life.": "¬values_human_life(Alfonso)",
      "Alfonso either has strong ethics or pursues continuing education, but not both.": "has_strong_ethics(Alfonso) ⊕ pursues_continuing_education(Alfonso)",
      "Nalani is not generous.": "¬be_generous(Nalani)",
      "Salma is either compassionate or pursues personal gain, but not both.": "is_compassionate(Salma) ⊕ pursues_personal_gain(Salma)",
      "Alfonso pursues continuing education.": "pursues_continuing_education(Alfonso)",
      "Alfonso is either compassionate or pursues personal gain, but not both.": "is_compassionate(Alfonso) ⊕ pursues_personal_gain(Alfonso)",
      "Alfonso does not gain the trust of his patients.": "¬gain_trust(Alfonso)",
      "If Alfonso is a strong communicator who understands anatomy, then he is dedicated to osteopathy.": "strong_communicator(Alfonso) → (understand_anatomy(Alfonso) ∧ dedicated_to_osteopathy(Alfonso))",
      "Nalani does not pursue personal gain.": "¬pursues_personal_gain(Nalani)",
      "Tiffany pursues continuing education.": "pursues_continuing_education(Tiffany)",
      "Anyone who improves patient outcomes will gain the trust of their patients.": "∀x (improve_patient_outcomes(x) → gain_trust(x))",
      "Salma does not gain the trust of his patients.": "¬gain_trust(Salma)",
      "For all humans, if someone is either passionate about healthcare or values human life, then they prioritize patient care.": "∀x ((passionate_about_healthcare(x) ⊕ values_human_life(x)) → prioritizes_patient_care(x))",
      "If Alfonso is motivated to help others, then he either has empathy or has strong ethics, but not both.": "motivated_to_help_others(Alfonso) → (has_empathy(Alfonso) ⊕ has_strong_ethics(Alfonso))",
      "Alfonso has strong morals.": "has_strong_morals(Alfonso)",
      "Alfonso is not generous.": "¬is_generous(Alfonso)",
      "If Alfonso either volunteers regularly or donates to charity (but not both), then he is motivated to help others.": "(volunteers_regularly(Alfonso) ⊕ donates_to_charity(Alfonso)) → motivated_to_help_others(Alfonso)",
      "If Alfonso has strong morals, then he is either selfless or generous, but not both.": "has_strong_morals(Alfonso) → (is_selfless(Alfonso) ⊕ is_generous(Alfonso))",
      "Everyone who cares for others either puts others first or is compassionate (or both).": "∀x (care_for_others(x) → (put_others_first(x) ∨ is_compassionate(x)))",
      "If Alfonso is compassionate, then he is either empathetic or selfless, but not both.": "is_compassionate(Alfonso) → (has_empathy(Alfonso) ⊕ is_selfless(Alfonso))",
      "Alfonso does not prioritize patient care.": "¬prioritizes_patient_care(Alfonso)"
    },
    "conclusion_fol": "¬have_advanced_skills(Alfonso)"
  },
  {
    "id": 359,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Aarav is either charismatic or diplomatic (but not both), then he is respected.",
    "reasoning": "fact1: Aarav is well-traveled.\nfact2: Aarav does not have local knowledge.\nrule: If Aarav is well-traveled, then he either speaks many languages or has local knowledge, but not both.\nconclusion: Aarav speaks many languages.\n\nfact1: Aarav does not value honesty.\nrule: Aarav either values honesty or understands cultures, but no one necessarily possesses both qualities.\nconclusion: Aarav understands cultures.\n\nfact1: Aarav speaks many languages.\nfact2: Aarav understands cultures.\nrule: For anyone who speaks many languages and understands cultures, they can communicate well.\nconclusion: Aarav communicates well.\n\nfact1: Aarav serves nobly.\nrule: Anyone who serves nobly or negotiates effectively is admired.\nconclusion: Aarav is admired.\n\nfact1: Aarav holds high office.\nfact2: Aarav is admired.\nrule: If Aarav holds high office, then he is either respected or admired, but not both.\nconclusion: Aarav is not respected.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Aarav is either charismatic or diplomatic (but not both), then he is respected. The correct option is: C.",
    "context": "If Aarav has a good memory and listens attentively, then he can speak many languages. If Aarav holds high office, then he is either respected or admired, but not both. For anyone who speaks many languages and understands cultures, they can communicate well. Aarav does not have local knowledge. If Aarav either speaks confidently or listens attentively (but not both), then he is respected. Anyone who has confidence and has wit can be charismatic. Aarav either values honesty or understands cultures, but no one necessarily possesses both qualities. If Aarav is well-traveled, then he either speaks many languages or has local knowledge, but not both. Aarav does not value honesty. If Cuteness is well-traveled, then he either speaks many languages or has local knowledge, but not both. Aarav is well-traveled. Anyone who serves nobly or negotiates effectively is admired. Aarav serves nobly. Aarav holds high office. Anyone who studies history or lives abroad understands cultures.",
    "nl2fol": {
      "If Aarav has a good memory and listens attentively, then he can speak many languages.": "(has_good_memory(Aarav) ∧ listens_attentively(Aarav)) → speaks_many_languages(Aarav)",
      "If Aarav holds high office, then he is either respected or admired, but not both.": "holds_high_office(Aarav) → (respected(Aarav) ⊕ admired(Aarav))",
      "For anyone who speaks many languages and understands cultures, they can communicate well.": "∀x ((speaks_many_languages(x) ∧ understands_cultures(x)) → communicates_well(x))",
      "Aarav does not have local knowledge.": "¬has_local_knowledge(Aarav)",
      "If Aarav either speaks confidently or listens attentively (but not both), then he is respected.": "(speaks_confidently(Aarav) ⊕ listens_attentively(Aarav)) → respected(Aarav)",
      "Anyone who has confidence and has wit can be charismatic.": "∀x ((has_confidence(x) ∧ has_wit(x)) → charismatic(x))",
      "Aarav either values honesty or understands cultures, but no one necessarily possesses both qualities.": "values_honesty(Aarav) ⊕ understands_cultures(Aarav)",
      "If Aarav is well-traveled, then he either speaks many languages or has local knowledge, but not both.": "is_well_traveled(Aarav) → (speaks_many_languages(Aarav) ⊕ has_local_knowledge(Aarav))",
      "Aarav does not value honesty.": "¬values_honesty(Aarav)",
      "If Cuteness is well-traveled, then he either speaks many languages or has local knowledge, but not both.": "is_well_traveled(Cuteness) → (speaks_many_languages(Cuteness) ⊕ has_local_knowledge(Cuteness))",
      "Aarav is well-traveled.": "is_well_traveled(Aarav)",
      "Anyone who serves nobly or negotiates effectively is admired.": "∀x ((serves_nobly(x) ∨ negotiates_effectively(x)) → admired(x))",
      "Aarav serves nobly.": "serves_nobly(Aarav)",
      "Aarav holds high office.": "holds_high_office(Aarav)",
      "Anyone who studies history or lives abroad understands cultures.": "∀x ((studies_history(x) ∨ lives_abroad(x)) → understands_cultures(x))"
    },
    "conclusion_fol": "(charismatic(Aarav) ⊕ diplomatic(Aarav)) → respected(Aarav)"
  },
  {
    "id": 360,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Valeria is not selfish.",
    "reasoning": "fact1: Valeria serves others.\nrule: Valeria either serves others or seeks power, but not both.\nconclusion: Valeria does not seek power.\n\nfact1: Valeria prioritizes efficiency.\nrule: Valeria either prioritizes efficiency or values compassion, but not necessarily both.\nconclusion: Valeria does not value compassion.\n\nfact1: Valeria does not value compassion.\nrule: Valeria either values compassion or may crave wealth, but not necessarily both.\nconclusion: Valeria craves wealth.\n\nfact1: Valeria does not seek power.\nfact2: Valeria craves wealth.\nrule: If someone either seeks power or craves wealth (but not both), then they are driven by a desire to pursue personal gain.\nconclusion: Valeria is driven by a desire to pursue personal gain.\n\nfact1: Valeria is driven by a desire to pursue personal gain.\nrule: Valeria is either driven by a desire to pursue personal gain or acts selflessly, but not both.\nconclusion: Valeria is not selfless.\n\nfact1: Valeria is not selfless.\nrule: Valeria is either selfless or selfish, but not both.\nconclusion: Valeria is selfish.\n\nTherefore, it is false that Valeria is not selfish. The correct option is: B.",
    "context": "Valeria prioritizes efficiency. Valeria either prioritizes efficiency or values compassion, but not necessarily both. If someone either seeks power or craves wealth (but not both), then they are driven by a desire to pursue personal gain. Valeria is either selfless or selfish, but not both. If Valeria is ambitious, then she either craves wealth or desires recognition, but not both. Valeria either values compassion or may crave wealth, but not necessarily both. Valeria either serves others or seeks power, but not both. If Valeria holds authority, then she either seeks power or takes initiative (or both). Valeria is either driven by a desire to pursue personal gain or acts selflessly, but not both. Valeria serves others.",
    "nl2fol": {
      "Valeria prioritizes efficiency.": "prioritizes_efficiency(Valeria)",
      "Valeria either prioritizes efficiency or values compassion, but not necessarily both.": "prioritizes_efficiency(Valeria) ⊕ values_compassion(Valeria)",
      "If someone either seeks power or craves wealth (but not both), then they are driven by a desire to pursue personal gain.": "∀x ((seeks_power(x) ⊕ craves_wealth(x)) → pursues_personal_gain(x))",
      "Valeria is either selfless or selfish, but not both.": "selfless(Valeria) ⊕ selfish(Valeria)",
      "If Valeria is ambitious, then she either craves wealth or desires recognition, but not both.": "has_ambition(Valeria) → (craves_wealth(Valeria) ⊕ desires_recognition(Valeria))",
      "Valeria either values compassion or may crave wealth, but not necessarily both.": "values_compassion(Valeria) ⊕ craves_wealth(Valeria)",
      "Valeria either serves others or seeks power, but not both.": "serves_others(Valeria) ⊕ seeks_power(Valeria)",
      "If Valeria holds authority, then she either seeks power or takes initiative (or both).": "holds_authority(Valeria) → (seeks_power(Valeria) ∨ takes_initiative(Valeria))",
      "Valeria is either driven by a desire to pursue personal gain or acts selflessly, but not both.": "pursues_personal_gain(Valeria) ⊕ selfless(Valeria)",
      "Valeria serves others.": "serves_others(Valeria)"
    },
    "conclusion_fol": "¬selfish(Valeria)"
  },
  {
    "id": 361,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Esmeralda participates in therapy.",
    "reasoning": "fact1: Esmeralda has strong instincts.\nrule: Esmeralda either has strong instincts or adapts to her habitat, but she cannot necessarily do both.\nconclusion: Esmeralda does not adapt to her habitat.\n\nfact1: Esmeralda performs tricks.\nfact2: Esmeralda does not adapt to her habitat.\nrule: If Esmeralda either performs tricks or adapts to her habitat (but not both), then she learns quickly.\nconclusion: Esmeralda learns quickly.\n\nfact1: Esmeralda has keen instincts.\nfact2: Esmeralda learns quickly.\nrule: If Esmeralda has keen instincts and learns quickly, then she is experienced.\nconclusion: Esmeralda is experienced.\n\nfact1: Esmeralda responds to commands.\nfact2: Esmeralda has an affectionate personality.\nrule: If a horse responds to commands and has an affectionate personality, then it can establish a connection with its handler.\nconclusion: Esmeralda establishes a connection with her handler.\n\nfact1: Esmeralda is experienced.\nfact2: Esmeralda establishes a connection with her handler.\nrule: If a horse is experienced, then it either builds trust or establishes a connection with its handler.\nconclusion: Esmeralda does not build trust.\n\nfact1: Esmeralda has a gentle nature.\nfact2: Esmeralda does not build trust.\nrule: Every horse that has a gentle nature either builds trust or soothes skittish animals.\nconclusion: Esmeralda can soothe skittish animals.\n\nfact1: Esmeralda has a calm demeanor.\nfact2: Esmeralda can soothe skittish animals.\nrule: If Esmeralda has a calm demeanor, then she can either soothe skittish animals or participate in therapy, but not both.\nconclusion: Esmeralda does not participate in therapy.\n\nTherefore, it is false that Esmeralda participates in therapy. The correct option is: B.",
    "context": "If Caiden has a calm demeanor, then she can either soothe skittish animals or participate in therapy, but not both. If Esmeralda is curious, then she learns quickly. Esmeralda has keen instincts. Esmeralda has strong instincts. If Esmeralda has an even temper or remains calm under pressure, then she can soothe skittish animals. If Esmeralda has a calm demeanor, then she can either soothe skittish animals or participate in therapy, but not both. Lana has a calm demeanor. If Esmeralda has good memory and obeys her handler, then she is experienced. Wes either has strong instincts or adapts to her habitat, but she cannot necessarily do both. Caiden has an affectionate personality. Every horse that has a gentle nature either builds trust or soothes skittish animals. Esmeralda has an affectionate personality. Every horse follows its handler or establishes a connection with them. If a horse responds to commands and has an affectionate personality, then it can establish a connection with its handler. If a horse is experienced, then it either builds trust or establishes a connection with its handler. Esmeralda has a gentle nature. Esmeralda either has strong instincts or adapts to her habitat, but she cannot necessarily do both. If Esmeralda either performs tricks or adapts to her habitat (but not both), then she learns quickly. Esmeralda responds to commands. Lana has strong instincts. Wes responds to commands. Caiden has keen instincts. Lana performs tricks. Esmeralda has a calm demeanor. If Esmeralda has keen instincts and learns quickly, then she is experienced. If a horse listens attentively and remains composed, then it can build trust. Caiden has a gentle nature. Esmeralda performs tricks.",
    "nl2fol": {
      "If Caiden has a calm demeanor, then she can either soothe skittish animals or participate in therapy, but not both.": "has_calm_demeanor(Caiden) → (soothe_skittish_animals(Caiden) ⊕ participate_in_therapy(Caiden))",
      "If Esmeralda is curious, then she learns quickly.": "is_curious(Esmeralda) → learns_quickly(Esmeralda)",
      "Esmeralda has keen instincts.": "has_keen_instinct(Esmeralda)",
      "Esmeralda has strong instincts.": "has_strong_instincts(Esmeralda)",
      "If Esmeralda has an even temper or remains calm under pressure, then she can soothe skittish animals.": "(has_even_temper(Esmeralda) ∨ remains_calm_under_pressure(Esmeralda)) → soothe_skittish_animals(Esmeralda)",
      "If Esmeralda has a calm demeanor, then she can either soothe skittish animals or participate in therapy, but not both.": "has_calm_demeanor(Esmeralda) → (soothe_skittish_animals(Esmeralda) ⊕ participate_in_therapy(Esmeralda))",
      "Lana has a calm demeanor.": "has_calm_demeanor(Lana)",
      "If Esmeralda has good memory and obeys her handler, then she is experienced.": "(has_good_memory(Esmeralda) ∧ obeys_handler(Esmeralda)) → is_experienced(Esmeralda)",
      "Wes either has strong instincts or adapts to her habitat, but she cannot necessarily do both.": "has_strong_instincts(Wes) ⊕ adapts_to_habitat(Wes)",
      "Caiden has an affectionate personality.": "has_affectionate_personality(Caiden)",
      "Every horse that has a gentle nature either builds trust or soothes skittish animals.": "∀x (has_gentle_nature(x) → (build_trust(x) ∨ soothe_skittish_animals(x)))",
      "Esmeralda has an affectionate personality.": "has_affectionate_personality(Esmeralda)",
      "Every horse follows its handler or establishes a connection with them.": "∀x (follows_handler(x) ∨ establish_connection(x))",
      "If a horse responds to commands and has an affectionate personality, then it can establish a connection with its handler.": "∀x ((responds_to_commands(x) ∧ has_affectionate_personality(x)) → establish_connection(x))",
      "If a horse is experienced, then it either builds trust or establishes a connection with its handler.": "∀x (is_experienced(x) → (build_trust(x) ⊕ establish_connection(x)))",
      "Esmeralda has a gentle nature.": "has_gentle_nature(Esmeralda)",
      "Esmeralda either has strong instincts or adapts to her habitat, but she cannot necessarily do both.": "has_strong_instincts(Esmeralda) ⊕ adapts_to_habitat(Esmeralda)",
      "If Esmeralda either performs tricks or adapts to her habitat (but not both), then she learns quickly.": "(performs_tricks(Esmeralda) ⊕ adapts_to_habitat(Esmeralda)) → learns_quickly(Esmeralda)",
      "Esmeralda responds to commands.": "responds_to_commands(Esmeralda)",
      "Lana has strong instincts.": "has_strong_instincts(Lana)",
      "Wes responds to commands.": "responds_to_commands(Wes)",
      "Caiden has keen instincts.": "has_keen_instinct(Caiden)",
      "Lana performs tricks.": "performs_tricks(Lana)",
      "Esmeralda has a calm demeanor.": "has_calm_demeanor(Esmeralda)",
      "If Esmeralda has keen instincts and learns quickly, then she is experienced.": "(has_keen_instinct(Esmeralda) ∧ learns_quickly(Esmeralda)) → is_experienced(Esmeralda)",
      "If a horse listens attentively and remains composed, then it can build trust.": "∀x ((listens_attentively(x) ∧ remains_composed(x)) → build_trust(x))",
      "Caiden has a gentle nature.": "has_gentle_nature(Caiden)",
      "Esmeralda performs tricks.": "performs_tricks(Esmeralda)"
    },
    "conclusion_fol": "participate_in_therapy(Esmeralda)"
  },
  {
    "id": 362,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dr. Gabrielle does not contribute to conservation.",
    "reasoning": "fact1: Gabrielle coordinates fieldwork.\nfact2: Dr. Gabrielle is not highly motivated.\nrule: If Dr. Gabrielle either leads projects or coordinates fieldwork, then she is highly motivated.\nconclusion: Dr. Gabrielle leads projects.\n\nfact1: Dr. Gabrielle leads projects.\nrule: If Dr. Gabrielle leads projects, then she collaborates with her peers and mentors students.\nconclusion: Gabrielle collaborates with her peers.\n\nfact1: Gabrielle dedicates herself to research.\nfact2: Gabrielle collaborates with her peers.\nrule: If Dr. Gabrielle dedicates herself to research, then she gains recognition and collaborates with her peers.\nconclusion: Gabrielle gains recognition.\n\nfact1: Gabrielle does not become an expert in her field.\nrule: If Dr. Gabrielle publishes research or attends conferences, then she becomes an expert in her field.\nconclusion: Dr. Gabrielle does not publish research.\n\nfact1: Dr. Gabrielle does not analyze data.\nfact2: Dr. Gabrielle does not publish research.\nrule: Every biologist who studies animal behavior either analyzes data or publishes research (or both).\nconclusion: Dr. Gabrielle does not study animal behavior.\n\nfact1: Dr. Gabrielle does not study animal behavior.\nfact2: Gabrielle does not establish protected areas.\nrule: Every biologist who protects marine life either studies animal behavior or establishes protected areas (or both).\nconclusion: Gabrielle does not protect marine life.\n\nfact1: Dr. Gabrielle does not make groundbreaking discoveries.\nfact2: Gabrielle does not protect marine life.\nrule: If Dr. Gabrielle is a renowned biologist, then she either makes groundbreaking discoveries or protects marine life.\nconclusion: Dr. Gabrielle is not a renowned biologist.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Dr. Gabrielle does not contribute to conservation. The correct option is: C.",
    "context": "Dr. Gabrielle does not make groundbreaking discoveries. Gabrielle coordinates fieldwork. Gabrielle dedicates herself to research. If Dr. Gabrielle is a renowned biologist, then she either makes groundbreaking discoveries or protects marine life. If Dr. Gabrielle publishes research or attends conferences, then she becomes an expert in her field. Gabrielle does not establish protected areas. Every biologist who studies animal behavior either analyzes data or publishes research (or both). If Dr. Gabrielle leads projects, then she collaborates with her peers and mentors students. If Dr. Gabrielle either leads projects or coordinates fieldwork, then she is highly motivated. Dr. Gabrielle does not analyze data. Gabrielle does not become an expert in her field. If Dr. Gabrielle dedicates herself to research, then she gains recognition and collaborates with her peers. Every biologist who protects marine life either studies animal behavior or establishes protected areas (or both). Dr. Gabrielle is not highly motivated.",
    "nl2fol": {
      "Dr. Gabrielle does not make groundbreaking discoveries.": "¬make_groundbreaking_discoveries(Gabrielle)",
      "Gabrielle coordinates fieldwork.": "coordinate_fieldwork(Gabrielle)",
      "Gabrielle dedicates herself to research.": "dedicate_to_research(Gabrielle)",
      "If Dr. Gabrielle is a renowned biologist, then she either makes groundbreaking discoveries or protects marine life.": "renowned(Gabrielle) → (make_groundbreaking_discoveries(Gabrielle) ∨ protect_marine_life(Gabrielle))",
      "If Dr. Gabrielle publishes research or attends conferences, then she becomes an expert in her field.": "(publish_research(Gabrielle) ∨ attend_conferences(Gabrielle)) → become_expert(Gabrielle)",
      "Gabrielle does not establish protected areas.": "¬establish_protected_areas(Gabrielle)",
      "Every biologist who studies animal behavior either analyzes data or publishes research (or both).": "∀x (study_animal_behavior(x) → (analyze_data(x) ∨ publish_research(x)))",
      "If Dr. Gabrielle leads projects, then she collaborates with her peers and mentors students.": "lead_projects(Gabrielle) → (collaborate_with_peers(Gabrielle) ∧ mentor_students(Gabrielle))",
      "If Dr. Gabrielle either leads projects or coordinates fieldwork, then she is highly motivated.": "(lead_projects(Gabrielle) ⊕ coordinate_fieldwork(Gabrielle)) → is_highly_motivated(Gabrielle)",
      "Dr. Gabrielle does not analyze data.": "¬analyze_data(Gabrielle)",
      "Gabrielle does not become an expert in her field.": "¬become_expert(Gabrielle)",
      "If Dr. Gabrielle dedicates herself to research, then she gains recognition and collaborates with her peers.": "dedicate_to_research(Gabrielle) → (gain_recognition(Gabrielle) ∧ collaborate_with_peers(Gabrielle))",
      "Every biologist who protects marine life either studies animal behavior or establishes protected areas (or both).": "∀x (protect_marine_life(x) → (study_animal_behavior(x) ∨ establish_protected_areas(x)))",
      "Dr. Gabrielle is not highly motivated.": "¬is_highly_motivated(Gabrielle)"
    },
    "conclusion_fol": "¬contribute_to_conservation(Gabrielle)"
  },
  {
    "id": 363,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lenora is pain-free.",
    "reasoning": "fact1: Lenora chooses natural remedies.\nrule: For Lenora, she either chooses natural remedies or avoids additives, but not both, when it comes to her health and wellness.\nconclusion: Lenora does not avoid additives.\n\nfact1: Lenora buys organic.\nfact2: Lenora does not avoid additives.\nrule: If someone either buys organic or avoids additives (but not both), then they shop healthy.\nconclusion: Lenora shops healthy.\n\nfact1: Lenora shops healthy.\nrule: If Lenora shops healthy, then she will read nutrition labels.\nconclusion: Lenora reads nutrition labels.\n\nfact1: Lenora reads nutrition labels.\nfact2: Lenora does not cook at home.\nrule: Anyone who reads nutrition labels or cooks at home eats balanced meals.\nconclusion: Lenora eats balanced meals.\n\nfact1: Lenora eats balanced meals.\nfact2: Lenora does not get enough sleep.\nrule: If Lenora either eats balanced meals or gets enough sleep (but not both), then she takes regular exercise.\nconclusion: Lenora takes regular exercise.\n\nfact1: Lenora takes regular exercise.\nrule: Either Lenora takes regular exercise or she has chronic pain, but not both.\nconclusion: Lenora is pain-free.\n\nfact1: Lenora is pain-free.\nrule: Either Lenora has chronic pain or she is pain-free, but not both.\nconclusion: Lenora is pain-free.\n\nTherefore, it is true that Lenora is pain-free. The correct option is: A.",
    "context": "If Lenora either eats balanced meals or gets enough sleep (but not both), then she takes regular exercise. Coleson does not cook at home. Lenora chooses natural remedies. For Lenora, she either chooses natural remedies or avoids additives, but not both, when it comes to her health and wellness. For Coleson, she either chooses natural remedies or avoids additives, but not both, when it comes to her health and wellness. Anyone who reads nutrition labels or cooks at home eats balanced meals. Either Coleson has chronic pain or she is pain-free, but not both. Either Lenora has chronic pain or she is pain-free, but not both. If Lenora prioritizes wellness, then she makes informed choices and avoids additives. If someone either buys organic or avoids additives (but not both), then they shop healthy. Lenora buys organic. Lenora does not cook at home. Anyone who plans out their meals or tracks their nutrition eats balanced meals. Either Lenora takes regular exercise or she has chronic pain, but not both. Alena does not get enough sleep. If Lenora shops healthy, then she will read nutrition labels. Lenora does not get enough sleep. If Lenora has good habits, then she either practices mindfulness or shops healthy, but not both.",
    "nl2fol": {
      "If Lenora either eats balanced meals or gets enough sleep (but not both), then she takes regular exercise.": "(eats_balanced_meals(Lenora) ⊕ gets_enough_sleep(Lenora)) → takes_regular_exercise(Lenora)",
      "Coleson does not cook at home.": "¬cooks_at_home(Coleson)",
      "Lenora chooses natural remedies.": "chooses_natural_remedies(Lenora)",
      "For Lenora, she either chooses natural remedies or avoids additives, but not both, when it comes to her health and wellness.": "chooses_natural_remedies(Lenora) ⊕ avoids_additives(Lenora)",
      "For Coleson, she either chooses natural remedies or avoids additives, but not both, when it comes to her health and wellness.": "chooses_natural_remedies(Coleson) ⊕ avoids_additives(Coleson)",
      "Anyone who reads nutrition labels or cooks at home eats balanced meals.": "∀x ((reads_nutrition_labels(x) ∨ cooks_at_home(x)) → eats_balanced_meals(x))",
      "Either Coleson has chronic pain or she is pain-free, but not both.": "has_chronic_pain(Coleson) ⊕ is_pain_free(Coleson)",
      "Either Lenora has chronic pain or she is pain-free, but not both.": "has_chronic_pain(Lenora) ⊕ is_pain_free(Lenora)",
      "If Lenora prioritizes wellness, then she makes informed choices and avoids additives.": "prioritizes_wellness(Lenora) → (makes_informed_choices(Lenora) ∧ avoids_additives(Lenora))",
      "If someone either buys organic or avoids additives (but not both), then they shop healthy.": "∀x ((buys_organic(x) ⊕ avoids_additives(x)) → shops_healthy(x))",
      "Lenora buys organic.": "buys_organic(Lenora)",
      "Lenora does not cook at home.": "¬cooks_at_home(Lenora)",
      "Anyone who plans out their meals or tracks their nutrition eats balanced meals.": "∀x ((plans_out_meals(x) ∨ tracks_nutrition(x)) → eats_balanced_meals(x))",
      "Either Lenora takes regular exercise or she has chronic pain, but not both.": "takes_regular_exercise(Lenora) ⊕ has_chronic_pain(Lenora)",
      "Alena does not get enough sleep.": "¬gets_enough_sleep(Alena)",
      "If Lenora shops healthy, then she will read nutrition labels.": "shops_healthy(Lenora) → reads_nutrition_labels(Lenora)",
      "Lenora does not get enough sleep.": "¬gets_enough_sleep(Lenora)",
      "If Lenora has good habits, then she either practices mindfulness or shops healthy, but not both.": "has_good_habits(Lenora) → (practices_mindfulness(Lenora) ⊕ shops_healthy(Lenora))"
    },
    "conclusion_fol": "is_pain_free(Lenora)"
  },
  {
    "id": 364,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Valeria will not be remembered as a hero.",
    "reasoning": "fact1: Valeria stays calm.\nrule: If someone stays calm, they may not always think critically, and vice versa.\nconclusion: Valeria does not think critically.\n\nfact1: Valeria does not prioritize others.\nrule: Valeria prioritizes others or puts others first.\nconclusion: Valeria puts others first.\n\nfact1: Valeria puts others first.\nrule: Anyone who helps those in need or puts others first can act selflessly.\nconclusion: Valeria acts selflessly.\n\nfact1: Valeria does not think critically.\nfact2: Valeria responds flexibly.\nrule: If Valeria either thinks critically or responds flexibly (but not both), then she is able to handle emergencies.\nconclusion: Valeria handles emergencies.\n\nfact1: Valeria handles emergencies.\nfact2: Valeria does not make quick decisions.\nrule: If someone either handles emergencies or makes quick decisions (but not both), then they work under pressure.\nconclusion: Valeria works under pressure.\n\nfact1: Valeria works under pressure.\nfact2: Valeria does not save lives.\nrule: If Valeria works under pressure, then she either saves lives or cares for others (or both).\nconclusion: Valeria cares for others.\n\nfact1: Valeria cares for others.\nfact2: Valeria acts selflessly.\nrule: If Valeria cares for others and acts selflessly, then she will be remembered as a hero.\nconclusion: Valeria will be remembered as a hero.\n\nTherefore, it is false that Valeria will not be remembered as a hero. The correct option is: B.",
    "context": "If someone either handles emergencies or makes quick decisions (but not both), then they work under pressure. Anyone who feels empathy and takes initiative will act selflessly. Kingsley does not prioritize others. If Valeria cares for others and acts selflessly, then she will be remembered as a hero. If someone stays calm, they may not always think critically, and vice versa. Kingsley prioritizes others or puts others first. Valeria does not save lives. Zain does not save lives. Valeria shows empathy or puts others first. Valeria stays calm. Valeria does not make quick decisions. If Valeria works under pressure, then she either saves lives or cares for others (or both). If Kingsley cares for others and acts selflessly, then she will be remembered as a hero. Valeria prioritizes others or puts others first. If Valeria either thinks critically or responds flexibly (but not both), then she is able to handle emergencies. Valeria does not prioritize others. If Kingsley either thinks critically or responds flexibly (but not both), then she is able to handle emergencies. Anyone who helps those in need or puts others first can act selflessly. Valeria responds flexibly. Everyone manages resources or handles emergencies.",
    "nl2fol": {
      "If someone either handles emergencies or makes quick decisions (but not both), then they work under pressure.": "∀x ((handle_emergencies(x) ⊕ make_quick_decisions(x)) → work_under_pressure(x))",
      "Anyone who feels empathy and takes initiative will act selflessly.": "∀x ((feel_empathy(x) ∧ take_initiative(x)) → act_selflessly(x))",
      "Kingsley does not prioritize others.": "¬prioritize_others(Kingsley)",
      "If Valeria cares for others and acts selflessly, then she will be remembered as a hero.": "(care_for_others(Valeria) ∧ act_selflessly(Valeria)) → be_remembered_as_hero(Valeria)",
      "If someone stays calm, they may not always think critically, and vice versa.": "∀x (stay_calm(x) ⊕ think_critically(x))",
      "Kingsley prioritizes others or puts others first.": "prioritize_others(Kingsley) ∨ put_others_first(Kingsley)",
      "Valeria does not save lives.": "¬save_lives(Valeria)",
      "Zain does not save lives.": "¬saves_lives(Zain)",
      "Valeria shows empathy or puts others first.": "show_empathy(Valeria) ∨ put_others_first(Valeria)",
      "Valeria stays calm.": "stay_calm(Valeria)",
      "Valeria does not make quick decisions.": "¬make_quick_decisions(Valeria)",
      "If Valeria works under pressure, then she either saves lives or cares for others (or both).": "work_under_pressure(Valeria) → (save_lives(Valeria) ∨ care_for_others(Valeria))",
      "If Kingsley cares for others and acts selflessly, then she will be remembered as a hero.": "(care_for_others(Kingsley) ∧ act_selflessly(Kingsley)) → be_remembered_as_hero(Kingsley)",
      "Valeria prioritizes others or puts others first.": "prioritize_others(Valeria) ∨ put_others_first(Valeria)",
      "If Valeria either thinks critically or responds flexibly (but not both), then she is able to handle emergencies.": "(think_critically(Valeria) ⊕ respond_flexibly(Valeria)) → handle_emergencies(Valeria)",
      "Valeria does not prioritize others.": "¬prioritize_others(Valeria)",
      "If Kingsley either thinks critically or responds flexibly (but not both), then she is able to handle emergencies.": "(think_critically(Kingsley) ⊕ respond_flexibly(Kingsley)) → handle_emergencies(Kingsley)",
      "Anyone who helps those in need or puts others first can act selflessly.": "∀x ((help_those_in_need(x) ∨ put_others_first(x)) → act_selflessly(x))",
      "Valeria responds flexibly.": "respond_flexibly(Valeria)",
      "Everyone manages resources or handles emergencies.": "∀x (manage_resources(x) ∨ handle_emergencies(x))"
    },
    "conclusion_fol": "¬be_remembered_as_hero(Valeria)"
  },
  {
    "id": 365,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Messiah creates joyful experiences.",
    "reasoning": "fact1: Messiah values tradition.\nrule: Messiah either values tradition or has passion, but not both.\nconclusion: Messiah does not have passion.\n\nfact1: Messiah does not have passion.\nfact2: Messiah does not think creatively.\nrule: Everyone who tells compelling stories has passion and thinks creatively.\nconclusion: Messiah does not tell compelling stories.\n\nfact1: Messiah does not tell compelling stories.\nfact2: Messiah does not possess charisma.\nrule: Everyone who speaks wittily either tells compelling stories or possesses charisma (or both).\nconclusion: Messiah does not speak wittily.\n\nfact1: Messiah does not speak wittily.\nrule: For Messiah, either he has infectious laughter or he speaks wittily, but not both.\nconclusion: Messiah has infectious laughter.\n\nfact1: Messiah has infectious laughter.\nfact2: Messiah does not love to dance.\nrule: Anyone who has infectious laughter or loves to dance is outgoing.\nconclusion: Messiah is outgoing.\n\nfact1: Messiah is outgoing.\nfact2: Messiah enjoys good music.\nrule: If Messiah is outgoing, then he hosts social events and enjoys good music.\nconclusion: Messiah hosts social events.\n\nfact1: Messiah hosts social events.\nfact2: Messiah does not bring people together.\nrule: For all humans, if they host social events or bring people together (or both), then they create joyful experiences.\nconclusion: Messiah creates joyful experiences.\n\nTherefore, it is true that Messiah creates joyful experiences. The correct option is: A.",
    "context": "For Saoirse, either he has infectious laughter or he speaks wittily, but not both. Messiah values tradition. Selena does not love to dance. Anyone who enjoys meeting people or has good energy can host social events. Messiah does not possess charisma. Messiah does not think creatively. Messiah does not love to dance. Messiah does not bring people together. Everyone who speaks wittily either tells compelling stories or possesses charisma (or both). If someone inspires others, then they have passion and take calculated risks. Saoirse values tradition. If Messiah is outgoing, then he hosts social events and enjoys good music. Selena does not possess charisma. Messiah enjoys good music. If Saoirse is outgoing, then he hosts social events and enjoys good music. Demi enjoys good music. For Messiah, either he has infectious laughter or he speaks wittily, but not both. Everyone who tells compelling stories has passion and thinks creatively. Demi either values tradition or has passion, but not both. Messiah either values tradition or has passion, but not both. For all humans, if they host social events or bring people together (or both), then they create joyful experiences. Anyone who has infectious laughter or loves to dance is outgoing. Messiah either makes jokes or speaks wittily. Selena does not bring people together.",
    "nl2fol": {
      "For Saoirse, either he has infectious laughter or he speaks wittily, but not both.": "speaks_wittily(Saoirse) ⊕ has_infectious_laughter(Saoirse)",
      "Messiah values tradition.": "values_tradition(Messiah)",
      "Selena does not love to dance.": "¬loves_to_dance(Selena)",
      "Anyone who enjoys meeting people or has good energy can host social events.": "∀x ((enjoys_meeting_people(x) ∨ has_good_energy(x)) → host_social_events(x))",
      "Messiah does not possess charisma.": "¬possess_charisma(Messiah)",
      "Messiah does not think creatively.": "¬think_creatively(Messiah)",
      "Messiah does not love to dance.": "¬loves_to_dance(Messiah)",
      "Messiah does not bring people together.": "¬bring_people_together(Messiah)",
      "Everyone who speaks wittily either tells compelling stories or possesses charisma (or both).": "∀x (speaks_wittily(x) → (tell_compelling_stories(x) ∨ possess_charisma(x)))",
      "If someone inspires others, then they have passion and take calculated risks.": "∀x (inspire_others(x) → (have_passion(x) ∧ take_calculated_risks(x)))",
      "Saoirse values tradition.": "values_tradition(Saoirse)",
      "If Messiah is outgoing, then he hosts social events and enjoys good music.": "outgoing(Messiah) → (host_social_events(Messiah) ∧ enjoy_good_music(Messiah))",
      "Selena does not possess charisma.": "¬possess_charisma(Selena)",
      "Messiah enjoys good music.": "enjoy_good_music(Messiah)",
      "If Saoirse is outgoing, then he hosts social events and enjoys good music.": "outgoing(Saoirse) → (host_social_events(Saoirse) ∧ enjoy_good_music(Saoirse))",
      "Demi enjoys good music.": "enjoy_good_music(Demi)",
      "For Messiah, either he has infectious laughter or he speaks wittily, but not both.": "speaks_wittily(Messiah) ⊕ has_infectious_laughter(Messiah)",
      "Everyone who tells compelling stories has passion and thinks creatively.": "∀x (tell_compelling_stories(x) → (have_passion(x) ∧ think_creatively(x)))",
      "Demi either values tradition or has passion, but not both.": "values_tradition(Demi) ⊕ have_passion(Demi)",
      "Messiah either values tradition or has passion, but not both.": "values_tradition(Messiah) ⊕ have_passion(Messiah)",
      "For all humans, if they host social events or bring people together (or both), then they create joyful experiences.": "∀x ((host_social_events(x) ∨ bring_people_together(x)) → create_joyful_experiences(x))",
      "Anyone who has infectious laughter or loves to dance is outgoing.": "∀x ((has_infectious_laughter(x) ∨ loves_to_dance(x)) → outgoing(x))",
      "Messiah either makes jokes or speaks wittily.": "makes_jokes(Messiah) ∨ speaks_wittily(Messiah)",
      "Selena does not bring people together.": "¬bring_people_together(Selena)"
    },
    "conclusion_fol": "create_joyful_experiences(Messiah)"
  },
  {
    "id": 366,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Keanu does not have large antlers.",
    "reasoning": "fact1: Keanu is active.\nfact2: Keanu has strong senses.\nrule: All active deer have strong senses and good vision.\nconclusion: Keanu has good vision.\n\nfact1: Keanu has good vision.\nrule: If Keanu has large ears or good vision, then he can live in the forest.\nconclusion: Keanu lives in the forest.\n\nfact1: Keanu is calm.\nfact2: Keanu is not playful.\nrule: If Keanu is calm, then he is either playful or has a gentle nature, but not both.\nconclusion: Keanu has a gentle nature.\n\nfact1: Keanu has a gentle nature.\nrule: A deer either has a gentle nature or explores the wild, but not both is not necessarily true.\nconclusion: Keanu does not explore the wild.\n\nfact1: Keanu lives in the forest.\nrule: All deer that live in the forest have keen senses.\nconclusion: Keanu has keen senses.\n\nfact1: Keanu does not explore the wild.\nrule: Any deer that is surefooted or can leap far can explore the wild.\nconclusion: Keanu is not capable of leaping far.\n\nfact1: Keanu has keen senses.\nrule: If a deer has keen senses, it may not necessarily run quickly, and vice versa.\nconclusion: Keanu cannot run quickly.\n\nfact1: Keanu has sharp hooves.\nfact2: Keanu cannot run quickly.\nrule: Any deer that has sharp hooves and agile legs can run quickly.\nconclusion: Keanu does not have agile legs.\n\nfact1: Keanu is not capable of leaping far.\nfact2: Keanu does not have agile legs.\nrule: If Keanu has large antlers, then he is either capable of leaping far or has agile legs, but not both.\nconclusion: Keanu does not have large antlers.\n\nTherefore, it is true that Keanu does not have large antlers. The correct option is: A.",
    "context": "Keanu has sharp hooves. All active deer have strong senses and good vision. All deer with powerful muscles and a lightweight build can run quickly. Keanu is calm. Florence is active. If a deer has keen senses, it may not necessarily run quickly, and vice versa. A deer either has a gentle nature or explores the wild, but not both is not necessarily true. All deer that live in the forest have keen senses. Keanu is not playful. Any deer that is surefooted or can leap far can explore the wild. Zayd has sharp hooves. Any deer that has sharp hooves and agile legs can run quickly. If Keanu has large ears or good vision, then he can live in the forest. Keanu has strong senses. Zayd is not playful. Keanu is active. If Keanu is calm, then he is either playful or has a gentle nature, but not both. Zayd has strong senses. If Keanu is fleet, then he is either capable of leaping far or is powerful, but not both. If Keanu has large antlers, then he is either capable of leaping far or has agile legs, but not both.",
    "nl2fol": {
      "Keanu has sharp hooves.": "has_sharp_hooves(Keanu)",
      "All active deer have strong senses and good vision.": "∀x (is_active(x) → (has_strong_senses(x) ∧ has_good_vision(x)))",
      "All deer with powerful muscles and a lightweight build can run quickly.": "∀x ((has_powerful_muscles(x) ∧ is_lightweight(x)) → runs_quickly(x))",
      "Keanu is calm.": "is_calm(Keanu)",
      "Florence is active.": "is_active(Florence)",
      "If a deer has keen senses, it may not necessarily run quickly, and vice versa.": "∀x (has_keen_senses(x) ⊕ runs_quickly(x))",
      "A deer either has a gentle nature or explores the wild, but not both is not necessarily true.": "∀x (has_gentle_nature(x) ⊕ explores_wild(x))",
      "All deer that live in the forest have keen senses.": "∀x (lives_in_forest(x) → has_keen_senses(x))",
      "Keanu is not playful.": "¬is_playful(Keanu)",
      "Any deer that is surefooted or can leap far can explore the wild.": "∀x ((is_surefooted(x) ∨ can_leap_far(x)) → explores_wild(x))",
      "Zayd has sharp hooves.": "has_sharp_hooves(Zayd)",
      "Any deer that has sharp hooves and agile legs can run quickly.": "∀x ((has_sharp_hooves(x) ∧ has_agile_legs(x)) → runs_quickly(x))",
      "If Keanu has large ears or good vision, then he can live in the forest.": "(has_large_ears(Keanu) ∨ has_good_vision(Keanu)) → lives_in_forest(Keanu)",
      "Keanu has strong senses.": "has_strong_senses(Keanu)",
      "Zayd is not playful.": "¬is_playful(Zayd)",
      "Keanu is active.": "is_active(Keanu)",
      "If Keanu is calm, then he is either playful or has a gentle nature, but not both.": "is_calm(Keanu) → (is_playful(Keanu) ⊕ has_gentle_nature(Keanu))",
      "Zayd has strong senses.": "has_strong_senses(Zayd)",
      "If Keanu is fleet, then he is either capable of leaping far or is powerful, but not both.": "is_fleet(Keanu) → (can_leap_far(Keanu) ⊕ is_powerful(Keanu))",
      "If Keanu has large antlers, then he is either capable of leaping far or has agile legs, but not both.": "has_large_antlers(Keanu) → (can_leap_far(Keanu) ⊕ has_agile_legs(Keanu))"
    },
    "conclusion_fol": "¬has_large_antlers(Keanu)"
  },
  {
    "id": 367,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fallon did not become an expert.",
    "reasoning": "fact1: Fallon does not analyze data.\nfact2: Fallon does not draw accurate conclusions.\nrule: If Fallon examines antiquities, then she either analyzes data or draws accurate conclusions, but not both.\nconclusion: Fallon does not examine antiquities.\n\nfact1: Fallon does not document her findings.\nrule: If Fallon documents her findings, she does not necessarily study their significance, and if Fallon studies the significance of her finds, she does not necessarily document them.\nconclusion: Fallon studies the significance of the ancient artifacts.\n\nfact1: Fallon does not examine antiquities.\nrule: Fallon examines antiquities or interprets her finds correctly.\nconclusion: Fallon interprets her finds correctly.\n\nfact1: Fallon interprets her finds correctly.\nrule: Fallon either explores historical sites or interprets her finds correctly, but not both.\nconclusion: Fallon does not explore historical sites.\n\nfact1: Fallon does not explore historical sites.\nrule: Fallon either explores historical sites or uncovers ancient artifacts.\nconclusion: Fallon uncovers ancient artifacts.\n\nfact1: Fallon uncovers ancient artifacts.\nfact2: Fallon studies the significance of the ancient artifacts.\nrule: If Fallon uncovers ancient artifacts and studies their significance, then she will become an expert.\nconclusion: Fallon did not become an expert.\n\nTherefore, it is false that Fallon did not become an expert. The correct option is: B.",
    "context": "If Fallon documents her findings, she does not necessarily study their significance, and if Fallon studies the significance of her finds, she does not necessarily document them. If Fallon examines antiquities, then she either analyzes data or draws accurate conclusions, but not both. Fallon does not draw accurate conclusions. Fallon either explores historical sites or uncovers ancient artifacts. If Fallon uncovers ancient artifacts and studies their significance, then she will become an expert. Fallon either explores historical sites or interprets her finds correctly, but not both. If Fallon has an academic background or gains field experience, then she can interpret her finds correctly. Fallon does not analyze data. Dane does not document her findings. If Richard uncovers ancient artifacts and studies their significance, then she will become an expert. Fallon examines antiquities or interprets her finds correctly. If Fallon values history, then she examines antiquities. If Fallon is an archaeologist, then she either excavates ruins or explores historical sites, but not both. Fallon does not document her findings. If someone searches archaeological sites and uses specialized equipment, then they can uncover ancient artifacts.",
    "nl2fol": {
      "If Fallon documents her findings, she does not necessarily study their significance, and if Fallon studies the significance of her finds, she does not necessarily document them.": "document_their_findings(Fallon) ⊕ study_their_significance(Fallon)",
      "If Fallon examines antiquities, then she either analyzes data or draws accurate conclusions, but not both.": "examines_antiquities(Fallon) → (analyzes_data(Fallon) ⊕ draws_accurate_conclusions(Fallon))",
      "Fallon does not draw accurate conclusions.": "¬draws_accurate_conclusions(Fallon)",
      "Fallon either explores historical sites or uncovers ancient artifacts.": "explores_historical_sites(Fallon) ∨ uncover_ancient_artifacts(Fallon)",
      "If Fallon uncovers ancient artifacts and studies their significance, then she will become an expert.": "(uncover_ancient_artifacts(Fallon) ∧ study_their_significance(Fallon)) → become_an_expert(Fallon)",
      "Fallon either explores historical sites or interprets her finds correctly, but not both.": "explores_historical_sites(Fallon) ⊕ interprets_finds_correctly(Fallon)",
      "If Fallon has an academic background or gains field experience, then she can interpret her finds correctly.": "(has_academic_background(Fallon) ∨ gains_field_experience(Fallon)) → interprets_finds_correctly(Fallon)",
      "Fallon does not analyze data.": "¬analyzes_data(Fallon)",
      "Dane does not document her findings.": "¬documents_findings(Dane)",
      "If Richard uncovers ancient artifacts and studies their significance, then she will become an expert.": "(uncover_ancient_artifacts(Richard) ∧ study_their_significance(Richard)) → become_an_expert(Richard)",
      "Fallon examines antiquities or interprets her finds correctly.": "examines_antiquities(Fallon) ∨ interprets_finds_correctly(Fallon)",
      "If Fallon values history, then she examines antiquities.": "values_history(Fallon) → examines_antiquities(Fallon)",
      "If Fallon is an archaeologist, then she either excavates ruins or explores historical sites, but not both.": "is_archaeologist(Fallon) → (excavates_ruins(Fallon) ⊕ explores_historical_sites(Fallon))",
      "Fallon does not document her findings.": "¬document_their_findings(Fallon)",
      "If someone searches archaeological sites and uses specialized equipment, then they can uncover ancient artifacts.": "∀x ((searches_archaeological_sites(x) ∧ uses_specialized_equipment(x)) → uncover_ancient_artifacts(x))"
    },
    "conclusion_fol": "¬become_an_expert(Fallon)"
  },
  {
    "id": 368,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ayla does not work in research.",
    "reasoning": "fact1: Ayla can solve complex problems.\nfact2: Ayla collaborates with others.\nrule: If Ayla can solve complex problems, then she has a creative mind and collaborates with others.\nconclusion: Ayla has a creative mind.\n\nfact1: Ayla thinks outside the box.\nrule: If Ayla thinks outside the box, then she will design new products.\nconclusion: Ayla designs new products.\n\nfact1: Ayla has a creative mind.\nfact2: Ayla designs new products.\nrule: If Ayla has a creative mind, then she either designs new products or engineers new technologies, but not both.\nconclusion: Ayla does not engineer new technologies.\n\nfact1: Ayla does not engineer new technologies.\nrule: Ayla either pursues innovation or engineers new technologies.\nconclusion: Ayla pursues innovation.\n\nfact1: Ayla is inquisitive.\nfact2: Ayla does not seek knowledge.\nrule: If Ayla is inquisitive, then she is either passionate about discovery or seeks knowledge (but not both).\nconclusion: Ayla is passionate about discovery.\n\nfact1: Ayla pursues innovation.\nfact2: Ayla does not receive an award.\nrule: If Ayla pursues innovation, then she either publishes papers or receives an award (or both).\nconclusion: Ayla publishes papers.\n\nfact1: Ayla is passionate about discovery.\nfact2: Ayla publishes papers.\nrule: If Ayla is passionate about discovery, then she has an advanced degree and publishes papers.\nconclusion: Ayla has an advanced degree.\n\nfact1: Ayla has an advanced degree.\nrule: If Ayla has an advanced degree, then she works in research.\nconclusion: Ayla does not work in research.\n\nTherefore, it is false that Ayla does not work in research. The correct option is: B.",
    "context": "If Cassidy has an advanced degree, then she works in research. If Ayla can solve complex problems, then she has a creative mind and collaborates with others. Ayla either pursues innovation or engineers new technologies. Ayla does not receive an award. If Ayla is inquisitive, then she is either passionate about discovery or seeks knowledge (but not both). If Ayla enjoys learning, then she is passionate about discovery and mentors others. If Ayla pursues innovation, then she either publishes papers or receives an award (or both). Ayla thinks outside the box. If Ayla thinks critically, then she has a creative mind. Angie thinks outside the box. If Cassidy thinks outside the box, then she will design new products. If Ayla has a creative mind, then she either designs new products or engineers new technologies, but not both. If Ayla excels in science, then she will engineer new technologies. Ayla collaborates with others. Cassidy can solve complex problems. If Ayla is passionate about discovery, then she has an advanced degree and publishes papers. If Ayla thinks outside the box, then she will design new products. Cassidy is inquisitive. If Angie can solve complex problems, then she has a creative mind and collaborates with others. Ayla does not seek knowledge. Ayla is inquisitive. If Angie has a creative mind, then she either designs new products or engineers new technologies, but not both. Superstar does not seek knowledge. If Ayla has an advanced degree, then she works in research. Everyone who values progress either pursues innovation or mentors others (or both). If Superstar pursues innovation, then she either publishes papers or receives an award (or both). If Superstar is inquisitive, then she is either passionate about discovery or seeks knowledge (but not both). Ayla can solve complex problems.",
    "nl2fol": {
      "If Cassidy has an advanced degree, then she works in research.": "has_advanced_degree(Cassidy) → works_in_research(Cassidy)",
      "If Ayla can solve complex problems, then she has a creative mind and collaborates with others.": "solve_complex_problems(Ayla) → (collaborate_with_others(Ayla) ∧ has_creative_mind(Ayla))",
      "Ayla either pursues innovation or engineers new technologies.": "pursues_innovation(Ayla) ∨ engineers_new_technologies(Ayla)",
      "Ayla does not receive an award.": "¬receives_award(Ayla)",
      "If Ayla is inquisitive, then she is either passionate about discovery or seeks knowledge (but not both).": "is_inquisitive(Ayla) → (passionate_about_discovery(Ayla) ⊕ seeks_knowledge(Ayla))",
      "If Ayla enjoys learning, then she is passionate about discovery and mentors others.": "enjoys_learning(Ayla) → (passionate_about_discovery(Ayla) ∧ mentors_others(Ayla))",
      "If Ayla pursues innovation, then she either publishes papers or receives an award (or both).": "pursues_innovation(Ayla) → (publish_papers(Ayla) ∨ receives_award(Ayla))",
      "Ayla thinks outside the box.": "thinks_outside_box(Ayla)",
      "If Ayla thinks critically, then she has a creative mind.": "thinks_critically(Ayla) → has_creative_mind(Ayla)",
      "Angie thinks outside the box.": "thinks_outside_box(Angie)",
      "If Cassidy thinks outside the box, then she will design new products.": "thinks_outside_box(Cassidy) → designs_new_products(Cassidy)",
      "If Ayla has a creative mind, then she either designs new products or engineers new technologies, but not both.": "has_creative_mind(Ayla) → (designs_new_products(Ayla) ⊕ engineers_new_technologies(Ayla))",
      "If Ayla excels in science, then she will engineer new technologies.": "excels_in_science(Ayla) → engineers_new_technologies(Ayla)",
      "Ayla collaborates with others.": "collaborate_with_others(Ayla)",
      "Cassidy can solve complex problems.": "solve_complex_problems(Cassidy)",
      "If Ayla is passionate about discovery, then she has an advanced degree and publishes papers.": "passionate_about_discovery(Ayla) → (has_advanced_degree(Ayla) ∧ publish_papers(Ayla))",
      "If Ayla thinks outside the box, then she will design new products.": "thinks_outside_box(Ayla) → designs_new_products(Ayla)",
      "Cassidy is inquisitive.": "inquisitive(Cassidy)",
      "If Angie can solve complex problems, then she has a creative mind and collaborates with others.": "solve_complex_problems(Angie) → (collaborate_with_others(Angie) ∧ has_creative_mind(Angie))",
      "Ayla does not seek knowledge.": "¬seeks_knowledge(Ayla)",
      "Ayla is inquisitive.": "is_inquisitive(Ayla)",
      "If Angie has a creative mind, then she either designs new products or engineers new technologies, but not both.": "has_creative_mind(Angie) → (designs_new_products(Angie) ⊕ engineers_new_technologies(Angie))",
      "Superstar does not seek knowledge.": "¬seek_knowledge(Superstar)",
      "If Ayla has an advanced degree, then she works in research.": "has_advanced_degree(Ayla) → works_in_research(Ayla)",
      "Everyone who values progress either pursues innovation or mentors others (or both).": "∀x (values_progress(x) → (pursues_innovation(x) ∨ mentors_others(x)))",
      "If Superstar pursues innovation, then she either publishes papers or receives an award (or both).": "pursues_innovation(Superstar) → (publish_papers(Superstar) ∨ receives_award(Superstar))",
      "If Superstar is inquisitive, then she is either passionate about discovery or seeks knowledge (but not both).": "is_inquisitive(Superstar) → (passionate_about_discovery(Superstar) ⊕ seeks_knowledge(Superstar))",
      "Ayla can solve complex problems.": "solve_complex_problems(Ayla)"
    },
    "conclusion_fol": "¬works_in_research(Ayla)"
  },
  {
    "id": 369,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dr. Yareli Hernandez does not gain international recognition.",
    "reasoning": "fact1: Dr. Yareli Hernandez is empathetic.\nfact2: Yareli is respectful of boundaries.\nrule: If Dr. Yareli Hernandez is empathetic, then she is either respectful of boundaries or listens actively (but not both).\nconclusion: Yareli does not listen actively.\n\nfact1: Yareli does not listen actively.\nfact2: Yareli does not build strong relationships.\nrule: Any person who listens actively or cares for others can build strong relationships.\nconclusion: Dr. Yareli Hernandez does not care for others.\n\nfact1: Yareli leads medical teams.\nfact2: Yareli does not build trust with patients.\nrule: If Dr. Yareli Hernandez leads medical teams, then she either communicates effectively or builds trust with patients.\nconclusion: Yareli communicates effectively.\n\nfact1: Dr. Yareli Hernandez does not care for others.\nrule: Dr. Yareli Hernandez cares for others or puts patients first.\nconclusion: Yareli puts her patients first.\n\nfact1: Yareli puts her patients first.\nrule: Anyone who puts their patients first is a dedicated doctor.\nconclusion: Dr. Yareli Hernandez is a dedicated doctor.\n\nfact1: Dr. Yareli Hernandez is a dedicated doctor.\nrule: If Dr. Yareli Hernandez is a dedicated doctor, then she gains international recognition and improves patients' lives.\nconclusion: Dr. Yareli Hernandez does not gain international recognition.\n\nTherefore, it is false that Dr. Yareli Hernandez does not gain international recognition. The correct option is: B.",
    "context": "Yareli is respectful of boundaries. Yareli leads medical teams. Yareli does not build trust with patients. If Dr. Yareli Hernandez is empathetic, then she is either respectful of boundaries or listens actively (but not both). If Dr. Yareli Hernandez leads medical teams, then she either communicates effectively or builds trust with patients. If Dr. Yareli Hernandez is a dedicated doctor, then she gains international recognition and improves patients' lives. Any person who listens actively or cares for others can build strong relationships. Dr. Yareli Hernandez is empathetic. Dr. Yareli Hernandez cares for others or puts patients first. Anyone who puts their patients first is a dedicated doctor. Yareli does not build strong relationships.",
    "nl2fol": {
      "Yareli is respectful of boundaries.": "respects_boundaries(Yareli)",
      "Yareli leads medical teams.": "leads_medical_teams(Yareli)",
      "Yareli does not build trust with patients.": "¬builds_trust(Yareli)",
      "If Dr. Yareli Hernandez is empathetic, then she is either respectful of boundaries or listens actively (but not both).": "is_empathetic(Yareli) → (respects_boundaries(Yareli) ⊕ listens_actively(Yareli))",
      "If Dr. Yareli Hernandez leads medical teams, then she either communicates effectively or builds trust with patients.": "leads_medical_teams(Yareli) → (communicates_effectively(Yareli) ∨ builds_trust(Yareli))",
      "If Dr. Yareli Hernandez is a dedicated doctor, then she gains international recognition and improves patients' lives.": "dedicated_doctor(Yareli) → (gain_international_recognition(Yareli) ∧ improve_patients_lives(Yareli))",
      "Any person who listens actively or cares for others can build strong relationships.": "∀x ((listens_actively(x) ∨ cares_for_others(x)) → builds_strong_relationships(x))",
      "Dr. Yareli Hernandez is empathetic.": "is_empathetic(Yareli)",
      "Dr. Yareli Hernandez cares for others or puts patients first.": "cares_for_others(Yareli) ∨ puts_patients_first(Yareli)",
      "Anyone who puts their patients first is a dedicated doctor.": "∀x (puts_patients_first(x) → dedicated_doctor(x))",
      "Yareli does not build strong relationships.": "¬builds_strong_relationships(Yareli)"
    },
    "conclusion_fol": "¬gain_international_recognition(Yareli)"
  },
  {
    "id": 370,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Anthony is not uninformed about ancient cultures.",
    "reasoning": "fact1: Anthony does not meet deadlines.\nrule: Anthony meets deadlines or faces challenges.\nconclusion: Anthony faces challenges.\n\nfact1: Anthony does not adapt quickly to new situations.\nrule: Anthony is either resilient or adapts quickly to new situations, but not both.\nconclusion: Anthony is resilient.\n\nfact1: Anthony fails his courses.\nfact2: Anthony is disorganized.\nrule: If Anthony fails his courses, then he either lacks interest in the past or is disorganized.\nconclusion: Anthony does not lack interest in the past.\n\nfact1: Anthony faces challenges.\nfact2: Anthony is resilient.\nrule: If Anthony faces challenges, then he is either resilient or self-motivated (but not both).\nconclusion: Anthony is not self-motivated.\n\nfact1: Anthony is not self-motivated.\nrule: If Anthony has no formal education, then he is self-motivated and passionate about learning.\nconclusion: Anthony has formal education.\n\nfact1: Anthony does not lack interest in the past.\nfact2: Anthony has formal education.\nrule: If Anthony is ignorant of history, then he either lacks interest in the past or has no formal education.\nconclusion: Anthony is not ignorant of history.\n\nfact1: Anthony is not ignorant of history.\nrule: Anthony is either knowledgeable about ancient cultures or ignorant of history.\nconclusion: Anthony is knowledgeable about ancient cultures.\n\nfact1: Anthony is knowledgeable about ancient cultures.\nrule: Either Anthony is knowledgeable about ancient cultures or he is uninformed about ancient cultures, but not both.\nconclusion: Anthony is not uninformed about ancient cultures.\n\nTherefore, it is true that Anthony is not uninformed about ancient cultures. The correct option is: A.",
    "context": "If Willow has no formal education, then he is self-motivated and passionate about learning. If Anthony has no formal education, then he is self-motivated and passionate about learning. Anthony is either resilient or adapts quickly to new situations, but not both. If Anthony faces challenges, then he is either resilient or self-motivated (but not both). Anthony is disorganized. Francis meets deadlines or faces challenges. Willow fails his courses. Leo does not adapt quickly to new situations. Anthony does not meet deadlines. If Leo fails his courses, then he either lacks interest in the past or is disorganized. Francis is either resilient or adapts quickly to new situations, but not both. Anthony fails his courses. Willow does not meet deadlines. Anthony sets goals or is self-motivated. Anthony does not adapt quickly to new situations. If Leo faces challenges, then he is either resilient or self-motivated (but not both). Either Anthony is knowledgeable about ancient cultures or he is uninformed about ancient cultures, but not both. If Anthony is ignorant of history, then he either lacks interest in the past or has no formal education. If Anthony fails his courses, then he either lacks interest in the past or is disorganized. Anthony meets deadlines or faces challenges. Anthony is either knowledgeable about ancient cultures or ignorant of history. Willow is either knowledgeable about ancient cultures or ignorant of history. Anthony values learning or lacks interest in the past.",
    "nl2fol": {
      "If Willow has no formal education, then he is self-motivated and passionate about learning.": "has_no_formal_education(Willow) → (self_motivated(Willow) ∧ passionate_about_learning(Willow))",
      "If Anthony has no formal education, then he is self-motivated and passionate about learning.": "has_no_formal_education(Anthony) → (self_motivated(Anthony) ∧ passionate_about_learning(Anthony))",
      "Anthony is either resilient or adapts quickly to new situations, but not both.": "resilient(Anthony) ⊕ adapts_quickly(Anthony)",
      "If Anthony faces challenges, then he is either resilient or self-motivated (but not both).": "faces_challenges(Anthony) → (resilient(Anthony) ⊕ self_motivated(Anthony))",
      "Anthony is disorganized.": "is_disorganized(Anthony)",
      "Francis meets deadlines or faces challenges.": "meets_deadlines(Francis) ∨ faces_challenges(Francis)",
      "Willow fails his courses.": "fails_courses(Willow)",
      "Leo does not adapt quickly to new situations.": "¬adapts_quickly(Leo)",
      "Anthony does not meet deadlines.": "¬meets_deadlines(Anthony)",
      "If Leo fails his courses, then he either lacks interest in the past or is disorganized.": "fails_courses(Leo) → (lacks_interest_in_past(Leo) ⊕ is_disorganized(Leo))",
      "Francis is either resilient or adapts quickly to new situations, but not both.": "resilient(Francis) ⊕ adapts_quickly(Francis)",
      "Anthony fails his courses.": "fails_courses(Anthony)",
      "Willow does not meet deadlines.": "¬meets_deadlines(Willow)",
      "Anthony sets goals or is self-motivated.": "sets_goals(Anthony) ∨ self_motivated(Anthony)",
      "Anthony does not adapt quickly to new situations.": "¬adapts_quickly(Anthony)",
      "If Leo faces challenges, then he is either resilient or self-motivated (but not both).": "faces_challenges(Leo) → (resilient(Leo) ⊕ self_motivated(Leo))",
      "Either Anthony is knowledgeable about ancient cultures or he is uninformed about ancient cultures, but not both.": "knowledgeable_about_ancient_cultures(Anthony) ⊕ uninformed_about_ancient_cultures(Anthony)",
      "If Anthony is ignorant of history, then he either lacks interest in the past or has no formal education.": "ignorant_of_history(Anthony) → (lacks_interest_in_past(Anthony) ∨ has_no_formal_education(Anthony))",
      "If Anthony fails his courses, then he either lacks interest in the past or is disorganized.": "fails_courses(Anthony) → (lacks_interest_in_past(Anthony) ⊕ is_disorganized(Anthony))",
      "Anthony meets deadlines or faces challenges.": "meets_deadlines(Anthony) ∨ faces_challenges(Anthony)",
      "Anthony is either knowledgeable about ancient cultures or ignorant of history.": "knowledgeable_about_ancient_cultures(Anthony) ∨ ignorant_of_history(Anthony)",
      "Willow is either knowledgeable about ancient cultures or ignorant of history.": "knowledgeable_about_ancient_cultures(Willow) ∨ ignorant_of_history(Willow)",
      "Anthony values learning or lacks interest in the past.": "values_learning(Anthony) ∨ lacks_interest_in_past(Anthony)"
    },
    "conclusion_fol": "¬uninformed_about_ancient_cultures(Anthony)"
  },
  {
    "id": 371,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tate disapproves of ragwort.",
    "reasoning": "fact1: Tate protects wildlife.\nrule: If someone protects wildlife, then they respect nature.\nconclusion: Tate respects nature.\n\nfact1: Tate does not observe animal behavior.\nrule: For Tate, he either studies biodiversity or observes animal behavior, but it's possible he does both.\nconclusion: Tate studies biodiversity.\n\nfact1: Tate studies biodiversity.\nrule: For any person, they either study biodiversity or understand pollinators, but it's possible they do both.\nconclusion: Tate does not understand the importance of pollinators.\n\nfact1: Tate respects nature.\nfact2: Tate does not understand the importance of pollinators.\nrule: Everyone who respects nature either understands the importance of pollinators or values the ecosystem (or both).\nconclusion: Tate values the ecosystem.\n\nfact1: Tate values the ecosystem.\nrule: If Tate values the ecosystem, then he will appreciate ragwort.\nconclusion: Tate appreciates ragwort.\n\nfact1: Tate appreciates ragwort.\nrule: Tate either appreciates ragwort or disapproves of it, but not both.\nconclusion: Tate does not disapprove of ragwort.\n\nTherefore, it is false that Tate disapproves of ragwort. The correct option is: B.",
    "context": "Tate does not observe animal behavior. For any person, they either study biodiversity or understand pollinators, but it's possible they do both. If Tate is outdoorsy, then he either values conservation or the ecosystem, but not both. Cora either appreciates ragwort or disapproves of it, but not both. If Tate explores the outdoors, then he understands pollinators and loves wildflowers. Mallory protects wildlife. For Tate, he either studies biodiversity or observes animal behavior, but it's possible he does both. Tate protects wildlife. If someone protects wildlife, then they respect nature. Tate either appreciates ragwort or disapproves of it, but not both. Everyone who respects nature either understands the importance of pollinators or values the ecosystem (or both). If Tate values the ecosystem, then he will appreciate ragwort.",
    "nl2fol": {
      "Tate does not observe animal behavior.": "¬observes_animal_behavior(Tate)",
      "For any person, they either study biodiversity or understand pollinators, but it's possible they do both.": "∀x (studies_biodiversity(x) ⊕ understands_pollinators(x))",
      "If Tate is outdoorsy, then he either values conservation or the ecosystem, but not both.": "is_outdoorsy(Tate) → (values_conservation(Tate) ⊕ values_ecosystem(Tate))",
      "Cora either appreciates ragwort or disapproves of it, but not both.": "appreciates_ragwort(Cora) ⊕ disapproves_of_ragwort(Cora)",
      "If Tate explores the outdoors, then he understands pollinators and loves wildflowers.": "explores_outdoors(Tate) → (understands_pollinators(Tate) ∧ loves_wildflowers(Tate))",
      "Mallory protects wildlife.": "protects_wildlife(Mallory)",
      "For Tate, he either studies biodiversity or observes animal behavior, but it's possible he does both.": "observes_animal_behavior(Tate) ⊕ studies_biodiversity(Tate)",
      "Tate protects wildlife.": "protects_wildlife(Tate)",
      "If someone protects wildlife, then they respect nature.": "∀x (protects_wildlife(x) → respects_nature(x))",
      "Tate either appreciates ragwort or disapproves of it, but not both.": "appreciates_ragwort(Tate) ⊕ disapproves_of_ragwort(Tate)",
      "Everyone who respects nature either understands the importance of pollinators or values the ecosystem (or both).": "∀x (respects_nature(x) → (understands_pollinators(x) ∨ values_ecosystem(x)))",
      "If Tate values the ecosystem, then he will appreciate ragwort.": "values_ecosystem(Tate) → appreciates_ragwort(Tate)"
    },
    "conclusion_fol": "disapproves_of_ragwort(Tate)"
  },
  {
    "id": 372,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Chanel is not credible.",
    "reasoning": "fact1: Chanel is humorous.\nfact2: Chanel is empathetic.\nrule: If Chanel has authority, then she is either humorous or empathetic (but not both).\nconclusion: Chanel does not have authority.\n\nfact1: Chanel does not use complex vocabulary.\nfact2: Chanel does not appear intellectual.\nrule: If Chanel either speaks jargon or uses complex vocabulary (but not both), then she appears intellectual.\nconclusion: Chanel does not speak jargon.\n\nfact1: Chanel is well-respected.\nfact2: Chanel does not have authority.\nrule: For every person, if they are either influential or well-respected, then they have authority.\nconclusion: Chanel is influential.\n\nfact1: Chanel does not speak jargon.\nrule: Chanel either speaks jargon or has expert knowledge, but not both.\nconclusion: Chanel has expert knowledge.\n\nfact1: Chanel has a large following.\nfact2: Chanel has expert knowledge.\nrule: If Chanel has a large following, then she is either charismatic or has expert knowledge, but not both.\nconclusion: Chanel is not charismatic.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Chanel is not credible. The correct option is: C.",
    "context": "Renata is humorous. Chanel does not use complex vocabulary. For every person, if they are either influential or well-respected, then they have authority. Chanel either speaks jargon or has expert knowledge, but not both. Chanel is humorous. Ryker is well-respected. If Chanel has authority, then she is either humorous or empathetic (but not both). If Chanel has a large following, then she is either charismatic or has expert knowledge, but not both. Chanel is well-respected. Ryker has a large following. If Devon has authority, then she is either humorous or empathetic (but not both). If Chanel sounds convincing, then she either has real insight or speaks jargon (or both). Chanel has a large following. Renata is empathetic. Anyone who holds a public office has authority. If Devon has a large following, then she is either charismatic or has expert knowledge, but not both. Chanel does not appear intellectual. Renata either speaks jargon or has expert knowledge, but not both. If Ryker either speaks jargon or uses complex vocabulary (but not both), then she appears intellectual. If Renata is either credible or charismatic (but not both), then she is influential. If Chanel either speaks jargon or uses complex vocabulary (but not both), then she appears intellectual. Chanel is empathetic.",
    "nl2fol": {
      "Renata is humorous.": "is_humorous(Renata)",
      "Chanel does not use complex vocabulary.": "¬uses_complex_vocabulary(Chanel)",
      "For every person, if they are either influential or well-respected, then they have authority.": "∀x ((influential(x) ⊕ well_respected(x)) → has_authority(x))",
      "Chanel either speaks jargon or has expert knowledge, but not both.": "speaks_jargon(Chanel) ⊕ has_expert_knowledge(Chanel)",
      "Chanel is humorous.": "is_humorous(Chanel)",
      "Ryker is well-respected.": "well_respected(Ryker)",
      "If Chanel has authority, then she is either humorous or empathetic (but not both).": "has_authority(Chanel) → (is_humorous(Chanel) ⊕ is_empathetic(Chanel))",
      "If Chanel has a large following, then she is either charismatic or has expert knowledge, but not both.": "has_large_following(Chanel) → (has_expert_knowledge(Chanel) ⊕ charismatic(Chanel))",
      "Chanel is well-respected.": "well_respected(Chanel)",
      "Ryker has a large following.": "has_large_following(Ryker)",
      "If Devon has authority, then she is either humorous or empathetic (but not both).": "has_authority(Devon) → (is_humorous(Devon) ⊕ is_empathetic(Devon))",
      "If Chanel sounds convincing, then she either has real insight or speaks jargon (or both).": "sounds_convincing(Chanel) → (has_real_insight(Chanel) ∨ speaks_jargon(Chanel))",
      "Chanel has a large following.": "has_large_following(Chanel)",
      "Renata is empathetic.": "is_empathetic(Renata)",
      "Anyone who holds a public office has authority.": "∀x (holds_public_office(x) → has_authority(x))",
      "If Devon has a large following, then she is either charismatic or has expert knowledge, but not both.": "has_large_following(Devon) → (has_expert_knowledge(Devon) ⊕ charismatic(Devon))",
      "Chanel does not appear intellectual.": "¬appears_intellectual(Chanel)",
      "Renata either speaks jargon or has expert knowledge, but not both.": "speaks_jargon(Renata) ⊕ has_expert_knowledge(Renata)",
      "If Ryker either speaks jargon or uses complex vocabulary (but not both), then she appears intellectual.": "(speaks_jargon(Ryker) ⊕ uses_complex_vocabulary(Ryker)) → appears_intellectual(Ryker)",
      "If Renata is either credible or charismatic (but not both), then she is influential.": "(credible(Renata) ⊕ charismatic(Renata)) → influential(Renata)",
      "If Chanel either speaks jargon or uses complex vocabulary (but not both), then she appears intellectual.": "(speaks_jargon(Chanel) ⊕ uses_complex_vocabulary(Chanel)) → appears_intellectual(Chanel)",
      "Chanel is empathetic.": "is_empathetic(Chanel)"
    },
    "conclusion_fol": "¬credible(Chanel)"
  },
  {
    "id": 373,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Zain can facilitate international dialogue.",
    "reasoning": "fact1: Zain has a multicultural family.\nrule: If Zain grows up abroad or has a multicultural family, then he can speak multiple languages.\nconclusion: Zain speaks multiple languages.\n\nfact1: Zain enjoys learning.\nfact2: Zain does not honor his ancestors.\nrule: If Zain enjoys learning, then he either loves family heritage or honors his ancestors, but not both.\nconclusion: Zain loves family heritage.\n\nfact1: Zain respects culture.\nfact2: Zain loves family heritage.\nrule: If someone respects culture, then they love family heritage and value local traditions.\nconclusion: Zain values local traditions.\n\nfact1: Zain values local traditions.\nrule: Zain either values local traditions or embraces global citizenship, but not both.\nconclusion: Zain does not embrace global citizenship.\n\nfact1: Zain does not embrace global citizenship.\nrule: Zain either fosters cultural understanding or embraces global citizenship, but not both.\nconclusion: Zain fosters cultural understanding.\n\nfact1: Zain speaks multiple languages.\nfact2: Zain does not appreciate diverse customs.\nrule: If Zain speaks multiple languages, then he is either biculturally aware or appreciates diverse customs, but not both.\nconclusion: Zain is biculturally aware.\n\nfact1: Zain is biculturally aware.\nfact2: Zain fosters cultural understanding.\nrule: If Zain is biculturally aware, then he can either facilitate international dialogue or foster cultural understanding, but not both.\nconclusion: Zain cannot facilitate international dialogue.\n\nTherefore, it is false that Zain can facilitate international dialogue. The correct option is: B.",
    "context": "Zain respects culture. If Zain speaks multiple languages, then he is either biculturally aware or appreciates diverse customs, but not both. If Zain is biculturally aware, then he can either facilitate international dialogue or foster cultural understanding, but not both. If Zain enjoys learning, then he either loves family heritage or honors his ancestors, but not both. Zain either fosters cultural understanding or embraces global citizenship, but not both. Zain has a multicultural family. If Zain grows up abroad or has a multicultural family, then he can speak multiple languages. Zain either values local traditions or embraces global citizenship, but not both. If someone respects culture, then they love family heritage and value local traditions. Zain does not honor his ancestors. Zain enjoys learning. Zain does not appreciate diverse customs.",
    "nl2fol": {
      "Zain respects culture.": "respects_culture(Zain)",
      "If Zain speaks multiple languages, then he is either biculturally aware or appreciates diverse customs, but not both.": "speaks_multiple_languages(Zain) → (biculturally_aware(Zain) ⊕ appreciates_diverse_customs(Zain))",
      "If Zain is biculturally aware, then he can either facilitate international dialogue or foster cultural understanding, but not both.": "biculturally_aware(Zain) → (facilitate_international_dialogue(Zain) ⊕ foster_cultural_understanding(Zain))",
      "If Zain enjoys learning, then he either loves family heritage or honors his ancestors, but not both.": "enjoys_learning(Zain) → (loves_familyheritage(Zain) ⊕ honors_ancestors(Zain))",
      "Zain either fosters cultural understanding or embraces global citizenship, but not both.": "embraces_global_citizenship(Zain) ⊕ foster_cultural_understanding(Zain)",
      "Zain has a multicultural family.": "has_multicultural_family(Zain)",
      "If Zain grows up abroad or has a multicultural family, then he can speak multiple languages.": "(grows_up_abroad(Zain) ∨ has_multicultural_family(Zain)) → speaks_multiple_languages(Zain)",
      "Zain either values local traditions or embraces global citizenship, but not both.": "values_local_traditions(Zain) ⊕ embraces_global_citizenship(Zain)",
      "If someone respects culture, then they love family heritage and value local traditions.": "∀x (respects_culture(x) → (loves_familyheritage(x) ∧ values_local_traditions(x)))",
      "Zain does not honor his ancestors.": "¬honors_ancestors(Zain)",
      "Zain enjoys learning.": "enjoys_learning(Zain)",
      "Zain does not appreciate diverse customs.": "¬appreciates_diverse_customs(Zain)"
    },
    "conclusion_fol": "facilitate_international_dialogue(Zain)"
  },
  {
    "id": 374,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hope does not take good photos.",
    "reasoning": "fact1: Hope does not write poetry.\nfact2: Hope does not live intentionally.\nrule: If Hope either practices mindfulness or writes poetry (but not both), then she lives intentionally.\nconclusion: Hope does not practice mindfulness.\n\nfact1: Hope appreciates nature.\nfact2: Hope values balance.\nrule: If Hope appreciates nature, then she values balance and engages in yoga.\nconclusion: Hope engages in yoga.\n\nfact1: Hope does not practice mindfulness.\nrule: Hope practices mindfulness or meditates daily.\nconclusion: Hope meditates daily.\n\nfact1: Hope engages in yoga.\nrule: For Hope, either she engages in yoga or she finds inner peace, but it's not necessarily a direct relationship.\nconclusion: Hope does not find inner peace.\n\nfact1: Hope meditates daily.\nfact2: Hope does not find inner peace.\nrule: Everyone who meditates daily either is calm or finds inner peace (or both).\nconclusion: Hope is calm.\n\nfact1: Hope is calm.\nrule: If Hope is calm, then she takes good photos.\nconclusion: Hope does not take good photos.\n\nTherefore, it is false that Hope does not take good photos. The correct option is: B.",
    "context": "If Hope either practices mindfulness or writes poetry (but not both), then she lives intentionally. Hope appreciates nature. If Hope appreciates nature, then she values balance and engages in yoga. Wonderful appreciates nature. For Brinley, either she engages in yoga or she finds inner peace, but it's not necessarily a direct relationship. Hope does not live intentionally. Hope values balance. Hope feels serenity or finds inner peace. For Hope, either she engages in yoga or she finds inner peace, but it's not necessarily a direct relationship. If Hope values solitude, then she either creates reflective art or practices mindfulness (or both). Hope practices mindfulness or meditates daily. If Hope values discipline or seeks self-control, then she engages in yoga. Hope does not write poetry. Everyone who meditates daily either is calm or finds inner peace (or both). If Hope is calm, then she takes good photos.",
    "nl2fol": {
      "If Hope either practices mindfulness or writes poetry (but not both), then she lives intentionally.": "(practices_mindfulness(Hope) ⊕ writes_poetry(Hope)) → lives_intentionally(Hope)",
      "Hope appreciates nature.": "appreciates_nature(Hope)",
      "If Hope appreciates nature, then she values balance and engages in yoga.": "appreciates_nature(Hope) → (values_balance(Hope) ∧ engages_in_yoga(Hope))",
      "Wonderful appreciates nature.": "appreciates_nature(Wonderful)",
      "For Brinley, either she engages in yoga or she finds inner peace, but it's not necessarily a direct relationship.": "engages_in_yoga(Brinley) ⊕ finds_inner_peace(Brinley)",
      "Hope does not live intentionally.": "¬lives_intentionally(Hope)",
      "Hope values balance.": "values_balance(Hope)",
      "Hope feels serenity or finds inner peace.": "feels_serenity(Hope) ∨ finds_inner_peace(Hope)",
      "For Hope, either she engages in yoga or she finds inner peace, but it's not necessarily a direct relationship.": "engages_in_yoga(Hope) ⊕ finds_inner_peace(Hope)",
      "If Hope values solitude, then she either creates reflective art or practices mindfulness (or both).": "values_solitude(Hope) → (creates_reflective_art(Hope) ∨ practices_mindfulness(Hope))",
      "Hope practices mindfulness or meditates daily.": "practices_mindfulness(Hope) ∨ meditates_daily(Hope)",
      "If Hope values discipline or seeks self-control, then she engages in yoga.": "(values_discipline(Hope) ∨ seeks_self_control(Hope)) → engages_in_yoga(Hope)",
      "Hope does not write poetry.": "¬writes_poetry(Hope)",
      "Everyone who meditates daily either is calm or finds inner peace (or both).": "∀x (meditates_daily(x) → (is_calm(x) ∨ finds_inner_peace(x)))",
      "If Hope is calm, then she takes good photos.": "is_calm(Hope) → takes_good_photos(Hope)"
    },
    "conclusion_fol": "¬takes_good_photos(Hope)"
  },
  {
    "id": 375,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Norah does not value knowledge.",
    "reasoning": "fact1: Norah lives in a metropolis.\nfact2: Norah loves a serene atmosphere.\nrule: If Norah lives in a metropolis, then she either enjoys nightlife or loves a serene atmosphere (but not both).\nconclusion: Norah does not enjoy nightlife.\n\nfact1: Norah is introspective.\nrule: Norah is either introspective or enjoys socializing, but not both.\nconclusion: Norah does not enjoy socializing.\n\nfact1: Norah does not enjoy socializing.\nrule: Norah enjoys socializing or likes crowds.\nconclusion: Norah likes crowds.\n\nfact1: Norah likes crowds.\nfact2: Norah does not enjoy nightlife.\nrule: If Norah either likes crowds or enjoys nightlife (but not both), then she prefers an urban lifestyle.\nconclusion: Norah prefers an urban lifestyle.\n\nfact1: Norah prefers an urban lifestyle.\nrule: Everyone who prefers an urban lifestyle enjoys city life.\nconclusion: Norah enjoys city life.\n\nfact1: Norah enjoys city life.\nrule: Everyone either enjoys city life or appreciates nature, but they are not mutually exclusive.\nconclusion: Norah does not appreciate nature.\n\nfact1: Norah does not appreciate nature.\nrule: Norah either appreciates nature or values knowledge (or both).\nconclusion: Norah values knowledge.\n\nTherefore, it is false that Norah does not value knowledge. The correct option is: B.",
    "context": "Norah lives in a metropolis. Everyone who prefers an urban lifestyle enjoys city life. Norah is either introspective or enjoys socializing, but not both. Norah enjoys socializing or likes crowds. If Norah enjoys art and collects antiques, then she prefers an urban lifestyle. Jadiel is either introspective or enjoys socializing, but not both. Anyone who frequently visits clubs will enjoy nightlife. If Norah lives in a metropolis, then she either enjoys nightlife or loves a serene atmosphere (but not both). If Norah either likes crowds or enjoys nightlife (but not both), then she prefers an urban lifestyle. Everyone either enjoys city life or appreciates nature, but they are not mutually exclusive. Norah either appreciates nature or values knowledge (or both). If Ashlynn lives in a metropolis, then she either enjoys nightlife or loves a serene atmosphere (but not both). Norah loves a serene atmosphere. If Jadiel either likes crowds or enjoys nightlife (but not both), then she prefers an urban lifestyle. Norah is introspective.",
    "nl2fol": {
      "Norah lives in a metropolis.": "lives_in_metropolis(Norah)",
      "Everyone who prefers an urban lifestyle enjoys city life.": "∀x (prefers_urban_lifestyle(x) → enjoy_city_life(x))",
      "Norah is either introspective or enjoys socializing, but not both.": "is_introspective(Norah) ⊕ enjoys_socializing(Norah)",
      "Norah enjoys socializing or likes crowds.": "enjoys_socializing(Norah) ∨ likes_crowds(Norah)",
      "If Norah enjoys art and collects antiques, then she prefers an urban lifestyle.": "(enjoys_art(Norah) ∧ collects_antiques(Norah)) → prefers_urban_lifestyle(Norah)",
      "Jadiel is either introspective or enjoys socializing, but not both.": "is_introspective(Jadiel) ⊕ enjoys_socializing(Jadiel)",
      "Anyone who frequently visits clubs will enjoy nightlife.": "∀x (frequents_clubs(x) → enjoys_nightlife(x))",
      "If Norah lives in a metropolis, then she either enjoys nightlife or loves a serene atmosphere (but not both).": "lives_in_metropolis(Norah) → (enjoys_nightlife(Norah) ⊕ loves_serene_atmosphere(Norah))",
      "If Norah either likes crowds or enjoys nightlife (but not both), then she prefers an urban lifestyle.": "(likes_crowds(Norah) ⊕ enjoys_nightlife(Norah)) → prefers_urban_lifestyle(Norah)",
      "Everyone either enjoys city life or appreciates nature, but they are not mutually exclusive.": "∀x (enjoy_city_life(x) ⊕ appreciate_nature(x))",
      "Norah either appreciates nature or values knowledge (or both).": "appreciate_nature(Norah) ∨ value_knowledge(Norah)",
      "If Ashlynn lives in a metropolis, then she either enjoys nightlife or loves a serene atmosphere (but not both).": "lives_in_metropolis(Ashlynn) → (enjoys_nightlife(Ashlynn) ⊕ loves_serene_atmosphere(Ashlynn))",
      "Norah loves a serene atmosphere.": "loves_serene_atmosphere(Norah)",
      "If Jadiel either likes crowds or enjoys nightlife (but not both), then she prefers an urban lifestyle.": "(likes_crowds(Jadiel) ⊕ enjoys_nightlife(Jadiel)) → prefers_urban_lifestyle(Jadiel)",
      "Norah is introspective.": "is_introspective(Norah)"
    },
    "conclusion_fol": "¬value_knowledge(Norah)"
  },
  {
    "id": 376,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lucille is not defensive.",
    "reasoning": "fact1: Lucille is motivated.\nrule: Lucille either trains rigorously or is motivated, but not both.\nconclusion: Lucille does not train rigorously.\n\nfact1: Lucille does not train rigorously.\nfact2: Lucille does not have high endurance.\nrule: If Lucille either trains rigorously or delivers powerful blows (but not both), then she has high endurance.\nconclusion: Lucille does not deliver powerful blows.\n\nfact1: Lucille has fast feet.\nfact2: Lucille does not deliver powerful blows.\nrule: If Lucille either has fast feet or quick reflexes, then she delivers powerful blows.\nconclusion: Lucille has quick reflexes.\n\nfact1: Lucille has quick reflexes.\nrule: If Lucille has quick reflexes, then she is aggressive.\nconclusion: Lucille is aggressive.\n\nfact1: Lucille does not have strategic skills.\nrule: If someone has strategic skills, then they are not necessarily a formidable fighter, and vice versa.\nconclusion: Lucille is formidable.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Lucille is not defensive. The correct option is: C.",
    "context": "Lucille does not have high endurance. Lucille has fast feet. If someone has strategic skills, then they are not necessarily a formidable fighter, and vice versa. Lucille does not have strategic skills. Lucille either trains rigorously or is motivated, but not both. If Lucille has quick reflexes, then she is aggressive. If Lucille either trains rigorously or delivers powerful blows (but not both), then she has high endurance. If Lucille is a professional boxer, then she either builds a strong physique or trains rigorously, but not both. If Lucille either has fast feet or quick reflexes, then she delivers powerful blows. Lucille is motivated.",
    "nl2fol": {
      "Lucille does not have high endurance.": "¬has_high_endurance(Lucille)",
      "Lucille has fast feet.": "has_fast_feet(Lucille)",
      "If someone has strategic skills, then they are not necessarily a formidable fighter, and vice versa.": "∀x (has_strategic_skills(x) ⊕ formidable(x))",
      "Lucille does not have strategic skills.": "¬has_strategic_skills(Lucille)",
      "Lucille either trains rigorously or is motivated, but not both.": "trains_rigorously(Lucille) ⊕ is_motivated(Lucille)",
      "If Lucille has quick reflexes, then she is aggressive.": "has_quick_reflexes(Lucille) → aggressive(Lucille)",
      "If Lucille either trains rigorously or delivers powerful blows (but not both), then she has high endurance.": "(trains_rigorously(Lucille) ⊕ delivers_powerful_blows(Lucille)) → has_high_endurance(Lucille)",
      "If Lucille is a professional boxer, then she either builds a strong physique or trains rigorously, but not both.": "is_professional_boxer(Lucille) → (builds_strong_physique(Lucille) ⊕ trains_rigorously(Lucille))",
      "If Lucille either has fast feet or quick reflexes, then she delivers powerful blows.": "(has_fast_feet(Lucille) ⊕ has_quick_reflexes(Lucille)) → delivers_powerful_blows(Lucille)",
      "Lucille is motivated.": "is_motivated(Lucille)"
    },
    "conclusion_fol": "¬defensive(Lucille)"
  },
  {
    "id": 377,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tate either respects nature or harms nature, but not both.",
    "reasoning": "fact1: Tate utilizes a plant.\nfact2: Tate reduces waste.\nrule: If Tate utilizes a plant, then he either reduces waste or exploits resources, but not both.\nconclusion: Tate does not exploit resources.\n\nfact1: Tate lives extravagantly.\nrule: If someone lives extravagantly, then they will overuse resources.\nconclusion: Tate overuses resources.\n\nfact1: Tate overuses resources.\nfact2: Tate ignores warnings.\nrule: Anyone who overuses resources and ignores warnings can disrupt the ecosystem.\nconclusion: Tate disrupts the ecosystem.\n\nfact1: Tate pursues research.\nfact2: Tate disrupts the ecosystem.\nrule: If Tate pursues research, then he either disrupts the ecosystem or conserves the environment, but not both.\nconclusion: Tate does not conserve the environment.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Tate either respects nature or harms nature, but not both. The correct option is: C.",
    "context": "Tate utilizes a plant. Tate protects species or exploits resources. If Tate utilizes a plant, then he either reduces waste or exploits resources, but not both. If someone either consumes excessively or wastes resources (but not both), then they overuse resources. Tate lives extravagantly. Tate reduces waste. Anyone who overuses resources and ignores warnings can disrupt the ecosystem. If Walter pursues research, then he either disrupts the ecosystem or conserves the environment, but not both. Tate ignores warnings. Tate pursues research. If Tate pursues research, then he either disrupts the ecosystem or conserves the environment, but not both. If Tate seeks knowledge, then he either finds innovative solutions or respects nature (or both). If someone lives extravagantly, then they will overuse resources.",
    "nl2fol": {
      "Tate utilizes a plant.": "utilize_plant(Tate)",
      "Tate protects species or exploits resources.": "protect_species(Tate) ∨ exploit_resource(Tate)",
      "If Tate utilizes a plant, then he either reduces waste or exploits resources, but not both.": "utilize_plant(Tate) → (reduce_waste(Tate) ⊕ exploit_resource(Tate))",
      "If someone either consumes excessively or wastes resources (but not both), then they overuse resources.": "∀x ((consume_excessively(x) ⊕ waste_resources(x)) → overuse_resources(x))",
      "Tate lives extravagantly.": "live_extravagantly(Tate)",
      "Tate reduces waste.": "reduce_waste(Tate)",
      "Anyone who overuses resources and ignores warnings can disrupt the ecosystem.": "∀x ((overuse_resources(x) ∧ ignore_warnings(x)) → disrupt_ecosystem(x))",
      "If Walter pursues research, then he either disrupts the ecosystem or conserves the environment, but not both.": "pursue_research(Walter) → (disrupt_ecosystem(Walter) ⊕ conserve_environment(Walter))",
      "Tate ignores warnings.": "ignore_warnings(Tate)",
      "Tate pursues research.": "pursue_research(Tate)",
      "If Tate pursues research, then he either disrupts the ecosystem or conserves the environment, but not both.": "pursue_research(Tate) → (disrupt_ecosystem(Tate) ⊕ conserve_environment(Tate))",
      "If Tate seeks knowledge, then he either finds innovative solutions or respects nature (or both).": "seek_knowledge(Tate) → (find_innovative_solutions(Tate) ∨ respect_nature(Tate))",
      "If someone lives extravagantly, then they will overuse resources.": "∀x (live_extravagantly(x) → overuse_resources(x))"
    },
    "conclusion_fol": "respect_nature(Tate) ⊕ harm_nature(Tate)"
  },
  {
    "id": 378,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dr. Clark does not receive accolades.",
    "reasoning": "fact1: Dr. Clark leads research teams.\nfact2: Clark does not collaborate with his peers.\nrule: If Dr. Clark either leads research teams or teaches at a university (but not both), then he collaborates with his peers.\nconclusion: Dr. Clark teaches at a university.\n\nfact1: Dr. Clark does not drive progress.\nrule: If a scientist develops new techniques, then they will drive progress in their field.\nconclusion: Dr. Clark does not develop new techniques.\n\nfact1: Dr. Clark teaches at a university.\nrule: Dr. Clark either teaches at a university or works in industry, but not both.\nconclusion: Dr. Clark does not work in industry.\n\nfact1: Dr. Clark pursues a PhD.\nfact2: Dr. Clark does not work in industry.\nrule: If Dr. Clark pursues a PhD, then he either dedicates his career to research or works in industry, but not both.\nconclusion: Dr. Clark dedicates his career to research.\n\nfact1: Dr. Clark dedicates his career to research.\nfact2: Dr. Clark does not create new materials.\nrule: Every scientist who dedicates their career to research either improves existing processes or creates new materials.\nconclusion: Dr. Clark improves existing processes.\n\nfact1: Dr. Clark conducts innovative research.\nfact2: Dr. Clark improves existing processes.\nrule: If Dr. Clark conducts innovative research, then he will either advance the field or improve existing processes, but not both.\nconclusion: Clark does not advance his field.\n\nfact1: Dr. Clark does not develop new techniques.\nfact2: Clark does not advance his field.\nrule: If Dr. Clark either develops new techniques or makes breakthrough discoveries (but not both), then he will advance his field.\nconclusion: Dr. Clark does not make breakthrough discoveries.\n\nfact1: Dr. Clark publishes papers.\nfact2: Clark influences others.\nrule: If Dr. Clark publishes papers and influences others, then he is renowned.\nconclusion: Dr. Clark is renowned.\n\nfact1: Dr. Clark is renowned.\nfact2: Dr. Clark does not make breakthrough discoveries.\nrule: For all scientists, if a scientist is renowned, then they either make breakthrough discoveries or receive accolades (or both).\nconclusion: Dr. Clark does not receive accolades.\n\nTherefore, it is false that Dr. Clark does not receive accolades. The correct option is: B.",
    "context": "For all scientists, if a scientist is renowned, then they either make breakthrough discoveries or receive accolades (or both). If Dr. Clark conducts innovative research, then he will either advance the field or improve existing processes, but not both. If Dr. Clark pursues a PhD, then he either dedicates his career to research or works in industry, but not both. Dr. Clark pursues a PhD. If Dr. Kylan conducts innovative research, then he will either advance the field or improve existing processes, but not both. Dr. Clark leads research teams. Dr. Clark conducts innovative research. Dr. Kylan publishes papers. Dr. Clark either conducts experiments or teaches at a university. Dr. Clark does not drive progress. If Dr. Clark either develops new techniques or makes breakthrough discoveries (but not both), then he will advance his field. All scientists either study phenomena or develop new techniques. Dr. Clark either teaches at a university or works in industry, but not both. If Dr. Clark publishes papers and influences others, then he is renowned. Dr. Harrison pursues a PhD. Dr. Kylan does not create new materials. Dr. Clark does not create new materials. If a scientist develops new techniques, then they will drive progress in their field. Every scientist who dedicates their career to research either improves existing processes or creates new materials. Clark influences others. If Dr. Clark either leads research teams or teaches at a university (but not both), then he collaborates with his peers. Dr. Clark publishes papers. Clark does not collaborate with his peers. Any scientist who studies complex phenomena or tests new hypotheses can advance their field. Dr. Clark dedicates his career to research if he is passionate about science.",
    "nl2fol": {
      "For all scientists, if a scientist is renowned, then they either make breakthrough discoveries or receive accolades (or both).": "∀x (renowned(x) → (make_breakthrough_discoveries(x) ∨ receive_accolades(x)))",
      "If Dr. Clark conducts innovative research, then he will either advance the field or improve existing processes, but not both.": "conduct_innovative_research(Clark) → (advance_the_field(Clark) ⊕ improve_existing_processes(Clark))",
      "If Dr. Clark pursues a PhD, then he either dedicates his career to research or works in industry, but not both.": "pursue_phd(Clark) → (dedicate_career_to_research(Clark) ⊕ work_in_industry(Clark))",
      "Dr. Clark pursues a PhD.": "pursue_phd(Clark)",
      "If Dr. Kylan conducts innovative research, then he will either advance the field or improve existing processes, but not both.": "conduct_innovative_research(Kylan) → (advance_the_field(Kylan) ⊕ improve_existing_processes(Kylan))",
      "Dr. Clark leads research teams.": "lead_research_teams(Clark)",
      "Dr. Clark conducts innovative research.": "conduct_innovative_research(Clark)",
      "Dr. Kylan publishes papers.": "publish_papers(Kylan)",
      "Dr. Clark either conducts experiments or teaches at a university.": "conduct_experiments(Clark) ∨ teach_at_university(Clark)",
      "Dr. Clark does not drive progress.": "¬drive_progress(Clark)",
      "If Dr. Clark either develops new techniques or makes breakthrough discoveries (but not both), then he will advance his field.": "(develop_new_techniques(Clark) ⊕ make_breakthrough_discoveries(Clark)) → advance_the_field(Clark)",
      "All scientists either study phenomena or develop new techniques.": "∀x (study_phenomena(x) ∨ develop_new_techniques(x))",
      "Dr. Clark either teaches at a university or works in industry, but not both.": "teach_at_university(Clark) ⊕ work_in_industry(Clark)",
      "If Dr. Clark publishes papers and influences others, then he is renowned.": "publish_papers(Clark) → (influence_others(Clark) ∧ renowned(Clark))",
      "Dr. Harrison pursues a PhD.": "pursue_phd(Harrison)",
      "Dr. Kylan does not create new materials.": "¬create_new_materials(Kylan)",
      "Dr. Clark does not create new materials.": "¬create_new_materials(Clark)",
      "If a scientist develops new techniques, then they will drive progress in their field.": "∀x (develop_new_techniques(x) → drive_progress(x))",
      "Every scientist who dedicates their career to research either improves existing processes or creates new materials.": "∀x (dedicate_career_to_research(x) → (improve_existing_processes(x) ∨ create_new_materials(x)))",
      "Clark influences others.": "influence_others(Clark)",
      "If Dr. Clark either leads research teams or teaches at a university (but not both), then he collaborates with his peers.": "(lead_research_teams(Clark) ⊕ teach_at_university(Clark)) → collaborate_with_peers(Clark)",
      "Dr. Clark publishes papers.": "publish_papers(Clark)",
      "Clark does not collaborate with his peers.": "¬collaborate_with_peers(Clark)",
      "Any scientist who studies complex phenomena or tests new hypotheses can advance their field.": "∀x ((study_complex_phenomena(x) ∨ test_new_hypotheses(x)) → advance_the_field(x))",
      "Dr. Clark dedicates his career to research if he is passionate about science.": "passionate_about_science(Clark) → dedicate_career_to_research(Clark)"
    },
    "conclusion_fol": "¬receive_accolades(Clark)"
  },
  {
    "id": 379,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kiaan does not leave a lasting legacy.",
    "reasoning": "fact1: Kiaan does not explain complex concepts.\nrule: Kiaan either makes learning fun or explains complex concepts.\nconclusion: Kiaan makes learning fun.\n\nfact1: Kiaan pursues lifelong education.\nrule: Kiaan either pursues lifelong education or publishes research, but not both.\nconclusion: Kiaan does not publish research.\n\nfact1: Kiaan does not publish research.\nfact2: Kiaan is not highly respected.\nrule: If Kiaan either publishes research or has an academic honor (but not both), then he is highly respected.\nconclusion: Kiaan does not have an academic honor.\n\nfact1: Kiaan makes learning fun.\nrule: Anyone who makes learning fun inspires others.\nconclusion: Kiaan inspires others.\n\nfact1: Kiaan does not have a noble award.\nfact2: Kiaan does not have an academic honor.\nrule: If Kiaan is a renowned scientist, then he either has a noble award or an academic honor, but not both.\nconclusion: Kiaan is not a renowned scientist.\n\nfact1: Kiaan is not a renowned scientist.\nrule: If Kiaan makes groundbreaking discoveries, then he is a renowned scientist.\nconclusion: Kiaan does not make groundbreaking discoveries.\n\nfact1: Kiaan inspires others.\nfact2: Kiaan does not make groundbreaking discoveries.\nrule: If Kiaan inspires others, then he either makes groundbreaking discoveries or leaves a lasting legacy, but not both.\nconclusion: Kiaan does not leave a lasting legacy.\n\nTherefore, it is false that Kiaan does not leave a lasting legacy. The correct option is: B.",
    "context": "Kiaan does not explain complex concepts. If Kiaan inspires others, then he either makes groundbreaking discoveries or leaves a lasting legacy, but not both. Anyone who makes learning fun inspires others. If Kiaan makes groundbreaking discoveries, then he is a renowned scientist. If Kiaan either publishes research or has an academic honor (but not both), then he is highly respected. If Kiaan is a renowned scientist, then he either has a noble award or an academic honor, but not both. Kiaan either makes learning fun or explains complex concepts. Kiaan pursues lifelong education. Kiaan is not highly respected. Kiaan does not have a noble award. Kiaan either pursues lifelong education or publishes research, but not both.",
    "nl2fol": {
      "Kiaan does not explain complex concepts.": "¬explains_complex_concepts(Kiaan)",
      "If Kiaan inspires others, then he either makes groundbreaking discoveries or leaves a lasting legacy, but not both.": "inspires_others(Kiaan) → (makes_groundbreaking_discoveries(Kiaan) ⊕ leaves_lasting_legacy(Kiaan))",
      "Anyone who makes learning fun inspires others.": "∀x (makes_learning_fun(x) → inspires_others(x))",
      "If Kiaan makes groundbreaking discoveries, then he is a renowned scientist.": "makes_groundbreaking_discoveries(Kiaan) → is_renowned_scientist(Kiaan)",
      "If Kiaan either publishes research or has an academic honor (but not both), then he is highly respected.": "(publishes_research(Kiaan) ⊕ has_academic_honor(Kiaan)) → is_highly_respected(Kiaan)",
      "If Kiaan is a renowned scientist, then he either has a noble award or an academic honor, but not both.": "is_renowned_scientist(Kiaan) → (has_noble_award(Kiaan) ⊕ has_academic_honor(Kiaan))",
      "Kiaan either makes learning fun or explains complex concepts.": "makes_learning_fun(Kiaan) ∨ explains_complex_concepts(Kiaan)",
      "Kiaan pursues lifelong education.": "pursues_life_long_education(Kiaan)",
      "Kiaan is not highly respected.": "¬is_highly_respected(Kiaan)",
      "Kiaan does not have a noble award.": "¬has_noble_award(Kiaan)",
      "Kiaan either pursues lifelong education or publishes research, but not both.": "pursues_life_long_education(Kiaan) ⊕ publishes_research(Kiaan)"
    },
    "conclusion_fol": "¬leaves_lasting_legacy(Kiaan)"
  },
  {
    "id": 380,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Layne is well known.",
    "reasoning": "fact1: Layne does not respect his heritage.\nfact2: Layne does not have strong roots in his community.\nrule: Anyone who values tradition or respects heritage has strong roots in their community.\nconclusion: Layne does not value tradition.\n\nfact1: Layne does not value tradition.\nrule: Layne either keeps a unique routine or values tradition, but not both.\nconclusion: Layne keeps a unique routine.\n\nfact1: Layne has wild hair.\nfact2: Layne does not wear flannel.\nrule: If Layne either has wild hair or wears flannel (but not both), then he is outdoorsy.\nconclusion: Layne is outdoorsy.\n\nfact1: Layne does not have a strong presence.\nfact2: Layne keeps a unique routine.\nrule: If Layne disturbs others, then he has a strong presence and keeps a unique routine.\nconclusion: Layne does not disturb others.\n\nfact1: Layne snores loudly.\nfact2: Layne does not have breathing issues.\nrule: If Layne either snores loudly or has sleep apnea (but not both), then he has breathing issues.\nconclusion: Layne has sleep apnea.\n\nfact1: Layne is outdoorsy.\nfact2: Layne is charismatic.\nrule: If Layne is outdoorsy, then he is either lively or charismatic, but not both.\nconclusion: Layne does not have a lively personality.\n\nfact1: Layne has sleep apnea.\nrule: If someone has sleep apnea, then they sleep heavily.\nconclusion: Layne sleeps heavily.\n\nfact1: Layne sleeps heavily.\nfact2: Layne does not disturb others.\nrule: If someone sleeps heavily and has loud snores, then they disturb others.\nconclusion: Layne does not have loud snores.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Layne is well known. The correct option is: C.",
    "context": "Layne does not have breathing issues. If Layne has a beard, then he likes whiskey and snores loudly. Layne does not respect his heritage. If Layne either snores loudly or has sleep apnea (but not both), then he has breathing issues. Layne does not wear flannel. If Layne enjoys hiking, then he is either outdoorsy or has an adventurous spirit, but not both. Layne does not have strong roots in his community. If someone enjoys solitude and pursues adventure, then they keep a unique routine. Layne does not have a strong presence. Layne snores loudly. If Layne disturbs others, then he has a strong presence and keeps a unique routine. If Layne either has wild hair or wears flannel (but not both), then he is outdoorsy. If Layne is outdoorsy, then he is either lively or charismatic, but not both. If someone sleeps heavily and has loud snores, then they disturb others. Anyone who values tradition or respects heritage has strong roots in their community. If Hayes has either a lively personality or loud snores (but not both), then he is well known. Layne is charismatic. Layne either keeps a unique routine or values tradition, but not both. Layne has wild hair. If someone has sleep apnea, then they sleep heavily. If someone tires easily, then they sleep heavily and need rest.",
    "nl2fol": {
      "Layne does not have breathing issues.": "¬has_breathing_issues(Layne)",
      "If Layne has a beard, then he likes whiskey and snores loudly.": "has_beard(Layne) → (likes_whiskey(Layne) ∧ loud_snores(Layne))",
      "Layne does not respect his heritage.": "¬respects_heritage(Layne)",
      "If Layne either snores loudly or has sleep apnea (but not both), then he has breathing issues.": "(snore_loudly(Layne) ⊕ has_sleep_apnea(Layne)) → has_breathing_issues(Layne)",
      "Layne does not wear flannel.": "¬wears_flannel(Layne)",
      "If Layne enjoys hiking, then he is either outdoorsy or has an adventurous spirit, but not both.": "enjoys_hiking(Layne) → (has_adventurous_spirit(Layne) ⊕ outdoorsy(Layne))",
      "Layne does not have strong roots in his community.": "¬has_strong_roots(Layne)",
      "If someone enjoys solitude and pursues adventure, then they keep a unique routine.": "∀x ((enjoys_solitude(x) ∧ pursues_adventure(x)) → keeps_unique_routine(x))",
      "Layne does not have a strong presence.": "¬has_strong_presence(Layne)",
      "Layne snores loudly.": "snore_loudly(Layne)",
      "If Layne disturbs others, then he has a strong presence and keeps a unique routine.": "disturbs_others(Layne) → (has_strong_presence(Layne) ∧ keeps_unique_routine(Layne))",
      "If Layne either has wild hair or wears flannel (but not both), then he is outdoorsy.": "(has_wild_hair(Layne) ⊕ wears_flannel(Layne)) → outdoorsy(Layne)",
      "If Layne is outdoorsy, then he is either lively or charismatic, but not both.": "outdoorsy(Layne) → (lively_personality(Layne) ⊕ charismatic(Layne))",
      "If someone sleeps heavily and has loud snores, then they disturb others.": "∀x ((sleeps_heavily(x) ∧ loud_snores(x)) → disturbs_others(x))",
      "Anyone who values tradition or respects heritage has strong roots in their community.": "∀x ((values_tradition(x) ∨ respects_heritage(x)) → has_strong_roots(x))",
      "If Hayes has either a lively personality or loud snores (but not both), then he is well known.": "(lively_personality(Hayes) ⊕ loud_snores(Hayes)) → well_known(Hayes)",
      "Layne is charismatic.": "charismatic(Layne)",
      "Layne either keeps a unique routine or values tradition, but not both.": "keeps_unique_routine(Layne) ⊕ values_tradition(Layne)",
      "Layne has wild hair.": "has_wild_hair(Layne)",
      "If someone has sleep apnea, then they sleep heavily.": "∀x (has_sleep_apnea(x) → sleeps_heavily(x))",
      "If someone tires easily, then they sleep heavily and need rest.": "∀x (tire_easily(x) → (sleeps_heavily(x) ∧ need_rest(x)))"
    },
    "conclusion_fol": "well_known(Layne)"
  },
  {
    "id": 381,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Natalie does not gain recognition.",
    "reasoning": "fact1: Natalie follows artistic rules.\nrule: A person either innovates their style or follows artistic rules, but not necessarily both.\nconclusion: Natalie does not innovate her style.\n\nfact1: Natalie does not admire masters.\nrule: Natalie either admires masters or appreciates classics.\nconclusion: Natalie appreciates classics.\n\nfact1: Natalie appreciates classics.\nfact2: Natalie values originality.\nrule: If Natalie appreciates classics, then she is a traditional artist and values originality.\nconclusion: Natalie is a traditional artist.\n\nfact1: Natalie draws from inspiration.\nfact2: Natalie does not innovate her style.\nrule: Anyone who draws from inspiration either has creative expression or innovates their style (or both).\nconclusion: Natalie has creative expression.\n\nfact1: Natalie has creative expression.\nrule: If Natalie has creative expression, then she experiments with techniques and produces unique work.\nconclusion: Natalie produces unique work.\n\nfact1: Natalie is inspired by history.\nfact2: Natalie is a traditional artist.\nrule: If Natalie is inspired by history, then she is either a traditional artist or a free-spirited artist, but not both.\nconclusion: Natalie is not a free-spirited artist.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Natalie does not gain recognition. The correct option is: C.",
    "context": "Natalie draws from inspiration. If Natalie has creative expression, then she experiments with techniques and produces unique work. Natalie enjoys art or has creative expression. If Natalie appreciates classics, then she is a traditional artist and values originality. If Natalie is inspired by history, then she is either a traditional artist or a free-spirited artist, but not both. Natalie values originality. Natalie either admires masters or appreciates classics. Natalie follows artistic rules. If Natalie has visionary talent, then she is a free-spirited artist or captures the essence of beauty (or both). Anyone who draws from inspiration either has creative expression or innovates their style (or both). If Natalie either explores new colors or pushes boundaries (but not both), then she innovates her style. Natalie is inspired by history. Colby either admires masters or appreciates classics. Anyone who explores colors and experiments with brushstrokes can produce unique work. Natalie does not admire masters. A person either innovates their style or follows artistic rules, but not necessarily both.",
    "nl2fol": {
      "Natalie draws from inspiration.": "draw_from_inspiration(Natalie)",
      "If Natalie has creative expression, then she experiments with techniques and produces unique work.": "creative_expression(Natalie) → (experiment_with_techniques(Natalie) ∧ produce_unique_work(Natalie))",
      "Natalie enjoys art or has creative expression.": "enjoys_art(Natalie) ∨ creative_expression(Natalie)",
      "If Natalie appreciates classics, then she is a traditional artist and values originality.": "appreciate_classics(Natalie) → (traditional_artist(Natalie) ∧ value_originality(Natalie))",
      "If Natalie is inspired by history, then she is either a traditional artist or a free-spirited artist, but not both.": "inspired_by_history(Natalie) → (traditional_artist(Natalie) ⊕ free_spirited_artist(Natalie))",
      "Natalie values originality.": "value_originality(Natalie)",
      "Natalie either admires masters or appreciates classics.": "admires_masters(Natalie) ∨ appreciate_classics(Natalie)",
      "Natalie follows artistic rules.": "follows_artistic_rules(Natalie)",
      "If Natalie has visionary talent, then she is a free-spirited artist or captures the essence of beauty (or both).": "has_visionary_talent(Natalie) → (free_spirited_artist(Natalie) ∨ capture_essence_beauty(Natalie))",
      "Anyone who draws from inspiration either has creative expression or innovates their style (or both).": "∀x (draw_from_inspiration(x) → (creative_expression(x) ∨ innovate_style(x)))",
      "If Natalie either explores new colors or pushes boundaries (but not both), then she innovates her style.": "(explore_new_colors(Natalie) ⊕ push_boundaries(Natalie)) → innovate_style(Natalie)",
      "Natalie is inspired by history.": "inspired_by_history(Natalie)",
      "Colby either admires masters or appreciates classics.": "admires_masters(Colby) ∨ appreciate_classics(Colby)",
      "Anyone who explores colors and experiments with brushstrokes can produce unique work.": "∀x ((explores_colors(x) ∧ experiments_with_brushstrokes(x)) → produce_unique_work(x))",
      "Natalie does not admire masters.": "¬admires_masters(Natalie)",
      "A person either innovates their style or follows artistic rules, but not necessarily both.": "∀x (follows_artistic_rules(x) ⊕ innovate_style(x))"
    },
    "conclusion_fol": "¬gain_recognition(Natalie)"
  },
  {
    "id": 382,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gustavo does not have exceptional talent.",
    "reasoning": "fact1: Gustavo struggles financially.\nrule: Gustavo either struggles financially or achieves success, but not both.\nconclusion: Gustavo does not achieve success.\n\nfact1: Gustavo does not achieve success.\nrule: Anyone who respects their craft or connects with their audience can achieve success.\nconclusion: Gustavo cannot connect with his audience.\n\nfact1: Gustavo cannot connect with his audience.\nrule: Anyone who remains humble or is down to earth can connect with their audience.\nconclusion: Gustavo does not remain humble.\n\nfact1: Gustavo does not remain humble.\nrule: Gustavo is either charismatic or remains humble, but not both.\nconclusion: Gustavo has charisma.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Gustavo does not have exceptional talent. The correct option is: C.",
    "context": "Gustavo either struggles financially or achieves success, but not both. Anyone who understands emotions and expresses themselves sincerely can connect with their audience. If Myla listens to others, then he both values feedback and is down to earth. Gustavo is either charismatic or remains humble, but not both. Clayton does not listen to others. Gustavo struggles financially. If Gustavo appreciates support, then he works hard and remains humble. Anyone who respects their craft or connects with their audience can achieve success. Anyone who remains humble or is down to earth can connect with their audience.",
    "nl2fol": {
      "Gustavo either struggles financially or achieves success, but not both.": "struggles_financially(Gustavo) ⊕ achieves_success(Gustavo)",
      "Anyone who understands emotions and expresses themselves sincerely can connect with their audience.": "∀x ((understands_emotions(x) ∧ expresses_sincerely(x)) → connects_with_audience(x))",
      "If Myla listens to others, then he both values feedback and is down to earth.": "listens_to_others(Myla) → (values_feedback(Myla) ∧ is_down_to_earth(Myla))",
      "Gustavo is either charismatic or remains humble, but not both.": "remains_humble(Gustavo) ⊕ has_charisma(Gustavo)",
      "Clayton does not listen to others.": "¬listens_to_others(Clayton)",
      "Gustavo struggles financially.": "struggles_financially(Gustavo)",
      "If Gustavo appreciates support, then he works hard and remains humble.": "appreciates_support(Gustavo) → (works_hard(Gustavo) ∧ remains_humble(Gustavo))",
      "Anyone who respects their craft or connects with their audience can achieve success.": "∀x ((respects_craft(x) ∨ connects_with_audience(x)) → achieves_success(x))",
      "Anyone who remains humble or is down to earth can connect with their audience.": "∀x ((remains_humble(x) ∨ is_down_to_earth(x)) → connects_with_audience(x))"
    },
    "conclusion_fol": "¬has_exceptional_talent(Gustavo)"
  },
  {
    "id": 383,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mariah achieves fame.",
    "reasoning": "fact1: Mariah enjoys solo travel.\nfact2: Mariah values her privacy.\nrule: If Mariah enjoys solo travel, then she is either open-minded or values her privacy, but not both.\nconclusion: Mariah is not open-minded.\n\nfact1: Mariah does not appreciate knowledge.\nrule: Everyone appreciates knowledge or values education.\nconclusion: Mariah values education.\n\nfact1: Mariah trusts her intuition.\nrule: Anyone who trusts their intuition will listen to their heart.\nconclusion: Mariah listens to her heart.\n\nfact1: Mariah listens to her heart.\nrule: If someone listens to their heart, then they will find inner peace.\nconclusion: Mariah finds inner peace.\n\nfact1: Mariah values education.\nrule: If Mariah values education, then she has creative talent and expresses emotions.\nconclusion: Mariah has creative talent.\n\nfact1: Mariah has creative talent.\nfact2: Mariah finds inner peace.\nrule: If Mariah has creative talent, then she can either achieve fame or find inner peace, but not both.\nconclusion: Mariah does not achieve fame.\n\nTherefore, it is false that Mariah achieves fame. The correct option is: B.",
    "context": "If someone listens to their heart, then they will find inner peace. If Mariah has creative talent, then she can either achieve fame or find inner peace, but not both. Mariah enjoys solo travel. Mariah trusts her intuition. If Mariah values education, then she has creative talent and expresses emotions. Anyone who trusts their intuition will listen to their heart. If Mariah enjoys solo travel, then she is either open-minded or values her privacy, but not both. Everyone appreciates knowledge or values education. Mariah does not appreciate knowledge. Mariah values her privacy.",
    "nl2fol": {
      "If someone listens to their heart, then they will find inner peace.": "∀x (listens_to_heart(x) → finds_inner_peace(x))",
      "If Mariah has creative talent, then she can either achieve fame or find inner peace, but not both.": "has_creative_talent(Mariah) → (achieves_fame(Mariah) ⊕ finds_inner_peace(Mariah))",
      "Mariah enjoys solo travel.": "enjoys_solo_travel(Mariah)",
      "Mariah trusts her intuition.": "trusting_intuition(Mariah)",
      "If Mariah values education, then she has creative talent and expresses emotions.": "valued_education(Mariah) → (has_creative_talent(Mariah) ∧ express_emotions(Mariah))",
      "Anyone who trusts their intuition will listen to their heart.": "∀x (trusting_intuition(x) → listens_to_heart(x))",
      "If Mariah enjoys solo travel, then she is either open-minded or values her privacy, but not both.": "enjoys_solo_travel(Mariah) → (open_minded(Mariah) ⊕ values_privacy(Mariah))",
      "Everyone appreciates knowledge or values education.": "∀x (appreciates_knowledge(x) ∨ valued_education(x))",
      "Mariah does not appreciate knowledge.": "¬appreciates_knowledge(Mariah)",
      "Mariah values her privacy.": "values_privacy(Mariah)"
    },
    "conclusion_fol": "achieves_fame(Mariah)"
  },
  {
    "id": 384,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eliana supports conservation efforts.",
    "reasoning": "fact1: Eliana works on large scale projects.\nfact2: Eliana does not have strategic vision.\nrule: If Eliana works on large scale projects, then she either implements new technologies or has strategic vision (but not both).\nconclusion: Eliana implements new technologies.\n\nfact1: Eliana is passionate.\nrule: If Eliana is passionate, then she organizes the community and mobilizes volunteers.\nconclusion: Eliana organizes communities.\n\nfact1: Eliana organizes communities.\nfact2: Eliana implements new technologies.\nrule: For all humans, if they organize communities and implement new technologies, then they can reduce waste.\nconclusion: Eliana reduces waste.\n\nfact1: Eliana reduces waste.\nfact2: Eliana does not conserve resources.\nrule: If Eliana reduces waste or conserves resources, then she loves nature.\nconclusion: Eliana loves nature.\n\nfact1: Eliana loves nature.\nrule: If Eliana loves nature, then she cares for the environment and develops sustainable solutions.\nconclusion: Eliana cares for the environment.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Eliana supports conservation efforts. The correct option is: C.",
    "context": "Eliana appreciates beauty or loves nature. If Mohamed loves nature, then she cares for the environment and develops sustainable solutions. If Eliana reduces waste or conserves resources, then she loves nature. Anthony does not have strategic vision. If Eliana works on large scale projects, then she either implements new technologies or has strategic vision (but not both). If Jesse is passionate, then she organizes the community and mobilizes volunteers. If Mohamed works on large scale projects, then she either implements new technologies or has strategic vision (but not both). If Eliana loves nature, then she cares for the environment and develops sustainable solutions. Eliana does not conserve resources. For all humans, if they organize communities and implement new technologies, then they can reduce waste. Mohamed promotes eco-friendly practices. Jesse either cares for the environment or supports conservation efforts (or both). Jesse works on large scale projects. Eliana is passionate. If Eliana is passionate, then she organizes the community and mobilizes volunteers. Eliana does not have strategic vision. Eliana works on large scale projects. Anthony protects endangered species.",
    "nl2fol": {
      "Eliana appreciates beauty or loves nature.": "appreciates_beauty(Eliana) ∨ love_nature(Eliana)",
      "If Mohamed loves nature, then she cares for the environment and develops sustainable solutions.": "love_nature(Mohamed) → (care_for_environment(Mohamed) ∧ develop_sustainable_solutions(Mohamed))",
      "If Eliana reduces waste or conserves resources, then she loves nature.": "(reduce_waste(Eliana) ∨ conserve_resources(Eliana)) → love_nature(Eliana)",
      "Anthony does not have strategic vision.": "¬has_strategic_vision(Anthony)",
      "If Eliana works on large scale projects, then she either implements new technologies or has strategic vision (but not both).": "works_on_large_scale_projects(Eliana) → (implements_new_technology(Eliana) ⊕ has_strategic_vision(Eliana))",
      "If Jesse is passionate, then she organizes the community and mobilizes volunteers.": "passionate(Jesse) → (organizes_community(Jesse) ∧ mobilize_volunteers(Jesse))",
      "If Mohamed works on large scale projects, then she either implements new technologies or has strategic vision (but not both).": "works_on_large_scale_projects(Mohamed) → (implements_new_technology(Mohamed) ⊕ has_strategic_vision(Mohamed))",
      "If Eliana loves nature, then she cares for the environment and develops sustainable solutions.": "love_nature(Eliana) → (care_for_environment(Eliana) ∧ develop_sustainable_solutions(Eliana))",
      "Eliana does not conserve resources.": "¬conserve_resources(Eliana)",
      "For all humans, if they organize communities and implement new technologies, then they can reduce waste.": "∀x ((organizes_community(x) ∧ implements_new_technology(x)) → reduce_waste(x))",
      "Mohamed promotes eco-friendly practices.": "promote_eco_friendly_practices(Mohamed)",
      "Jesse either cares for the environment or supports conservation efforts (or both).": "care_for_environment(Jesse) ∨ support_conservational_efforts(Jesse)",
      "Jesse works on large scale projects.": "works_on_large_scale_projects(Jesse)",
      "Eliana is passionate.": "passionate(Eliana)",
      "If Eliana is passionate, then she organizes the community and mobilizes volunteers.": "passionate(Eliana) → (organizes_community(Eliana) ∧ mobilize_volunteers(Eliana))",
      "Eliana does not have strategic vision.": "¬has_strategic_vision(Eliana)",
      "Eliana works on large scale projects.": "works_on_large_scale_projects(Eliana)",
      "Anthony protects endangered species.": "protects_endangered_species(Anthony)"
    },
    "conclusion_fol": "support_conservational_efforts(Eliana)"
  },
  {
    "id": 385,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sailor has emotional depth.",
    "reasoning": "fact1: Sailor is not transparent.\nrule: Sailor either creates intrigue or is transparent, but not both.\nconclusion: Sailor creates intrigue.\n\nfact1: Sailor does not have charisma.\nfact2: Sailor creates intrigue.\nrule: If Sailor guards his secrets, then he has charisma and creates intrigue.\nconclusion: Sailor does not guard his secrets.\n\nfact1: Sailor does not guard his secrets.\nrule: Sailor either opens up his emotions or guards his secrets, but not both.\nconclusion: Sailor opens up his emotions.\n\nfact1: Sailor opens up his emotions.\nrule: For Sailor, he either hides his vulnerability or opens up his emotions, but not both.\nconclusion: Sailor does not hide vulnerability.\n\nfact1: Sailor tells compelling stories.\nfact2: Sailor does not hide vulnerability.\nrule: If Sailor tells compelling stories, then he has experienced adversity or hides vulnerability.\nconclusion: Sailor has experienced adversity.\n\nfact1: Sailor has experienced adversity.\nrule: For all humans, if they have experienced adversity, then they have emotional depth.\nconclusion: Sailor has emotional depth.\n\nTherefore, it is true that Sailor has emotional depth. The correct option is: A.",
    "context": "If Sailor guards his secrets, then he has charisma and creates intrigue. Sailor is not transparent. Anyone who has visible scars or a troubled past has experienced adversity. Sailor does not have charisma. Sailor either creates intrigue or is transparent, but not both. If Sailor builds trust, then he shows vulnerability and guards secrets. For Sailor, he either hides his vulnerability or opens up his emotions, but not both. Sailor tells compelling stories. Sailor either opens up his emotions or guards his secrets, but not both. If Sailor tells compelling stories, then he has experienced adversity or hides vulnerability. For all humans, if they have experienced adversity, then they have emotional depth.",
    "nl2fol": {
      "If Sailor guards his secrets, then he has charisma and creates intrigue.": "guard_secrets(Sailor) → (have_charisma(Sailor) ∧ create_intrigue(Sailor))",
      "Sailor is not transparent.": "¬is_transparent(Sailor)",
      "Anyone who has visible scars or a troubled past has experienced adversity.": "∀x ((has_visible_scars(x) ∨ has_troubled_past(x)) → has_experienced_adversity(x))",
      "Sailor does not have charisma.": "¬have_charisma(Sailor)",
      "Sailor either creates intrigue or is transparent, but not both.": "create_intrigue(Sailor) ⊕ is_transparent(Sailor)",
      "If Sailor builds trust, then he shows vulnerability and guards secrets.": "build_trust(Sailor) → (show_vulnerability(Sailor) ∧ guard_secrets(Sailor))",
      "For Sailor, he either hides his vulnerability or opens up his emotions, but not both.": "hide_vulnerability(Sailor) ⊕ open_up_emotions(Sailor)",
      "Sailor tells compelling stories.": "tell_compelling_stories(Sailor)",
      "Sailor either opens up his emotions or guards his secrets, but not both.": "open_up_emotions(Sailor) ⊕ guard_secrets(Sailor)",
      "If Sailor tells compelling stories, then he has experienced adversity or hides vulnerability.": "tell_compelling_stories(Sailor) → (has_experienced_adversity(Sailor) ∨ hide_vulnerability(Sailor))",
      "For all humans, if they have experienced adversity, then they have emotional depth.": "∀x (has_experienced_adversity(x) → has_emotional_depth(x))"
    },
    "conclusion_fol": "has_emotional_depth(Sailor)"
  },
  {
    "id": 386,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Either Sweetsie stings when threatened or she never stings, but not both.",
    "reasoning": "fact1: Sweetsie does not collect nectar.\nrule: Sweetsie either collects nectar or has a weak stinger.\nconclusion: Sweetsie has a weak stinger.\n\nfact1: Sweetsie has a stinger.\nfact2: Sweetsie is fearful.\nrule: If Sweetsie has a stinger, then she is either aggressive or fearful, but not both.\nconclusion: Sweetsie does not have an aggressive nature.\n\nfact1: Sweetsie loves her colony.\nfact2: Sweetsie has a strong stinger.\nrule: All bees that love their colony and have a strong stinger will protect their hive.\nconclusion: Sweetsie protects her hive.\n\nfact1: Sweetsie does not guard her colony.\nrule: Every bee either guards its colony or is defensive.\nconclusion: Sweetsie is defensive.\n\nfact1: Sweetsie protects her hive.\nrule: Any bee that protects its hive will sting when threatened.\nconclusion: Sweetsie stings when threatened.\n\nfact1: Sweetsie is defensive.\nfact2: Sweetsie does not have an aggressive nature.\nrule: If Sweetsie is defensive, then she is either aggressive or timid, but not both.\nconclusion: Sweetsie is timid.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Either Sweetsie stings when threatened or she never stings, but not both. The correct option is: C.",
    "context": "Sweetsie has a strong stinger. If Anderson either has a weak stinger or is timid, then she will never sting. If Anderson is defensive, then she is either aggressive or timid, but not both. Anderson does not collect nectar. Any bee that feels threatened or has valuable honey is defensive. If Leland has a stinger, then she is either aggressive or fearful, but not both. Any bee that attacks predators has an aggressive nature. If Sweetsie lives alone, then she avoids conflicts and is timid. Blair loves her colony. Every bee either guards its colony or is defensive. If Sweetsie pollinates plants, then she either makes medicinal honey or has a weak stinger (or both). Anderson has a stinger. Any bee that protects its hive will sting when threatened. Sweetsie loves her colony. Sweetsie either collects nectar or has a weak stinger. Leland either collects nectar or has a weak stinger. Anderson has a strong stinger. Leland does not guard her colony. Sweetsie does not guard her colony. Sweetsie either builds a nest or protects her hive. If Sweetsie has a stinger, then she is either aggressive or fearful, but not both. All bees that love their colony and have a strong stinger will protect their hive. Sweetsie is fearful. Sweetsie does not collect nectar. If Sweetsie is defensive, then she is either aggressive or timid, but not both. Sweetsie has a stinger.",
    "nl2fol": {
      "Sweetsie has a strong stinger.": "has_strong_stinger(Sweetsie)",
      "If Anderson either has a weak stinger or is timid, then she will never sting.": "(has_weak_stinger(Anderson) ⊕ is_timid(Anderson)) → never_sting(Anderson)",
      "If Anderson is defensive, then she is either aggressive or timid, but not both.": "is_defensive(Anderson) → (has_aggressive_nature(Anderson) ⊕ is_timid(Anderson))",
      "Anderson does not collect nectar.": "¬collects_nectar(Anderson)",
      "Any bee that feels threatened or has valuable honey is defensive.": "∀x ((feels_threatened(x) ∨ has_valuable_honey(x)) → is_defensive(x))",
      "If Leland has a stinger, then she is either aggressive or fearful, but not both.": "has_stinger(Leland) → (has_aggressive_nature(Leland) ⊕ is_fearful(Leland))",
      "Any bee that attacks predators has an aggressive nature.": "∀x (attacks_predators(x) → has_aggressive_nature(x))",
      "If Sweetsie lives alone, then she avoids conflicts and is timid.": "live_alone(Sweetsie) → (avoid_conflicts(Sweetsie) ∧ is_timid(Sweetsie))",
      "Blair loves her colony.": "loves_colony(Blair)",
      "Every bee either guards its colony or is defensive.": "∀x (guards_colony(x) ∨ is_defensive(x))",
      "If Sweetsie pollinates plants, then she either makes medicinal honey or has a weak stinger (or both).": "pollinates_plants(Sweetsie) → (makes_medicinal_honey(Sweetsie) ∨ has_weak_stinger(Sweetsie))",
      "Anderson has a stinger.": "has_stinger(Anderson)",
      "Any bee that protects its hive will sting when threatened.": "∀x (protect_hive(x) → sting_when_threatened(x))",
      "Sweetsie loves her colony.": "loves_colony(Sweetsie)",
      "Sweetsie either collects nectar or has a weak stinger.": "collects_nectar(Sweetsie) ∨ has_weak_stinger(Sweetsie)",
      "Leland either collects nectar or has a weak stinger.": "collects_nectar(Leland) ∨ has_weak_stinger(Leland)",
      "Anderson has a strong stinger.": "has_strong_stinger(Anderson)",
      "Leland does not guard her colony.": "¬guards_colony(Leland)",
      "Sweetsie does not guard her colony.": "¬guards_colony(Sweetsie)",
      "Sweetsie either builds a nest or protects her hive.": "builds_nest(Sweetsie) ∨ protect_hive(Sweetsie)",
      "If Sweetsie has a stinger, then she is either aggressive or fearful, but not both.": "has_stinger(Sweetsie) → (has_aggressive_nature(Sweetsie) ⊕ is_fearful(Sweetsie))",
      "All bees that love their colony and have a strong stinger will protect their hive.": "∀x ((loves_colony(x) ∧ has_strong_stinger(x)) → protect_hive(x))",
      "Sweetsie is fearful.": "is_fearful(Sweetsie)",
      "Sweetsie does not collect nectar.": "¬collects_nectar(Sweetsie)",
      "If Sweetsie is defensive, then she is either aggressive or timid, but not both.": "is_defensive(Sweetsie) → (has_aggressive_nature(Sweetsie) ⊕ is_timid(Sweetsie))",
      "Sweetsie has a stinger.": "has_stinger(Sweetsie)"
    },
    "conclusion_fol": "sting_when_threatened(Sweetsie) ⊕ never_sting(Sweetsie)"
  },
  {
    "id": 387,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Devin does not become a coastal steward.",
    "reasoning": "fact1: Devin enjoys surfing.\nfact2: Devin has a beach house.\nrule: If Devin enjoys surfing, then he either has a beach house or lives in a coastal town (but not both).\nconclusion: Devin does not live in a coastal town.\n\nfact1: Devin does not live in a coastal town.\nrule: Devin lives in a coastal town or grew up by the sea.\nconclusion: Devin grows up by the sea.\n\nfact1: Devin loves water.\nrule: If Devin loves water, then he enjoys boating.\nconclusion: Devin enjoys boating.\n\nfact1: Devin enjoys boating.\nfact2: Devin does not work on a cruise.\nrule: If Devin enjoys boating, then he can either become a fisherman or work on a cruise, but not both.\nconclusion: Devin becomes a fisherman.\n\nfact1: Devin has a passion for the ocean.\nfact2: Devin becomes a fisherman.\nrule: If Devin has a passion for the ocean, then he can either become a marine biologist or a fisherman, but not both.\nconclusion: Devin does not become a marine biologist.\n\nfact1: Devin grows up by the sea.\nfact2: Devin does not become a marine biologist.\nrule: If Devin grows up by the sea, then he can either become a marine biologist or a coastal steward, but not both.\nconclusion: Devin becomes a coastal steward.\n\nTherefore, it is false that Devin does not become a coastal steward. The correct option is: B.",
    "context": "Devin enjoys surfing. If Devin loves water, then he enjoys boating. Dahlia enjoys surfing. Devin has a passion for the ocean. If Devin enjoys boating, then he can either become a fisherman or work on a cruise, but not both. Devin studies ecology or becomes a fisherman. Dahlia has a passion for the ocean. Everyone who either likes sailing or owns a yacht (but not both) enjoys boating. Anthony lives in a coastal town or grew up by the sea. If Koa enjoys boating, then he can either become a fisherman or work on a cruise, but not both. If Devin grows up by the sea, then he can either become a marine biologist or a coastal steward, but not both. Devin does not work on a cruise. Devin lives in a coastal town or grew up by the sea. If Devin enjoys surfing, then he either has a beach house or lives in a coastal town (but not both). If Devin has a passion for the ocean, then he can either become a marine biologist or a fisherman, but not both. Devin has a beach house. Koa does not work on a cruise. If Dahlia loves water, then he enjoys boating. Anthony has a beach house. Devin loves water. If Anthony enjoys surfing, then he either has a beach house or lives in a coastal town (but not both). If Devin enjoys exploring outdoors, then he either becomes a conservationist or grows up by the sea (or both).",
    "nl2fol": {
      "Devin enjoys surfing.": "enjoys_surfing(Devin)",
      "If Devin loves water, then he enjoys boating.": "loves_water(Devin) → enjoys_boating(Devin)",
      "Dahlia enjoys surfing.": "enjoys_surfing(Dahlia)",
      "Devin has a passion for the ocean.": "has_passion_for_ocean(Devin)",
      "If Devin enjoys boating, then he can either become a fisherman or work on a cruise, but not both.": "enjoys_boating(Devin) → (become_a_fisherman(Devin) ⊕ work_on_a_cruise(Devin))",
      "Devin studies ecology or becomes a fisherman.": "study_ecology(Devin) ∨ become_a_fisherman(Devin)",
      "Dahlia has a passion for the ocean.": "has_passion_for_ocean(Dahlia)",
      "Everyone who either likes sailing or owns a yacht (but not both) enjoys boating.": "∀x ((likes_sailing(x) ⊕ own_a_yacht(x)) → enjoys_boating(x))",
      "Anthony lives in a coastal town or grew up by the sea.": "live_in_a_coastal_town(Anthony) ∨ grow_up_by_the_sea(Anthony)",
      "If Koa enjoys boating, then he can either become a fisherman or work on a cruise, but not both.": "enjoys_boating(Koa) → (become_a_fisherman(Koa) ⊕ work_on_a_cruise(Koa))",
      "If Devin grows up by the sea, then he can either become a marine biologist or a coastal steward, but not both.": "grow_up_by_the_sea(Devin) → (become_a_marine_biologist(Devin) ⊕ become_a_coastal_steward(Devin))",
      "Devin does not work on a cruise.": "¬work_on_a_cruise(Devin)",
      "Devin lives in a coastal town or grew up by the sea.": "live_in_a_coastal_town(Devin) ∨ grow_up_by_the_sea(Devin)",
      "If Devin enjoys surfing, then he either has a beach house or lives in a coastal town (but not both).": "enjoys_surfing(Devin) → (has_beach_house(Devin) ⊕ live_in_a_coastal_town(Devin))",
      "If Devin has a passion for the ocean, then he can either become a marine biologist or a fisherman, but not both.": "has_passion_for_ocean(Devin) → (become_a_marine_biologist(Devin) ⊕ become_a_fisherman(Devin))",
      "Devin has a beach house.": "has_beach_house(Devin)",
      "Koa does not work on a cruise.": "¬work_on_a_cruise(Koa)",
      "If Dahlia loves water, then he enjoys boating.": "loves_water(Dahlia) → enjoys_boating(Dahlia)",
      "Anthony has a beach house.": "has_beach_house(Anthony)",
      "Devin loves water.": "loves_water(Devin)",
      "If Anthony enjoys surfing, then he either has a beach house or lives in a coastal town (but not both).": "enjoys_surfing(Anthony) → (has_beach_house(Anthony) ⊕ live_in_a_coastal_town(Anthony))",
      "If Devin enjoys exploring outdoors, then he either becomes a conservationist or grows up by the sea (or both).": "enjoy_exploring_outdoors(Devin) → (become_a_conservationist(Devin) ∨ grow_up_by_the_sea(Devin))"
    },
    "conclusion_fol": "¬become_a_coastal_steward(Devin)"
  },
  {
    "id": 388,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aarav is multilingual, or he is both culturally aware and an effective diplomat.",
    "reasoning": "fact1: Aarav adapts easily.\nrule: For Aarav, either he adapts easily or he learns quickly, but it's not necessary that he does both.\nconclusion: Aarav does not learn quickly.\n\nfact1: Aarav values inclusion.\nfact2: Aarav embraces change.\nrule: Anyone who values inclusion or embraces change accepts diversity.\nconclusion: Aarav accepts diversity.\n\nfact1: Aarav accepts diversity.\nrule: If someone accepts diversity, then they are open-minded.\nconclusion: Aarav is open-minded.\n\nfact1: Aarav is open-minded.\nfact2: Aarav respects traditions.\nrule: If someone is open-minded, then they are culturally aware and respect traditions.\nconclusion: Aarav is culturally aware.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Aarav is multilingual, or he is both culturally aware and an effective diplomat. The correct option is: C.",
    "context": "Trenton values inclusion. Aarav values inclusion. Aarav has intuition or is an effective diplomat. Rafael adapts easily. If someone is open-minded, then they are culturally aware and respect traditions. Rafael respects traditions. Aarav respects traditions. Rafael speaks well. Aarav embraces change. Aarav adapts easily. For Aarav, either he adapts easily or he learns quickly, but it's not necessary that he does both. If Aarav either appreciates history or values cooperation (but not both), then he is culturally aware. If Aarav lives abroad, then he either accepts diversity or listens well, but not both. If someone accepts diversity, then they are open-minded. Anyone who values inclusion or embraces change accepts diversity. If Aarav either listens actively or seeks feedback (but not both), then he is open-minded.",
    "nl2fol": {
      "Trenton values inclusion.": "values_inclusion(Trenton)",
      "Aarav values inclusion.": "values_inclusion(Aarav)",
      "Aarav has intuition or is an effective diplomat.": "has_intuition(Aarav) ∨ effective_diplomat(Aarav)",
      "Rafael adapts easily.": "adapts_easily(Rafael)",
      "If someone is open-minded, then they are culturally aware and respect traditions.": "∀x (open_minded(x) → (respects_traditions(x) ∧ culturally_aware(x)))",
      "Rafael respects traditions.": "respects_traditions(Rafael)",
      "Aarav respects traditions.": "respects_traditions(Aarav)",
      "Rafael speaks well.": "speaks_well(Rafael)",
      "Aarav embraces change.": "embraces_change(Aarav)",
      "Aarav adapts easily.": "adapts_easily(Aarav)",
      "For Aarav, either he adapts easily or he learns quickly, but it's not necessary that he does both.": "adapts_easily(Aarav) ⊕ learns_quickly(Aarav)",
      "If Aarav either appreciates history or values cooperation (but not both), then he is culturally aware.": "(appreciates_history(Aarav) ⊕ values_cooperation(Aarav)) → culturally_aware(Aarav)",
      "If Aarav lives abroad, then he either accepts diversity or listens well, but not both.": "lives_abroad(Aarav) → (accepts_diversity(Aarav) ⊕ listens_well(Aarav))",
      "If someone accepts diversity, then they are open-minded.": "∀x (accepts_diversity(x) → open_minded(x))",
      "Anyone who values inclusion or embraces change accepts diversity.": "∀x ((values_inclusion(x) ∨ embraces_change(x)) → accepts_diversity(x))",
      "If Aarav either listens actively or seeks feedback (but not both), then he is open-minded.": "(listens_actively(Aarav) ⊕ seeks_feedback(Aarav)) → open_minded(Aarav)"
    },
    "conclusion_fol": "multilingual(Aarav) ∨ (culturally_aware(Aarav) ∧ effective_diplomat(Aarav))"
  },
  {
    "id": 389,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jemma inspires others.",
    "reasoning": "fact1: Jemma does not advocate for rights.\nfact2: Jemma does not make a difference.\nrule: If Jemma either drives social change or advocates for rights (but not both), then she makes a difference.\nconclusion: Jemma does not drive social change.\n\nfact1: Jemma works for a non-profit.\nfact2: Jemma does not support local initiatives.\nrule: If Jemma works for a non-profit, then she either provides shelter or supports local initiatives (but not both).\nconclusion: Jemma provides shelter.\n\nfact1: Jemma does not lead by example.\nfact2: Jemma does not drive social change.\nrule: Anyone who fosters connection either leads by example or drives social change (or both).\nconclusion: Jemma does not foster connection.\n\nfact1: Jemma provides shelter.\nfact2: Jemma does not empower families.\nrule: Everyone who provides shelter either empowers families or builds homes (or both).\nconclusion: Jemma builds homes.\n\nfact1: Jemma designs neighborhoods.\nfact2: Jemma does not foster connection.\nrule: If Jemma either designs neighborhoods or creates communities (but not both), then she fosters connection.\nconclusion: Jemma creates communities.\n\nfact1: Jemma builds homes.\nfact2: Jemma creates communities.\nrule: If Jemma builds homes, then she either creates communities or inspires others, but not both.\nconclusion: Jemma inspires others.\n\nTherefore, it is false that Jemma inspires others. The correct option is: B.",
    "context": "Jemma does not empower families. If Jemma either drives social change or advocates for rights (but not both), then she makes a difference. Anyone who fosters connection either leads by example or drives social change (or both). If Jemma either designs neighborhoods or creates communities (but not both), then she fosters connection. Everyone who provides shelter either empowers families or builds homes (or both). If Jemma builds homes, then she either creates communities or inspires others, but not both. Jemma pursues innovation or drives social change. Jemma does not make a difference. Jemma does not support local initiatives. If Jemma works for a non-profit, then she either provides shelter or supports local initiatives (but not both). Jemma does not advocate for rights. Jemma does not lead by example. Jemma works for a non-profit. Jemma designs neighborhoods.",
    "nl2fol": {
      "Jemma does not empower families.": "¬empower_families(Jemma)",
      "If Jemma either drives social change or advocates for rights (but not both), then she makes a difference.": "(drive_social_change(Jemma) ⊕ advocate_rights(Jemma)) → make_a_difference(Jemma)",
      "Anyone who fosters connection either leads by example or drives social change (or both).": "∀x (foster_connection(x) → (lead_by_example(x) ∨ drive_social_change(x)))",
      "If Jemma either designs neighborhoods or creates communities (but not both), then she fosters connection.": "(design_neighborhoods(Jemma) ⊕ create_communities(Jemma)) → foster_connection(Jemma)",
      "Everyone who provides shelter either empowers families or builds homes (or both).": "∀x (provide_shelter(x) → (empower_families(x) ∨ build_homes(x)))",
      "If Jemma builds homes, then she either creates communities or inspires others, but not both.": "build_homes(Jemma) → (create_communities(Jemma) ⊕ inspire_others(Jemma))",
      "Jemma pursues innovation or drives social change.": "pursue_innovation(Jemma) ∨ drive_social_change(Jemma)",
      "Jemma does not make a difference.": "¬make_a_difference(Jemma)",
      "Jemma does not support local initiatives.": "¬support_local_initiatives(Jemma)",
      "If Jemma works for a non-profit, then she either provides shelter or supports local initiatives (but not both).": "work_for_non_profit(Jemma) → (provide_shelter(Jemma) ⊕ support_local_initiatives(Jemma))",
      "Jemma does not advocate for rights.": "¬advocate_rights(Jemma)",
      "Jemma does not lead by example.": "¬lead_by_example(Jemma)",
      "Jemma works for a non-profit.": "work_for_non_profit(Jemma)",
      "Jemma designs neighborhoods.": "design_neighborhoods(Jemma)"
    },
    "conclusion_fol": "inspire_others(Jemma)"
  },
  {
    "id": 390,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thiago does not document humanitarian issues.",
    "reasoning": "fact1: Thiago follows leads.\nfact2: Thiago does not gather evidence.\nrule: Anyone who follows leads or gathers evidence can investigate crimes.\nconclusion: Thiago investigates crimes.\n\nfact1: Thiago investigates crimes.\nfact2: Thiago does not seek the truth.\nrule: Everyone who is either an investigative reporter or investigates crimes seeks the truth.\nconclusion: Thiago is an investigative reporter.\n\nfact1: Thiago is an investigative reporter.\nfact2: Thiago shines light on corruption.\nrule: If Thiago is an investigative reporter, then he either exposes social injustice or shines light on corruption, but not both.\nconclusion: Thiago does not expose social injustice.\n\nfact1: Thiago does not analyze statistical data.\nrule: Thiago either conducts in-depth research or analyzes statistical data, but not both.\nconclusion: Thiago conducts in-depth research.\n\nfact1: Thiago conducts in-depth research.\nrule: Thiago either tells human stories or conducts in-depth research, but not both.\nconclusion: Thiago is a photojournalist.\n\nfact1: Thiago is a photojournalist.\nrule: Thiago tells human stories or is a photojournalist.\nconclusion: Thiago is a photojournalist.\n\nfact1: Thiago is a photojournalist.\nfact2: Thiago does not expose social injustice.\nrule: If Thiago is a photojournalist, then he either exposes social injustice or captures real-life stories, but not both.\nconclusion: Thiago captures real-life stories.\n\nfact1: Thiago captures real-life stories.\nfact2: Thiago does not raise global awareness.\nrule: For all humans, if a person documents humanitarian issues and captures real-life stories, then they raise global awareness.\nconclusion: Thiago does not document humanitarian issues.\n\nTherefore, it is true that Thiago does not document humanitarian issues. The correct option is: A.",
    "context": "Thiago either writes news articles or is a photojournalist. If Thiago either writes personal narratives or creates emotive content (but not both), then he tells human stories. Thiago follows leads. Everyone who is either an investigative reporter or investigates crimes seeks the truth. Thiago either conducts in-depth research or analyzes statistical data, but not both. For all humans, if a person documents humanitarian issues and captures real-life stories, then they raise global awareness. Thiago either tells human stories or conducts in-depth research, but not both. Thiago shines light on corruption. If Thiago works in the media, then he is either involved in political coverage or investigates crimes (but not both). Thiago does not seek the truth. Anyone who follows leads or gathers evidence can investigate crimes. Thiago tells human stories or is a photojournalist. If Thiago is an investigative reporter, then he either exposes social injustice or shines light on corruption, but not both. If Thiago has press credentials or knows fact-finding, then he can be an investigative reporter. Thiago does not gather evidence. Thiago does not analyze statistical data. Thiago does not raise global awareness. If Thiago is a photojournalist, then he either exposes social injustice or captures real-life stories, but not both.",
    "nl2fol": {
      "Thiago either writes news articles or is a photojournalist.": "writes_news_articles(Thiago) ∨ is_photojournalist(Thiago)",
      "If Thiago either writes personal narratives or creates emotive content (but not both), then he tells human stories.": "(write_personal_narratives(Thiago) ⊕ create_emotive_content(Thiago)) → tell_human_stories(Thiago)",
      "Thiago follows leads.": "follow_leads(Thiago)",
      "Everyone who is either an investigative reporter or investigates crimes seeks the truth.": "∀x ((investigative_reporter(x) ⊕ investigate_crimes(x)) → seek_truth(x))",
      "Thiago either conducts in-depth research or analyzes statistical data, but not both.": "conduct_in_depth_research(Thiago) ⊕ analyze_statistical_data(Thiago)",
      "For all humans, if a person documents humanitarian issues and captures real-life stories, then they raise global awareness.": "∀x ((document_humanitarian_issues(x) ∧ capture_real_life_stories(x)) → raise_global_awareness(x))",
      "Thiago either tells human stories or conducts in-depth research, but not both.": "tell_human_stories(Thiago) ⊕ conduct_in_depth_research(Thiago)",
      "Thiago shines light on corruption.": "shine_light_on_corruption(Thiago)",
      "If Thiago works in the media, then he is either involved in political coverage or investigates crimes (but not both).": "works_in_media(Thiago) → (covers_politics(Thiago) ⊕ investigate_crimes(Thiago))",
      "Thiago does not seek the truth.": "¬seek_truth(Thiago)",
      "Anyone who follows leads or gathers evidence can investigate crimes.": "∀x ((follow_leads(x) ∨ gather_evidence(x)) → investigate_crimes(x))",
      "Thiago tells human stories or is a photojournalist.": "tell_human_stories(Thiago) ∨ is_photojournalist(Thiago)",
      "If Thiago is an investigative reporter, then he either exposes social injustice or shines light on corruption, but not both.": "investigative_reporter(Thiago) → (shine_light_on_corruption(Thiago) ⊕ expose_social_injustice(Thiago))",
      "If Thiago has press credentials or knows fact-finding, then he can be an investigative reporter.": "(has_press_credentials(Thiago) ∨ knows_fact_finding(Thiago)) → investigative_reporter(Thiago)",
      "Thiago does not gather evidence.": "¬gather_evidence(Thiago)",
      "Thiago does not analyze statistical data.": "¬analyze_statistical_data(Thiago)",
      "Thiago does not raise global awareness.": "¬raise_global_awareness(Thiago)",
      "If Thiago is a photojournalist, then he either exposes social injustice or captures real-life stories, but not both.": "is_photojournalist(Thiago) → (expose_social_injustice(Thiago) ⊕ capture_real_life_stories(Thiago))"
    },
    "conclusion_fol": "¬document_humanitarian_issues(Thiago)"
  },
  {
    "id": 391,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Tiger defends his home, then he will either earn the respect of others or become a leader, but not both.",
    "reasoning": "fact1: Tiger does not avoid predators.\nrule: If a fish blends with its environment, then it avoids predators.\nconclusion: Tiger does not blend with his environment.\n\nfact1: Tiger has sharp teeth.\nfact2: Tiger does not protect his family.\nrule: If Tiger has sharp teeth and is fearless, then he will protect his family.\nconclusion: Tiger is not fearless.\n\nfact1: Tiger does not blend with his environment.\nrule: Tiger either has a unique appearance or blends with his environment, but not both.\nconclusion: Tiger has a unique appearance.\n\nfact1: Tiger has a unique appearance.\nfact2: Tiger does not have a strong will.\nrule: If Tiger earns respect, then he has a unique appearance and a strong will.\nconclusion: Tiger does not earn the respect of others.\n\nfact1: Tiger explores the reef.\nfact2: Tiger does not hunt alone.\nrule: If Tiger explores the reef, then he is either a confident swimmer or hunts alone, but not both.\nconclusion: Tiger swims confidently.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Tiger defends his home, then he will either earn the respect of others or become a leader, but not both. The correct option is: C.",
    "context": "If a fish blends with its environment, then it avoids predators. Tiger does not protect his family. Everything guards his territory or becomes a leader. Tiger explores the reef. Captain does not protect his family. Everything has sharp teeth. Tiger does not hunt alone. Frank guards his territory. Tiger does not avoid predators. Every fish that feels secure either has good reflexes or swims confidently (or both). If Tiger lives in a coral reef, then he either blends with his environment or has camouflage scales (or both). If Tiger explores the reef, then he is either a confident swimmer or hunts alone, but not both. If Frank has sharp teeth and is fearless, then he will protect his family. If Tiger swims quickly, then he darts between rocks and has a unique appearance. If Captain explores the reef, then he is either a confident swimmer or hunts alone, but not both. If Tiger has sharp teeth and is fearless, then he will protect his family. Tiger either has a unique appearance or blends with his environment, but not both. Tiger has sharp teeth. Tiger does not have a strong will. Captain does not avoid predators. Captain does not have a strong will. If Frank earns respect, then he has a unique appearance and a strong will. Captain explores the reef. If Tiger earns respect, then he has a unique appearance and a strong will.",
    "nl2fol": {
      "If a fish blends with its environment, then it avoids predators.": "∀x (blends_with_environment(x) → avoids_predators(x))",
      "Tiger does not protect his family.": "¬protects_family(Tiger)",
      "Everything guards his territory or becomes a leader.": "guards_territory(Everything) ∨ become_leader(Everything)",
      "Tiger explores the reef.": "explores_reef(Tiger)",
      "Captain does not protect his family.": "¬protects_family(Captain)",
      "Everything has sharp teeth.": "has_sharp_teeth(Everything)",
      "Tiger does not hunt alone.": "¬hunts_alone(Tiger)",
      "Frank guards his territory.": "guards_territory(Frank)",
      "Tiger does not avoid predators.": "¬avoids_predators(Tiger)",
      "Every fish that feels secure either has good reflexes or swims confidently (or both).": "∀x (feels_secure(x) → (has_good_reflexes(x) ∨ swims_confidently(x)))",
      "If Tiger lives in a coral reef, then he either blends with his environment or has camouflage scales (or both).": "lives_in_coral_reef(Tiger) → (blends_with_environment(Tiger) ∨ has_camouflage_scales(Tiger))",
      "If Tiger explores the reef, then he is either a confident swimmer or hunts alone, but not both.": "explores_reef(Tiger) → (hunts_alone(Tiger) ⊕ swims_confidently(Tiger))",
      "If Frank has sharp teeth and is fearless, then he will protect his family.": "(has_sharp_teeth(Frank) ∧ is_fearless(Frank)) → protects_family(Frank)",
      "If Tiger swims quickly, then he darts between rocks and has a unique appearance.": "swims_quickly(Tiger) → (darts_between_rocks(Tiger) ∧ has_unique_appearance(Tiger))",
      "If Captain explores the reef, then he is either a confident swimmer or hunts alone, but not both.": "explores_reef(Captain) → (hunts_alone(Captain) ⊕ swims_confidently(Captain))",
      "If Tiger has sharp teeth and is fearless, then he will protect his family.": "(has_sharp_teeth(Tiger) ∧ is_fearless(Tiger)) → protects_family(Tiger)",
      "Tiger either has a unique appearance or blends with his environment, but not both.": "has_unique_appearance(Tiger) ⊕ blends_with_environment(Tiger)",
      "Tiger has sharp teeth.": "has_sharp_teeth(Tiger)",
      "Tiger does not have a strong will.": "¬has_strong_will(Tiger)",
      "Captain does not avoid predators.": "¬avoid_predators(Captain)",
      "Captain does not have a strong will.": "¬has_strong_will(Captain)",
      "If Frank earns respect, then he has a unique appearance and a strong will.": "earn_respect(Frank) → (has_unique_appearance(Frank) ∧ has_strong_will(Frank))",
      "Captain explores the reef.": "explores_reef(Captain)",
      "If Tiger earns respect, then he has a unique appearance and a strong will.": "earn_respect(Tiger) → (has_unique_appearance(Tiger) ∧ has_strong_will(Tiger))"
    },
    "conclusion_fol": "defends_home(Tiger) → (earn_respect(Tiger) ⊕ become_leader(Tiger))"
  },
  {
    "id": 392,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Anastasia either protects the environment or appreciates nature (or both).",
    "reasoning": "fact1: Anastasia pursues scientific research.\nfact2: Anastasia supports local communities.\nrule: If Anastasia pursues scientific research, then she either advocates conservation or supports local communities (but not both).\nconclusion: Anastasia does not advocate conservation.\n\nfact1: Anastasia meditates often.\nrule: If Anastasia meditates often, then she has spiritual connections.\nconclusion: Anastasia has spiritual connections.\n\nfact1: Anastasia has spiritual connections.\nrule: Anastasia is either an entomologist or has spiritual connections, but not both.\nconclusion: Anastasia is not an entomologist.\n\nfact1: Anastasia lives near water.\nfact2: Anastasia does not document habitats.\nrule: If Anastasia lives near water, then she either documents habitats or studies wildlife (or both).\nconclusion: Anastasia studies wildlife.\n\nfact1: Anastasia studies wildlife.\nfact2: Anastasia does not advocate conservation.\nrule: If Anastasia studies wildlife, then she either educates others or advocates conservation (or both).\nconclusion: Anastasia educates others.\n\nfact1: Anastasia educates others.\nrule: Anastasia either educates others or protects the environment, or she may do both.\nconclusion: Anastasia does not protect the environment.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Anastasia either protects the environment or appreciates nature (or both). The correct option is: C.",
    "context": "If Anastasia studies wildlife, then she either educates others or advocates conservation (or both). If Anastasia lives near water, then she either documents habitats or studies wildlife (or both). If Anastasia pursues scientific research, then she either advocates conservation or supports local communities (but not both). Anastasia supports local communities. Anastasia meditates often. If Anastasia meditates often, then she has spiritual connections. Anastasia does not document habitats. Anyone who finds inner peace either follows their life passion or has spiritual connections (or both). Anastasia either educates others or protects the environment, or she may do both. Anastasia is either an entomologist or has spiritual connections, but not both. If someone shares knowledge, then they will educate other people. If Anastasia works outdoors, then she either protects the environment or respects ecosystems (but not both). Anastasia lives near water. Anastasia pursues scientific research.",
    "nl2fol": {
      "If Anastasia studies wildlife, then she either educates others or advocates conservation (or both).": "study_wildlife(Anastasia) → (educate_others(Anastasia) ∨ advocate_conservation(Anastasia))",
      "If Anastasia lives near water, then she either documents habitats or studies wildlife (or both).": "live_near_water(Anastasia) → (document_habitats(Anastasia) ∨ study_wildlife(Anastasia))",
      "If Anastasia pursues scientific research, then she either advocates conservation or supports local communities (but not both).": "pursue_scientific_research(Anastasia) → (advocate_conservation(Anastasia) ⊕ support_local_communities(Anastasia))",
      "Anastasia supports local communities.": "support_local_communities(Anastasia)",
      "Anastasia meditates often.": "meditates_often(Anastasia)",
      "If Anastasia meditates often, then she has spiritual connections.": "meditates_often(Anastasia) → has_spiritual_connections(Anastasia)",
      "Anastasia does not document habitats.": "¬document_habitats(Anastasia)",
      "Anyone who finds inner peace either follows their life passion or has spiritual connections (or both).": "∀x (find_Inner_peace(x) → (follow_life_passion(x) ∨ has_spiritual_connections(x)))",
      "Anastasia either educates others or protects the environment, or she may do both.": "educate_others(Anastasia) ⊕ protect_environment(Anastasia)",
      "Anastasia is either an entomologist or has spiritual connections, but not both.": "has_spiritual_connections(Anastasia) ⊕ is_entomologist(Anastasia)",
      "If someone shares knowledge, then they will educate other people.": "∀x (shares_knowledge(x) → educate_others(x))",
      "If Anastasia works outdoors, then she either protects the environment or respects ecosystems (but not both).": "works_outdoors(Anastasia) → (protect_environment(Anastasia) ⊕ respects_ecosystems(Anastasia))",
      "Anastasia lives near water.": "live_near_water(Anastasia)",
      "Anastasia pursues scientific research.": "pursue_scientific_research(Anastasia)"
    },
    "conclusion_fol": "protect_environment(Anastasia) ∨ appreciate_nature(Anastasia)"
  },
  {
    "id": 393,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Valery does not have a unique interest.",
    "reasoning": "fact1: Valery does not keep it private.\nrule: Valery either turns her unique interest into art or keeps it private, but not both.\nconclusion: Valery turns it into art.\n\nfact1: Valery does not think outside the box.\nfact2: Valery does not drive innovation.\nrule: If Valery either thinks outside the box or takes risks (but not both), then she drives innovation.\nconclusion: Valery does not take risks.\n\nfact1: Valery does not face challenges.\nfact2: Valery cannot learn quickly.\nrule: Anyone who achieves success or faces challenges can learn quickly.\nconclusion: Valery does not achieve success.\n\nfact1: Valery does not take risks.\nfact2: Valery does not achieve success.\nrule: If Valery takes risks or follows her passion, then she will achieve success.\nconclusion: Valery does not follow her passion.\n\nfact1: Valery does not explore new ideas.\nrule: Valery develops creative skills or explores new ideas.\nconclusion: Valery develops creative skills.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Valery does not have a unique interest. The correct option is: C.",
    "context": "Andrew develops creative skills or explores new ideas. Jaziel cannot learn quickly. Jaziel does not face challenges. If Jaziel has a unique interest, then she either turns it into art or makes a successful business out of it (or both). Andrew does not explore new ideas. Valery does not keep it private. If Jaziel follows her passion, then she develops creative skills and makes a successful business. Valery cannot learn quickly. Zaylee does not keep it private. If Valery either thinks outside the box or takes risks (but not both), then she drives innovation. Valery does not think outside the box. Valery does not explore new ideas. If Valery sets goals or works hard, then she can achieve success. Valery does not face challenges. If Valery takes risks or follows her passion, then she will achieve success. Zaylee does not think outside the box. Valery either turns her unique interest into art or keeps it private, but not both. Valery develops creative skills or explores new ideas. If Jaziel takes risks or follows her passion, then she will achieve success. If Zaylee either thinks outside the box or takes risks (but not both), then she drives innovation. Anyone who achieves success or faces challenges can learn quickly. Valery does not drive innovation. Jaziel either turns her unique interest into art or keeps it private, but not both.",
    "nl2fol": {
      "Andrew develops creative skills or explores new ideas.": "develops_creative_skills(Andrew) ∨ explores_new_ideas(Andrew)",
      "Jaziel cannot learn quickly.": "¬learns_quickly(Jaziel)",
      "Jaziel does not face challenges.": "¬face_challenges(Jaziel)",
      "If Jaziel has a unique interest, then she either turns it into art or makes a successful business out of it (or both).": "has_unique_interest(Jaziel) → (turns_it_into_art(Jaziel) ∨ makes_a_successful_business(Jaziel))",
      "Andrew does not explore new ideas.": "¬explores_new_ideas(Andrew)",
      "Valery does not keep it private.": "¬keeps_it_private(Valery)",
      "If Jaziel follows her passion, then she develops creative skills and makes a successful business.": "follows_passion(Jaziel) → (develops_creative_skills(Jaziel) ∧ makes_a_successful_business(Jaziel))",
      "Valery cannot learn quickly.": "¬learns_quickly(Valery)",
      "Zaylee does not keep it private.": "¬keeps_it_private(Zaylee)",
      "If Valery either thinks outside the box or takes risks (but not both), then she drives innovation.": "(thinks_outside_box(Valery) ⊕ takes_risks(Valery)) → drives_innovation(Valery)",
      "Valery does not think outside the box.": "¬thinks_outside_box(Valery)",
      "Valery does not explore new ideas.": "¬explores_new_ideas(Valery)",
      "If Valery sets goals or works hard, then she can achieve success.": "(sets_goals(Valery) ∨ works_hard(Valery)) → achieves_success(Valery)",
      "Valery does not face challenges.": "¬faces_challenges(Valery)",
      "If Valery takes risks or follows her passion, then she will achieve success.": "(takes_risks(Valery) ∨ follows_passion(Valery)) → achieves_success(Valery)",
      "Zaylee does not think outside the box.": "¬thinks_outside_box(Zaylee)",
      "Valery either turns her unique interest into art or keeps it private, but not both.": "turns_it_into_art(Valery) ⊕ keeps_it_private(Valery)",
      "Valery develops creative skills or explores new ideas.": "develops_creative_skills(Valery) ∨ explores_new_ideas(Valery)",
      "If Jaziel takes risks or follows her passion, then she will achieve success.": "(takes_risks(Jaziel) ∨ follows_passion(Jaziel)) → achieves_success(Jaziel)",
      "If Zaylee either thinks outside the box or takes risks (but not both), then she drives innovation.": "(thinks_outside_box(Zaylee) ⊕ takes_risks(Zaylee)) → drives_innovation(Zaylee)",
      "Anyone who achieves success or faces challenges can learn quickly.": "∀x ((achieves_success(x) ∨ faces_challenges(x)) → learns_quickly(x))",
      "Valery does not drive innovation.": "¬drives_innovation(Valery)",
      "Jaziel either turns her unique interest into art or keeps it private, but not both.": "turns_it_into_art(Jaziel) ⊕ keeps_it_private(Jaziel)"
    },
    "conclusion_fol": "¬has_unique_interest(Valery)"
  },
  {
    "id": 394,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sweetness is a talented drag queen.",
    "reasoning": "fact1: Sweetness has stage presence.\nfact2: Sweetness does not gain recognition.\nrule: If Sweetness either loves the spotlight or has stage presence (but not both), then he gains recognition.\nconclusion: Sweetness loves the spotlight.\n\nfact1: Sweetness does not earn fans.\nrule: If a drag queen becomes a star, then they earn fans.\nconclusion: Sweetness does not become a star.\n\nfact1: Sweetness loves the spotlight.\nfact2: Sweetness does not become a star.\nrule: If Sweetness expresses himself freely and loves the spotlight, then he becomes a star.\nconclusion: Sweetness is not able to express himself freely.\n\nfact1: Sweetness does not interact with the audience.\nrule: Every drag queen either interacts with the audience or performs with confidence, but not both is not explicitly stated.\nconclusion: Sweetness performs with confidence.\n\nfact1: Sweetness does not experiment with makeup.\nfact2: Sweetness is not able to express himself freely.\nrule: If Sweetness either creates his own persona or experiments with makeup (but not both), then he is able to express himself freely.\nconclusion: Sweetness does not create his own persona.\n\nfact1: Sweetness performs with confidence.\nfact2: Sweetness does not create his own persona.\nrule: Every drag queen who performs with confidence either creates their own persona or designs their own costumes (or both).\nconclusion: Sweetness designs his own costumes.\n\nfact1: Sweetness designs his own costumes.\nrule: A drag queen either has a charismatic stage presence or designs their own costumes, but not necessarily both.\nconclusion: Sweetness does not have a charismatic stage presence.\n\nfact1: Sweetness does not have a charismatic stage presence.\nfact2: Sweetness is not inspiring to the audience.\nrule: For all drag queens, if a drag queen is talented, then they have a charismatic stage presence or are inspiring to the audience (or both).\nconclusion: Sweetness is a talented drag queen.\n\nTherefore, it is false that Sweetness is a talented drag queen. The correct option is: B.",
    "context": "If a drag queen becomes a star, then they earn fans. Sweetness has stage presence. For all drag queens, if a drag queen is talented, then they have a charismatic stage presence or are inspiring to the audience (or both). Sweetness does not gain recognition. If Sweetness expresses himself freely and loves the spotlight, then he becomes a star. Sweetness does not earn fans. Every drag queen who performs drag either has a charismatic stage presence or has artistic flair (or both). Sweetness does not interact with the audience. If Sweetness crafts his own style, then he designs his own costumes. Every drag queen either interacts with the audience or performs with confidence, but not both is not explicitly stated. If Sweetness either chooses his own wigs or styles his own hair (but not both), then he creates his own persona. Every drag queen who performs with confidence either creates their own persona or designs their own costumes (or both). If a drag queen has artistic vision, then they take risks on stage and love the spotlight. Sweetness is not inspiring to the audience. Sweetness does not experiment with makeup. If Sweetness either creates his own persona or experiments with makeup (but not both), then he is able to express himself freely. A drag queen either has a charismatic stage presence or designs their own costumes, but not necessarily both. If Sweetness either loves the spotlight or has stage presence (but not both), then he gains recognition.",
    "nl2fol": {
      "If a drag queen becomes a star, then they earn fans.": "∀x (becomes_a_star(x) → earns_fans(x))",
      "Sweetness has stage presence.": "has_stage_Presence(Sweetness)",
      "For all drag queens, if a drag queen is talented, then they have a charismatic stage presence or are inspiring to the audience (or both).": "∀x (talented(x) → (charismatic_stage_presence(x) ∨ inspiring_to_the_audience(x)))",
      "Sweetness does not gain recognition.": "¬gains_recognition(Sweetness)",
      "If Sweetness expresses himself freely and loves the spotlight, then he becomes a star.": "(expresses_himself_freely(Sweetness) ∧ loves_the_spotlight(Sweetness)) → becomes_a_star(Sweetness)",
      "Sweetness does not earn fans.": "¬earns_fans(Sweetness)",
      "Every drag queen who performs drag either has a charismatic stage presence or has artistic flair (or both).": "∀x (performs_drag(x) → (charismatic_stage_presence(x) ∨ has_artistic_flair(x)))",
      "Sweetness does not interact with the audience.": "¬interacts_with_audience(Sweetness)",
      "If Sweetness crafts his own style, then he designs his own costumes.": "crafts_own_style(Sweetness) → designs_own_costumes(Sweetness)",
      "Every drag queen either interacts with the audience or performs with confidence, but not both is not explicitly stated.": "∀x (interacts_with_audience(x) ⊕ performs_with_confidence(x))",
      "If Sweetness either chooses his own wigs or styles his own hair (but not both), then he creates his own persona.": "(chooses_own_wigs(Sweetness) ⊕ styles_own_hair(Sweetness)) → creates_ownPersona(Sweetness)",
      "Every drag queen who performs with confidence either creates their own persona or designs their own costumes (or both).": "∀x (performs_with_confidence(x) → (creates_ownPersona(x) ∨ designs_own_costumes(x)))",
      "If a drag queen has artistic vision, then they take risks on stage and love the spotlight.": "∀x (has_artistic_vision(x) → (takes_risks_on_stage(x) ∧ loves_the_spotlight(x)))",
      "Sweetness is not inspiring to the audience.": "¬inspiring_to_the_audience(Sweetness)",
      "Sweetness does not experiment with makeup.": "¬experiments_with_makeup(Sweetness)",
      "If Sweetness either creates his own persona or experiments with makeup (but not both), then he is able to express himself freely.": "(creates_ownPersona(Sweetness) ⊕ experiments_with_makeup(Sweetness)) → expresses_himself_freely(Sweetness)",
      "A drag queen either has a charismatic stage presence or designs their own costumes, but not necessarily both.": "∀x (charismatic_stage_presence(x) ⊕ designs_own_costumes(x))",
      "If Sweetness either loves the spotlight or has stage presence (but not both), then he gains recognition.": "(loves_the_spotlight(Sweetness) ⊕ has_stage_Presence(Sweetness)) → gains_recognition(Sweetness)"
    },
    "conclusion_fol": "talented(Sweetness)"
  },
  {
    "id": 395,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Snookums does not have diverse relationships.",
    "reasoning": "fact1: Snookums dominates a harem.\nfact2: Snookums forms strong alliances.\nrule: If Snookums dominates a harem, then she either has multiple partners or forms strong alliances, but not both.\nconclusion: Snookums does not have multiple partners.\n\nfact1: Snookums thrives in groups.\nrule: All cats that thrive in groups are social.\nconclusion: Snookums is social.\n\nfact1: Snookums is social.\nfact2: Snookums does not have a lone habitat.\nrule: If Snookums is social, then she either lives with others or has a lone habitat, but not both.\nconclusion: Snookums lives with others.\n\nfact1: Snookums lives with others.\nfact2: Snookums does not form strong ties with others.\nrule: Every cat that lives with others either shares their affection or forms strong ties with them (or both).\nconclusion: Snookums shares her affection with multiple others.\n\nfact1: Snookums shares her affection with multiple others.\nfact2: Snookums does not have close bonds with them.\nrule: Every cat that shares their affection with multiple others either has close bonds with them or is polyandrous (or both).\nconclusion: Snookums is polyandrous.\n\nfact1: Snookums is polyandrous.\nfact2: Snookums does not have multiple partners.\nrule: For all cats, if a cat is polyandrous, then it has multiple partners or has diverse relationships (or both).\nconclusion: Snookums has diverse relationships.\n\nTherefore, it is false that Snookums does not have diverse relationships. The correct option is: B.",
    "context": "Messiah forms strong alliances. Sienna does not have close bonds with them. If Snookums is social, then she either lives with others or has a lone habitat, but not both. Snookums dominates a harem. If Snookums dominates a harem, then she either has multiple partners or forms strong alliances, but not both. Sienna dominates a harem. Every cat that shares their affection with multiple others either has close bonds with them or is polyandrous (or both). Snookums does not form strong ties with others. Snookums does not have a lone habitat. Every cat that lives with others either shares their affection or forms strong ties with them (or both). Every cat either enjoys solitude or lives with others. All cats that thrive in groups are social. Any cat that mates with others or forms multiple bonds has multiple partners. If Jaxson dominates a harem, then she either has multiple partners or forms strong alliances, but not both. Snookums forms strong alliances. For all cats, if a cat is polyandrous, then it has multiple partners or has diverse relationships (or both). Snookums thrives in groups. Snookums does not have close bonds with them.",
    "nl2fol": {
      "Messiah forms strong alliances.": "forms_strong_alliances(Messiah)",
      "Sienna does not have close bonds with them.": "¬has_close_bonds(Sienna)",
      "If Snookums is social, then she either lives with others or has a lone habitat, but not both.": "is_social(Snookums) → (has_lone_habitat(Snookums) ⊕ lives_with_others(Snookums))",
      "Snookums dominates a harem.": "dominates_harem(Snookums)",
      "If Snookums dominates a harem, then she either has multiple partners or forms strong alliances, but not both.": "dominates_harem(Snookums) → (forms_strong_alliances(Snookums) ⊕ has_multiple_partners(Snookums))",
      "Sienna dominates a harem.": "dominates_harem(Sienna)",
      "Every cat that shares their affection with multiple others either has close bonds with them or is polyandrous (or both).": "∀x (shares_affection(x) → (has_close_bonds(x) ∨ polyandrous(x)))",
      "Snookums does not form strong ties with others.": "¬forms_strong_ties(Snookums)",
      "Snookums does not have a lone habitat.": "¬has_lone_habitat(Snookums)",
      "Every cat that lives with others either shares their affection or forms strong ties with them (or both).": "∀x (lives_with_others(x) → (shares_affection(x) ∨ forms_strong_ties(x)))",
      "Every cat either enjoys solitude or lives with others.": "∀x (enjoys_solitude(x) ∨ lives_with_others(x))",
      "All cats that thrive in groups are social.": "∀x (thrives_in_groups(x) → is_social(x))",
      "Any cat that mates with others or forms multiple bonds has multiple partners.": "∀x ((mates_with_others(x) ∨ forms_multiple_bonds(x)) → has_multiple_partners(x))",
      "If Jaxson dominates a harem, then she either has multiple partners or forms strong alliances, but not both.": "dominates_harem(Jaxson) → (forms_strong_alliances(Jaxson) ⊕ has_multiple_partners(Jaxson))",
      "Snookums forms strong alliances.": "forms_strong_alliances(Snookums)",
      "For all cats, if a cat is polyandrous, then it has multiple partners or has diverse relationships (or both).": "∀x (polyandrous(x) → (has_multiple_partners(x) ∨ has_diverse_relationships(x)))",
      "Snookums thrives in groups.": "thrives_in_groups(Snookums)",
      "Snookums does not have close bonds with them.": "¬has_close_bonds(Snookums)"
    },
    "conclusion_fol": "¬has_diverse_relationships(Snookums)"
  },
  {
    "id": 396,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kartier is selfless.",
    "reasoning": "fact1: Kartier takes calculated risks.\nfact2: Kartier does not exhibit resilience.\nrule: If Kartier either takes calculated risks or faces challenges (but not both), then she exhibits resilience.\nconclusion: Kartier faces challenges.\n\nfact1: Kartier faces challenges.\nrule: Kartier either faces challenges or has a positive impact, but not both simultaneously.\nconclusion: Kartier does not have a positive impact.\n\nfact1: Kartier does not have a good reputation.\nfact2: Kartier does not have a positive impact.\nrule: For all humans, if they are either appreciated or have a good reputation, then they have a positive impact.\nconclusion: Kartier is not appreciated.\n\nfact1: Kartier puts others first.\nfact2: Kartier is not appreciated.\nrule: If someone puts others first and makes a difference, then they are appreciated.\nconclusion: Kartier cannot make a difference.\n\nfact1: Kartier does not participate in volunteer work.\nrule: Kartier either donates to charity or participates in volunteer work, but not both.\nconclusion: Kartier donates to charity.\n\nfact1: Kartier does not help others.\nfact2: Kartier cannot make a difference.\nrule: Anyone who is generous or helps others can make a difference.\nconclusion: Kartier is not generous.\n\nfact1: Kartier donates to charity.\nfact2: Kartier is not generous.\nrule: If Kartier donates to charity, then she is either generous or selfish, but not both.\nconclusion: Kartier is selfish.\n\nfact1: Kartier is selfish.\nrule: Kartier is either selfless or selfish, but not both.\nconclusion: Kartier is selfless.\n\nTherefore, it is false that Kartier is selfless. The correct option is: B.",
    "context": "Rex puts others first. For all humans, if they are either appreciated or have a good reputation, then they have a positive impact. Kartier is either selfless or selfish, but not both. Kartier does not have a good reputation. Anyone who is generous or helps others can make a difference. Kartier does not help others. Onyx does not help others. Kartier either faces challenges or has a positive impact, but not both simultaneously. If someone puts others first and makes a difference, then they are appreciated. Anyone who sets a good example or builds strong relationships can have a positive impact. Kartier either donates to charity or participates in volunteer work, but not both. If Kartier either takes calculated risks or faces challenges (but not both), then she exhibits resilience. Leslie either faces challenges or has a positive impact, but not both simultaneously. Kartier does not exhibit resilience. Kartier either gains recognition or is appreciated. Rex does not participate in volunteer work. Kartier puts others first. Kartier takes calculated risks. Leslie either donates to charity or participates in volunteer work, but not both. Kartier does not participate in volunteer work. If Kartier either pursues her own interests or prioritizes her own needs (but not both), then she is selfish. If Kartier donates to charity, then she is either generous or selfish, but not both. If Kartier either listens actively or supports her community (but not both), then she can make a difference.",
    "nl2fol": {
      "Rex puts others first.": "puts_others_first(Rex)",
      "For all humans, if they are either appreciated or have a good reputation, then they have a positive impact.": "∀x ((is_appreciated(x) ⊕ has_good_reputation(x)) → has_positive_impact(x))",
      "Kartier is either selfless or selfish, but not both.": "selfless(Kartier) ⊕ selfish(Kartier)",
      "Kartier does not have a good reputation.": "¬has_good_reputation(Kartier)",
      "Anyone who is generous or helps others can make a difference.": "∀x ((generous(x) ∨ helps_others(x)) → makes_difference(x))",
      "Kartier does not help others.": "¬helps_others(Kartier)",
      "Onyx does not help others.": "¬help_others(Onyx)",
      "Kartier either faces challenges or has a positive impact, but not both simultaneously.": "faces_challenges(Kartier) ⊕ has_positive_impact(Kartier)",
      "If someone puts others first and makes a difference, then they are appreciated.": "∀x ((puts_others_first(x) ∧ makes_difference(x)) → is_appreciated(x))",
      "Anyone who sets a good example or builds strong relationships can have a positive impact.": "∀x ((sets_good_example(x) ∨ builds_strong_relationships(x)) → has_positive_impact(x))",
      "Kartier either donates to charity or participates in volunteer work, but not both.": "donates_to_charity(Kartier) ⊕ participates_in_volunteer_work(Kartier)",
      "If Kartier either takes calculated risks or faces challenges (but not both), then she exhibits resilience.": "(takes_calculated_risks(Kartier) ⊕ faces_challenges(Kartier)) → exhibits_resilience(Kartier)",
      "Leslie either faces challenges or has a positive impact, but not both simultaneously.": "faces_challenges(Leslie) ⊕ has_positive_impact(Leslie)",
      "Kartier does not exhibit resilience.": "¬exhibits_resilience(Kartier)",
      "Kartier either gains recognition or is appreciated.": "gains_recognition(Kartier) ∨ is_appreciated(Kartier)",
      "Rex does not participate in volunteer work.": "¬participates_in_volunteer_work(Rex)",
      "Kartier puts others first.": "puts_others_first(Kartier)",
      "Kartier takes calculated risks.": "takes_calculated_risks(Kartier)",
      "Leslie either donates to charity or participates in volunteer work, but not both.": "donates_to_charity(Leslie) ⊕ participates_in_volunteer_work(Leslie)",
      "Kartier does not participate in volunteer work.": "¬participates_in_volunteer_work(Kartier)",
      "If Kartier either pursues her own interests or prioritizes her own needs (but not both), then she is selfish.": "(pursues_own_interests(Kartier) ⊕ prioritizes_own_needs(Kartier)) → selfish(Kartier)",
      "If Kartier donates to charity, then she is either generous or selfish, but not both.": "donates_to_charity(Kartier) → (generous(Kartier) ⊕ selfish(Kartier))",
      "If Kartier either listens actively or supports her community (but not both), then she can make a difference.": "(listens_actively(Kartier) ⊕ supports_community(Kartier)) → makes_difference(Kartier)"
    },
    "conclusion_fol": "selfless(Kartier)"
  },
  {
    "id": 397,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Savannah does not make accurate predictions.",
    "reasoning": "fact1: Savannah improves process efficiency.\nrule: Savannah either improves process efficiency or develops innovative strategies, but not both.\nconclusion: Savannah does not develop innovative strategies.\n\nfact1: Savannah does not spot opportunities.\nrule: If Savannah analyzes trends, then she will spot opportunities.\nconclusion: Savannah does not analyze trends.\n\nfact1: Savannah does not analyze trends.\nrule: Savannah builds client relationships or analyzes trends.\nconclusion: Savannah builds client relationships.\n\nfact1: Savannah builds client relationships.\nrule: Savannah either conveys insights or builds client relationships, but not both.\nconclusion: Savannah does not convey insights.\n\nfact1: Savannah explains data.\nfact2: Savannah does not convey insights.\nrule: If Savannah either explains data or conveys insights (but not both), then she can communicate complex ideas.\nconclusion: Savannah can communicate complex ideas.\n\nfact1: Savannah can communicate complex ideas.\nrule: Savannah either understands the market or can communicate complex ideas, but not both.\nconclusion: Savannah does not understand the market.\n\nfact1: Savannah has expertise in her field.\nfact2: Savannah does not develop innovative strategies.\nrule: If Savannah has expertise in her field, then she either develops innovative strategies or earns recognition (but not both).\nconclusion: Savannah earns recognition.\n\nfact1: Savannah does not understand the market.\nrule: If someone is a leading economist, then they understand the market.\nconclusion: Savannah is not a leading economist.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Savannah does not make accurate predictions. The correct option is: C.",
    "context": "Savannah builds client relationships or analyzes trends. Savannah either conveys insights or builds client relationships, but not both. If Aarav either explains data or conveys insights (but not both), then she can communicate complex ideas. Savannah solves problems or earns recognition. Savannah either understands the market or can communicate complex ideas, but not both. Gatlin either improves process efficiency or develops innovative strategies, but not both. Savannah either improves process efficiency or develops innovative strategies, but not both. Savannah has expertise in her field. If Savannah analyzes trends, then she will spot opportunities. Savannah interprets results or conveys insights. If Savannah has expertise in her field, then she either develops innovative strategies or earns recognition (but not both). Anyone who thinks outside the box or solves complex problems can develop innovative strategies. If someone teaches others, then they can communicate complex ideas. Savannah improves process efficiency. If someone has a strong network, then they build client relationships and make informed decisions. If Aarav analyzes trends, then she will spot opportunities. If Delilah is a leading economist, then she makes accurate predictions and earns recognition. Delilah either conveys insights or builds client relationships, but not both. If Savannah either explains data or conveys insights (but not both), then she can communicate complex ideas. Savannah does not spot opportunities. If Gatlin has expertise in her field, then she either develops innovative strategies or earns recognition (but not both). Savannah explains data. Aarav does not spot opportunities. If someone is a leading economist, then they understand the market.",
    "nl2fol": {
      "Savannah builds client relationships or analyzes trends.": "build_client_relationships(Savannah) ∨ analyze_trends(Savannah)",
      "Savannah either conveys insights or builds client relationships, but not both.": "convey_insights(Savannah) ⊕ build_client_relationships(Savannah)",
      "If Aarav either explains data or conveys insights (but not both), then she can communicate complex ideas.": "(explain_data(Aarav) ⊕ convey_insights(Aarav)) → communicate_complex_ideas(Aarav)",
      "Savannah solves problems or earns recognition.": "solves_problems(Savannah) ∨ earn_recognition(Savannah)",
      "Savannah either understands the market or can communicate complex ideas, but not both.": "communicate_complex_ideas(Savannah) ⊕ understand_market(Savannah)",
      "Gatlin either improves process efficiency or develops innovative strategies, but not both.": "improve_process_efficiency(Gatlin) ⊕ develop_innovative_strategies(Gatlin)",
      "Savannah either improves process efficiency or develops innovative strategies, but not both.": "improve_process_efficiency(Savannah) ⊕ develop_innovative_strategies(Savannah)",
      "Savannah has expertise in her field.": "has_expertise(Savannah)",
      "If Savannah analyzes trends, then she will spot opportunities.": "analyze_trends(Savannah) → spot_opportunities(Savannah)",
      "Savannah interprets results or conveys insights.": "interprets_results(Savannah) ∨ convey_insights(Savannah)",
      "If Savannah has expertise in her field, then she either develops innovative strategies or earns recognition (but not both).": "has_expertise(Savannah) → (develop_innovative_strategies(Savannah) ⊕ earn_recognition(Savannah))",
      "Anyone who thinks outside the box or solves complex problems can develop innovative strategies.": "∀x ((think_outside_box(x) ∨ solve_complex_problems(x)) → develop_innovative_strategies(x))",
      "If someone teaches others, then they can communicate complex ideas.": "∀x (teach_others(x) → communicate_complex_ideas(x))",
      "Savannah improves process efficiency.": "improve_process_efficiency(Savannah)",
      "If someone has a strong network, then they build client relationships and make informed decisions.": "∀x (has_strong_network(x) → (make_informed_decisions(x) ∧ build_client_relationships(x)))",
      "If Aarav analyzes trends, then she will spot opportunities.": "analyze_trends(Aarav) → spot_opportunities(Aarav)",
      "If Delilah is a leading economist, then she makes accurate predictions and earns recognition.": "leading_economist(Delilah) → (make_accurate_predictions(Delilah) ∧ earn_recognition(Delilah))",
      "Delilah either conveys insights or builds client relationships, but not both.": "convey_insights(Delilah) ⊕ build_client_relationships(Delilah)",
      "If Savannah either explains data or conveys insights (but not both), then she can communicate complex ideas.": "(explain_data(Savannah) ⊕ convey_insights(Savannah)) → communicate_complex_ideas(Savannah)",
      "Savannah does not spot opportunities.": "¬spot_opportunities(Savannah)",
      "If Gatlin has expertise in her field, then she either develops innovative strategies or earns recognition (but not both).": "has_expertise(Gatlin) → (develop_innovative_strategies(Gatlin) ⊕ earn_recognition(Gatlin))",
      "Savannah explains data.": "explain_data(Savannah)",
      "Aarav does not spot opportunities.": "¬spot_opportunities(Aarav)",
      "If someone is a leading economist, then they understand the market.": "∀x (leading_economist(x) → understand_market(x))"
    },
    "conclusion_fol": "¬make_accurate_predictions(Savannah)"
  },
  {
    "id": 398,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Isabella is financially compensated.",
    "reasoning": "fact1: Isabella stands up for herself.\nfact2: Isabella fights against injustice.\nrule: If someone stands up for themselves and fights against injustice, then they can restore their honor.\nconclusion: Isabella restores her honor.\n\nfact1: Isabella files a lawsuit.\nfact2: Isabella restores her honor.\nrule: If Isabella files a lawsuit, then she either clears her name or restores her honor, but not both.\nconclusion: Isabella does not clear her name.\n\nfact1: Isabella does not clear her name.\nrule: If someone clears their name, they may not necessarily be protected from reputational damage, and if someone is protected from reputational damage, they may not necessarily clear their name.\nconclusion: Isabella is protected from reputational damage.\n\nfact1: Isabella tells the truth.\nrule: If Isabella tells the truth, then she is found not guilty and justice is served.\nconclusion: Isabella is found not guilty.\n\nfact1: Isabella is found not guilty.\nfact2: Isabella is protected from reputational damage.\nrule: If Isabella is found not guilty, then she is either protected from reputational damage or financially compensated, but not both.\nconclusion: Isabella is not financially compensated.\n\nTherefore, it is false that Isabella is financially compensated. The correct option is: B.",
    "context": "Isabella fights against injustice. Hugo tells the truth. If Isabella takes a stand, then she is both protected from reputational damage and gains respect. Liliana fights against injustice. If Isabella tells the truth, then she is found not guilty and justice is served. If Isabella is found not guilty, then she is either protected from reputational damage or financially compensated, but not both. Hugo files a lawsuit. Isabella tells the truth. If Isabella files a lawsuit, then she either clears her name or restores her honor, but not both. Bryan stands up for herself. Isabella files a lawsuit. If Liliana is found not guilty, then she is either protected from reputational damage or financially compensated, but not both. Anyone who presents evidence or disproves allegations can clear their name. If someone stands up for themselves and fights against injustice, then they can restore their honor. Isabella stands up for herself. If Bryan files a lawsuit, then she either clears her name or restores her honor, but not both. If Isabella reports a crime, then justice is served. If someone clears their name, they may not necessarily be protected from reputational damage, and if someone is protected from reputational damage, they may not necessarily clear their name. Hugo exposes evidence. If Isabella takes legal action, then she either restores her honor or regains trust, but not both.",
    "nl2fol": {
      "Isabella fights against injustice.": "fights_injustice(Isabella)",
      "Hugo tells the truth.": "tells_truth(Hugo)",
      "If Isabella takes a stand, then she is both protected from reputational damage and gains respect.": "takes_stand(Isabella) → (reputation_protected(Isabella) ∧ gains_respect(Isabella))",
      "Liliana fights against injustice.": "fights_against_injustice(Liliana)",
      "If Isabella tells the truth, then she is found not guilty and justice is served.": "tell_truth(Isabella) → (found_not_guilty(Isabella) ∧ justice_served(Isabella))",
      "If Isabella is found not guilty, then she is either protected from reputational damage or financially compensated, but not both.": "found_not_guilty(Isabella) → (reputation_protected(Isabella) ⊕ financially_compensated(Isabella))",
      "Hugo files a lawsuit.": "files_lawsuit(Hugo)",
      "Isabella tells the truth.": "tell_truth(Isabella)",
      "If Isabella files a lawsuit, then she either clears her name or restores her honor, but not both.": "files_lawsuit(Isabella) → (clears_name(Isabella) ⊕ restores_honor(Isabella))",
      "Bryan stands up for herself.": "stands_up(Bryan)",
      "Isabella files a lawsuit.": "files_lawsuit(Isabella)",
      "If Liliana is found not guilty, then she is either protected from reputational damage or financially compensated, but not both.": "found_not_guilty(Liliana) → (reputation_protected(Liliana) ⊕ financially_compensated(Liliana))",
      "Anyone who presents evidence or disproves allegations can clear their name.": "∀x ((present_evidence(x) ∨ disprove_allegations(x)) → clears_name(x))",
      "If someone stands up for themselves and fights against injustice, then they can restore their honor.": "∀x ((stands_up(x) ∧ fights_injustice(x)) → restores_honor(x))",
      "Isabella stands up for herself.": "stands_up(Isabella)",
      "If Bryan files a lawsuit, then she either clears her name or restores her honor, but not both.": "files_lawsuit(Bryan) → (clears_name(Bryan) ⊕ restores_honor(Bryan))",
      "If Isabella reports a crime, then justice is served.": "reports_crime(Isabella) → justice_served(Isabella)",
      "If someone clears their name, they may not necessarily be protected from reputational damage, and if someone is protected from reputational damage, they may not necessarily clear their name.": "∀x (clears_name(x) ⊕ reputation_protected(x))",
      "Hugo exposes evidence.": "exposes_evidence(Hugo)",
      "If Isabella takes legal action, then she either restores her honor or regains trust, but not both.": "takes_legal_action(Isabella) → (restores_honor(Isabella) ⊕ regains_trust(Isabella))"
    },
    "conclusion_fol": "financially_compensated(Isabella)"
  },
  {
    "id": 399,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gabriel makes informed decisions.",
    "reasoning": "fact1: Gabriel appreciates culture.\nfact2: Gabriel does not support sports.\nrule: If Gabriel appreciates culture, then he either pursues artistic interests or supports sports, but not both.\nconclusion: Gabriel pursues artistic interests.\n\nfact1: Gabriel pursues artistic interests.\nrule: Gabriel either values education or pursues artistic interests, but not necessarily both.\nconclusion: Gabriel does not value education.\n\nfact1: Gabriel has intuition.\nrule: Gabriel either learns quickly or has intuition, but not both.\nconclusion: Gabriel does not learn quickly.\n\nfact1: Gabriel does not learn quickly.\nrule: Gabriel learns quickly or reads widely.\nconclusion: Gabriel reads widely.\n\nfact1: Gabriel does not value education.\nfact2: Gabriel reads widely.\nrule: Anyone who values education or reads widely seeks knowledge.\nconclusion: Gabriel seeks knowledge.\n\nfact1: Gabriel seeks knowledge.\nrule: If Gabriel seeks knowledge, then he makes informed decisions.\nconclusion: Gabriel makes informed decisions.\n\nTherefore, it is true that Gabriel makes informed decisions. The correct option is: A.",
    "context": "Gabriel learns quickly or reads widely. If Gabriel seeks knowledge, then he makes informed decisions. Gabriel either learns quickly or has intuition, but not both. If Gabriel appreciates culture, then he either pursues artistic interests or supports sports, but not both. Anyone who values education or reads widely seeks knowledge. Gabriel does not support sports. Gabriel has intuition. Gabriel appreciates culture. Gabriel either values education or pursues artistic interests, but not necessarily both.",
    "nl2fol": {
      "Gabriel learns quickly or reads widely.": "learns_quickly(Gabriel) ∨ reads_widely(Gabriel)",
      "If Gabriel seeks knowledge, then he makes informed decisions.": "seek_knowledge(Gabriel) → make_informed_decisions(Gabriel)",
      "Gabriel either learns quickly or has intuition, but not both.": "has_intuition(Gabriel) ⊕ learns_quickly(Gabriel)",
      "If Gabriel appreciates culture, then he either pursues artistic interests or supports sports, but not both.": "appreciates_culture(Gabriel) → (supports_sports(Gabriel) ⊕ pursues_artistic_interests(Gabriel))",
      "Anyone who values education or reads widely seeks knowledge.": "∀x ((values_education(x) ∨ reads_widely(x)) → seek_knowledge(x))",
      "Gabriel does not support sports.": "¬supports_sports(Gabriel)",
      "Gabriel has intuition.": "has_intuition(Gabriel)",
      "Gabriel appreciates culture.": "appreciates_culture(Gabriel)",
      "Gabriel either values education or pursues artistic interests, but not necessarily both.": "pursues_artistic_interests(Gabriel) ⊕ values_education(Gabriel)"
    },
    "conclusion_fol": "make_informed_decisions(Gabriel)"
  },
  {
    "id": 400,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Zelda does not have a gentle nature.",
    "reasoning": "fact1: Zelda does not have companions.\nrule: Every horse is either solitary or has companions.\nconclusion: Zelda is a solitary creature.\n\nfact1: Zelda roams freely.\nrule: Zelda either roams freely or lives in stables, but not both.\nconclusion: Zelda does not live in stables.\n\nfact1: Zelda does not live in stables.\nfact2: Zelda does not thrive in company.\nrule: If Zelda either lives in stables or forms a herd (but not both), then she thrives in company.\nconclusion: Zelda does not form a herd.\n\nfact1: Zelda is a solitary creature.\nrule: For Zelda, she is either a social animal or a solitary creature, but not both.\nconclusion: Zelda is not a social animal.\n\nfact1: Zelda does not form a herd.\nfact2: Zelda is not a social animal.\nrule: If Zelda either forms a herd or forms a strong bond with humans (but not both), then she is a social animal.\nconclusion: Zelda does not form a strong bond with humans.\n\nfact1: Zelda has an aggressive nature.\nfact2: Zelda does not form a strong bond with humans.\nrule: If Zelda either has a gentle nature or an aggressive nature (but not both), then she forms a strong bond with humans.\nconclusion: Zelda does not have a gentle nature.\n\nTherefore, it is false that Zelda does not have a gentle nature. The correct option is: B.",
    "context": "Andi either roams freely or lives in stables, but not both. Zelda either roams freely or lives in stables, but not both. If Zelda either forms a herd or forms a strong bond with humans (but not both), then she is a social animal. Zelda has an aggressive nature. Zelda roams freely. Every horse either finds companions or forms a herd. For Zelda, she is either a social animal or a solitary creature, but not both. Every horse either enjoys the company of others or is solitary. Zelda does not thrive in company. Every horse is either solitary or has companions. If Brinley either forms a herd or forms a strong bond with humans (but not both), then she is a social animal. If Zelda either has a gentle nature or an aggressive nature (but not both), then she forms a strong bond with humans. Zelda does not have companions. If Zelda either lives in stables or forms a herd (but not both), then she thrives in company.",
    "nl2fol": {
      "Andi either roams freely or lives in stables, but not both.": "roams_freely(Andi) ⊕ lives_in_stables(Andi)",
      "Zelda either roams freely or lives in stables, but not both.": "roams_freely(Zelda) ⊕ lives_in_stables(Zelda)",
      "If Zelda either forms a herd or forms a strong bond with humans (but not both), then she is a social animal.": "(forms_herd(Zelda) ⊕ strong_bond(Zelda)) → social_animal(Zelda)",
      "Zelda has an aggressive nature.": "aggressive_nature(Zelda)",
      "Zelda roams freely.": "roams_freely(Zelda)",
      "Every horse either finds companions or forms a herd.": "∀x (finds_companions(x) ∨ forms_herd(x))",
      "For Zelda, she is either a social animal or a solitary creature, but not both.": "social_animal(Zelda) ⊕ is_solitary(Zelda)",
      "Every horse either enjoys the company of others or is solitary.": "∀x (enjoys_companions(x) ∨ is_solitary(x))",
      "Zelda does not thrive in company.": "¬thrives_in_company(Zelda)",
      "Every horse is either solitary or has companions.": "∀x (is_solitary(x) ∨ has_companions(x))",
      "If Brinley either forms a herd or forms a strong bond with humans (but not both), then she is a social animal.": "(forms_herd(Brinley) ⊕ strong_bond(Brinley)) → social_animal(Brinley)",
      "If Zelda either has a gentle nature or an aggressive nature (but not both), then she forms a strong bond with humans.": "(gentle_nature(Zelda) ⊕ aggressive_nature(Zelda)) → strong_bond(Zelda)",
      "Zelda does not have companions.": "¬has_companions(Zelda)",
      "If Zelda either lives in stables or forms a herd (but not both), then she thrives in company.": "(lives_in_stables(Zelda) ⊕ forms_herd(Zelda)) → thrives_in_company(Zelda)"
    },
    "conclusion_fol": "¬gentle_nature(Zelda)"
  },
  {
    "id": 401,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joey does not earn recognition.",
    "reasoning": "fact1: Joey does not have thick skin.\nrule: Joey either has thick skin or embraces criticism, but not both.\nconclusion: Joey is open to constructive criticism.\n\nfact1: Joey has clear goals.\nfact2: Joey is not strategic.\nrule: If Joey has clear goals, then he either sets high standards or is strategic, but not both.\nconclusion: Joey sets high standards.\n\nfact1: Joey sets high standards.\nfact2: Joey is not disciplined.\nrule: If Joey either pursues excellence or sets high standards (but not both), then he is disciplined.\nconclusion: Joey pursues excellence.\n\nfact1: Joey does not produce quality work.\nrule: If someone values craftsmanship, then they produce quality work.\nconclusion: Joey does not value craftsmanship.\n\nfact1: Joey is open to constructive criticism.\nrule: Joey either strives for mastery or is open to constructive criticism, but not both.\nconclusion: Joey does not strive for mastery.\n\nfact1: Joey does not value craftsmanship.\nfact2: Joey does not strive for mastery.\nrule: If Joey either has passion or values craftsmanship (but not both), then he strives for mastery.\nconclusion: Joey does not have passion.\n\nfact1: Joey is a dedicated artist.\nrule: If Joey is a dedicated artist, then he will earn recognition and inspire others.\nconclusion: Joey does not earn recognition.\n\nTherefore, it is false that Joey does not earn recognition. The correct option is: B.",
    "context": "If someone values craftsmanship, then they produce quality work. Annika either has thick skin or embraces criticism, but not both. Keily is not disciplined. If Annika either pursues excellence or sets high standards (but not both), then he is disciplined. If Joey is a dedicated artist, then he will earn recognition and inspire others. Joey is a dedicated artist. If Joey respects tradition, then he values craftsmanship. Joey does not have thick skin. If Joey has clear goals, then he either sets high standards or is strategic, but not both. If someone loves performing and believes in the power of art, then they have passion. Joey has clear goals. Annika has clear goals. Keily does not have thick skin. If Joey either has passion or values craftsmanship (but not both), then he strives for mastery. Joey is not strategic. If Joey either pursues excellence or sets high standards (but not both), then he is disciplined. If Joey is motivated, then he either pursues excellence or seeks feedback, but not both. Annika either strives for mastery or is open to constructive criticism, but not both. If Cuteness is a dedicated artist, then he will earn recognition and inspire others. Joey either has thick skin or embraces criticism, but not both. Joey does not produce quality work. Annika is not strategic. Joey either strives for mastery or is open to constructive criticism, but not both. Anyone who seeks feedback either grows from failure or is open to constructive criticism (or both). Cuteness does not produce quality work. Joey is not disciplined.",
    "nl2fol": {
      "If someone values craftsmanship, then they produce quality work.": "∀x (values_craftsmanship(x) → produces_quality_work(x))",
      "Annika either has thick skin or embraces criticism, but not both.": "has_thick_skin(Annika) ⊕ embraces_criticism(Annika)",
      "Keily is not disciplined.": "¬is_disciplined(Keily)",
      "If Annika either pursues excellence or sets high standards (but not both), then he is disciplined.": "(pursue_excellence(Annika) ⊕ set_high_standards(Annika)) → is_disciplined(Annika)",
      "If Joey is a dedicated artist, then he will earn recognition and inspire others.": "dedicated_artist(Joey) → (earn_recognition(Joey) ∧ inspire_others(Joey))",
      "Joey is a dedicated artist.": "dedicated_artist(Joey)",
      "If Joey respects tradition, then he values craftsmanship.": "respects_tradition(Joey) → values_craftsmanship(Joey)",
      "Joey does not have thick skin.": "¬has_thick_skin(Joey)",
      "If Joey has clear goals, then he either sets high standards or is strategic, but not both.": "has_clear_goals(Joey) → (is_strategic(Joey) ⊕ set_high_standards(Joey))",
      "If someone loves performing and believes in the power of art, then they have passion.": "∀x ((loves_performing(x) ∧ believes_in_art(x)) → has_passion(x))",
      "Joey has clear goals.": "has_clear_goals(Joey)",
      "Annika has clear goals.": "has_clear_goals(Annika)",
      "Keily does not have thick skin.": "¬has_thick_skin(Keily)",
      "If Joey either has passion or values craftsmanship (but not both), then he strives for mastery.": "(has_passion(Joey) ⊕ values_craftsmanship(Joey)) → strives_for_mastery(Joey)",
      "Joey is not strategic.": "¬is_strategic(Joey)",
      "If Joey either pursues excellence or sets high standards (but not both), then he is disciplined.": "(pursue_excellence(Joey) ⊕ set_high_standards(Joey)) → is_disciplined(Joey)",
      "If Joey is motivated, then he either pursues excellence or seeks feedback, but not both.": "is_motivated(Joey) → (pursue_excellence(Joey) ⊕ seeks_feedback(Joey))",
      "Annika either strives for mastery or is open to constructive criticism, but not both.": "embraces_criticism(Annika) ⊕ strives_for_mastery(Annika)",
      "If Cuteness is a dedicated artist, then he will earn recognition and inspire others.": "dedicated_artist(Cuteness) → (earn_recognition(Cuteness) ∧ inspire_others(Cuteness))",
      "Joey either has thick skin or embraces criticism, but not both.": "has_thick_skin(Joey) ⊕ embraces_criticism(Joey)",
      "Joey does not produce quality work.": "¬produces_quality_work(Joey)",
      "Annika is not strategic.": "¬is_strategic(Annika)",
      "Joey either strives for mastery or is open to constructive criticism, but not both.": "embraces_criticism(Joey) ⊕ strives_for_mastery(Joey)",
      "Anyone who seeks feedback either grows from failure or is open to constructive criticism (or both).": "∀x (seeks_feedback(x) → (grows_from_failure(x) ∨ embraces_criticism(x)))",
      "Cuteness does not produce quality work.": "¬produces_quality_work(Cuteness)",
      "Joey is not disciplined.": "¬is_disciplined(Joey)"
    },
    "conclusion_fol": "¬earn_recognition(Joey)"
  },
  {
    "id": 402,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bria thinks outside the box.",
    "reasoning": "fact1: Bria has imagination.\nrule: If Bria has imagination, then she will try new things.\nconclusion: Bria tries new things.\n\nfact1: Bria loves learning.\nfact2: Bria does not achieve success.\nrule: Anyone who loves learning and solves problems can achieve success.\nconclusion: Bria does not solve problems.\n\nfact1: Bria is curious.\nfact2: Bria tries new things.\nrule: For all persons, if they are curious and try new things, then they enjoy experimenting.\nconclusion: Bria enjoys experimenting.\n\nfact1: Bria does not solve problems.\nrule: Bria creates something valuable or solves problems.\nconclusion: Bria creates something valuable.\n\nfact1: Bria is innovative.\nfact2: Bria enjoys experimenting.\nrule: If someone is innovative and enjoys experimenting, then they are creative.\nconclusion: Bria is creative.\n\nfact1: Bria is creative.\nfact2: Bria creates something valuable.\nrule: For all people, if a person is creative, then they think outside the box and create something valuable.\nconclusion: Bria thinks outside the box.\n\nTherefore, it is true that Bria thinks outside the box. The correct option is: A.",
    "context": "If Bria either turns trash into treasure or makes something useful (but not both), then she creates something valuable. Bria creates something valuable or solves problems. For all persons, if they are curious and try new things, then they enjoy experimenting. If Bria has imagination, then she will try new things. For all people, if a person is creative, then they think outside the box and create something valuable. Bria does not achieve success. Bria is innovative. If someone is innovative and enjoys experimenting, then they are creative. Bria has imagination. Anyone who loves learning and solves problems can achieve success. Bria loves learning. Bria is curious.",
    "nl2fol": {
      "If Bria either turns trash into treasure or makes something useful (but not both), then she creates something valuable.": "(turns_trash_into_treasure(Bria) ⊕ makes_something_useful(Bria)) → create_something_valuable(Bria)",
      "Bria creates something valuable or solves problems.": "create_something_valuable(Bria) ∨ solve_problems(Bria)",
      "For all persons, if they are curious and try new things, then they enjoy experimenting.": "∀x ((is_curious(x) ∧ tries_new_things(x)) → enjoys_experimenting(x))",
      "If Bria has imagination, then she will try new things.": "has_imagination(Bria) → tries_new_things(Bria)",
      "For all people, if a person is creative, then they think outside the box and create something valuable.": "∀x (creative(x) → (think_outside_box(x) ∧ create_something_valuable(x)))",
      "Bria does not achieve success.": "¬achieves_success(Bria)",
      "Bria is innovative.": "is_innovative(Bria)",
      "If someone is innovative and enjoys experimenting, then they are creative.": "∀x ((is_innovative(x) ∧ enjoys_experimenting(x)) → creative(x))",
      "Bria has imagination.": "has_imagination(Bria)",
      "Anyone who loves learning and solves problems can achieve success.": "∀x ((loves_learning(x) ∧ solve_problems(x)) → achieves_success(x))",
      "Bria loves learning.": "loves_learning(Bria)",
      "Bria is curious.": "is_curious(Bria)"
    },
    "conclusion_fol": "think_outside_box(Bria)"
  },
  {
    "id": 403,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Peyton is an effective scavenger.",
    "reasoning": "fact1: Peyton scans the open plains.\nrule: Every vulture either scans the open plains or consumes remains, but not necessarily both.\nconclusion: Peyton does not consume remains.\n\nfact1: Peyton flies high.\nfact2: Peyton dives steeply.\nrule: If Peyton flies high, then she either dives steeply or soars effortlessly, but not both.\nconclusion: Peyton does not soar effortlessly.\n\nfact1: Peyton does not consume remains.\nrule: Every vulture either consumes remains or eats carrion (or both).\nconclusion: Peyton eats carrion.\n\nfact1: Peyton eats carrion.\nrule: All vultures that eat carrion have strong stomachs.\nconclusion: Peyton has a strong stomach.\n\nfact1: Peyton does not soar effortlessly.\nrule: Peyton either soars effortlessly or tracks carrion, but not both at the same time.\nconclusion: Peyton tracks carrion.\n\nfact1: Peyton tracks carrion.\nrule: All vultures that track carrion have a keen sense of smell.\nconclusion: Peyton has a keen sense of smell.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Peyton is an effective scavenger. The correct option is: C.",
    "context": "Every vulture either consumes remains or eats carrion (or both). If Peyton thrives alone, then she has a strong stomach and is adaptable. All vultures that track carrion have a keen sense of smell. If Peyton flies high, then she either dives steeply or soars effortlessly, but not both. Jonathan either soars effortlessly or tracks carrion, but not both at the same time. Franco dives steeply. Peyton either hunts preys or eats carrion. Peyton either soars effortlessly or tracks carrion, but not both at the same time. Peyton flies high. If Jonathan flies high, then she either dives steeply or soars effortlessly, but not both. All vultures that eat carrion have strong stomachs. Every vulture either scans the open plains or consumes remains, but not necessarily both. Peyton scans the open plains. Peyton dives steeply. Jonathan scans the open plains. If Franco has either a strong stomach or a keen sense of smell (but not both), then she is an effective scavenger. Every vulture either rides the wind or soars effortlessly.",
    "nl2fol": {
      "Every vulture either consumes remains or eats carrion (or both).": "∀x (consumes_remains(x) ∨ eats_carrion(x))",
      "If Peyton thrives alone, then she has a strong stomach and is adaptable.": "thrives_alone(Peyton) → (strong_stomach(Peyton) ∧ adaptable(Peyton))",
      "All vultures that track carrion have a keen sense of smell.": "∀x (tracks_carrion(x) → keen_sense_of_smell(x))",
      "If Peyton flies high, then she either dives steeply or soars effortlessly, but not both.": "flies_high(Peyton) → (dives_steeply(Peyton) ⊕ soars_effortlessly(Peyton))",
      "Jonathan either soars effortlessly or tracks carrion, but not both at the same time.": "soars_effortlessly(Jonathan) ⊕ tracks_carrion(Jonathan)",
      "Franco dives steeply.": "dive_steeply(Franco)",
      "Peyton either hunts preys or eats carrion.": "hunts_preys(Peyton) ∨ eats_carrion(Peyton)",
      "Peyton either soars effortlessly or tracks carrion, but not both at the same time.": "soars_effortlessly(Peyton) ⊕ tracks_carrion(Peyton)",
      "Peyton flies high.": "flies_high(Peyton)",
      "If Jonathan flies high, then she either dives steeply or soars effortlessly, but not both.": "flies_high(Jonathan) → (dives_steeply(Jonathan) ⊕ soars_effortlessly(Jonathan))",
      "All vultures that eat carrion have strong stomachs.": "∀x (eats_carrion(x) → strong_stomach(x))",
      "Every vulture either scans the open plains or consumes remains, but not necessarily both.": "∀x (scans_open_plains(x) ⊕ consumes_remains(x))",
      "Peyton scans the open plains.": "scans_open_plains(Peyton)",
      "Peyton dives steeply.": "dives_steeply(Peyton)",
      "Jonathan scans the open plains.": "scans_open_plains(Jonathan)",
      "If Franco has either a strong stomach or a keen sense of smell (but not both), then she is an effective scavenger.": "(strong_stomach(Franco) ⊕ keen_sense_of_smell(Franco)) → effective_scavenger(Franco)",
      "Every vulture either rides the wind or soars effortlessly.": "∀x (rides_wind(x) ∨ soars_effortlessly(x))"
    },
    "conclusion_fol": "effective_scavenger(Peyton)"
  },
  {
    "id": 404,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Julian is disorganized.",
    "reasoning": "fact1: Julian does not avoid risks.\nrule: Julian is either curious or avoids risks, but not both.\nconclusion: Julian has curiosity.\n\nfact1: Julian has curiosity.\nrule: All humans with curiosity value knowledge and respect history.\nconclusion: Julian values knowledge.\n\nfact1: Julian does not read widely.\nfact2: Julian does not make new breakthroughs.\nrule: If Julian pursues discovery or reads widely, then he will make new breakthroughs.\nconclusion: Julian does not pursue discovery.\n\nfact1: Julian values knowledge.\nfact2: Julian does not pursue discovery.\nrule: If Julian either values knowledge or pursues discovery (but not both), then he is a passionate researcher.\nconclusion: Julian is a passionate researcher.\n\nfact1: Julian is a passionate researcher.\nfact2: Julian overcomes challenges.\nrule: If Julian is a passionate researcher, then he finds the resources he needs and overcomes challenges.\nconclusion: Julian finds the resources he needs.\n\nfact1: Julian finds the resources he needs.\nfact2: Julian does not achieve success.\nrule: If someone keeps things tidy and finds the resources they need, then they can achieve success.\nconclusion: Julian is not organized.\n\nfact1: Julian is not organized.\nrule: Julian is either organized or disorganized, but not both.\nconclusion: Julian is disorganized.\n\nTherefore, it is true that Julian is disorganized. The correct option is: A.",
    "context": "If Julian has hidden talents, then he is either organized or creates new opportunities (or both). Julian does not avoid risks. Julian does not read widely. Julian is either curious or avoids risks, but not both. Samson overcomes challenges. Milana does not read widely. If Julian either values knowledge or pursues discovery (but not both), then he is a passionate researcher. All humans with curiosity value knowledge and respect history. If Julian pursues discovery or reads widely, then he will make new breakthroughs. Everyone who has an inquisitive nature will pursue discovery. If someone keeps things tidy and finds the resources they need, then they can achieve success. If Julian has clear goals, then he either works efficiently or finds the resources he needs, but not both. Julian overcomes challenges. Julian does not make new breakthroughs. If Julian is a passionate researcher, then he finds the resources he needs and overcomes challenges. Julian does not achieve success. If Julian is dedicated to his field, then he is a passionate researcher. If Milana either values knowledge or pursues discovery (but not both), then he is a passionate researcher. Everyone who analyzes data either draws conclusions or respects history (or both). Milana loves learning. Julian is either organized or disorganized, but not both.",
    "nl2fol": {
      "If Julian has hidden talents, then he is either organized or creates new opportunities (or both).": "has_hidden_talents(Julian) → (organized(Julian) ∨ creates_new_opportunities(Julian))",
      "Julian does not avoid risks.": "¬avoids_risks(Julian)",
      "Julian does not read widely.": "¬reads_widely(Julian)",
      "Julian is either curious or avoids risks, but not both.": "has_curiosity(Julian) ⊕ avoids_risks(Julian)",
      "Samson overcomes challenges.": "overcome_challenges(Samson)",
      "Milana does not read widely.": "¬reads_widely(Milana)",
      "If Julian either values knowledge or pursues discovery (but not both), then he is a passionate researcher.": "(values_knowledge(Julian) ⊕ pursues_discovery(Julian)) → passionate_researcher(Julian)",
      "All humans with curiosity value knowledge and respect history.": "∀x (has_curiosity(x) → (values_knowledge(x) ∧ respects_history(x)))",
      "If Julian pursues discovery or reads widely, then he will make new breakthroughs.": "(pursues_discovery(Julian) ∨ reads_widely(Julian)) → makes_new_breakthroughs(Julian)",
      "Everyone who has an inquisitive nature will pursue discovery.": "∀x (has_inquisitive_nature(x) → pursues_discovery(x))",
      "If someone keeps things tidy and finds the resources they need, then they can achieve success.": "∀x ((organized(x) ∧ finds_resources(x)) → achieves_success(x))",
      "If Julian has clear goals, then he either works efficiently or finds the resources he needs, but not both.": "has_clear_goals(Julian) → (works_efficiently(Julian) ⊕ finds_resources(Julian))",
      "Julian overcomes challenges.": "overcomes_challenges(Julian)",
      "Julian does not make new breakthroughs.": "¬makes_new_breakthroughs(Julian)",
      "If Julian is a passionate researcher, then he finds the resources he needs and overcomes challenges.": "passionate_researcher(Julian) → (finds_resources(Julian) ∧ overcomes_challenges(Julian))",
      "Julian does not achieve success.": "¬achieves_success(Julian)",
      "If Julian is dedicated to his field, then he is a passionate researcher.": "dedicated_to_field(Julian) → passionate_researcher(Julian)",
      "If Milana either values knowledge or pursues discovery (but not both), then he is a passionate researcher.": "(values_knowledge(Milana) ⊕ pursues_discovery(Milana)) → passionate_researcher(Milana)",
      "Everyone who analyzes data either draws conclusions or respects history (or both).": "∀x (analyzes_data(x) → (draws_conclusions(x) ∨ respects_history(x)))",
      "Milana loves learning.": "loves_learning(Milana)",
      "Julian is either organized or disorganized, but not both.": "organized(Julian) ⊕ disorganized(Julian)"
    },
    "conclusion_fol": "disorganized(Julian)"
  },
  {
    "id": 405,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? River excels in music.",
    "reasoning": "fact1: River gets distracted.\nfact2: River does not find new interests.\nrule: If River gets distracted, then he either has a vivid imagination or finds new interests (or both).\nconclusion: River has a vivid imagination.\n\nfact1: River does not plan ahead.\nrule: River either acts spontaneously or plans ahead, but not both.\nconclusion: River is a spontaneous actor.\n\nfact1: River is reflective.\nfact2: River is a spontaneous actor.\nrule: If River is reflective, then he is either a critical thinker or a spontaneous actor, but not both.\nconclusion: River does not think critically.\n\nfact1: River does not think critically.\nrule: River either speaks fluently or thinks critically, but not both.\nconclusion: River speaks fluently.\n\nfact1: River speaks fluently.\nfact2: River cannot express himself effectively.\nrule: For anyone, writing well and speaking fluently can lead to expressing themselves effectively.\nconclusion: River does not write well.\n\nfact1: River is creative.\nfact2: River does not write well.\nrule: If River is creative, then he either writes well or excels in art, but not both.\nconclusion: River excels in art.\n\nfact1: River has a vivid imagination.\nfact2: River excels in art.\nrule: If River has a vivid imagination, then he excels in either art or music, but not both.\nconclusion: River excels in music.\n\nTherefore, it is false that River excels in music. The correct option is: B.",
    "context": "Aleah gets distracted. Anyone who daydreams often or thinks outside the box has a vivid imagination. If River gets distracted, then he either has a vivid imagination or finds new interests (or both). River is creative. River gets distracted. River does not plan ahead. River cannot express himself effectively. River is reflective. River either speaks fluently or thinks critically, but not both. If River is reflective, then he is either a critical thinker or a spontaneous actor, but not both. If River is creative, then he either writes well or excels in art, but not both. River either acts spontaneously or plans ahead, but not both. For anyone, writing well and speaking fluently can lead to expressing themselves effectively. If River either draws portraits or sculpts figures (but not both), then he excels in art. Aleah either acts spontaneously or plans ahead, but not both. River does not find new interests. If River has a vivid imagination, then he excels in either art or music, but not both.",
    "nl2fol": {
      "Aleah gets distracted.": "gets_distracted(Aleah)",
      "Anyone who daydreams often or thinks outside the box has a vivid imagination.": "∀x ((daydreams_often(x) ∨ thinks_outside_box(x)) → has_vivid_imagination(x))",
      "If River gets distracted, then he either has a vivid imagination or finds new interests (or both).": "gets_distracted(River) → (has_vivid_imagination(River) ∨ finds_new_interests(River))",
      "River is creative.": "is_creative(River)",
      "River gets distracted.": "gets_distracted(River)",
      "River does not plan ahead.": "¬plans_ahead(River)",
      "River cannot express himself effectively.": "¬expresses_themselves_effectively(River)",
      "River is reflective.": "is_reflective(River)",
      "River either speaks fluently or thinks critically, but not both.": "speaks_fluently(River) ⊕ thinks_critically(River)",
      "If River is reflective, then he is either a critical thinker or a spontaneous actor, but not both.": "is_reflective(River) → (thinks_critically(River) ⊕ acts_spontaneously(River))",
      "If River is creative, then he either writes well or excels in art, but not both.": "is_creative(River) → (write_well(River) ⊕ excel_in_art(River))",
      "River either acts spontaneously or plans ahead, but not both.": "acts_spontaneously(River) ⊕ plans_ahead(River)",
      "For anyone, writing well and speaking fluently can lead to expressing themselves effectively.": "∀x ((write_well(x) ∧ speaks_fluently(x)) → expresses_themselves_effectively(x))",
      "If River either draws portraits or sculpts figures (but not both), then he excels in art.": "(draws_portraits(River) ⊕ sculpts_figures(River)) → excel_in_art(River)",
      "Aleah either acts spontaneously or plans ahead, but not both.": "acts_spontaneously(Aleah) ⊕ plans_ahead(Aleah)",
      "River does not find new interests.": "¬finds_new_interests(River)",
      "If River has a vivid imagination, then he excels in either art or music, but not both.": "has_vivid_imagination(River) → (excel_in_art(River) ⊕ excel_in_music(River))"
    },
    "conclusion_fol": "excel_in_music(River)"
  },
  {
    "id": 406,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alana loves adventure.",
    "reasoning": "fact1: Alana has a creative nature.\nfact2: Alana is not guided by reason.\nrule: If Alana has a creative nature, then she is either guided by reason or trusts her intuition (but not both).\nconclusion: Alana trusts her intuition.\n\nfact1: Alana appreciates simple things.\nrule: Alana either pursues creative passions or appreciates simple things, but these two traits do not necessarily overlap in her life.\nconclusion: Alana does not pursue creative passions.\n\nfact1: Alana is spontaneous.\nfact2: Alana trusts her intuition.\nrule: Anyone who is spontaneous and trusts their intuition can learn to embrace uncertainty.\nconclusion: Alana embraces uncertainty.\n\nfact1: Alana explores new places.\nrule: If Alana explores new places, then she will take calculated risks.\nconclusion: Alana takes calculated risks.\n\nfact1: Alana makes her own decisions.\nfact2: Alana takes calculated risks.\nrule: If someone makes their own decisions and takes calculated risks, then they value independence.\nconclusion: Alana values independence.\n\nfact1: Alana values independence.\nfact2: Alana embraces uncertainty.\nrule: Anyone who values independence and embraces uncertainty is free-spirited.\nconclusion: Alana is free-spirited.\n\nfact1: Alana is free-spirited.\nfact2: Alana does not pursue creative passions.\nrule: For all humans, if someone is free-spirited, then they either love adventure or pursue creative passions (or both).\nconclusion: Alana loves adventure.\n\nTherefore, it is true that Alana loves adventure. The correct option is: A.",
    "context": "Alana explores new places. Anyone who is spontaneous and trusts their intuition can learn to embrace uncertainty. If Alana explores new places, then she will take calculated risks. Alana makes her own decisions. Anyone who values independence and embraces uncertainty is free-spirited. If Alana has a creative nature, then she is either guided by reason or trusts her intuition (but not both). Alana is not guided by reason. Alana has a creative nature. Alana appreciates simple things. If someone makes their own decisions and takes calculated risks, then they value independence. If someone has an open mind and tolerates ambiguity, then they can embrace uncertainty. Alana is spontaneous. For all humans, if someone is free-spirited, then they either love adventure or pursue creative passions (or both). Alana either pursues creative passions or appreciates simple things, but these two traits do not necessarily overlap in her life.",
    "nl2fol": {
      "Alana explores new places.": "explores_new_places(Alana)",
      "Anyone who is spontaneous and trusts their intuition can learn to embrace uncertainty.": "∀x ((is_spontaneous(x) ∧ trusts_intuition(x)) → embraces_uncertainty(x))",
      "If Alana explores new places, then she will take calculated risks.": "explores_new_places(Alana) → takes_calculated_risks(Alana)",
      "Alana makes her own decisions.": "makes_own_decisions(Alana)",
      "Anyone who values independence and embraces uncertainty is free-spirited.": "∀x ((values_independence(x) ∧ embraces_uncertainty(x)) → free_spirited(x))",
      "If Alana has a creative nature, then she is either guided by reason or trusts her intuition (but not both).": "has_creative_nature(Alana) → (follows_reason(Alana) ⊕ trusts_intuition(Alana))",
      "Alana is not guided by reason.": "¬follows_reason(Alana)",
      "Alana has a creative nature.": "has_creative_nature(Alana)",
      "Alana appreciates simple things.": "appreciates_simple_things(Alana)",
      "If someone makes their own decisions and takes calculated risks, then they value independence.": "∀x ((makes_own_decisions(x) ∧ takes_calculated_risks(x)) → values_independence(x))",
      "If someone has an open mind and tolerates ambiguity, then they can embrace uncertainty.": "∀x ((has_open_mind(x) ∧ tolerates_ambiguity(x)) → embraces_uncertainty(x))",
      "Alana is spontaneous.": "is_spontaneous(Alana)",
      "For all humans, if someone is free-spirited, then they either love adventure or pursue creative passions (or both).": "∀x (free_spirited(x) → (love_adventure(x) ∨ pursue_creative_passions(x)))",
      "Alana either pursues creative passions or appreciates simple things, but these two traits do not necessarily overlap in her life.": "appreciates_simple_things(Alana) ⊕ pursue_creative_passions(Alana)"
    },
    "conclusion_fol": "love_adventure(Alana)"
  },
  {
    "id": 407,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Zane does not build a loyal following.",
    "reasoning": "fact1: Zane has raw potential.\nrule: A person either has raw potential or works hard, but not necessarily both at the same level.\nconclusion: Zane does not work hard.\n\nfact1: Zane performs publicly.\nfact2: Zane is not comfortable on stage.\nrule: If Zane performs publicly, then he either has stage fright or is comfortable on stage (or both).\nconclusion: Zane has stage fright.\n\nfact1: Zane does not work hard.\nrule: Zane either works hard or is talented.\nconclusion: Zane is talented.\n\nfact1: Zane has stage fright.\nrule: Zane either has stage fright or is entertaining, but not both.\nconclusion: Zane is not entertaining.\n\nfact1: Zane is talented.\nrule: If Zane is talented, then he will gain popularity.\nconclusion: Zane gains popularity.\n\nfact1: Zane is charismatic.\nfact2: Zane is not entertaining.\nrule: If Zane is charismatic, then he is either funny or entertaining, but not both.\nconclusion: Zane is funny.\n\nfact1: Zane is funny.\nfact2: Zane gains popularity.\nrule: If Zane is funny, then he can either gain popularity or build a loyal following, but not both.\nconclusion: Zane does not build a loyal following.\n\nTherefore, it is true that Zane does not build a loyal following. The correct option is: A.",
    "context": "Zane is not comfortable on stage. If Zane is talented, then he will gain popularity. Zane is charismatic. If Zane is funny, then he can either gain popularity or build a loyal following, but not both. Zane has raw potential. A person either has raw potential or works hard, but not necessarily both at the same level. If Zane performs publicly, then he either has stage fright or is comfortable on stage (or both). Zane performs publicly. Zane either has stage fright or is entertaining, but not both. Zane either works hard or is talented. If Zane is charismatic, then he is either funny or entertaining, but not both.",
    "nl2fol": {
      "Zane is not comfortable on stage.": "¬comfortable_on_stage(Zane)",
      "If Zane is talented, then he will gain popularity.": "talented(Zane) → gain_popularity(Zane)",
      "Zane is charismatic.": "charismatic(Zane)",
      "If Zane is funny, then he can either gain popularity or build a loyal following, but not both.": "funny(Zane) → (gain_popularity(Zane) ⊕ build_loyal_following(Zane))",
      "Zane has raw potential.": "has_raw_potential(Zane)",
      "A person either has raw potential or works hard, but not necessarily both at the same level.": "∀x (has_raw_potential(x) ⊕ works_hard(x))",
      "If Zane performs publicly, then he either has stage fright or is comfortable on stage (or both).": "perform_publicly(Zane) → (has_stage_fright(Zane) ∨ comfortable_on_stage(Zane))",
      "Zane performs publicly.": "perform_publicly(Zane)",
      "Zane either has stage fright or is entertaining, but not both.": "has_stage_fright(Zane) ⊕ entertaining(Zane)",
      "Zane either works hard or is talented.": "works_hard(Zane) ∨ talented(Zane)",
      "If Zane is charismatic, then he is either funny or entertaining, but not both.": "charismatic(Zane) → (funny(Zane) ⊕ entertaining(Zane))"
    },
    "conclusion_fol": "¬build_loyal_following(Zane)"
  },
  {
    "id": 408,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jaxton does not make groundbreaking discoveries.",
    "reasoning": "fact1: Jaxton receives grants.\nfact2: Jaxton is not someone who makes an impact.\nrule: Everyone who either earns respect or receives grants is someone who makes an impact.\nconclusion: Jaxton earns respect.\n\nfact1: Jaxton contributes to society.\nfact2: Jaxton earns respect.\nrule: If Jaxton contributes to society, then he either earns respect or receives awards, but not both.\nconclusion: Jaxton does not receive awards.\n\nfact1: Jaxton does not receive awards.\nfact2: Jaxton does not gain recognition.\nrule: If Jaxton publishes papers, then he either receives awards or gains recognition (or both).\nconclusion: Jaxton does not publish papers.\n\nfact1: Jaxton has expertise.\nfact2: Jaxton does not publish papers.\nrule: If Jaxton has expertise and shares knowledge, then he publishes papers.\nconclusion: Jaxton does not share knowledge.\n\nfact1: Jaxton does not love learning.\nfact2: Jaxton does not value critical thinking.\nrule: If Jaxton values science, then he either loves learning or values critical thinking, but not both.\nconclusion: Jaxton does not value science.\n\nfact1: Jaxton does not share knowledge.\nfact2: Jaxton mentors students.\nrule: If Jaxton either shares knowledge or mentors students (but not both), then he inspires others.\nconclusion: Jaxton inspires others.\n\nfact1: Jaxton does not value science.\nrule: Jaxton is either passionate about astronomy or values science.\nconclusion: Jaxton is passionate about astronomy.\n\nfact1: Jaxton is passionate about astronomy.\nfact2: Jaxton inspires others.\nrule: If Jaxton is passionate about astronomy, then he will make groundbreaking discoveries and inspire others.\nconclusion: Jaxton does not make groundbreaking discoveries.\n\nTherefore, it is false that Jaxton does not make groundbreaking discoveries. The correct option is: B.",
    "context": "Anyone who conducts research or collaborates with colleagues shares knowledge. Ernesto contributes to society. Kehlani is not someone who makes an impact. If Kehlani is passionate about astronomy, then he will make groundbreaking discoveries and inspire others. If Jaxton publishes papers, then he either receives awards or gains recognition (or both). Jaxton does not love learning. If Jaxton contributes to society, then he either earns respect or receives awards, but not both. Jaxton is not someone who makes an impact. If Jaxton conducts research and develops new theories, then he receives awards. If Jaxton values science, then he either loves learning or values critical thinking, but not both. Jaxton does not gain recognition. Jaxton does not value critical thinking. If Kehlani either shares knowledge or mentors students (but not both), then he inspires others. If Jaxton has expertise and shares knowledge, then he publishes papers. Jaxton receives grants. Johan receives grants. If Jaxton is passionate about astronomy, then he will make groundbreaking discoveries and inspire others. For any person, if they conduct research and write articles, then they publish papers. Anyone who leads by example earns respect. Jaxton contributes to society. Jaxton mentors students. Ernesto does not value critical thinking. If Jaxton either shares knowledge or mentors students (but not both), then he inspires others. Jaxton has expertise. Everyone who either earns respect or receives grants is someone who makes an impact. Jaxton is either passionate about astronomy or values science. Anyone who has a unique perspective either inspires others or pursues novel ideas. If Johan values science, then he either loves learning or values critical thinking, but not both.",
    "nl2fol": {
      "Anyone who conducts research or collaborates with colleagues shares knowledge.": "∀x ((conduct_research(x) ∨ collaborate_colleagues(x)) → share_knowledge(x))",
      "Ernesto contributes to society.": "contribute_to_society(Ernesto)",
      "Kehlani is not someone who makes an impact.": "¬makes_impact(Kehlani)",
      "If Kehlani is passionate about astronomy, then he will make groundbreaking discoveries and inspire others.": "passionate_about_astronomy(Kehlani) → (make_groundbreaking_discoveries(Kehlani) ∧ inspire_others(Kehlani))",
      "If Jaxton publishes papers, then he either receives awards or gains recognition (or both).": "publishes_papers(Jaxton) → (receives_awards(Jaxton) ∨ gains_recognition(Jaxton))",
      "Jaxton does not love learning.": "¬loves_learning(Jaxton)",
      "If Jaxton contributes to society, then he either earns respect or receives awards, but not both.": "contributes_to_society(Jaxton) → (earns_respect(Jaxton) ⊕ receives_awards(Jaxton))",
      "Jaxton is not someone who makes an impact.": "¬makes_impact(Jaxton)",
      "If Jaxton conducts research and develops new theories, then he receives awards.": "(conducts_research(Jaxton) ∧ develops_new_theories(Jaxton)) → receives_awards(Jaxton)",
      "If Jaxton values science, then he either loves learning or values critical thinking, but not both.": "values_science(Jaxton) → (loves_learning(Jaxton) ⊕ values_critical_thinking(Jaxton))",
      "Jaxton does not gain recognition.": "¬gains_recognition(Jaxton)",
      "Jaxton does not value critical thinking.": "¬values_critical_thinking(Jaxton)",
      "If Kehlani either shares knowledge or mentors students (but not both), then he inspires others.": "(share_knowledge(Kehlani) ⊕ mentor_students(Kehlani)) → inspire_others(Kehlani)",
      "If Jaxton has expertise and shares knowledge, then he publishes papers.": "(has_expertise(Jaxton) ∧ share_knowledge(Jaxton)) → publishes_papers(Jaxton)",
      "Jaxton receives grants.": "receives_grants(Jaxton)",
      "Johan receives grants.": "receives_grants(Johan)",
      "If Jaxton is passionate about astronomy, then he will make groundbreaking discoveries and inspire others.": "passionate_about_astronomy(Jaxton) → (make_groundbreaking_discoveries(Jaxton) ∧ inspire_others(Jaxton))",
      "For any person, if they conduct research and write articles, then they publish papers.": "∀x ((conducts_research(x) ∧ writes_articles(x)) → publishes_papers(x))",
      "Anyone who leads by example earns respect.": "∀x (leads_by_example(x) → earns_respect(x))",
      "Jaxton contributes to society.": "contributes_to_society(Jaxton)",
      "Jaxton mentors students.": "mentor_students(Jaxton)",
      "Ernesto does not value critical thinking.": "¬values_critical_thinking(Ernesto)",
      "If Jaxton either shares knowledge or mentors students (but not both), then he inspires others.": "(share_knowledge(Jaxton) ⊕ mentor_students(Jaxton)) → inspire_others(Jaxton)",
      "Jaxton has expertise.": "has_expertise(Jaxton)",
      "Everyone who either earns respect or receives grants is someone who makes an impact.": "∀x ((earns_respect(x) ⊕ receives_grants(x)) → makes_impact(x))",
      "Jaxton is either passionate about astronomy or values science.": "passionate_about_astronomy(Jaxton) ∨ values_science(Jaxton)",
      "Anyone who has a unique perspective either inspires others or pursues novel ideas.": "∀x (have_unique_perspective(x) → (inspire_others(x) ∨ pursue_novel_ideas(x)))",
      "If Johan values science, then he either loves learning or values critical thinking, but not both.": "values_science(Johan) → (loves_learning(Johan) ⊕ values_critical_thinking(Johan))"
    },
    "conclusion_fol": "¬make_groundbreaking_discoveries(Jaxton)"
  },
  {
    "id": 409,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ellie is not a world-class opera singer.",
    "reasoning": "fact1: Ellie did not create an original work.\nfact2: Ellie does not achieve timeless fame.\nrule: If Ellie either creates original work or leaves a lasting legacy (but not both), then she achieves timeless fame.\nconclusion: Ellie does not leave a lasting legacy.\n\nfact1: Ellie does not mentor young artists.\nfact2: Ellie does not leave a lasting legacy.\nrule: If Ellie either mentors young artists or inspires future generations (but not both), then she leaves a lasting legacy.\nconclusion: Ellie does not inspire future generations.\n\nfact1: Ellie will not broaden her horizons.\nrule: When someone studies abroad, they will broaden their horizons.\nconclusion: Ellie did not study abroad.\n\nfact1: Ellie pursues artistic excellence.\nfact2: Ellie does not inspire future generations.\nrule: If someone becomes culturally influential and pursues artistic excellence, then they will inspire future generations.\nconclusion: Ellie does not become culturally influential.\n\nfact1: Ellie does not become culturally influential.\nrule: If Ellie masters a foreign language or achieves recognition, then she will become culturally influential.\nconclusion: Ellie does not achieve recognition.\n\nfact1: Ellie does not achieve recognition.\nrule: Ellie earns critical acclaim or achieves recognition.\nconclusion: Ellie earns critical acclaim.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Ellie is not a world-class opera singer. The correct option is: C.",
    "context": "If Ellie either mentors young artists or inspires future generations (but not both), then she leaves a lasting legacy. If Ellie either creates original work or leaves a lasting legacy (but not both), then she achieves timeless fame. Ellie will not broaden her horizons. Ellie pursues artistic excellence. Ellie earns critical acclaim or achieves recognition. Ellie did not create an original work. Ellie does not achieve timeless fame. If someone becomes culturally influential and pursues artistic excellence, then they will inspire future generations. When someone studies abroad, they will broaden their horizons. Ellie does not mentor young artists. If Ellie masters a foreign language or achieves recognition, then she will become culturally influential.",
    "nl2fol": {
      "If Ellie either mentors young artists or inspires future generations (but not both), then she leaves a lasting legacy.": "(mentor_young_artists(Ellie) ⊕ inspire_future_generations(Ellie)) → leave_lasting_legacy(Ellie)",
      "If Ellie either creates original work or leaves a lasting legacy (but not both), then she achieves timeless fame.": "(create_original_work(Ellie) ⊕ leave_lasting_legacy(Ellie)) → achieve_timeless_fame(Ellie)",
      "Ellie will not broaden her horizons.": "¬broaden_horizons(Ellie)",
      "Ellie pursues artistic excellence.": "pursue_artistic_excellence(Ellie)",
      "Ellie earns critical acclaim or achieves recognition.": "earn_critical_acclaim(Ellie) ∨ achieve_recognition(Ellie)",
      "Ellie did not create an original work.": "¬create_original_work(Ellie)",
      "Ellie does not achieve timeless fame.": "¬achieve_timeless_fame(Ellie)",
      "If someone becomes culturally influential and pursues artistic excellence, then they will inspire future generations.": "∀x ((become_culturally_influential(x) ∧ pursue_artistic_excellence(x)) → inspire_future_generations(x))",
      "When someone studies abroad, they will broaden their horizons.": "∀x (study_abroad(x) → broaden_horizons(x))",
      "Ellie does not mentor young artists.": "¬mentor_young_artists(Ellie)",
      "If Ellie masters a foreign language or achieves recognition, then she will become culturally influential.": "(master_foreign_language(Ellie) ∨ achieve_recognition(Ellie)) → become_culturally_influential(Ellie)"
    },
    "conclusion_fol": "¬world_class_opera_singer(Ellie)"
  },
  {
    "id": 410,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elianna is innovative.",
    "reasoning": "fact1: Elianna conducts lab research.\nrule: If Elianna conducts lab research, then she has a PhD and collaborates with peers.\nconclusion: Elianna has a PhD.\n\nfact1: Elianna has a PhD.\nfact2: Elianna does not publish academic papers.\nrule: If Elianna has a PhD, then she either publishes academic papers or develops new treatments, but not both.\nconclusion: Elianna develops new treatments.\n\nfact1: Elianna develops new treatments.\nrule: Elianna either develops new treatments or examines fungal behavior, but not both.\nconclusion: Elianna does not examine fungal behavior.\n\nfact1: Elianna researches plant diseases.\nfact2: Elianna does not examine fungal behavior.\nrule: If Elianna researches plant diseases, then she either examines fungal behavior or studies water molds (but not both).\nconclusion: Elianna studies water molds.\n\nfact1: Elianna studies water molds.\nrule: If Elianna studies water molds, then she specializes in microbiology.\nconclusion: Elianna specializes in microbiology.\n\nfact1: Elianna specializes in microbiology.\nrule: Elianna either specializes in microbiology or is environmentally conscious, but not necessarily both.\nconclusion: Elianna is not environmentally conscious.\n\nfact1: Elianna is not environmentally conscious.\nrule: Elianna is either environmentally conscious or innovative (or both).\nconclusion: Elianna is innovative.\n\nTherefore, it is true that Elianna is innovative. The correct option is: A.",
    "context": "Elianna either specializes in microbiology or is environmentally conscious, but not necessarily both. If Rosalie conducts lab research, then she has a PhD and collaborates with peers. Elianna either cares about nature or is environmentally conscious. If Elianna investigates microorganisms or analyzes plant samples, then she can examine fungal behavior. If Elianna has a PhD, then she either publishes academic papers or develops new treatments, but not both. If Elianna researches plant diseases, then she either examines fungal behavior or studies water molds (but not both). Elianna does not publish academic papers. If Elianna studies water molds, then she specializes in microbiology. If Elianna investigates downy mildew or examines crop pathogens, then she studies water molds. If Rosalie has a PhD, then she either publishes academic papers or develops new treatments, but not both. If Elianna conducts lab research, then she has a PhD and collaborates with peers. Elianna conducts lab research. Elianna either develops new treatments or examines fungal behavior, but not both. Elianna is either environmentally conscious or innovative (or both). Elianna researches plant diseases.",
    "nl2fol": {
      "Elianna either specializes in microbiology or is environmentally conscious, but not necessarily both.": "specializes_in_microbiology(Elianna) ⊕ environmentally_conscious(Elianna)",
      "If Rosalie conducts lab research, then she has a PhD and collaborates with peers.": "conducts_lab_research(Rosalie) → (has_phd(Rosalie) ∧ collaborate_with_peers(Rosalie))",
      "Elianna either cares about nature or is environmentally conscious.": "cares_about_nature(Elianna) ∨ environmentally_conscious(Elianna)",
      "If Elianna investigates microorganisms or analyzes plant samples, then she can examine fungal behavior.": "(investigates_microorganisms(Elianna) ∨ analyzes_plant_samples(Elianna)) → examines_fungal_behavior(Elianna)",
      "If Elianna has a PhD, then she either publishes academic papers or develops new treatments, but not both.": "has_phd(Elianna) → (publishes_academic_papers(Elianna) ⊕ develops_new_treatments(Elianna))",
      "If Elianna researches plant diseases, then she either examines fungal behavior or studies water molds (but not both).": "researches_plant_diseases(Elianna) → (examines_fungal_behavior(Elianna) ⊕ studies_water_molds(Elianna))",
      "Elianna does not publish academic papers.": "¬publishes_academic_papers(Elianna)",
      "If Elianna studies water molds, then she specializes in microbiology.": "studies_water_molds(Elianna) → specializes_in_microbiology(Elianna)",
      "If Elianna investigates downy mildew or examines crop pathogens, then she studies water molds.": "(investigates_downy_mildew(Elianna) ∨ examines_crop_pathogens(Elianna)) → studies_water_molds(Elianna)",
      "If Rosalie has a PhD, then she either publishes academic papers or develops new treatments, but not both.": "has_phd(Rosalie) → (publishes_academic_papers(Rosalie) ⊕ develops_new_treatments(Rosalie))",
      "If Elianna conducts lab research, then she has a PhD and collaborates with peers.": "conducts_lab_research(Elianna) → (has_phd(Elianna) ∧ collaborate_with_peers(Elianna))",
      "Elianna conducts lab research.": "conducts_lab_research(Elianna)",
      "Elianna either develops new treatments or examines fungal behavior, but not both.": "develops_new_treatments(Elianna) ⊕ examines_fungal_behavior(Elianna)",
      "Elianna is either environmentally conscious or innovative (or both).": "environmentally_conscious(Elianna) ∨ innovative(Elianna)",
      "Elianna researches plant diseases.": "researches_plant_diseases(Elianna)"
    },
    "conclusion_fol": "innovative(Elianna)"
  },
  {
    "id": 411,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Zora is not skilled with tools.",
    "reasoning": "fact1: Zora is a perfectionist.\nrule: Everyone who is a perfectionist pays attention to details.\nconclusion: Zora pays attention to details.\n\nfact1: Zora does not learn quickly.\nfact2: Zora does not excel professionally.\nrule: For all humans, if they either have natural talent or learn quickly, then they excel professionally.\nconclusion: Zora does not have natural talent.\n\nfact1: Zora is self-taught.\nfact2: Zora does not have natural talent.\nrule: If Zora either masters her trade or is self-taught, then she has natural talent.\nconclusion: Zora masters her trade.\n\nfact1: Zora masters her trade.\nfact2: Zora is not formally educated.\nrule: If Zora masters her trade, then she is either formally educated or inexperienced, but not both.\nconclusion: Zora lacks experience.\n\nfact1: Zora pays attention to details.\nfact2: Zora does not create masterpieces\nrule: If Zora values precision and pays attention to details, then she will create masterpieces.\nconclusion: Zora does not value precision.\n\nfact1: Zora lacks experience.\nrule: If someone lacks experience, then they need training.\nconclusion: Zora needs training.\n\nfact1: Zora does not work alone.\nfact2: Zora does not value precision.\nrule: If Zora either works alone or avoids projects (but not both), then she values precision.\nconclusion: Zora does not avoid projects.\n\nfact1: Zora needs training.\nfact2: Zora does not avoid projects.\nrule: If Zora needs training and is inept with tools, then she will avoid projects.\nconclusion: Zora is not inept with tools.\n\nfact1: Zora is not inept with tools.\nrule: Zora is either skilled with tools or inept with tools, but not both.\nconclusion: Zora is not skilled with tools.\n\nTherefore, it is false that Zora is not skilled with tools. The correct option is: B.",
    "context": "All enthusiastic beginners need training and seek guidance. If Zora values precision and pays attention to details, then she will create masterpieces. If Serenity needs training and is inept with tools, then she will avoid projects. Everyone who is a perfectionist pays attention to details. If Serenity either works alone or avoids projects (but not both), then she values precision. If Zora needs training and is inept with tools, then she will avoid projects. If someone lacks experience, then they need training. Aryan does not learn quickly. Zora is a perfectionist. Zora is self-taught. If Serenity values precision and pays attention to details, then she will create masterpieces. Haley does not work alone. Zora is not formally educated. Aryan does not create masterpieces. If Aryan masters her trade, then she is either formally educated or inexperienced, but not both. If Zora either works alone or avoids projects (but not both), then she values precision. Zora is either skilled with tools or inept with tools, but not both. Haley is self-taught. Zora does not work alone. Zora does not create masterpieces. If Zora either masters her trade or is self-taught, then she has natural talent. Zora does not excel professionally. If Zora either fears failure or profits elsewhere (but not both), then she will avoid projects. If Zora is highly motivated, then she has natural talent and is a diligent worker. Zora does not learn quickly. Serenity is not formally educated. If Zora masters her trade, then she is either formally educated or inexperienced, but not both. For all humans, if they either have natural talent or learn quickly, then they excel professionally. Anyone who cares about details will value precision. Haley does not excel professionally. If Aryan either masters her trade or is self-taught, then she has natural talent. Aryan is a perfectionist.",
    "nl2fol": {
      "All enthusiastic beginners need training and seek guidance.": "∀x (enthusiastic_beginner(x) → (needs_training(x) ∧ seeks_guidance(x)))",
      "If Zora values precision and pays attention to details, then she will create masterpieces.": "(values_precision(Zora) ∧ pays_attention(Zora)) → creates_masterpieces(Zora)",
      "If Serenity needs training and is inept with tools, then she will avoid projects.": "(needs_training(Serenity) ∧ inept_with_tools(Serenity)) → avoids_projects(Serenity)",
      "Everyone who is a perfectionist pays attention to details.": "∀x (perfectionist(x) → pays_attention(x))",
      "If Serenity either works alone or avoids projects (but not both), then she values precision.": "(works_alone(Serenity) ⊕ avoids_projects(Serenity)) → values_precision(Serenity)",
      "If Zora needs training and is inept with tools, then she will avoid projects.": "(needs_training(Zora) ∧ inept_with_tools(Zora)) → avoids_projects(Zora)",
      "If someone lacks experience, then they need training.": "∀x (lacks_experience(x) → needs_training(x))",
      "Aryan does not learn quickly.": "¬learns_quickly(Aryan)",
      "Zora is a perfectionist.": "perfectionist(Zora)",
      "Zora is self-taught.": "is_self_taught(Zora)",
      "If Serenity values precision and pays attention to details, then she will create masterpieces.": "(values_precision(Serenity) ∧ pays_attention(Serenity)) → creates_masterpieces(Serenity)",
      "Haley does not work alone.": "¬works_alone(Haley)",
      "Zora is not formally educated.": "¬has_formal_education(Zora)",
      "Aryan does not create masterpieces.": "¬create_masterpieces(Aryan)",
      "If Aryan masters her trade, then she is either formally educated or inexperienced, but not both.": "masters_trade(Aryan) → (has_formal_education(Aryan) ⊕ lacks_experience(Aryan))",
      "If Zora either works alone or avoids projects (but not both), then she values precision.": "(works_alone(Zora) ⊕ avoids_projects(Zora)) → values_precision(Zora)",
      "Zora is either skilled with tools or inept with tools, but not both.": "skilled_with_tools(Zora) ⊕ inept_with_tools(Zora)",
      "Haley is self-taught.": "is_self_taught(Haley)",
      "Zora does not work alone.": "¬works_alone(Zora)",
      "Zora does not create masterpieces.": "¬create_masterpieces(Zora)",
      "If Zora either masters her trade or is self-taught, then she has natural talent.": "(masters_trade(Zora) ⊕ is_self_taught(Zora)) → has_natural_talent(Zora)",
      "Zora does not excel professionally.": "¬excels_professionally(Zora)",
      "If Zora either fears failure or profits elsewhere (but not both), then she will avoid projects.": "(fears_failure(Zora) ⊕ profits_elsewhere(Zora)) → avoids_projects(Zora)",
      "If Zora is highly motivated, then she has natural talent and is a diligent worker.": "highly_motivated(Zora) → (has_natural_talent(Zora) ∧ diligent_worker(Zora))",
      "Zora does not learn quickly.": "¬learns_quickly(Zora)",
      "Serenity is not formally educated.": "¬has_formal_education(Serenity)",
      "If Zora masters her trade, then she is either formally educated or inexperienced, but not both.": "masters_trade(Zora) → (has_formal_education(Zora) ⊕ lacks_experience(Zora))",
      "For all humans, if they either have natural talent or learn quickly, then they excel professionally.": "∀x ((has_natural_talent(x) ⊕ learns_quickly(x)) → excels_professionally(x))",
      "Anyone who cares about details will value precision.": "∀x (cares_about_details(x) → values_precision(x))",
      "Haley does not excel professionally.": "¬excels_professionally(Haley)",
      "If Aryan either masters her trade or is self-taught, then she has natural talent.": "(masters_trade(Aryan) ⊕ is_self_taught(Aryan)) → has_natural_talent(Aryan)",
      "Aryan is a perfectionist.": "perfectionist(Aryan)"
    },
    "conclusion_fol": "¬skilled_with_tools(Zora)"
  },
  {
    "id": 412,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Everly is well-trained.",
    "reasoning": "fact1: Everly listens to his rider.\nfact2: Everly is not disciplined.\nrule: If Everly either listens to his rider or obeys commands (but not both), then he is disciplined.\nconclusion: Everly obeys commands.\n\nfact1: Everly does not have muscle.\nfact2: Everly obeys commands.\nrule: If Everly has good coordination, then he has muscle and obeys commands.\nconclusion: Everly does not have good coordination.\n\nfact1: Everly competes in events.\nfact2: Everly does not have good coordination.\nrule: If Everly either has good reflexes or competes in events (but not both), then he has good coordination.\nconclusion: Everly has good reflexes.\n\nfact1: Everly does not perform well.\nrule: Any horse that is strong or has good stamina performs well.\nconclusion: Everly is not strong.\n\nfact1: Everly does not have good agility.\nfact2: Everly is not athletic.\nrule: All horses that do cross-country either have good agility or are athletic (or both).\nconclusion: Everly does not do cross-country.\n\nfact1: Everly has good reflexes.\nfact2: Everly does not do cross-country.\nrule: If Everly has good reflexes, then he either does cross-country or performs dressage (or both).\nconclusion: Everly performs dressage.\n\nfact1: Everly has good endurance.\nfact2: Everly performs dressage.\nrule: If Everly has good endurance, then he either excels in show jumping or performs dressage (but not both).\nconclusion: Everly does not excel in show jumping.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Everly is well-trained. The correct option is: C.",
    "context": "Everly is not disciplined. All horses that do cross-country either have good agility or are athletic (or both). If Everly has good coordination, then he has muscle and obeys commands. Everly listens to his rider. Everly does not perform well. Everly has good endurance. Everly competes in events. If Everly has good endurance, then he either excels in show jumping or performs dressage (but not both). If Ramona either has good reflexes or competes in events (but not both), then he has good coordination. If Everly has good breeding and an intelligent nature, then he excels in show jumping. Ramona listens to his rider. Everly either has a quick reaction or has good reflexes (or both). If Everly either has good reflexes or competes in events (but not both), then he has good coordination. If Everly either listens to his rider or obeys commands (but not both), then he is disciplined. If Everly has a good temperament, then he either responds to commands or performs dressage (or both). If Everly either clears fences or gallops long distances (but not both), then he does cross-country. Everly is not athletic. Everly does not have good agility. For all horses, if they have good balance and respond to cues, then they obey commands. Everly does not have muscle. Any horse that is strong or has good stamina performs well. If Everly has good reflexes, then he either does cross-country or performs dressage (or both).",
    "nl2fol": {
      "Everly is not disciplined.": "¬is_disciplined(Everly)",
      "All horses that do cross-country either have good agility or are athletic (or both).": "∀x (does_cross_country(x) → (has_good_agility(x) ∨ is_athletic(x)))",
      "If Everly has good coordination, then he has muscle and obeys commands.": "has_good_coordination(Everly) → (has_muscle(Everly) ∧ obeys_commands(Everly))",
      "Everly listens to his rider.": "listens_to_rider(Everly)",
      "Everly does not perform well.": "¬performs_well(Everly)",
      "Everly has good endurance.": "has_good_endurance(Everly)",
      "Everly competes in events.": "competes_in_events(Everly)",
      "If Everly has good endurance, then he either excels in show jumping or performs dressage (but not both).": "has_good_endurance(Everly) → (excels_in_show_jumping(Everly) ⊕ performs_dressage(Everly))",
      "If Ramona either has good reflexes or competes in events (but not both), then he has good coordination.": "(has_good_reflexes(Ramona) ⊕ competes_in_events(Ramona)) → has_good_coordination(Ramona)",
      "If Everly has good breeding and an intelligent nature, then he excels in show jumping.": "has_good_breeding(Everly) → (has_intelligent_nature(Everly) ∧ excels_in_show_jumping(Everly))",
      "Ramona listens to his rider.": "listens_to_rider(Ramona)",
      "Everly either has a quick reaction or has good reflexes (or both).": "has_quick_reaction(Everly) ∨ has_good_reflexes(Everly)",
      "If Everly either has good reflexes or competes in events (but not both), then he has good coordination.": "(has_good_reflexes(Everly) ⊕ competes_in_events(Everly)) → has_good_coordination(Everly)",
      "If Everly either listens to his rider or obeys commands (but not both), then he is disciplined.": "(listens_to_rider(Everly) ⊕ obeys_commands(Everly)) → is_disciplined(Everly)",
      "If Everly has a good temperament, then he either responds to commands or performs dressage (or both).": "has_good_temperament(Everly) → (responds_to_commands(Everly) ∨ performs_dressage(Everly))",
      "If Everly either clears fences or gallops long distances (but not both), then he does cross-country.": "(clears_fences(Everly) ⊕ gallops_long_distances(Everly)) → does_cross_country(Everly)",
      "Everly is not athletic.": "¬is_athletic(Everly)",
      "Everly does not have good agility.": "¬has_good_agility(Everly)",
      "For all horses, if they have good balance and respond to cues, then they obey commands.": "∀x ((has_good_balance(x) ∧ responds_to_cues(x)) → obeys_commands(x))",
      "Everly does not have muscle.": "¬has_muscle(Everly)",
      "Any horse that is strong or has good stamina performs well.": "∀x ((is_strong(x) ∨ has_good_stamina(x)) → performs_well(x))",
      "If Everly has good reflexes, then he either does cross-country or performs dressage (or both).": "has_good_reflexes(Everly) → (does_cross_country(Everly) ∨ performs_dressage(Everly))"
    },
    "conclusion_fol": "is_well_trained(Everly)"
  },
  {
    "id": 413,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Shelby is unprepared for emergencies.",
    "reasoning": "fact1: Shelby is a rural resident.\nfact2: Shelby does not buy from local markets.\nrule: If Shelby is a rural resident, then she either grows her own crops or buys from local markets, but not both.\nconclusion: Shelby grows her own crops.\n\nfact1: Shelby tends to a garden.\nrule: If Shelby tends to a garden, then she cultivates an orchard.\nconclusion: Shelby cultivates an orchard.\n\nfact1: Shelby does not raise livestock.\nfact2: Shelby cultivates an orchard.\nrule: If someone either raises livestock or cultivates an orchard (but not both), then they are a farm owner.\nconclusion: Shelby is a farm owner.\n\nfact1: Shelby is a farm owner.\nfact2: Shelby grows her own crops.\nrule: If Shelby is a farm owner, then she either grows her own crops or has food storage, but not both.\nconclusion: Shelby does not have food storage.\n\nfact1: Shelby is self-sufficient.\nrule: If Shelby is self-sufficient, then she lives off the land.\nconclusion: Shelby lives off the land.\n\nfact1: Shelby lives off the land.\nfact2: Shelby does not have food storage.\nrule: Anyone who lives off the land is either prepared for emergencies or has food storage.\nconclusion: Shelby is prepared for emergencies.\n\nfact1: Shelby is prepared for emergencies.\nrule: For every human, either they are prepared for emergencies or they are unprepared for emergencies, but not both.\nconclusion: Shelby is prepared for emergencies.\n\nTherefore, it is false that Shelby is unprepared for emergencies. The correct option is: B.",
    "context": "Shelby is a rural resident. If Shelby is self-sufficient, then she lives off the land. For every human, either they are prepared for emergencies or they are unprepared for emergencies, but not both. Shelby does not raise livestock. Pudding does not raise livestock. If Shelby tends to a garden, then she cultivates an orchard. If someone either raises livestock or cultivates an orchard (but not both), then they are a farm owner. If Shelby is a rural resident, then she either grows her own crops or buys from local markets, but not both. If Nalani is a farm owner, then she either grows her own crops or has food storage, but not both. Pudding is a rural resident. Anyone who lives off the land is either prepared for emergencies or has food storage. If Shelby values independence, then she grows her own crops. Shelby either keeps bees or cultivates an orchard (or both). Shelby does not buy from local markets. Shelby tends to a garden. Andres does not buy from local markets. If Shelby is a farm owner, then she either grows her own crops or has food storage, but not both. Shelby is self-sufficient. If Nalani is self-sufficient, then she lives off the land.",
    "nl2fol": {
      "Shelby is a rural resident.": "is_rural_resident(Shelby)",
      "If Shelby is self-sufficient, then she lives off the land.": "self_sufficient(Shelby) → lives_off_the_land(Shelby)",
      "For every human, either they are prepared for emergencies or they are unprepared for emergencies, but not both.": "∀x (prepared_for_emergencies(x) ⊕ unprepared_for_emergencies(x))",
      "Shelby does not raise livestock.": "¬raises_livestock(Shelby)",
      "Pudding does not raise livestock.": "¬raise_livestock(Pudding)",
      "If Shelby tends to a garden, then she cultivates an orchard.": "tends_to_garden(Shelby) → cultivates_orchard(Shelby)",
      "If someone either raises livestock or cultivates an orchard (but not both), then they are a farm owner.": "∀x ((raises_livestock(x) ⊕ cultivates_orchard(x)) → is_farm_owner(x))",
      "If Shelby is a rural resident, then she either grows her own crops or buys from local markets, but not both.": "is_rural_resident(Shelby) → (grows_own_crops(Shelby) ⊕ buys_from_local_markets(Shelby))",
      "If Nalani is a farm owner, then she either grows her own crops or has food storage, but not both.": "is_farm_owner(Nalani) → (grows_own_crops(Nalani) ⊕ has_food_storage(Nalani))",
      "Pudding is a rural resident.": "is_rural_resident(Pudding)",
      "Anyone who lives off the land is either prepared for emergencies or has food storage.": "∀x (lives_off_the_land(x) → (prepared_for_emergencies(x) ∨ has_food_storage(x)))",
      "If Shelby values independence, then she grows her own crops.": "values_independence(Shelby) → grows_own_crops(Shelby)",
      "Shelby either keeps bees or cultivates an orchard (or both).": "keeps_bees(Shelby) ∨ cultivates_orchard(Shelby)",
      "Shelby does not buy from local markets.": "¬buys_from_local_markets(Shelby)",
      "Shelby tends to a garden.": "tends_to_garden(Shelby)",
      "Andres does not buy from local markets.": "¬buys_from_local_markets(Andres)",
      "If Shelby is a farm owner, then she either grows her own crops or has food storage, but not both.": "is_farm_owner(Shelby) → (grows_own_crops(Shelby) ⊕ has_food_storage(Shelby))",
      "Shelby is self-sufficient.": "self_sufficient(Shelby)",
      "If Nalani is self-sufficient, then she lives off the land.": "self_sufficient(Nalani) → lives_off_the_land(Nalani)"
    },
    "conclusion_fol": "unprepared_for_emergencies(Shelby)"
  },
  {
    "id": 414,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Melissa is creative.",
    "reasoning": "fact1: Melissa manages her time.\nfact2: Melissa stays organized.\nrule: If someone manages their time and stays organized, then they can meet deadlines.\nconclusion: Melissa meets deadlines.\n\nfact1: Melissa meets deadlines.\nrule: Whoever meets deadlines is someone who prioritizes tasks.\nconclusion: Melissa prioritizes tasks.\n\nfact1: Melissa prioritizes tasks.\nrule: Melissa is either someone who has many hobbies or someone who prioritizes tasks, but not necessarily both.\nconclusion: Melissa does not have many hobbies.\n\nfact1: Melissa reacts emotionally.\nfact2: Melissa does not act impulsively.\nrule: If Melissa either reacts emotionally or acts impulsively (but not both), then she is easily excited.\nconclusion: Melissa is easily excited.\n\nfact1: Melissa does not have many hobbies.\nfact2: Melissa is easily excited.\nrule: Anyone who has many hobbies or is easily excited can get side-tracked.\nconclusion: Melissa gets side-tracked.\n\nfact1: Melissa does not overthink details.\nfact2: Melissa gets side-tracked.\nrule: If Melissa either overthinks details or gets side-tracked (but not both), then she is distracted.\nconclusion: Melissa is distracted.\n\nfact1: Melissa is not focused.\nfact2: Melissa is distracted.\nrule: If Melissa is either focused or distracted (but not both), then she is creative.\nconclusion: Melissa is creative.\n\nTherefore, it is true that Melissa is creative. The correct option is: A.",
    "context": "If Melissa either reacts emotionally or acts impulsively (but not both), then she is easily excited. Melissa does not act impulsively. If Melissa is either focused or distracted (but not both), then she is creative. If someone is curious and seeks novelty, then they can be easily excited. Melissa is either someone who has many hobbies or someone who prioritizes tasks, but not necessarily both. Melissa does not overthink details. Anyone who has many hobbies or is easily excited can get side-tracked. Melissa manages her time. If Melissa either overthinks details or gets side-tracked (but not both), then she is distracted. Melissa stays organized. Whoever meets deadlines is someone who prioritizes tasks. If someone manages their time and stays organized, then they can meet deadlines. Melissa reacts emotionally. Melissa is not focused.",
    "nl2fol": {
      "If Melissa either reacts emotionally or acts impulsively (but not both), then she is easily excited.": "(reacts_emotionally(Melissa) ⊕ acts_impulsively(Melissa)) → easily_excited(Melissa)",
      "Melissa does not act impulsively.": "¬acts_impulsively(Melissa)",
      "If Melissa is either focused or distracted (but not both), then she is creative.": "(focused(Melissa) ⊕ distracted(Melissa)) → creative(Melissa)",
      "If someone is curious and seeks novelty, then they can be easily excited.": "∀x ((is_curious(x) ∧ seeks_novelty(x)) → easily_excited(x))",
      "Melissa is either someone who has many hobbies or someone who prioritizes tasks, but not necessarily both.": "prioritizes_tasks(Melissa) ⊕ has_many_hobbies(Melissa)",
      "Melissa does not overthink details.": "¬overthinks_details(Melissa)",
      "Anyone who has many hobbies or is easily excited can get side-tracked.": "∀x ((has_many_hobbies(x) ∨ easily_excited(x)) → gets_side_tracked(x))",
      "Melissa manages her time.": "manages_time(Melissa)",
      "If Melissa either overthinks details or gets side-tracked (but not both), then she is distracted.": "(overthinks_details(Melissa) ⊕ gets_side_tracked(Melissa)) → distracted(Melissa)",
      "Melissa stays organized.": "stays_organized(Melissa)",
      "Whoever meets deadlines is someone who prioritizes tasks.": "∀x (meets_deadlines(x) → prioritizes_tasks(x))",
      "If someone manages their time and stays organized, then they can meet deadlines.": "∀x ((manages_time(x) ∧ stays_organized(x)) → meets_deadlines(x))",
      "Melissa reacts emotionally.": "reacts_emotionally(Melissa)",
      "Melissa is not focused.": "¬focused(Melissa)"
    },
    "conclusion_fol": "creative(Melissa)"
  },
  {
    "id": 415,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alivia does not fight for justice.",
    "reasoning": "fact1: Alivia pursues personal growth.\nrule: Alivia either pursues personal growth or faces challenges, but not both.\nconclusion: Alivia does not face challenges.\n\nfact1: Alivia listens deeply.\nrule: If someone listens deeply, then they understand human pain and have compassion.\nconclusion: Alivia understands human pain.\n\nfact1: Alivia investigates crimes.\nfact2: Alivia does not analyze clues.\nrule: Everyone who investigates crimes either analyzes clues or seeks truth (or both).\nconclusion: Alivia seeks truth.\n\nfact1: Alivia understands human pain.\nrule: Anyone who understands human pain or connects with people can empathize with victims.\nconclusion: Alivia empathizes with victims.\n\nfact1: Alivia empathizes with victims.\nfact2: Alivia seeks truth.\nrule: If Alivia empathizes with victims or seeks truth, then she fights for justice.\nconclusion: Alivia fights for justice.\n\nTherefore, it is false that Alivia does not fight for justice. The correct option is: B.",
    "context": "Alivia either pursues personal growth or faces challenges, but not both. Everyone who investigates crimes either analyzes clues or seeks truth (or both). Alivia investigates crimes. If someone listens deeply, then they understand human pain and have compassion. Alivia pursues personal growth. Alivia does not analyze clues. Alivia listens deeply. If Alivia empathizes with victims or seeks truth, then she fights for justice. Anyone who understands human pain or connects with people can empathize with victims.",
    "nl2fol": {
      "Alivia either pursues personal growth or faces challenges, but not both.": "pursue_personal_growth(Alivia) ⊕ face_challenges(Alivia)",
      "Everyone who investigates crimes either analyzes clues or seeks truth (or both).": "∀x (investigate_crimes(x) → (analyzes_clues(x) ∨ seek_truth(x)))",
      "Alivia investigates crimes.": "investigate_crimes(Alivia)",
      "If someone listens deeply, then they understand human pain and have compassion.": "∀x (listen_deeply(x) → (understand_human_pain(x) ∧ have_compassion(x)))",
      "Alivia pursues personal growth.": "pursue_personal_growth(Alivia)",
      "Alivia does not analyze clues.": "¬analyzes_clues(Alivia)",
      "Alivia listens deeply.": "listen_deeply(Alivia)",
      "If Alivia empathizes with victims or seeks truth, then she fights for justice.": "(empathize_with_victims(Alivia) ∨ seek_truth(Alivia)) → fight_for_justice(Alivia)",
      "Anyone who understands human pain or connects with people can empathize with victims.": "∀x ((understand_human_pain(x) ∨ connect_with_people(x)) → empathize_with_victims(x))"
    },
    "conclusion_fol": "¬fight_for_justice(Alivia)"
  },
  {
    "id": 416,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ariya speaks her mind.",
    "reasoning": "fact1: Ariya values honesty.\nfact2: Ariya is not respected.\nrule: If someone values honesty and finds common ground, then they are respected.\nconclusion: Ariya does not find common ground.\n\nfact1: Ariya does not avoid conflict.\nfact2: Ariya does not find common ground.\nrule: If someone is diplomatic, then they either avoid conflict or find common ground.\nconclusion: Ariya is not diplomatic.\n\nfact1: Ariya is not diplomatic.\nfact2: Ariya cannot build strong relationships.\nrule: Anyone who keeps the peace or is diplomatic can build strong relationships.\nconclusion: Ariya does not keep the peace.\n\nfact1: Ariya does not express her opinions freely.\nrule: Ariya either expresses her opinions freely or listens to others, but not both all the time.\nconclusion: Ariya listens to others.\n\nfact1: Ariya listens to others.\nfact2: Ariya does not keep the peace.\nrule: For anyone who avoids confrontation and listens to others, they tend to keep the peace.\nconclusion: Ariya does not tend to avoid confrontation.\n\nfact1: Ariya does not tend to avoid confrontation.\nrule: For Ariya, she either tends to avoid confrontation or stands up for herself, but not both.\nconclusion: Ariya stands up for herself.\n\nfact1: Ariya stands up for herself.\nrule: Anyone who stands up for themselves will earn respect.\nconclusion: Ariya earns respect.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Ariya speaks her mind. The correct option is: C.",
    "context": "If Ariya is open-minded, then she shows empathy and keeps the peace. Ariya values honesty. Ariya does not express her opinions freely. If someone values honesty and finds common ground, then they are respected. Anyone who stands up for themselves will earn respect. Ariya does not avoid conflict. Ariya either gains admiration or earns respect. For Ariya, she either tends to avoid confrontation or stands up for herself, but not both. Everett does not express her opinions freely. Ariya cannot build strong relationships. Ariya is not respected. If someone is diplomatic, then they either avoid conflict or find common ground. Anyone who understands perspectives or empathizes with others can find common ground. If a person has confidence, then they will stand up for themselves. Anyone who keeps the peace or is diplomatic can build strong relationships. For anyone who avoids confrontation and listens to others, they tend to keep the peace. For Everett, she either tends to avoid confrontation or stands up for herself, but not both. Ariya either expresses her opinions freely or listens to others, but not both all the time.",
    "nl2fol": {
      "If Ariya is open-minded, then she shows empathy and keeps the peace.": "be_open_minded(Ariya) → (show_empathy(Ariya) ∧ keep_peace(Ariya))",
      "Ariya values honesty.": "values_honesty(Ariya)",
      "Ariya does not express her opinions freely.": "¬express_opinions_freely(Ariya)",
      "If someone values honesty and finds common ground, then they are respected.": "∀x ((values_honesty(x) ∧ find_common_ground(x)) → is_respected(x))",
      "Anyone who stands up for themselves will earn respect.": "∀x (stand_up_for_themselves(x) → earn_respect(x))",
      "Ariya does not avoid conflict.": "¬avoid_conflict(Ariya)",
      "Ariya either gains admiration or earns respect.": "gain_admiration(Ariya) ∨ earn_respect(Ariya)",
      "For Ariya, she either tends to avoid confrontation or stands up for herself, but not both.": "avoid_confrontation(Ariya) ⊕ stand_up_for_themselves(Ariya)",
      "Everett does not express her opinions freely.": "¬express_opinions_freely(Everett)",
      "Ariya cannot build strong relationships.": "¬build_strong_relationships(Ariya)",
      "Ariya is not respected.": "¬is_respected(Ariya)",
      "If someone is diplomatic, then they either avoid conflict or find common ground.": "∀x (is_diplomatic(x) → (avoid_conflict(x) ∨ find_common_ground(x)))",
      "Anyone who understands perspectives or empathizes with others can find common ground.": "∀x ((understand_perspectives(x) ∨ empathize_with_others(x)) → find_common_ground(x))",
      "If a person has confidence, then they will stand up for themselves.": "∀x (has_confidence(x) → stand_up_for_themselves(x))",
      "Anyone who keeps the peace or is diplomatic can build strong relationships.": "∀x ((keep_peace(x) ∨ is_diplomatic(x)) → build_strong_relationships(x))",
      "For anyone who avoids confrontation and listens to others, they tend to keep the peace.": "∀x ((avoid_confrontation(x) ∧ listen_to_others(x)) → keep_peace(x))",
      "For Everett, she either tends to avoid confrontation or stands up for herself, but not both.": "avoid_confrontation(Everett) ⊕ stand_up_for_themselves(Everett)",
      "Ariya either expresses her opinions freely or listens to others, but not both all the time.": "express_opinions_freely(Ariya) ⊕ listen_to_others(Ariya)"
    },
    "conclusion_fol": "speak_their_mind(Ariya)"
  },
  {
    "id": 417,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Tristan is charismatic or persuasive, then he is a successful lawyer.",
    "reasoning": "fact1: Tristan is reserved.\nfact2: Tristan does not prefer solo work.\nrule: If Tristan either is reserved or prefers solo work (but not both), then he tends to avoid confrontation.\nconclusion: Tristan avoids confrontation.\n\nfact1: Tristan avoids confrontation.\nfact2: Tristan does not value privacy.\nrule: If Tristan either avoids confrontation or values privacy (but not both), then he is introspective.\nconclusion: Tristan is introspective.\n\nfact1: Tristan is introspective.\nrule: Tristan is either introspective or has good listening skills, but not necessarily both.\nconclusion: Tristan does not have good listening skills.\n\nfact1: Tristan is straightforward.\nrule: If someone is straightforward, then they may not necessarily empathize with others, and vice versa.\nconclusion: Tristan does not empathize with others.\n\nfact1: Tristan does not have good listening skills.\nrule: Tristan has good listening skills or is persuasive.\nconclusion: Tristan is persuasive.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Tristan is charismatic or persuasive, then he is a successful lawyer. The correct option is: C.",
    "context": "If Tristan either builds trust or wins cases (but not both), then he is a successful lawyer. Tristan is straightforward. Matthew is either introspective or has good listening skills, but not necessarily both. If Tristan either avoids confrontation or values privacy (but not both), then he is introspective. Tristan does not value privacy. Tristan does not prefer solo work. Tristan is reserved. If someone is straightforward, then they may not necessarily empathize with others, and vice versa. If Tristan either is reserved or prefers solo work (but not both), then he tends to avoid confrontation. Tristan has good listening skills or is persuasive. Tristan is either introspective or has good listening skills, but not necessarily both. Anyone who is attentive or understands feelings can empathize with others.",
    "nl2fol": {
      "If Tristan either builds trust or wins cases (but not both), then he is a successful lawyer.": "(builds_trust(Tristan) ⊕ wins_cases(Tristan)) → successful_lawyer(Tristan)",
      "Tristan is straightforward.": "is_straightforward(Tristan)",
      "Matthew is either introspective or has good listening skills, but not necessarily both.": "is_introspective(Matthew) ⊕ has_good_listening_skills(Matthew)",
      "If Tristan either avoids confrontation or values privacy (but not both), then he is introspective.": "(avoids_confrontation(Tristan) ⊕ values_privacy(Tristan)) → is_introspective(Tristan)",
      "Tristan does not value privacy.": "¬values_privacy(Tristan)",
      "Tristan does not prefer solo work.": "¬prefers_solo_work(Tristan)",
      "Tristan is reserved.": "is_reserved(Tristan)",
      "If someone is straightforward, then they may not necessarily empathize with others, and vice versa.": "∀x (is_straightforward(x) ⊕ empathizes_with_others(x))",
      "If Tristan either is reserved or prefers solo work (but not both), then he tends to avoid confrontation.": "(is_reserved(Tristan) ⊕ prefers_solo_work(Tristan)) → avoids_confrontation(Tristan)",
      "Tristan has good listening skills or is persuasive.": "has_good_listening_skills(Tristan) ∨ persuasive(Tristan)",
      "Tristan is either introspective or has good listening skills, but not necessarily both.": "is_introspective(Tristan) ⊕ has_good_listening_skills(Tristan)",
      "Anyone who is attentive or understands feelings can empathize with others.": "∀x ((is_attentive(x) ∨ understands_feelings(x)) → empathizes_with_others(x))"
    },
    "conclusion_fol": "(charismatic(Tristan) ∨ persuasive(Tristan)) → successful_lawyer(Tristan)"
  },
  {
    "id": 418,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dr. Alaina Thompson does not improve patients' lives.",
    "reasoning": "fact1: Dr. Alaina Thompson funds medical research.\nfact2: Dr. Alaina Thompson does not develop new treatments.\nrule: If Dr. Alaina Thompson either funds medical research or develops new treatments (but not both), then she combats serious diseases.\nconclusion: Alaina combats serious diseases.\n\nfact1: Alaina combats serious diseases.\nfact2: Alaina does not gain international recognition.\nrule: If Dr. Alaina Thompson combats serious diseases, then she either advocates for patients' rights or gains international recognition (or both).\nconclusion: Alaina is an advocate for patients' rights.\n\nfact1: Alaina is an advocate for patients' rights.\nrule: If Dr. Alaina Thompson is an advocate for patients' rights, then she does not pioneer a medical breakthrough, and vice versa.\nconclusion: Dr. Alaina Thompson does not pioneer a medical breakthrough.\n\nfact1: Alaina receives a noble award.\nfact2: Dr. Alaina Thompson does not pioneer a medical breakthrough.\nrule: If Dr. Alaina Thompson receives a noble award, then she is either dedicated to cancer research or pioneers a medical breakthrough, but not both.\nconclusion: Dr. Alaina Thompson is dedicated to cancer research.\n\nfact1: Alaina does not contribute to medicine.\nrule: Dr. Alaina Thompson contributes to medicine or makes groundbreaking discoveries.\nconclusion: Dr. Alaina Thompson makes a groundbreaking discovery.\n\nfact1: Dr. Alaina Thompson is dedicated to cancer research.\nfact2: Dr. Alaina Thompson makes a groundbreaking discovery.\nrule: If Dr. Alaina Thompson is dedicated to cancer research, then she can either make groundbreaking discoveries or improve patients' lives, but not both.\nconclusion: Dr. Alaina Thompson does not improve patients' lives.\n\nTherefore, it is true that Dr. Alaina Thompson does not improve patients' lives. The correct option is: A.",
    "context": "If Dr. Alaina Thompson either funds medical research or develops new treatments (but not both), then she combats serious diseases. Alaina receives a noble award. Dr. Marleigh Thompson does not develop new treatments. Alaina does not gain international recognition. Dr. Marleigh Thompson funds medical research. Dr. Alaina Thompson does not develop new treatments. If Dr. Alaina Thompson is an advocate for patients' rights, then she does not pioneer a medical breakthrough, and vice versa. If Dr. Alaina Thompson combats serious diseases, then she either advocates for patients' rights or gains international recognition (or both). Dr. Alaina Thompson contributes to medicine or makes groundbreaking discoveries. If Dr. Alaina Thompson cares about people and speaks out against injustice, then she advocates for patients' rights. Dr. Alaina Thompson funds medical research. If Dr. Alaina Thompson is dedicated to cancer research, then she can either make groundbreaking discoveries or improve patients' lives, but not both. Alaina does not contribute to medicine. Dr. Alaina Thompson works in healthcare or combats serious diseases. If Dr. Alaina Thompson receives a noble award, then she is either dedicated to cancer research or pioneers a medical breakthrough, but not both.",
    "nl2fol": {
      "If Dr. Alaina Thompson either funds medical research or develops new treatments (but not both), then she combats serious diseases.": "(funds_medical_research(Alaina) ⊕ develops_new_treatments(Alaina)) → combats_serious_diseases(Alaina)",
      "Alaina receives a noble award.": "receives_noble_award(Alaina)",
      "Dr. Marleigh Thompson does not develop new treatments.": "¬develops_new_treatments(Marleigh)",
      "Alaina does not gain international recognition.": "¬gains_international_recognition(Alaina)",
      "Dr. Marleigh Thompson funds medical research.": "funds_medical_research(Marleigh)",
      "Dr. Alaina Thompson does not develop new treatments.": "¬develops_new_treatments(Alaina)",
      "If Dr. Alaina Thompson is an advocate for patients' rights, then she does not pioneer a medical breakthrough, and vice versa.": "advocates_for_patients_rights(Alaina) ⊕ pioneers_medical_breakthrough(Alaina)",
      "If Dr. Alaina Thompson combats serious diseases, then she either advocates for patients' rights or gains international recognition (or both).": "combats_serious_diseases(Alaina) → (advocates_for_patients_rights(Alaina) ∨ gains_international_recognition(Alaina))",
      "Dr. Alaina Thompson contributes to medicine or makes groundbreaking discoveries.": "contributes_to_medicine(Alaina) ∨ make_groundbreaking_discovery(Alaina)",
      "If Dr. Alaina Thompson cares about people and speaks out against injustice, then she advocates for patients' rights.": "(cares_about_people(Alaina) ∧ speaks_out_against_injustice(Alaina)) → advocates_for_patients_rights(Alaina)",
      "Dr. Alaina Thompson funds medical research.": "funds_medical_research(Alaina)",
      "If Dr. Alaina Thompson is dedicated to cancer research, then she can either make groundbreaking discoveries or improve patients' lives, but not both.": "dedicated_to_cancer_research(Alaina) → (make_groundbreaking_discovery(Alaina) ⊕ improve_patient_lives(Alaina))",
      "Alaina does not contribute to medicine.": "¬contributes_to_medicine(Alaina)",
      "Dr. Alaina Thompson works in healthcare or combats serious diseases.": "works_in_healthcare(Alaina) ∨ combats_serious_diseases(Alaina)",
      "If Dr. Alaina Thompson receives a noble award, then she is either dedicated to cancer research or pioneers a medical breakthrough, but not both.": "receives_noble_award(Alaina) → (dedicated_to_cancer_research(Alaina) ⊕ pioneers_medical_breakthrough(Alaina))"
    },
    "conclusion_fol": "¬improve_patient_lives(Alaina)"
  },
  {
    "id": 419,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kahlani prefers mass-produced beer.",
    "reasoning": "fact1: Kahlani embraces diversity.\nrule: For Kahlani, she either honors her culture or embraces diversity, but not necessarily both.\nconclusion: Kahlani does not honor culture.\n\nfact1: Kahlani runs a brewpub.\nfact2: Kahlani does not foster community.\nrule: Everyone who runs a brewpub either seeks innovation or fosters community (or both).\nconclusion: Kahlani seeks innovation.\n\nfact1: Kahlani does not honor culture.\nrule: Kahlani honors culture or respects tradition.\nconclusion: Kahlani respects tradition.\n\nfact1: Kahlani respects tradition.\nfact2: Kahlani seeks innovation.\nrule: If Kahlani respects tradition, then she appreciates uniqueness and seeks innovation.\nconclusion: Kahlani appreciates uniqueness.\n\nfact1: Kahlani knows good taste.\nrule: If Kahlani knows good taste, then she values quality and supports local business.\nconclusion: Kahlani values quality.\n\nfact1: Kahlani values quality.\nfact2: Kahlani appreciates uniqueness.\nrule: If Kahlani values quality and appreciates uniqueness, then she enjoys craft beer.\nconclusion: Kahlani enjoys craft beer.\n\nfact1: Kahlani enjoys craft beer.\nrule: Kahlani either enjoys craft beer or prefers mass-produced beer, but not both.\nconclusion: Kahlani does not prefer mass-produced beer.\n\nTherefore, it is false that Kahlani prefers mass-produced beer. The correct option is: B.",
    "context": "If Kahlani values quality and appreciates uniqueness, then she enjoys craft beer. If Kahlani knows good taste, then she values quality and supports local business. If Bristol respects tradition, then she appreciates uniqueness and seeks innovation. Ford does not foster community. If Kahlani respects tradition, then she appreciates uniqueness and seeks innovation. Kahlani knows good taste. Everyone who runs a brewpub either seeks innovation or fosters community (or both). Kahlani embraces diversity. If Kahlani values creativity, then she pursues excellence and respects tradition. If Kahlani either tries new recipes or experiments with flavors (but not both), then she seeks innovation. Kahlani either enjoys craft beer or prefers mass-produced beer, but not both. If Kahlani has a discerning palate, then she either pays attention to detail or values quality, but not both. Anyone who seeks originality or loves experimentation appreciates uniqueness. For Kahlani, she either honors her culture or embraces diversity, but not necessarily both. Kahlani does not foster community. Kahlani honors culture or respects tradition. Kahlani runs a brewpub. If Ford knows good taste, then she values quality and supports local business.",
    "nl2fol": {
      "If Kahlani values quality and appreciates uniqueness, then she enjoys craft beer.": "(values_quality(Kahlani) ∧ appreciates_uniqueness(Kahlani)) → enjoys_craft_beer(Kahlani)",
      "If Kahlani knows good taste, then she values quality and supports local business.": "knows_good_taste(Kahlani) → (values_quality(Kahlani) ∧ supports_local_business(Kahlani))",
      "If Bristol respects tradition, then she appreciates uniqueness and seeks innovation.": "respects_tradition(Bristol) → (seeks_innovation(Bristol) ∧ appreciates_uniqueness(Bristol))",
      "Ford does not foster community.": "¬fosters_community(Ford)",
      "If Kahlani respects tradition, then she appreciates uniqueness and seeks innovation.": "respects_tradition(Kahlani) → (seeks_innovation(Kahlani) ∧ appreciates_uniqueness(Kahlani))",
      "Kahlani knows good taste.": "knows_good_taste(Kahlani)",
      "Everyone who runs a brewpub either seeks innovation or fosters community (or both).": "∀x (runs_brewpub(x) → (seeks_innovation(x) ∨ fosters_community(x)))",
      "Kahlani embraces diversity.": "embraces_diversity(Kahlani)",
      "If Kahlani values creativity, then she pursues excellence and respects tradition.": "values_creativity(Kahlani) → (pursues_excellence(Kahlani) ∧ respects_tradition(Kahlani))",
      "If Kahlani either tries new recipes or experiments with flavors (but not both), then she seeks innovation.": "(tries_new_recipes(Kahlani) ⊕ experiments_with_flavors(Kahlani)) → seeks_innovation(Kahlani)",
      "Kahlani either enjoys craft beer or prefers mass-produced beer, but not both.": "enjoys_craft_beer(Kahlani) ⊕ prefers_mass_produced_beer(Kahlani)",
      "If Kahlani has a discerning palate, then she either pays attention to detail or values quality, but not both.": "has_discerning_palate(Kahlani) → (pays_attention_to_detail(Kahlani) ⊕ values_quality(Kahlani))",
      "Anyone who seeks originality or loves experimentation appreciates uniqueness.": "∀x ((seeks_originality(x) ∨ loves_experimentation(x)) → appreciates_uniqueness(x))",
      "For Kahlani, she either honors her culture or embraces diversity, but not necessarily both.": "embraces_diversity(Kahlani) ⊕ honors_culture(Kahlani)",
      "Kahlani does not foster community.": "¬fosters_community(Kahlani)",
      "Kahlani honors culture or respects tradition.": "honors_culture(Kahlani) ∨ respects_tradition(Kahlani)",
      "Kahlani runs a brewpub.": "runs_brewpub(Kahlani)",
      "If Ford knows good taste, then she values quality and supports local business.": "knows_good_taste(Ford) → (values_quality(Ford) ∧ supports_local_business(Ford))"
    },
    "conclusion_fol": "prefers_mass_produced_beer(Kahlani)"
  },
  {
    "id": 420,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hunter is an unsuccessful fisherman.",
    "reasoning": "fact1: Hunter does not use bait.\nrule: Hunter uses bait or knows ictiobus.\nconclusion: Hunter knows ictiobus.\n\nfact1: Hunter knows ictiobus.\nfact2: Hunter does not understand currents.\nrule: If Hunter knows ictiobus, then he either reads the water or understands currents, but not both.\nconclusion: Hunter can read the water.\n\nfact1: Hunter can read the water.\nfact2: Hunter is not skilled.\nrule: If Hunter can read the water, then he is either skilled or experienced, but not both.\nconclusion: Hunter has experience.\n\nfact1: Hunter knows the river.\nfact2: Hunter has experience.\nrule: If Hunter knows the river, then he either has experience or catches fish, but not both.\nconclusion: Hunter does not catch fish.\n\nfact1: Hunter does not catch fish.\nrule: Hunter either catches fish or is successful.\nconclusion: Hunter is a successful fisherman.\n\nfact1: Hunter is a successful fisherman.\nrule: Every fisherman is either successful or unsuccessful, but not both.\nconclusion: Hunter is a successful fisherman.\n\nTherefore, it is false that Hunter is an unsuccessful fisherman. The correct option is: B.",
    "context": "Hunter uses bait or knows ictiobus. Hunter is not skilled. If Hunter can read the water, then he is either skilled or experienced, but not both. Hunter does not understand currents. If Hunter knows ictiobus, then he either reads the water or understands currents, but not both. Hunter either catches fish or is successful. Hunter travels rivers or knows ictiobus. Hunter knows the river. Every fisherman is either successful or unsuccessful, but not both. If Hunter is patient, then he is either adventurous or can read the water, but not both. Hunter does not use bait. If Hunter knows the river, then he either has experience or catches fish, but not both.",
    "nl2fol": {
      "Hunter uses bait or knows ictiobus.": "uses_bait(Hunter) ∨ knows_ictiobus(Hunter)",
      "Hunter is not skilled.": "¬is_skilled(Hunter)",
      "If Hunter can read the water, then he is either skilled or experienced, but not both.": "reads_water(Hunter) → (is_skilled(Hunter) ⊕ has_experience(Hunter))",
      "Hunter does not understand currents.": "¬understands_currents(Hunter)",
      "If Hunter knows ictiobus, then he either reads the water or understands currents, but not both.": "knows_ictiobus(Hunter) → (reads_water(Hunter) ⊕ understands_currents(Hunter))",
      "Hunter either catches fish or is successful.": "catches_fish(Hunter) ∨ successful(Hunter)",
      "Hunter travels rivers or knows ictiobus.": "travels_rivers(Hunter) ∨ knows_ictiobus(Hunter)",
      "Hunter knows the river.": "knows_river(Hunter)",
      "Every fisherman is either successful or unsuccessful, but not both.": "∀x (successful(x) ⊕ unsuccessful(x))",
      "If Hunter is patient, then he is either adventurous or can read the water, but not both.": "is_patient(Hunter) → (is_adventurous(Hunter) ⊕ reads_water(Hunter))",
      "Hunter does not use bait.": "¬uses_bait(Hunter)",
      "If Hunter knows the river, then he either has experience or catches fish, but not both.": "knows_river(Hunter) → (has_experience(Hunter) ⊕ catches_fish(Hunter))"
    },
    "conclusion_fol": "unsuccessful(Hunter)"
  },
  {
    "id": 421,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Matias does not gain the trust of others.",
    "reasoning": "fact1: Matias avoids blame.\nrule: Matias either admits fault or avoids blame, but does not do both.\nconclusion: Matias does not admit fault.\n\nfact1: Matias makes mistakes.\nfact2: Matias does not admit fault.\nrule: If Matias makes mistakes, then he either admits fault or takes responsibility, but not both.\nconclusion: Matias takes responsibility.\n\nfact1: Matias takes responsibility.\nfact2: Matias is accountable.\nrule: If Matias takes responsibility, then he either has integrity or is accountable, but not both.\nconclusion: Matias does not have integrity.\n\nfact1: Matias does not respect others.\nfact2: Matias does not have integrity.\nrule: If Matias either respects others or prioritizes his own self-interest, then he has integrity.\nconclusion: Matias does not prioritize his own self-interest.\n\nfact1: Matias values his privacy.\nfact2: Matias is not confident.\nrule: If Matias either seeks public recognition or values his privacy (but not both), then he is confident.\nconclusion: Matias seeks public recognition.\n\nfact1: Matias seeks public recognition.\nrule: If someone builds a strong reputation, they may not necessarily seek public recognition, and vice versa.\nconclusion: Matias does not build a strong reputation.\n\nfact1: Matias does not prioritize his own self-interest.\nrule: Matias either keeps promises or prioritizes his own self-interest, but he does not consistently do both.\nconclusion: Matias keeps his promises.\n\nfact1: Matias keeps his promises.\nfact2: Matias does not build a strong reputation.\nrule: If Matias keeps his promises, then he will either build a strong reputation or earn the respect of others, but not both.\nconclusion: Matias earns the respect of others.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Matias does not gain the trust of others. The correct option is: C.",
    "context": "If Matias makes mistakes, then he either admits fault or takes responsibility, but not both. Matias avoids blame. Diamond does not respect others. Grrl avoids blame. If Matias craves attention, then he will seek public recognition. If Matias keeps his promises, then he will either build a strong reputation or earn the respect of others, but not both. Matias makes mistakes. If Matias either seeks public recognition or values his privacy (but not both), then he is confident. Diamond is not confident. Matias does not respect others. Matias is accountable. If someone builds a strong reputation, they may not necessarily seek public recognition, and vice versa. Matias values his privacy. If Matias leads by example, then he will either build a strong reputation or inspire others, but not both. Matias either admits fault or avoids blame, but does not do both. If Grrl makes mistakes, then he either admits fault or takes responsibility, but not both. If Seven acts with integrity, then he will either earn the respect of others or gain their trust, but not both. If Matias takes responsibility, then he either has integrity or is accountable, but not both. Grrl is accountable. If Grrl either seeks public recognition or values his privacy (but not both), then he is confident. If Grrl keeps his promises, then he will either build a strong reputation or earn the respect of others, but not both. Matias learns from errors or admits fault. Seven either keeps promises or prioritizes his own self-interest, but he does not consistently do both. Seven either admits fault or avoids blame, but does not do both. Matias either keeps promises or prioritizes his own self-interest, but he does not consistently do both. If Diamond takes responsibility, then he either has integrity or is accountable, but not both. If Matias either respects others or prioritizes his own self-interest, then he has integrity. Grrl makes mistakes. Grrl does not act with integrity. All individuals with moral values make ethical choices and keep their promises. Matias is not confident.",
    "nl2fol": {
      "If Matias makes mistakes, then he either admits fault or takes responsibility, but not both.": "makes_mistakes(Matias) → (admits_fault(Matias) ⊕ takes_responsibility(Matias))",
      "Matias avoids blame.": "avoids_blame(Matias)",
      "Diamond does not respect others.": "¬respects_others(Diamond)",
      "Grrl avoids blame.": "avoids_blame(Grrl)",
      "If Matias craves attention, then he will seek public recognition.": "crave_attention(Matias) → seek_public_recognition(Matias)",
      "If Matias keeps his promises, then he will either build a strong reputation or earn the respect of others, but not both.": "keep_promises(Matias) → (build_reputation(Matias) ⊕ earn_respect(Matias))",
      "Matias makes mistakes.": "makes_mistakes(Matias)",
      "If Matias either seeks public recognition or values his privacy (but not both), then he is confident.": "(seek_public_recognition(Matias) ⊕ value_privacy(Matias)) → has_confidence(Matias)",
      "Diamond is not confident.": "¬is_confident(Diamond)",
      "Matias does not respect others.": "¬respect_others(Matias)",
      "Matias is accountable.": "is_accountable(Matias)",
      "If someone builds a strong reputation, they may not necessarily seek public recognition, and vice versa.": "∀x (build_reputation(x) ⊕ seek_public_recognition(x))",
      "Matias values his privacy.": "value_privacy(Matias)",
      "If Matias leads by example, then he will either build a strong reputation or inspire others, but not both.": "lead_by_example(Matias) → (inspire_others(Matias) ⊕ build_reputation(Matias))",
      "Matias either admits fault or avoids blame, but does not do both.": "admits_fault(Matias) ⊕ avoids_blame(Matias)",
      "If Grrl makes mistakes, then he either admits fault or takes responsibility, but not both.": "makes_mistakes(Grrl) → (admits_fault(Grrl) ⊕ takes_responsibility(Grrl))",
      "If Seven acts with integrity, then he will either earn the respect of others or gain their trust, but not both.": "act_with_integrity(Seven) → (earn_respect(Seven) ⊕ gain_trust(Seven))",
      "If Matias takes responsibility, then he either has integrity or is accountable, but not both.": "takes_responsibility(Matias) → (is_accountable(Matias) ⊕ has_integrity(Matias))",
      "Grrl is accountable.": "is_accountable(Grrl)",
      "If Grrl either seeks public recognition or values his privacy (but not both), then he is confident.": "(seek_public_recognition(Grrl) ⊕ value_privacy(Grrl)) → has_confidence(Grrl)",
      "If Grrl keeps his promises, then he will either build a strong reputation or earn the respect of others, but not both.": "keep_promises(Grrl) → (build_reputation(Grrl) ⊕ earn_respect(Grrl))",
      "Matias learns from errors or admits fault.": "learns_from_errors(Matias) ∨ admits_fault(Matias)",
      "Seven either keeps promises or prioritizes his own self-interest, but he does not consistently do both.": "keep_promises(Seven) ⊕ prioritize_self_interest(Seven)",
      "Seven either admits fault or avoids blame, but does not do both.": "admits_fault(Seven) ⊕ avoids_blame(Seven)",
      "Matias either keeps promises or prioritizes his own self-interest, but he does not consistently do both.": "keep_promises(Matias) ⊕ prioritize_self_interest(Matias)",
      "If Diamond takes responsibility, then he either has integrity or is accountable, but not both.": "takes_responsibility(Diamond) → (is_accountable(Diamond) ⊕ has_integrity(Diamond))",
      "If Matias either respects others or prioritizes his own self-interest, then he has integrity.": "(respect_others(Matias) ⊕ prioritize_self_interest(Matias)) → has_integrity(Matias)",
      "Grrl makes mistakes.": "makes_mistakes(Grrl)",
      "Grrl does not act with integrity.": "¬act_with_integrity(Grrl)",
      "All individuals with moral values make ethical choices and keep their promises.": "∀x (has_moral_values(x) → (make_ethical_choices(x) ∧ keep_promises(x)))",
      "Matias is not confident.": "¬has_confidence(Matias)"
    },
    "conclusion_fol": "¬gain_trust(Matias)"
  },
  {
    "id": 422,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Samantha does not gain recognition for her skills.",
    "reasoning": "fact1: Samantha encounters failure.\nfact2: Samantha becomes discouraged.\nrule: If Samantha encounters failure, then she either stays motivated or becomes discouraged (but not both).\nconclusion: Samantha does not stay motivated.\n\nfact1: Samantha faces challenges.\nrule: If Samantha faces challenges, then she develops resilience and puts in persistent effort.\nconclusion: Samantha puts in persistent effort.\n\nfact1: Samantha excels in her craft.\nrule: Anyone who excels in their craft will build a reputation.\nconclusion: Samantha builds a reputation for her skills.\n\nfact1: Samantha puts in persistent effort.\nfact2: Samantha builds a reputation for her skills.\nrule: If Samantha puts in persistent effort, then she can either acquire expertise in her field or build a reputation for her skills, but not both.\nconclusion: Samantha does not acquire expertise in her field.\n\nfact1: Samantha is dedicated.\nrule: If Samantha is dedicated, then she is self-taught and learns quickly.\nconclusion: Samantha is self-taught.\n\nfact1: Samantha is self-taught.\nfact2: Samantha does not acquire expertise in her field.\nrule: If Samantha is self-taught, then she can either gain recognition for her skills or acquire expertise in her field, but not both.\nconclusion: Samantha gains recognition for her skills.\n\nTherefore, it is false that Samantha does not gain recognition for her skills. The correct option is: B.",
    "context": "Samantha encounters failure. Samantha is dedicated. Anyone who excels in their craft will build a reputation. If Samantha either sets goals or tracks progress (but not both), then she puts in persistent effort. If Samantha works hard, then she either gets mentorship or acquires expertise (or both) in her field. If Samantha is dedicated, then she is self-taught and learns quickly. Samantha excels in her craft. If Samantha faces challenges, then she develops resilience and puts in persistent effort. If Samantha encounters failure, then she either stays motivated or becomes discouraged (but not both). If Samantha is self-taught, then she can either gain recognition for her skills or acquire expertise in her field, but not both. Samantha faces challenges. If Samantha puts in persistent effort, then she can either acquire expertise in her field or build a reputation for her skills, but not both. Samantha finds solutions or develops resilience. Samantha becomes discouraged.",
    "nl2fol": {
      "Samantha encounters failure.": "encounter_failure(Samantha)",
      "Samantha is dedicated.": "dedicated(Samantha)",
      "Anyone who excels in their craft will build a reputation.": "∀x (excell_in_craft(x) → build_reputation(x))",
      "If Samantha either sets goals or tracks progress (but not both), then she puts in persistent effort.": "(sets_goals(Samantha) ⊕ tracks_progress(Samantha)) → persistent_effort(Samantha)",
      "If Samantha works hard, then she either gets mentorship or acquires expertise (or both) in her field.": "work_hard(Samantha) → (get_mentorship(Samantha) ∨ acquire_expertise(Samantha))",
      "If Samantha is dedicated, then she is self-taught and learns quickly.": "dedicated(Samantha) → (learn_quickly(Samantha) ∧ self_taught(Samantha))",
      "Samantha excels in her craft.": "excell_in_craft(Samantha)",
      "If Samantha faces challenges, then she develops resilience and puts in persistent effort.": "face_challenges(Samantha) → (develop_resilience(Samantha) ∧ persistent_effort(Samantha))",
      "If Samantha encounters failure, then she either stays motivated or becomes discouraged (but not both).": "encounter_failure(Samantha) → (stay_motivated(Samantha) ⊕ become_discouraged(Samantha))",
      "If Samantha is self-taught, then she can either gain recognition for her skills or acquire expertise in her field, but not both.": "self_taught(Samantha) → (gain_recognition(Samantha) ⊕ acquire_expertise(Samantha))",
      "Samantha faces challenges.": "face_challenges(Samantha)",
      "If Samantha puts in persistent effort, then she can either acquire expertise in her field or build a reputation for her skills, but not both.": "persistent_effort(Samantha) → (acquire_expertise(Samantha) ⊕ build_reputation(Samantha))",
      "Samantha finds solutions or develops resilience.": "find_solutions(Samantha) ∨ develop_resilience(Samantha)",
      "Samantha becomes discouraged.": "become_discouraged(Samantha)"
    },
    "conclusion_fol": "¬gain_recognition(Samantha)"
  },
  {
    "id": 423,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aileen does not enjoy dancing.",
    "reasoning": "fact1: Aileen does not stay in her home country.\nrule: For Aileen, either she stays in her home country or she has curiosity, but not both.\nconclusion: Aileen has curiosity.\n\nfact1: Aileen values education.\nfact2: Aileen does not explore opportunities.\nrule: Everyone who values education either seeks experience or explores opportunities.\nconclusion: Aileen seeks experience.\n\nfact1: Aileen has curiosity.\nfact2: Aileen seeks experience.\nrule: Anyone who has curiosity and seeks experience can decide to study abroad.\nconclusion: Aileen studies abroad.\n\nfact1: Aileen studies abroad.\nrule: If Aileen studies abroad, then she will love foreign languages.\nconclusion: Aileen loves foreign languages.\n\nfact1: Aileen loves foreign languages.\nrule: Aileen either loves foreign languages or appreciates Argentine culture, but not necessarily both.\nconclusion: Aileen does not appreciate Argentine culture.\n\nfact1: Aileen does not appreciate Argentine culture.\nrule: Aileen either appreciates Argentine culture or enjoys dancing (or both).\nconclusion: Aileen enjoys dancing.\n\nTherefore, it is false that Aileen does not enjoy dancing. The correct option is: B.",
    "context": "Anyone who has curiosity and seeks experience can decide to study abroad. Everyone who values education either seeks experience or explores opportunities. If Aileen studies abroad, then she will love foreign languages. Aileen does not explore opportunities. Aileen either loves foreign languages or appreciates Argentine culture, but not necessarily both. For Aileen, either she stays in her home country or she has curiosity, but not both. Aileen values education. Anyone who has a passport or gets a scholarship can study abroad. Aileen does not stay in her home country. Aileen either appreciates Argentine culture or enjoys dancing (or both).",
    "nl2fol": {
      "Anyone who has curiosity and seeks experience can decide to study abroad.": "∀x ((has_curiosity(x) ∧ seeks_experience(x)) → study_abroad(x))",
      "Everyone who values education either seeks experience or explores opportunities.": "∀x (value_education(x) → (seeks_experience(x) ∨ explore_opportunities(x)))",
      "If Aileen studies abroad, then she will love foreign languages.": "study_abroad(Aileen) → love_foreign_languages(Aileen)",
      "Aileen does not explore opportunities.": "¬explore_opportunities(Aileen)",
      "Aileen either loves foreign languages or appreciates Argentine culture, but not necessarily both.": "love_foreign_languages(Aileen) ⊕ appreciate_Argentine_culture(Aileen)",
      "For Aileen, either she stays in her home country or she has curiosity, but not both.": "stays_in_home_country(Aileen) ⊕ has_curiosity(Aileen)",
      "Aileen values education.": "value_education(Aileen)",
      "Anyone who has a passport or gets a scholarship can study abroad.": "∀x ((has_passport(x) ∨ gets_scholarship(x)) → study_abroad(x))",
      "Aileen does not stay in her home country.": "¬stays_in_home_country(Aileen)",
      "Aileen either appreciates Argentine culture or enjoys dancing (or both).": "appreciate_Argentine_culture(Aileen) ∨ enjoy_dancing(Aileen)"
    },
    "conclusion_fol": "¬enjoy_dancing(Aileen)"
  },
  {
    "id": 424,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jase is cowardly.",
    "reasoning": "fact1: Jase pursues personal gain.\nrule: Jase either pursues personal gain or puts others first, but not both.\nconclusion: Jase does not put others first.\n\nfact1: Jase does not make tough calls.\nfact2: Jase supports others.\nrule: If Jase either makes tough calls or supports others (but not both), then he is in a leadership position.\nconclusion: Jase is in a leadership position.\n\nfact1: Jase holds authority.\nfact2: Jase does not put others first.\nrule: If Jase holds authority, then he either prioritizes his own safety or puts others first, but not both.\nconclusion: Jase prioritizes his own safety.\n\nfact1: Jase is in a leadership position.\nfact2: Jase prioritizes his own safety.\nrule: If Jase is in a leadership position, then he either acts selflessly or prioritizes his own safety, but not both.\nconclusion: Jase does not act selflessly.\n\nfact1: Jase faces danger.\nfact2: Jase does not act selflessly.\nrule: If Jase faces danger, then he either acts selflessly or avoids risks (or both).\nconclusion: Jase avoids risks.\n\nfact1: Jase avoids risks.\nrule: Jase either avoids risks or is courageous, but not both.\nconclusion: Jase is not courageous.\n\nfact1: Jase is not courageous.\nrule: Jase is either courageous or cowardly, but not both.\nconclusion: Jase is cowardly.\n\nTherefore, it is true that Jase is cowardly. The correct option is: A.",
    "context": "Lambchop pursues personal gain. Lambchop either avoids risks or is courageous, but not both. Lambchop is either courageous or cowardly, but not both. If Jase faces danger, then he either acts selflessly or avoids risks (or both). If Hallie either makes tough calls or supports others (but not both), then he is in a leadership position. Jase is either courageous or cowardly, but not both. If Jase considers others, then he thinks before acting and avoids risks. Buster holds authority. Jase faces danger. Jase either pursues personal gain or puts others first, but not both. Jase holds authority. If Hallie faces danger, then he either acts selflessly or avoids risks (or both). If Jase values discipline and promotes teamwork, then he is in a leadership position. If Jase holds authority, then he either prioritizes his own safety or puts others first, but not both. Jase supports others. If Jase either sacrifices his time or helps others (but not both), then he acts selflessly. Buster does not make tough calls. Buster either pursues personal gain or puts others first, but not both. Jase either avoids risks or is courageous, but not both. If Jase either makes tough calls or supports others (but not both), then he is in a leadership position. If Buster holds authority, then he either prioritizes his own safety or puts others first, but not both. If Lambchop is in a leadership position, then he either acts selflessly or prioritizes his own safety, but not both. Jase pursues personal gain. Buster faces danger. Jase either helps others or prioritizes his own safety. Jase does not make tough calls. If Jase is in a leadership position, then he either acts selflessly or prioritizes his own safety, but not both.",
    "nl2fol": {
      "Lambchop pursues personal gain.": "pursues_personal_gain(Lambchop)",
      "Lambchop either avoids risks or is courageous, but not both.": "avoids_risks(Lambchop) ⊕ courageous(Lambchop)",
      "Lambchop is either courageous or cowardly, but not both.": "courageous(Lambchop) ⊕ cowardly(Lambchop)",
      "If Jase faces danger, then he either acts selflessly or avoids risks (or both).": "faces_danger(Jase) → (acts_selflessly(Jase) ∨ avoids_risks(Jase))",
      "If Hallie either makes tough calls or supports others (but not both), then he is in a leadership position.": "(makes_tough_calls(Hallie) ⊕ supports_others(Hallie)) → is_in_leadership(Hallie)",
      "Jase is either courageous or cowardly, but not both.": "courageous(Jase) ⊕ cowardly(Jase)",
      "If Jase considers others, then he thinks before acting and avoids risks.": "considers_others(Jase) → (thinks_before_acting(Jase) ∧ avoids_risks(Jase))",
      "Buster holds authority.": "holds_authority(Buster)",
      "Jase faces danger.": "faces_danger(Jase)",
      "Jase either pursues personal gain or puts others first, but not both.": "pursues_personal_gain(Jase) ⊕ puts_others_first(Jase)",
      "Jase holds authority.": "holds_authority(Jase)",
      "If Hallie faces danger, then he either acts selflessly or avoids risks (or both).": "faces_danger(Hallie) → (acts_selflessly(Hallie) ∨ avoids_risks(Hallie))",
      "If Jase values discipline and promotes teamwork, then he is in a leadership position.": "(values_discipline(Jase) ∧ promotes_teamwork(Jase)) → is_in_leadership(Jase)",
      "If Jase holds authority, then he either prioritizes his own safety or puts others first, but not both.": "holds_authority(Jase) → (puts_others_first(Jase) ⊕ prioritizes_safety(Jase))",
      "Jase supports others.": "supports_others(Jase)",
      "If Jase either sacrifices his time or helps others (but not both), then he acts selflessly.": "(sacrifices_time(Jase) ⊕ helps_others(Jase)) → acts_selflessly(Jase)",
      "Buster does not make tough calls.": "¬makes_tough_calls(Buster)",
      "Buster either pursues personal gain or puts others first, but not both.": "pursues_personal_gain(Buster) ⊕ puts_others_first(Buster)",
      "Jase either avoids risks or is courageous, but not both.": "avoids_risks(Jase) ⊕ courageous(Jase)",
      "If Jase either makes tough calls or supports others (but not both), then he is in a leadership position.": "(makes_tough_calls(Jase) ⊕ supports_others(Jase)) → is_in_leadership(Jase)",
      "If Buster holds authority, then he either prioritizes his own safety or puts others first, but not both.": "holds_authority(Buster) → (puts_others_first(Buster) ⊕ prioritizes_safety(Buster))",
      "If Lambchop is in a leadership position, then he either acts selflessly or prioritizes his own safety, but not both.": "is_in_leadership(Lambchop) → (acts_selflessly(Lambchop) ⊕ prioritizes_safety(Lambchop))",
      "Jase pursues personal gain.": "pursues_personal_gain(Jase)",
      "Buster faces danger.": "faces_danger(Buster)",
      "Jase either helps others or prioritizes his own safety.": "helps_others(Jase) ∨ prioritizes_safety(Jase)",
      "Jase does not make tough calls.": "¬makes_tough_calls(Jase)",
      "If Jase is in a leadership position, then he either acts selflessly or prioritizes his own safety, but not both.": "is_in_leadership(Jase) → (acts_selflessly(Jase) ⊕ prioritizes_safety(Jase))"
    },
    "conclusion_fol": "cowardly(Jase)"
  },
  {
    "id": 425,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Josephine is not innovative.",
    "reasoning": "fact1: Josephine values simplicity.\nrule: Josephine is either gifted or values simplicity, but not both.\nconclusion: Josephine is not gifted.\n\nfact1: Josephine is not gifted.\nrule: Josephine is gifted or exceptional.\nconclusion: Josephine is exceptional.\n\nfact1: Josephine is exceptional.\nfact2: Josephine is not meticulous.\nrule: If Josephine is exceptional, then she is either meticulous or a visionary (but not both).\nconclusion: Josephine is a visionary.\n\nfact1: Josephine sets high standards.\nfact2: Josephine does not demand quality.\nrule: If Josephine either sets high standards or demands quality (but not both), then she is a perfectionist.\nconclusion: Josephine is a perfectionist.\n\nfact1: Josephine is a perfectionist.\nfact2: Josephine is a visionary.\nrule: If Josephine is brilliant, then she is either a perfectionist or a visionary (but not both).\nconclusion: Josephine is not brilliant.\n\nfact1: Josephine is not brilliant.\nfact2: Josephine is creative.\nrule: For all humans, if they are brilliant or creative (or both), then they are innovative.\nconclusion: Josephine is not innovative.\n\nTherefore, it is false that Josephine is not innovative. The correct option is: B.",
    "context": "Izabella sets high standards. Josephine is not meticulous. Anyone who pushes boundaries or thinks outside the box is exceptional. Arlo is gifted or exceptional. Josephine values simplicity. Averie values simplicity. If Josephine is brilliant, then she is either a perfectionist or a visionary (but not both). Arlo is creative. If Josephine is exceptional, then she is either meticulous or a visionary (but not both). For all humans, if they are brilliant or creative (or both), then they are innovative. If Josephine either sets high standards or demands quality (but not both), then she is a perfectionist. Izabella is either gifted or values simplicity, but not both. Josephine is creative. If Izabella is brilliant, then she is either a perfectionist or a visionary (but not both). Josephine is gifted or exceptional. Josephine does not demand quality. Arlo is not meticulous. Josephine values individuality or is a visionary. Josephine is highly intelligent or gifted. Josephine is either gifted or values simplicity, but not both. Josephine sets high standards.",
    "nl2fol": {
      "Izabella sets high standards.": "sets_high_standards(Izabella)",
      "Josephine is not meticulous.": "¬meticulous(Josephine)",
      "Anyone who pushes boundaries or thinks outside the box is exceptional.": "∀x ((pushes_boundaries(x) ∨ thinks_outside(x)) → exceptional(x))",
      "Arlo is gifted or exceptional.": "gifted(Arlo) ∨ exceptional(Arlo)",
      "Josephine values simplicity.": "values_simplicity(Josephine)",
      "Averie values simplicity.": "values_simplicity(Averie)",
      "If Josephine is brilliant, then she is either a perfectionist or a visionary (but not both).": "brilliant(Josephine) → (perfectionist(Josephine) ⊕ visionary(Josephine))",
      "Arlo is creative.": "be_creative(Arlo)",
      "If Josephine is exceptional, then she is either meticulous or a visionary (but not both).": "exceptional(Josephine) → (meticulous(Josephine) ⊕ visionary(Josephine))",
      "For all humans, if they are brilliant or creative (or both), then they are innovative.": "∀x ((brilliant(x) ∨ creative(x)) → innovative(x))",
      "If Josephine either sets high standards or demands quality (but not both), then she is a perfectionist.": "(sets_high_standards(Josephine) ⊕ demands_quality(Josephine)) → perfectionist(Josephine)",
      "Izabella is either gifted or values simplicity, but not both.": "gifted(Izabella) ⊕ values_simplicity(Izabella)",
      "Josephine is creative.": "creative(Josephine)",
      "If Izabella is brilliant, then she is either a perfectionist or a visionary (but not both).": "brilliant(Izabella) → (perfectionist(Izabella) ⊕ visionary(Izabella))",
      "Josephine is gifted or exceptional.": "gifted(Josephine) ∨ exceptional(Josephine)",
      "Josephine does not demand quality.": "¬demands_quality(Josephine)",
      "Arlo is not meticulous.": "¬meticulous(Arlo)",
      "Josephine values individuality or is a visionary.": "values_individuality(Josephine) ∨ visionary(Josephine)",
      "Josephine is highly intelligent or gifted.": "highly_intelligent(Josephine) ∨ gifted(Josephine)",
      "Josephine is either gifted or values simplicity, but not both.": "gifted(Josephine) ⊕ values_simplicity(Josephine)",
      "Josephine sets high standards.": "sets_high_standards(Josephine)"
    },
    "conclusion_fol": "¬innovative(Josephine)"
  },
  {
    "id": 426,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Raya is rare, then she has unique properties and leads to groundbreaking discoveries.",
    "reasoning": "fact1: Raya does not have vibrant colors.\nfact2: Raya does not occur in layers.\nrule: If Raya forms by pressure, then she has vibrant colors or occurs in layers (or both).\nconclusion: Raya was not formed by pressure.\n\nfact1: Raya does not remain hidden.\nrule: Any mineral found underground remains hidden until discovered.\nconclusion: Raya is not found underground.\n\nfact1: Raya was not formed by pressure.\nrule: Raya either forms by pressure or has aesthetic appeal.\nconclusion: Raya has aesthetic appeal.\n\nfact1: Raya has aesthetic appeal.\nrule: Raya either holds historical value or has aesthetic appeal, but not both.\nconclusion: Raya does not hold historical value.\n\nfact1: Raya is not found underground.\nrule: Every mineral is either found underground or valued by geologists.\nconclusion: Raya is valued by geologists.\n\nfact1: Raya did not form deeply.\nfact2: Raya does not hold historical value.\nrule: If Raya either formed deeply or contains ancient secrets (but not both), then she holds historical value.\nconclusion: Raya does not contain ancient secrets.\n\nfact1: Raya is valued by geologists.\nfact2: Raya does not contain ancient secrets.\nrule: Every mineral that is valued by geologists either formed naturally or contains ancient secrets.\nconclusion: Raya is formed naturally.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Raya is rare, then she has unique properties and leads to groundbreaking discoveries. The correct option is: C.",
    "context": "If Raya formed in ancient times, then she holds historical value. Raya does not have vibrant colors. Every mineral is either found underground or valued by geologists. If Raya forms by pressure, then she has vibrant colors or occurs in layers (or both). If Raya either formed deeply or contains ancient secrets (but not both), then she holds historical value. Raya either holds historical value or has aesthetic appeal, but not both. If Raya either forms slowly or is created under heat (but not both), then she contains ancient secrets. Raya does not remain hidden. Any mineral found underground remains hidden until discovered. Raya either forms by pressure or has aesthetic appeal. Raya did not form deeply. Any mineral that occurs in caves or exists in igneous rocks is formed naturally. Raya does not occur in layers. Every mineral that is valued by geologists either formed naturally or contains ancient secrets. Raya forms under pressure if she is a metamorphic mineral.",
    "nl2fol": {
      "If Raya formed in ancient times, then she holds historical value.": "formed_anciently(Raya) → hold_historical_value(Raya)",
      "Raya does not have vibrant colors.": "¬have_vibrant_colors(Raya)",
      "Every mineral is either found underground or valued by geologists.": "∀x (found_underground(x) ∨ valued_by_geologists(x))",
      "If Raya forms by pressure, then she has vibrant colors or occurs in layers (or both).": "formed_by_pressure(Raya) → (have_vibrant_colors(Raya) ∨ occur_in_layers(Raya))",
      "If Raya either formed deeply or contains ancient secrets (but not both), then she holds historical value.": "(formed_deeply(Raya) ⊕ contain_ancient_secrets(Raya)) → hold_historical_value(Raya)",
      "Raya either holds historical value or has aesthetic appeal, but not both.": "hold_historical_value(Raya) ⊕ have_aesthetic_appeal(Raya)",
      "If Raya either forms slowly or is created under heat (but not both), then she contains ancient secrets.": "(formed_slowly(Raya) ⊕ created_under_heat(Raya)) → contain_ancient_secrets(Raya)",
      "Raya does not remain hidden.": "¬remain_hidden(Raya)",
      "Any mineral found underground remains hidden until discovered.": "∀x (found_underground(x) → remain_hidden(x))",
      "Raya either forms by pressure or has aesthetic appeal.": "formed_by_pressure(Raya) ∨ have_aesthetic_appeal(Raya)",
      "Raya did not form deeply.": "¬formed_deeply(Raya)",
      "Any mineral that occurs in caves or exists in igneous rocks is formed naturally.": "∀x ((occur_in_caves(x) ∨ exist_in_igneous_rocks(x)) → formed_naturally(x))",
      "Raya does not occur in layers.": "¬occur_in_layers(Raya)",
      "Every mineral that is valued by geologists either formed naturally or contains ancient secrets.": "∀x (valued_by_geologists(x) → (formed_naturally(x) ∨ contain_ancient_secrets(x)))",
      "Raya forms under pressure if she is a metamorphic mineral.": "metamorphic(Raya) → formed_by_pressure(Raya)"
    },
    "conclusion_fol": "rare(Raya) → (have_unique_properties(Raya) ∧ lead_to_groundbreaking_discoveries(Raya))"
  },
  {
    "id": 427,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aiden creates visually stunning creations.",
    "reasoning": "fact1: Aiden produces understated pieces.\nrule: Aiden either produces emotionally resonant work or creates understated pieces, but these two are distinct approaches.\nconclusion: Aiden does not create emotionally resonant work.\n\nfact1: Aiden has confident body language.\nfact2: Aiden connects with others.\nrule: Anyone who has confident body language and connects with others is naturally charismatic.\nconclusion: Aiden is naturally charismatic.\n\nfact1: Aiden follows tradition.\nrule: Aiden either follows tradition or values originality, but not both.\nconclusion: Aiden does not value originality.\n\nfact1: Aiden is naturally charismatic.\nrule: If Aiden is naturally charismatic and has creative vision, then he is an inspiring artist.\nconclusion: Aiden is an inspiring artist.\n\nfact1: Aiden is an inspiring artist.\nfact2: Aiden does not create emotionally resonant work.\nrule: For all humans, if someone is an inspiring artist, then they create emotionally resonant work or visually stunning creations (or both).\nconclusion: Aiden creates visually stunning creations.\n\nTherefore, it is true that Aiden creates visually stunning creations. The correct option is: A.",
    "context": "Keira connects with others. Aiden follows tradition. For all humans, if someone is an inspiring artist, then they create emotionally resonant work or visually stunning creations (or both). Aiden either produces emotionally resonant work or creates understated pieces, but these two are distinct approaches. If Aiden is naturally charismatic and has creative vision, then he is an inspiring artist. Bryson has confident body language. Anyone who has confident body language and connects with others is naturally charismatic. Aiden has confident body language. Aiden connects with others. Everyone appreciates art or values originality. Aiden produces understated pieces. If an artist speaks from the heart, then they create emotionally resonant work. Bryson thinks outside the box. Aiden either follows tradition or values originality, but not both.",
    "nl2fol": {
      "Keira connects with others.": "connects_with_others(Keira)",
      "Aiden follows tradition.": "follows_tradition(Aiden)",
      "For all humans, if someone is an inspiring artist, then they create emotionally resonant work or visually stunning creations (or both).": "∀x (inspiring_artist(x) → (emotionally_resonant_work(x) ∨ visually_stunning_creations(x)))",
      "Aiden either produces emotionally resonant work or creates understated pieces, but these two are distinct approaches.": "produces_understated_pieces(Aiden) ⊕ emotionally_resonant_work(Aiden)",
      "If Aiden is naturally charismatic and has creative vision, then he is an inspiring artist.": "naturally_charismatic(Aiden) → (has_creative_vision(Aiden) ∧ inspiring_artist(Aiden))",
      "Bryson has confident body language.": "has_confident_body_language(Bryson)",
      "Anyone who has confident body language and connects with others is naturally charismatic.": "∀x ((has_confident_body_language(x) ∧ connects_with_others(x)) → naturally_charismatic(x))",
      "Aiden has confident body language.": "has_confident_body_language(Aiden)",
      "Aiden connects with others.": "connects_with_others(Aiden)",
      "Everyone appreciates art or values originality.": "∀x (appreciates_art(x) ∨ values_originality(x))",
      "Aiden produces understated pieces.": "produces_understated_pieces(Aiden)",
      "If an artist speaks from the heart, then they create emotionally resonant work.": "∀x (speaks_from_heart(x) → emotionally_resonant_work(x))",
      "Bryson thinks outside the box.": "thinks_outside_box(Bryson)",
      "Aiden either follows tradition or values originality, but not both.": "follows_tradition(Aiden) ⊕ values_originality(Aiden)"
    },
    "conclusion_fol": "visually_stunning_creations(Aiden)"
  },
  {
    "id": 428,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Raul becomes a leading authority.",
    "reasoning": "fact1: Raul publishes academic works.\nfact2: Raul does not teach at a university.\nrule: If Raul publishes academic works, then he is either scholarly or teaches at a university (or both).\nconclusion: Raul is scholarly.\n\nfact1: Raul has a good memory.\nrule: Raul either has a good memory or enjoys reading, but it's not necessarily true that Raul's enjoyment of reading is related to his memory.\nconclusion: Raul does not enjoy reading.\n\nfact1: Raul does not enjoy reading.\nrule: Raul enjoys reading or is passionate about history.\nconclusion: Raul is passionate about history.\n\nfact1: Raul is passionate about history.\nfact2: Raul translates ancient texts.\nrule: If Raul is passionate about history, then he translates ancient texts and is a meticulous researcher.\nconclusion: Raul is a meticulous researcher.\n\nfact1: Raul is a meticulous researcher.\nfact2: Raul does not gain academic recognition.\nrule: Every meticulous researcher either gains academic recognition or makes groundbreaking discoveries (or both).\nconclusion: Raul makes groundbreaking discoveries.\n\nfact1: Raul is scholarly.\nfact2: Raul makes groundbreaking discoveries.\nrule: If Raul is scholarly, then he can either make groundbreaking discoveries or become a leading authority, but not both.\nconclusion: Raul does not become a leading authority.\n\nTherefore, it is false that Raul becomes a leading authority. The correct option is: B.",
    "context": "Raul does not gain academic recognition. If Zoey is scholarly, then he can either make groundbreaking discoveries or become a leading authority, but not both. Every meticulous researcher either gains academic recognition or makes groundbreaking discoveries (or both). Raul does not teach at a university. If Zoey is passionate about history, then he translates ancient texts and is a meticulous researcher. Zoey translates ancient texts. If Cherry publishes academic works, then he is either scholarly or teaches at a university (or both). Raul publishes academic works. For anyone who loves books and values knowledge, they enjoy reading. If Raul publishes academic works, then he is either scholarly or teaches at a university (or both). Cherry enjoys reading or is passionate about history. If Raul is scholarly, then he can either make groundbreaking discoveries or become a leading authority, but not both. Raul translates ancient texts. Raul has a good memory. Raul enjoys reading or is passionate about history. Raul either has a good memory or enjoys reading, but it's not necessarily true that Raul's enjoyment of reading is related to his memory. Briar does not teach at a university. Briar either has a good memory or enjoys reading, but it's not necessarily true that Briar's enjoyment of reading is related to his memory. If Raul has high intellect, then he can either think critically or be scholarly, but not both. Briar has a good memory. If Raul has a curious mind, then he is a meticulous researcher and produces innovative work. If Raul is passionate about history, then he translates ancient texts and is a meticulous researcher. If Raul loves learning, then he is passionate about history and values accuracy. Cherry does not gain academic recognition.",
    "nl2fol": {
      "Raul does not gain academic recognition.": "¬gain_academic_recognition(Raul)",
      "If Zoey is scholarly, then he can either make groundbreaking discoveries or become a leading authority, but not both.": "scholarly(Zoey) → (make_groundbreaking_discoveries(Zoey) ⊕ become_a_leading_authority(Zoey))",
      "Every meticulous researcher either gains academic recognition or makes groundbreaking discoveries (or both).": "∀x (meticulous_researcher(x) → (gain_academic_recognition(x) ∨ make_groundbreaking_discoveries(x)))",
      "Raul does not teach at a university.": "¬teach_at_university(Raul)",
      "If Zoey is passionate about history, then he translates ancient texts and is a meticulous researcher.": "passionate_about_history(Zoey) → (translate_ancient_texts(Zoey) ∧ meticulous_researcher(Zoey))",
      "Zoey translates ancient texts.": "translate_ancient_texts(Zoey)",
      "If Cherry publishes academic works, then he is either scholarly or teaches at a university (or both).": "publish_academic_works(Cherry) → (scholarly(Cherry) ∨ teach_at_university(Cherry))",
      "Raul publishes academic works.": "publish_academic_works(Raul)",
      "For anyone who loves books and values knowledge, they enjoy reading.": "∀x ((loves_books(x) ∧ values_knowledge(x)) → enjoys_reading(x))",
      "If Raul publishes academic works, then he is either scholarly or teaches at a university (or both).": "publish_academic_works(Raul) → (scholarly(Raul) ∨ teach_at_university(Raul))",
      "Cherry enjoys reading or is passionate about history.": "enjoys_reading(Cherry) ∨ passionate_about_history(Cherry)",
      "If Raul is scholarly, then he can either make groundbreaking discoveries or become a leading authority, but not both.": "scholarly(Raul) → (make_groundbreaking_discoveries(Raul) ⊕ become_a_leading_authority(Raul))",
      "Raul translates ancient texts.": "translate_ancient_texts(Raul)",
      "Raul has a good memory.": "has_good_memory(Raul)",
      "Raul enjoys reading or is passionate about history.": "enjoys_reading(Raul) ∨ passionate_about_history(Raul)",
      "Raul either has a good memory or enjoys reading, but it's not necessarily true that Raul's enjoyment of reading is related to his memory.": "has_good_memory(Raul) ⊕ enjoys_reading(Raul)",
      "Briar does not teach at a university.": "¬teach_at_university(Briar)",
      "Briar either has a good memory or enjoys reading, but it's not necessarily true that Briar's enjoyment of reading is related to his memory.": "has_good_memory(Briar) ⊕ enjoys_reading(Briar)",
      "If Raul has high intellect, then he can either think critically or be scholarly, but not both.": "has_high_intellect(Raul) → (think_critically(Raul) ⊕ scholarly(Raul))",
      "Briar has a good memory.": "has_good_memory(Briar)",
      "If Raul has a curious mind, then he is a meticulous researcher and produces innovative work.": "curious_mind(Raul) → (produce_innovative_work(Raul) ∧ meticulous_researcher(Raul))",
      "If Raul is passionate about history, then he translates ancient texts and is a meticulous researcher.": "passionate_about_history(Raul) → (translate_ancient_texts(Raul) ∧ meticulous_researcher(Raul))",
      "If Raul loves learning, then he is passionate about history and values accuracy.": "love_learning(Raul) → (passionate_about_history(Raul) ∧ values_accuracy(Raul))",
      "Cherry does not gain academic recognition.": "¬gain_academic_recognition(Cherry)"
    },
    "conclusion_fol": "become_a_leading_authority(Raul)"
  },
  {
    "id": 429,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Koda is rare.",
    "reasoning": "fact1: Koda does not produce small flowers.\nfact2: Koda is not low maintenance.\nrule: If Koda either blossoms frequently or produces small flowers (but not both), then it is low maintenance.\nconclusion: Koda does not blossom frequently.\n\nfact1: Koda is an endangered orchid.\nfact2: Koda does not have large blooms.\nrule: If Koda is an endangered orchid, then it has either a distinct pattern or large blooms, but not both.\nconclusion: Koda has a distinct pattern.\n\nfact1: Koda requires warm temperatures.\nfact2: Koda does not blossom frequently.\nrule: If Koda either needs filtered light or requires warm temperatures (but not both), then it will blossom frequently.\nconclusion: Koda needs filtered light.\n\nfact1: Koda does not require high humidity.\nfact2: Koda needs filtered light.\nrule: If Koda either requires high humidity or needs filtered light (but not both), then it thrives in a greenhouse.\nconclusion: Koda is an orchid that thrives in a greenhouse.\n\nfact1: Koda has a distinct pattern.\nrule: Koda is valuable for research because it has a distinct pattern.\nconclusion: Koda is valuable for research.\n\nfact1: Koda is an orchid that thrives in a greenhouse.\nrule: Koda is either an orchid that thrives in a greenhouse or has unique colors, but not both.\nconclusion: Koda does not have unique colors.\n\nfact1: Koda does not have unique colors.\nrule: Koda is either delicate or has unique colors, but not both.\nconclusion: Koda is delicate.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Koda is rare. The correct option is: C.",
    "context": "Koda is valuable for research because it has a distinct pattern. If Koda either prefers shaded areas or tolerates fertilizers (but not both), then it thrives in a greenhouse. For all orchids, if an orchid has star shaped blooms and grows in tropical climates, then it has a distinct pattern. Koda does not require high humidity. If Koda either requires high humidity or needs filtered light (but not both), then it thrives in a greenhouse. Koda either produces small buds or has unique colors. Koda requires warm temperatures. Koda does not produce small flowers. If Samir either requires high humidity or needs filtered light (but not both), then it thrives in a greenhouse. Any orchid that has a thin stem or requires specialized care is delicate. If Koda is an endangered orchid, then it has either a distinct pattern or large blooms, but not both. Koda is an endangered orchid. Samir is valuable for research because it has a distinct pattern. If Arianna either needs filtered light or requires warm temperatures (but not both), then it will blossom frequently. If Marigold is an endangered orchid, then it has either a distinct pattern or large blooms, but not both. Arianna is not low maintenance. Marigold is an endangered orchid. Samir does not produce small flowers. Koda is not low maintenance. Arianna is either an orchid that thrives in a greenhouse or has unique colors, but not both. Koda is either delicate or has unique colors, but not both. Koda is either an orchid that thrives in a greenhouse or has unique colors, but not both. Koda does not have large blooms. If Koda either needs filtered light or requires warm temperatures (but not both), then it will blossom frequently. Samir does not have large blooms. Arianna requires warm temperatures. If Koda either blossoms frequently or produces small flowers (but not both), then it is low maintenance.",
    "nl2fol": {
      "Koda is valuable for research because it has a distinct pattern.": "has_distinct_pattern(Koda) → valuable_for_research(Koda)",
      "If Koda either prefers shaded areas or tolerates fertilizers (but not both), then it thrives in a greenhouse.": "(prefers_shaded_areas(Koda) ⊕ tolerates_fertilizers(Koda)) → thrives_in_greenhouse(Koda)",
      "For all orchids, if an orchid has star shaped blooms and grows in tropical climates, then it has a distinct pattern.": "∀x ((has_star_shaped_blooms(x) ∧ grows_in_tropical_climates(x)) → has_distinct_pattern(x))",
      "Koda does not require high humidity.": "¬requires_high_humidity(Koda)",
      "If Koda either requires high humidity or needs filtered light (but not both), then it thrives in a greenhouse.": "(requires_high_humidity(Koda) ⊕ needs_filtered_light(Koda)) → thrives_in_greenhouse(Koda)",
      "Koda either produces small buds or has unique colors.": "produces_small_buds(Koda) ∨ has_unique_colors(Koda)",
      "Koda requires warm temperatures.": "requires_warm_temperatures(Koda)",
      "Koda does not produce small flowers.": "¬produces_small_flowers(Koda)",
      "If Samir either requires high humidity or needs filtered light (but not both), then it thrives in a greenhouse.": "(requires_high_humidity(Samir) ⊕ needs_filtered_light(Samir)) → thrives_in_greenhouse(Samir)",
      "Any orchid that has a thin stem or requires specialized care is delicate.": "∀x ((has_thin_stem(x) ∨ requires_specialized_care(x)) → delicate(x))",
      "If Koda is an endangered orchid, then it has either a distinct pattern or large blooms, but not both.": "is_endangered(Koda) → (has_distinct_pattern(Koda) ⊕ has_large_blooms(Koda))",
      "Koda is an endangered orchid.": "is_endangered(Koda)",
      "Samir is valuable for research because it has a distinct pattern.": "has_distinct_pattern(Samir) → valuable_for_research(Samir)",
      "If Arianna either needs filtered light or requires warm temperatures (but not both), then it will blossom frequently.": "(needs_filtered_light(Arianna) ⊕ requires_warm_temperatures(Arianna)) → blossoms_frequently(Arianna)",
      "If Marigold is an endangered orchid, then it has either a distinct pattern or large blooms, but not both.": "is_endangered(Marigold) → (has_distinct_pattern(Marigold) ⊕ has_large_blooms(Marigold))",
      "Arianna is not low maintenance.": "¬is_low_maintenance(Arianna)",
      "Marigold is an endangered orchid.": "is_endangered(Marigold)",
      "Samir does not produce small flowers.": "¬produces_small_flowers(Samir)",
      "Koda is not low maintenance.": "¬is_low_maintenance(Koda)",
      "Arianna is either an orchid that thrives in a greenhouse or has unique colors, but not both.": "thrives_in_greenhouse(Arianna) ⊕ has_unique_colors(Arianna)",
      "Koda is either delicate or has unique colors, but not both.": "delicate(Koda) ⊕ has_unique_colors(Koda)",
      "Koda is either an orchid that thrives in a greenhouse or has unique colors, but not both.": "thrives_in_greenhouse(Koda) ⊕ has_unique_colors(Koda)",
      "Koda does not have large blooms.": "¬has_large_blooms(Koda)",
      "If Koda either needs filtered light or requires warm temperatures (but not both), then it will blossom frequently.": "(needs_filtered_light(Koda) ⊕ requires_warm_temperatures(Koda)) → blossoms_frequently(Koda)",
      "Samir does not have large blooms.": "¬has_large_blooms(Samir)",
      "Arianna requires warm temperatures.": "requires_warm_temperatures(Arianna)",
      "If Koda either blossoms frequently or produces small flowers (but not both), then it is low maintenance.": "(blossoms_frequently(Koda) ⊕ produces_small_flowers(Koda)) → is_low_maintenance(Koda)"
    },
    "conclusion_fol": "rare(Koda)"
  },
  {
    "id": 430,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dennis produces high-quality work.",
    "reasoning": "fact1: Dennis has high standards.\nfact2: Dennis pursues mastery.\nrule: If Dennis has high standards, then he either pursues mastery or enjoys precision work, but not both.\nconclusion: Dennis does not enjoy precision work.\n\nfact1: Dennis does not seek unique results.\nfact2: Dennis invests time and effort.\nrule: If someone values perfection, then they seek unique results and invest time and effort.\nconclusion: Dennis does not value perfection.\n\nfact1: Dennis has a strong work ethic.\nfact2: Dennis does not enjoy precision work.\nrule: If Dennis has a strong work ethic, then he either crafts ink by hand or enjoys precision work, but not both.\nconclusion: Dennis crafts ink by hand.\n\nfact1: Dennis is passionate about printing.\nfact2: Dennis respects heritage.\nrule: If Dennis is passionate about printing, then he respects heritage and uses traditional techniques.\nconclusion: Dennis uses traditional techniques.\n\nfact1: Dennis crafts ink by hand.\nfact2: Dennis does not value perfection.\nrule: Everyone who crafts ink by hand either values perfection or pays attention to details (or both).\nconclusion: Dennis pays attention to details.\n\nfact1: Dennis uses traditional techniques.\nfact2: Dennis pays attention to details.\nrule: For all humans, if they use traditional techniques and pay attention to details, then they produce high-quality work.\nconclusion: Dennis produces high-quality work.\n\nTherefore, it is true that Dennis produces high-quality work. The correct option is: A.",
    "context": "Dennis does not seek unique results. Dennis respects heritage. Dennis pursues mastery. Ada has a strong work ethic. Dennis is passionate about printing. Ada does not seek unique results. Collins invests time and effort. If Dennis is passionate about printing, then he respects heritage and uses traditional techniques. For everyone who mixes inks and uses custom recipes, they can craft ink by hand. Dennis has a strong work ethic. Dennis has high standards. Dennis invests time and effort. If Collins has high standards, then he either pursues mastery or enjoys precision work, but not both. If Ada is passionate about printing, then he respects heritage and uses traditional techniques. For all humans, if they use traditional techniques and pay attention to details, then they produce high-quality work. Everyone who crafts ink by hand either values perfection or pays attention to details (or both). If someone values perfection, then they seek unique results and invest time and effort. If Pablo has a strong work ethic, then he either crafts ink by hand or enjoys precision work, but not both. If Dennis has a strong work ethic, then he either crafts ink by hand or enjoys precision work, but not both. If Dennis has high standards, then he either pursues mastery or enjoys precision work, but not both.",
    "nl2fol": {
      "Dennis does not seek unique results.": "¬seek_unique_results(Dennis)",
      "Dennis respects heritage.": "respects_heritage(Dennis)",
      "Dennis pursues mastery.": "pursues_mastery(Dennis)",
      "Ada has a strong work ethic.": "has_strong_work_ethic(Ada)",
      "Dennis is passionate about printing.": "passionate_about_printing(Dennis)",
      "Ada does not seek unique results.": "¬seek_unique_results(Ada)",
      "Collins invests time and effort.": "invest_time_and_effort(Collins)",
      "If Dennis is passionate about printing, then he respects heritage and uses traditional techniques.": "passionate_about_printing(Dennis) → (respects_heritage(Dennis) ∧ use_traditional_techniques(Dennis))",
      "For everyone who mixes inks and uses custom recipes, they can craft ink by hand.": "∀x ((mixes_inks(x) ∧ uses_custom_recipes(x)) → craft_ink_by_hand(x))",
      "Dennis has a strong work ethic.": "has_strong_work_ethic(Dennis)",
      "Dennis has high standards.": "has_high_standards(Dennis)",
      "Dennis invests time and effort.": "invest_time_and_effort(Dennis)",
      "If Collins has high standards, then he either pursues mastery or enjoys precision work, but not both.": "has_high_standards(Collins) → (enjoys_precision_work(Collins) ⊕ pursues_mastery(Collins))",
      "If Ada is passionate about printing, then he respects heritage and uses traditional techniques.": "passionate_about_printing(Ada) → (respects_heritage(Ada) ∧ use_traditional_techniques(Ada))",
      "For all humans, if they use traditional techniques and pay attention to details, then they produce high-quality work.": "∀x ((use_traditional_techniques(x) ∧ pay_attention_to_details(x)) → produce_high_quality_work(x))",
      "Everyone who crafts ink by hand either values perfection or pays attention to details (or both).": "∀x (craft_ink_by_hand(x) → (value_perfection(x) ∨ pay_attention_to_details(x)))",
      "If someone values perfection, then they seek unique results and invest time and effort.": "∀x (value_perfection(x) → (seek_unique_results(x) ∧ invest_time_and_effort(x)))",
      "If Pablo has a strong work ethic, then he either crafts ink by hand or enjoys precision work, but not both.": "has_strong_work_ethic(Pablo) → (craft_ink_by_hand(Pablo) ⊕ enjoys_precision_work(Pablo))",
      "If Dennis has a strong work ethic, then he either crafts ink by hand or enjoys precision work, but not both.": "has_strong_work_ethic(Dennis) → (craft_ink_by_hand(Dennis) ⊕ enjoys_precision_work(Dennis))",
      "If Dennis has high standards, then he either pursues mastery or enjoys precision work, but not both.": "has_high_standards(Dennis) → (enjoys_precision_work(Dennis) ⊕ pursues_mastery(Dennis))"
    },
    "conclusion_fol": "produce_high_quality_work(Dennis)"
  },
  {
    "id": 431,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Angie is a successful chef.",
    "reasoning": "fact1: Angie does not share her expertise.\nfact2: Angie does not adapt traditions to new environments.\nrule: If Angie values her cultural heritage, then she either shares her expertise or adapts traditions to new environments.\nconclusion: Angie does not value her cultural heritage.\n\nfact1: Angie does not value her cultural heritage.\nrule: Angie either has a unique perspective in her pastry-making or values her cultural heritage, but not both.\nconclusion: Angie has a unique perspective.\n\nfact1: Angie has a unique perspective.\nrule: Anyone who has a unique perspective thinks outside the box.\nconclusion: Angie thinks outside the box.\n\nfact1: Angie does not respect tradition.\nrule: Angie either loves experimenting or respects tradition, but not both.\nconclusion: Angie loves experimenting.\n\nfact1: Angie thinks outside the box.\nfact2: Angie loves experimenting.\nrule: Anyone who thinks outside the box and loves experimenting can be creative.\nconclusion: Angie is creative.\n\nfact1: Angie prefers savory dishes.\nrule: Angie either prefers savory dishes or enjoys baking, but not both.\nconclusion: Angie does not enjoy baking.\n\nfact1: Angie is talented.\nfact2: Angie does not enjoy baking.\nrule: If Angie is talented, then she either enjoys baking or is passionate about cooking, but not both.\nconclusion: Angie is passionate about cooking.\n\nfact1: Angie is creative.\nfact2: Angie is passionate about cooking.\nrule: If Angie is creative, then she is passionate about cooking and self-taught.\nconclusion: Angie is self-taught.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Angie is a successful chef. The correct option is: C.",
    "context": "Whoever preserves family recipes values their cultural heritage. Angie does not share her expertise. If Angie is inspired by art, then she is a skilled artist and creative. Angie does not respect tradition. Maisie prefers savory dishes. Angie does not adapt traditions to new environments. Angie prefers savory dishes. Angie either has a unique perspective in her pastry-making or values her cultural heritage, but not both. If Angie is creative, then she is passionate about cooking and self-taught. If Angie is talented, then she either enjoys baking or is passionate about cooking, but not both. If Angie learns from experience, then she is self-taught. Matias does not adapt traditions to new environments. Quinn is classically trained. Anyone who has a unique perspective thinks outside the box. If Maisie values her cultural heritage, then she either shares her expertise or adapts traditions to new environments. If Angie values her cultural heritage, then she either shares her expertise or adapts traditions to new environments. Anyone who thinks outside the box and loves experimenting can be creative. Angie is talented. Angie either prefers savory dishes or enjoys baking, but not both. Angie either loves experimenting or respects tradition, but not both.",
    "nl2fol": {
      "Whoever preserves family recipes values their cultural heritage.": "∀x (preserves_family_recipes(x) → values_cultural_heritage(x))",
      "Angie does not share her expertise.": "¬shares_expertise(Angie)",
      "If Angie is inspired by art, then she is a skilled artist and creative.": "inspired_by_art(Angie) → (skilled_artist(Angie) ∧ creative(Angie))",
      "Angie does not respect tradition.": "¬respects_tradition(Angie)",
      "Maisie prefers savory dishes.": "prefers_savory_dishes(Maisie)",
      "Angie does not adapt traditions to new environments.": "¬adapts_traditions(Angie)",
      "Angie prefers savory dishes.": "prefers_savory_dishes(Angie)",
      "Angie either has a unique perspective in her pastry-making or values her cultural heritage, but not both.": "has_unique_perspective(Angie) ⊕ values_cultural_heritage(Angie)",
      "If Angie is creative, then she is passionate about cooking and self-taught.": "creative(Angie) → (passionate_about_cooking(Angie) ∧ self_taught(Angie))",
      "If Angie is talented, then she either enjoys baking or is passionate about cooking, but not both.": "talented(Angie) → (enjoys_baking(Angie) ⊕ passionate_about_cooking(Angie))",
      "If Angie learns from experience, then she is self-taught.": "learns_from_experience(Angie) → self_taught(Angie)",
      "Matias does not adapt traditions to new environments.": "¬adapts_traditions(Matias)",
      "Quinn is classically trained.": "classically_trained(Quinn)",
      "Anyone who has a unique perspective thinks outside the box.": "∀x (has_unique_perspective(x) → thinks_outside_box(x))",
      "If Maisie values her cultural heritage, then she either shares her expertise or adapts traditions to new environments.": "values_cultural_heritage(Maisie) → (shares_expertise(Maisie) ∨ adapts_traditions(Maisie))",
      "If Angie values her cultural heritage, then she either shares her expertise or adapts traditions to new environments.": "values_cultural_heritage(Angie) → (shares_expertise(Angie) ∨ adapts_traditions(Angie))",
      "Anyone who thinks outside the box and loves experimenting can be creative.": "∀x ((thinks_outside_box(x) ∧ loves_experimenting(x)) → creative(x))",
      "Angie is talented.": "talented(Angie)",
      "Angie either prefers savory dishes or enjoys baking, but not both.": "prefers_savory_dishes(Angie) ⊕ enjoys_baking(Angie)",
      "Angie either loves experimenting or respects tradition, but not both.": "loves_experimenting(Angie) ⊕ respects_tradition(Angie)"
    },
    "conclusion_fol": "successful_chef(Angie)"
  },
  {
    "id": 432,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elsie is not a credible source.",
    "reasoning": "fact1: Elsie is not responsible.\nrule: Elsie is responsible if she cites references.\nconclusion: Elsie does not cite references.\n\nfact1: Elsie fact-checks her posts.\nfact2: Elsie does not cite references.\nrule: If someone either fact-checks their posts or cites references (but not both), then they value accuracy.\nconclusion: Elsie values accuracy.\n\nfact1: Elsie values accuracy.\nrule: If someone values accuracy, then they create quality content.\nconclusion: Elsie creates quality content.\n\nfact1: Elsie creates quality content.\nfact2: Elsie does not have moral integrity.\nrule: If Elsie creates quality content and is respected online, then she has moral integrity.\nconclusion: Elsie is not respected online.\n\nfact1: Elsie is not respected online.\nrule: If Elsie verifies facts or is trustworthy, then she is respected online.\nconclusion: Elsie is not trustworthy.\n\nfact1: Elsie is not trustworthy.\nrule: If someone is a reliable informer, then they are trustworthy.\nconclusion: Elsie is not a reliable informer.\n\nfact1: Elsie is a misinformation spreader.\nfact2: Elsie is not a reliable informer.\nrule: If Elsie is either a credible source or a misinformation spreader (but not both), then she is a reliable informer.\nconclusion: Elsie is not a credible source.\n\nTherefore, it is false that Elsie is not a credible source. The correct option is: B.",
    "context": "Elsie is a misinformation spreader. If someone is a reliable informer, then they are trustworthy. Elsie fact-checks her posts. Elsie is responsible if she cites references. If someone shares the truth and respects others' opinions, then they are trustworthy. Elsie either engages her audience or creates quality content. If someone values accuracy, then they create quality content. If Elsie verifies facts or is trustworthy, then she is respected online. Elsie does not have moral integrity. If Elsie is either a credible source or a misinformation spreader (but not both), then she is a reliable informer. If Elsie creates quality content and is respected online, then she has moral integrity. Elsie is not responsible. If someone either fact-checks their posts or cites references (but not both), then they value accuracy.",
    "nl2fol": {
      "Elsie is a misinformation spreader.": "misinformation_spreader(Elsie)",
      "If someone is a reliable informer, then they are trustworthy.": "∀x (reliable_informer(x) → trustworthy(x))",
      "Elsie fact-checks her posts.": "fact_checks_posts(Elsie)",
      "Elsie is responsible if she cites references.": "cites_references(Elsie) → is_responsible(Elsie)",
      "If someone shares the truth and respects others' opinions, then they are trustworthy.": "∀x ((shares_truth(x) ∧ respects_opinions(x)) → trustworthy(x))",
      "Elsie either engages her audience or creates quality content.": "engages_audience(Elsie) ∨ creates_quality_content(Elsie)",
      "If someone values accuracy, then they create quality content.": "∀x (values_accuracy(x) → creates_quality_content(x))",
      "If Elsie verifies facts or is trustworthy, then she is respected online.": "(verifies_facts(Elsie) ∨ trustworthy(Elsie)) → respected_online(Elsie)",
      "Elsie does not have moral integrity.": "¬has_moral_integrity(Elsie)",
      "If Elsie is either a credible source or a misinformation spreader (but not both), then she is a reliable informer.": "(credible_source(Elsie) ⊕ misinformation_spreader(Elsie)) → reliable_informer(Elsie)",
      "If Elsie creates quality content and is respected online, then she has moral integrity.": "(creates_quality_content(Elsie) ∧ respected_online(Elsie)) → has_moral_integrity(Elsie)",
      "Elsie is not responsible.": "¬is_responsible(Elsie)",
      "If someone either fact-checks their posts or cites references (but not both), then they value accuracy.": "∀x ((fact_checks_posts(x) ⊕ cites_references(x)) → values_accuracy(x))"
    },
    "conclusion_fol": "¬credible_source(Elsie)"
  },
  {
    "id": 433,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Shiloh is selfless.",
    "reasoning": "fact1: Shiloh does not have good intentions.\nrule: Everyone either has good intentions or gains knowledge, but these two are not necessarily related.\nconclusion: Shiloh gains knowledge.\n\nfact1: Shiloh pursues her personal goals.\nrule: Shiloh either pursues her personal goals or enhances the lives of others, but these two pursuits can be mutually exclusive.\nconclusion: Shiloh does not enhance the lives of others.\n\nfact1: Shiloh does not enhance the lives of others.\nrule: Anyone who volunteers regularly or improves their community can enhance the lives of others.\nconclusion: Shiloh does not improve her community.\n\nfact1: Shiloh inspires others.\nfact2: Shiloh does not improve her community.\nrule: If someone makes a difference and inspires others, then they can improve their community.\nconclusion: Shiloh cannot make a difference.\n\nfact1: Shiloh cannot make a difference.\nrule: Anyone who has experience or is educated can make a difference.\nconclusion: Shiloh is not educated.\n\nfact1: Shiloh is not educated.\nrule: Shiloh is selfless or educated (or both).\nconclusion: Shiloh is selfless.\n\nTherefore, it is true that Shiloh is selfless. The correct option is: A.",
    "context": "Shiloh pursues her personal goals. Shiloh does not have good intentions. Anyone who works hard or learns quickly can gain experience. If someone makes a difference and inspires others, then they can improve their community. Shiloh inspires others. Shiloh either pursues her personal goals or enhances the lives of others, but these two pursuits can be mutually exclusive. Anyone who has experience or is educated can make a difference. Everyone has skills or makes a difference. Anyone who volunteers regularly or improves their community can enhance the lives of others. Everyone either has good intentions or gains knowledge, but these two are not necessarily related. If Shiloh either reads books or attends seminars (but not both), then she gains knowledge. Shiloh is selfless or educated (or both).",
    "nl2fol": {
      "Shiloh pursues her personal goals.": "pursues_personal_goals(Shiloh)",
      "Shiloh does not have good intentions.": "¬has_good_intentions(Shiloh)",
      "Anyone who works hard or learns quickly can gain experience.": "∀x ((works_hard(x) ∨ learns_quickly(x)) → has_experience(x))",
      "If someone makes a difference and inspires others, then they can improve their community.": "∀x ((makes_difference(x) ∧ inspires_others(x)) → improves_community(x))",
      "Shiloh inspires others.": "inspires_others(Shiloh)",
      "Shiloh either pursues her personal goals or enhances the lives of others, but these two pursuits can be mutually exclusive.": "pursues_personal_goals(Shiloh) ⊕ enhances_lives(Shiloh)",
      "Anyone who has experience or is educated can make a difference.": "∀x ((has_experience(x) ∨ educated(x)) → makes_difference(x))",
      "Everyone has skills or makes a difference.": "∀x (has_skills(x) ∨ makes_difference(x))",
      "Anyone who volunteers regularly or improves their community can enhance the lives of others.": "∀x ((volunteers_regularly(x) ∨ improves_community(x)) → enhances_lives(x))",
      "Everyone either has good intentions or gains knowledge, but these two are not necessarily related.": "∀x (has_good_intentions(x) ⊕ gains_knowledge(x))",
      "If Shiloh either reads books or attends seminars (but not both), then she gains knowledge.": "(reads_books(Shiloh) ⊕ attends_seminars(Shiloh)) → gains_knowledge(Shiloh)",
      "Shiloh is selfless or educated (or both).": "selfless(Shiloh) ∨ educated(Shiloh)"
    },
    "conclusion_fol": "selfless(Shiloh)"
  },
  {
    "id": 434,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Archie does not provide comfort.",
    "reasoning": "fact1: Archie has energy.\nrule: All dogs that have energy enjoy playtime.\nconclusion: Archie enjoys playtime.\n\nfact1: Archie reads body language.\nfact2: Archie does not offer support.\nrule: If Archie either reads body language or senses emotions (but not both), then he offers support.\nconclusion: Archie senses emotions.\n\nfact1: Archie enjoys playtime.\nrule: Archie either enjoys playtime or is affectionate, but not necessarily both.\nconclusion: Archie is not affectionate.\n\nfact1: Archie is not affectionate.\nrule: All dogs are either affectionate or care deeply (or both).\nconclusion: Archie cares deeply.\n\nfact1: Archie senses emotions.\nfact2: Archie does not stay by his owner's side.\nrule: If a dog senses emotions and is protective, then it stays by its owner's side.\nconclusion: Archie is not protective.\n\nfact1: Archie is not protective.\nrule: All loyal dogs are protective and love unconditionally.\nconclusion: Archie is not loyal.\n\nfact1: Archie is intuitive.\nfact2: Archie is not loyal.\nrule: If Archie is intuitive, then he is either loyal or has empathy, but not both.\nconclusion: Archie has empathy.\n\nfact1: Archie has empathy.\nrule: Every dog that has empathy provides comfort.\nconclusion: Archie does not provide comfort.\n\nTherefore, it is false that Archie does not provide comfort. The correct option is: B.",
    "context": "All dogs are either affectionate or care deeply (or both). If Archie either reads body language or senses emotions (but not both), then he offers support. Archie is intuitive. If a dog senses emotions and is protective, then it stays by its owner's side. Every dog that has empathy provides comfort. All loyal dogs are protective and love unconditionally. If Archie is intuitive, then he is either loyal or has empathy, but not both. Archie does not offer support. Archie either enjoys playtime or is affectionate, but not necessarily both. Archie does not stay by his owner's side. Archie reads body language. All dogs that have energy enjoy playtime. Archie has energy.",
    "nl2fol": {
      "All dogs are either affectionate or care deeply (or both).": "∀x (is_affectionate(x) ∨ cares_deeply(x))",
      "If Archie either reads body language or senses emotions (but not both), then he offers support.": "(reads_body_language(Archie) ⊕ senses_emotions(Archie)) → offers_support(Archie)",
      "Archie is intuitive.": "is_intuitive(Archie)",
      "If a dog senses emotions and is protective, then it stays by its owner's side.": "∀x ((senses_emotions(x) ∧ protective(x)) → stays_by_side(x))",
      "Every dog that has empathy provides comfort.": "∀x (has_empathy(x) → provides_comfort(x))",
      "All loyal dogs are protective and love unconditionally.": "∀x (is_loyal(x) → (protective(x) ∧ loves_unconditionally(x)))",
      "If Archie is intuitive, then he is either loyal or has empathy, but not both.": "is_intuitive(Archie) → (is_loyal(Archie) ⊕ has_empathy(Archie))",
      "Archie does not offer support.": "¬offers_support(Archie)",
      "Archie either enjoys playtime or is affectionate, but not necessarily both.": "enjoys_playtime(Archie) ⊕ is_affectionate(Archie)",
      "Archie does not stay by his owner's side.": "¬stays_by_side(Archie)",
      "Archie reads body language.": "reads_body_language(Archie)",
      "All dogs that have energy enjoy playtime.": "∀x (has_energy(x) → enjoys_playtime(x))",
      "Archie has energy.": "has_energy(Archie)"
    },
    "conclusion_fol": "¬provides_comfort(Archie)"
  },
  {
    "id": 435,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jackson does not have unique fingerprints.",
    "reasoning": "fact1: Jackson is not outgoing.\nfact2: Jackson does not have charisma.\nrule: If Jackson stands out, then he is either outgoing or has charisma, but not both.\nconclusion: Jackson does not stand out.\n\nfact1: Jackson does not have bright hair.\nfact2: Jackson does not stand out.\nrule: If someone either has bright hair or has unusual marks (but not both), then they stand out.\nconclusion: Jackson does not have unusual marks.\n\nfact1: Jackson does not wear distinctive jewelry.\nrule: If Jackson is identifiable, then he has visible tattoos and wears distinctive jewelry.\nconclusion: Jackson cannot be easily identifiable.\n\nfact1: Jackson does not have unusual marks.\nfact2: Jackson cannot be easily identifiable.\nrule: If Jackson has unusual marks or a rare scar, then he can be easily identifiable.\nconclusion: Jackson does not have a rare scar.\n\nfact1: Jackson does not have a rare scar.\nrule: Jackson has distinct palmar patterns or a rare scar (or both).\nconclusion: Jackson has distinct palmar patterns.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Jackson does not have unique fingerprints. The correct option is: C.",
    "context": "If Jackson stands out, then he is either outgoing or has charisma, but not both. If Jackson has visible scars, then he either stands out or has a distinctive voice, but not both. Katie does not wear distinctive jewelry. Jackson does not wear distinctive jewelry. Jackson does not have bright hair. Jackson is not outgoing. For any person, if they have certain genes and were exposed to x-ray, then they may have unusual marks. Jackson does not have charisma. If Jackson is identifiable, then he has visible tattoos and wears distinctive jewelry. If Jackson often attends public events, then he either has visible tattoos or wears bold clothing (but not both). Jackson has distinct palmar patterns or a rare scar (or both). If someone either has bright hair or has unusual marks (but not both), then they stand out. If Jackson has unusual marks or a rare scar, then he can be easily identifiable.",
    "nl2fol": {
      "If Jackson stands out, then he is either outgoing or has charisma, but not both.": "stands_out(Jackson) → (is_outgoing(Jackson) ⊕ has_charisma(Jackson))",
      "If Jackson has visible scars, then he either stands out or has a distinctive voice, but not both.": "has_visible_scars(Jackson) → (stands_out(Jackson) ⊕ has_a_distinctive_voice(Jackson))",
      "Katie does not wear distinctive jewelry.": "¬wears_distinctive_jewelry(Katie)",
      "Jackson does not wear distinctive jewelry.": "¬wears_distinctive_jewelry(Jackson)",
      "Jackson does not have bright hair.": "¬has_bright_hair(Jackson)",
      "Jackson is not outgoing.": "¬is_outgoing(Jackson)",
      "For any person, if they have certain genes and were exposed to x-ray, then they may have unusual marks.": "∀x ((has_certain_genes(x) ∧ was_exposed_to_xray(x)) → has_unusual_marks(x))",
      "Jackson does not have charisma.": "¬has_charisma(Jackson)",
      "If Jackson is identifiable, then he has visible tattoos and wears distinctive jewelry.": "is_identifiable(Jackson) → (has_visible_tattoos(Jackson) ∧ wears_distinctive_jewelry(Jackson))",
      "If Jackson often attends public events, then he either has visible tattoos or wears bold clothing (but not both).": "often_attends_public_events(Jackson) → (has_visible_tattoos(Jackson) ⊕ wears_bold_clothing(Jackson))",
      "Jackson has distinct palmar patterns or a rare scar (or both).": "has_distinct_palmar_patterns(Jackson) ∨ has_rare_scar(Jackson)",
      "If someone either has bright hair or has unusual marks (but not both), then they stand out.": "∀x ((has_bright_hair(x) ⊕ has_unusual_marks(x)) → stands_out(x))",
      "If Jackson has unusual marks or a rare scar, then he can be easily identifiable.": "(has_unusual_marks(Jackson) ∨ has_rare_scar(Jackson)) → is_identifiable(Jackson)"
    },
    "conclusion_fol": "¬has_unique_fingerprints(Jackson)"
  },
  {
    "id": 436,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bitsy does not excel in competition.",
    "reasoning": "fact1: Bitsy is a talented jumper.\nfact2: Bitsy does not have a calm demeanor.\nrule: If Bitsy is a talented jumper, then she is either a horse with strong instincts or has a calm demeanor (but not both).\nconclusion: Bitsy is a horse with strong instincts.\n\nfact1: Bitsy is a horse with strong instincts.\nrule: Bitsy is either a horse with strong instincts or has a gentle nature.\nconclusion: Bitsy does not have a gentle nature.\n\nfact1: Bitsy does not have a gentle nature.\nrule: Bitsy is either an endurance runner or has a gentle nature, but not necessarily both.\nconclusion: Bitsy is an endurance runner.\n\nfact1: Bitsy is an endurance runner.\nfact2: Bitsy is not responsive to commands.\nrule: Every horse that is an endurance runner either has an athletic build or is responsive to commands (or both).\nconclusion: Bitsy is athletic in build.\n\nfact1: Bitsy is athletic in build.\nrule: Bitsy is either athletic in build or has an agile front end, but not both to the same degree.\nconclusion: Bitsy does not have an agile front end.\n\nfact1: Bitsy has good breeding.\nfact2: Bitsy is not well-trained.\nrule: If Bitsy has good breeding, then she either has powerful hind legs or is well-trained, but not both.\nconclusion: Bitsy has powerful hind legs.\n\nfact1: Bitsy has powerful hind legs.\nfact2: Bitsy does not have an agile front end.\nrule: If Bitsy has powerful hind legs or an agile front end (or both), then she excels in competition.\nconclusion: Bitsy does not excel in competition.\n\nTherefore, it is false that Bitsy does not excel in competition. The correct option is: B.",
    "context": "Bitsy is either athletic in build or has an agile front end, but not both to the same degree. Bitsy does not have a calm demeanor. Sasha has good breeding. Bitsy is a talented jumper. All horses with good reflexes have either fast reaction time or an agile front end (or both). Bitsy is not well-trained. Bitsy is either a horse with strong instincts or has a gentle nature. If Bitsy has powerful hind legs or an agile front end (or both), then she excels in competition. Bitsy is either an endurance runner or has a gentle nature, but not necessarily both. Bitsy is not responsive to commands. If Bitsy is keen on exercise, then she has strong cardio and is an endurance runner. If Bitsy has good breeding, then she either has powerful hind legs or is well-trained, but not both. Every horse that is an endurance runner either has an athletic build or is responsive to commands (or both). Bitsy has good breeding. If Bitsy is a talented jumper, then she is either a horse with strong instincts or has a calm demeanor (but not both). Sasha is either a horse with strong instincts or has a gentle nature. All horses that have regular exercise and a balanced diet have powerful hind legs. All horses with quick reflexes have good balance and an athletic build. Every horse that forms a strong bond with its rider either performs well under pressure or has a gentle nature (or both).",
    "nl2fol": {
      "Bitsy is either athletic in build or has an agile front end, but not both to the same degree.": "has_athletic_build(Bitsy) ⊕ agile_front_end(Bitsy)",
      "Bitsy does not have a calm demeanor.": "¬has_calm_demeanor(Bitsy)",
      "Sasha has good breeding.": "has_good_breeding(Sasha)",
      "Bitsy is a talented jumper.": "is_talented_jumper(Bitsy)",
      "All horses with good reflexes have either fast reaction time or an agile front end (or both).": "∀x (has_good_reflexes(x) → (fast_reaction_time(x) ∨ agile_front_end(x)))",
      "Bitsy is not well-trained.": "¬well_trained(Bitsy)",
      "Bitsy is either a horse with strong instincts or has a gentle nature.": "has_strong_instincts(Bitsy) ⊕ has_gentle_nature(Bitsy)",
      "If Bitsy has powerful hind legs or an agile front end (or both), then she excels in competition.": "(powerful_hind_legs(Bitsy) ∨ agile_front_end(Bitsy)) → excel_in_competition(Bitsy)",
      "Bitsy is either an endurance runner or has a gentle nature, but not necessarily both.": "endurance_runner(Bitsy) ⊕ has_gentle_nature(Bitsy)",
      "Bitsy is not responsive to commands.": "¬_responder_to_commands(Bitsy)",
      "If Bitsy is keen on exercise, then she has strong cardio and is an endurance runner.": "keen_on_exercise(Bitsy) → (has_strong_cardio(Bitsy) ∧ endurance_runner(Bitsy))",
      "If Bitsy has good breeding, then she either has powerful hind legs or is well-trained, but not both.": "has_good_breeding(Bitsy) → (powerful_hind_legs(Bitsy) ⊕ well_trained(Bitsy))",
      "Every horse that is an endurance runner either has an athletic build or is responsive to commands (or both).": "∀x (endurance_runner(x) → (has_athletic_build(x) ∨ _responder_to_commands(x)))",
      "Bitsy has good breeding.": "has_good_breeding(Bitsy)",
      "If Bitsy is a talented jumper, then she is either a horse with strong instincts or has a calm demeanor (but not both).": "is_talented_jumper(Bitsy) → (has_calm_demeanor(Bitsy) ⊕ has_strong_instincts(Bitsy))",
      "Sasha is either a horse with strong instincts or has a gentle nature.": "has_strong_instincts(Sasha) ⊕ has_gentle_nature(Sasha)",
      "All horses that have regular exercise and a balanced diet have powerful hind legs.": "∀x ((regular_exercise(x) ∧ balanced_diet(x)) → powerful_hind_legs(x))",
      "All horses with quick reflexes have good balance and an athletic build.": "∀x (quick_reflexes(x) → (good_balance(x) ∧ has_athletic_build(x)))",
      "Every horse that forms a strong bond with its rider either performs well under pressure or has a gentle nature (or both).": "∀x (forms_strong_bond(x) → (perform_well_under_pressure(x) ∨ has_gentle_nature(x)))"
    },
    "conclusion_fol": "¬excel_in_competition(Bitsy)"
  },
  {
    "id": 437,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Zander is not critically acclaimed.",
    "reasoning": "fact1: Zander does not evoke emotions.\nfact2: Zander does not have an authentic voice.\nrule: If Zander either resonates with readers or evokes emotions (but not both), then he has an authentic voice.\nconclusion: Zander does not resonate with readers.\n\nfact1: Zander writes a novel.\nfact2: Zander does not touch hearts.\nrule: If Zander writes a novel, then he either touches hearts or connects with others (but not both).\nconclusion: Zander connects with others.\n\nfact1: Zander does not explore themes.\nrule: Zander either explores themes or writes semi-autobiographical works.\nconclusion: Zander writes semi-autobiographical works.\n\nfact1: Zander does not resonate with readers.\nrule: Any author who draws from their life or is widely popular will resonate with readers.\nconclusion: Zander is not widely popular.\n\nfact1: Zander writes semi-autobiographical works.\nfact2: Zander is not widely popular.\nrule: If Zander writes semi-autobiographical works, then he is either critically acclaimed or widely popular, but not both.\nconclusion: Zander is not critically acclaimed.\n\nTherefore, it is false that Zander is not critically acclaimed. The correct option is: B.",
    "context": "Zander does not evoke emotions. Zander does not touch hearts. Zander does not explore themes. Zander does not have an authentic voice. If Zander writes semi-autobiographical works, then he is either critically acclaimed or widely popular, but not both. Lukas does not touch hearts. If Zander writes from experience and tells compelling stories, then he is widely popular. Any author who tells their own stories or writes from experience writes semi-autobiographical works. Lukas writes honestly. Zander either explores themes or writes semi-autobiographical works. If Lukas writes semi-autobiographical works, then he is either critically acclaimed or widely popular, but not both. Omari does not evoke emotions. If Zander either resonates with readers or evokes emotions (but not both), then he has an authentic voice. If Zander writes from the heart, then he will either resonate with readers or have a unique style, but not both. If Zander writes a novel, then he either touches hearts or connects with others (but not both). Zander writes a novel. Lukas does not explore themes. Any author who draws from their life or is widely popular will resonate with readers. If Lukas writes a novel, then he either touches hearts or connects with others (but not both).",
    "nl2fol": {
      "Zander does not evoke emotions.": "¬evokes_emotions(Zander)",
      "Zander does not touch hearts.": "¬touches_hearts(Zander)",
      "Zander does not explore themes.": "¬explores_themes(Zander)",
      "Zander does not have an authentic voice.": "¬has_authentic_voice(Zander)",
      "If Zander writes semi-autobiographical works, then he is either critically acclaimed or widely popular, but not both.": "writes_semi_autobiographical_works(Zander) → (critically_acclaimed(Zander) ⊕ widely_popular(Zander))",
      "Lukas does not touch hearts.": "¬touches_hearts(Lukas)",
      "If Zander writes from experience and tells compelling stories, then he is widely popular.": "(writes_from_experience(Zander) ∧ tells_compelling_stories(Zander)) → widely_popular(Zander)",
      "Any author who tells their own stories or writes from experience writes semi-autobiographical works.": "∀x ((tells_own_stories(x) ∨ writes_from_experience(x)) → writes_semi_autobiographical_works(x))",
      "Lukas writes honestly.": "writes_honestly(Lukas)",
      "Zander either explores themes or writes semi-autobiographical works.": "explores_themes(Zander) ∨ writes_semi_autobiographical_works(Zander)",
      "If Lukas writes semi-autobiographical works, then he is either critically acclaimed or widely popular, but not both.": "writes_semi_autobiographical_works(Lukas) → (critically_acclaimed(Lukas) ⊕ widely_popular(Lukas))",
      "Omari does not evoke emotions.": "¬evokes_emotions(Omari)",
      "If Zander either resonates with readers or evokes emotions (but not both), then he has an authentic voice.": "(resonates_with_readers(Zander) ⊕ evokes_emotions(Zander)) → has_authentic_voice(Zander)",
      "If Zander writes from the heart, then he will either resonate with readers or have a unique style, but not both.": "writes_from_heart(Zander) → (resonates_with_readers(Zander) ⊕ has_unique_style(Zander))",
      "If Zander writes a novel, then he either touches hearts or connects with others (but not both).": "writes_novel(Zander) → (touches_hearts(Zander) ⊕ connects_with_others(Zander))",
      "Zander writes a novel.": "writes_novel(Zander)",
      "Lukas does not explore themes.": "¬explores_themes(Lukas)",
      "Any author who draws from their life or is widely popular will resonate with readers.": "∀x ((draws_from_life(x) ∨ widely_popular(x)) → resonates_with_readers(x))",
      "If Lukas writes a novel, then he either touches hearts or connects with others (but not both).": "writes_novel(Lukas) → (touches_hearts(Lukas) ⊕ connects_with_others(Lukas))"
    },
    "conclusion_fol": "¬critically_acclaimed(Zander)"
  },
  {
    "id": 438,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mae is talented.",
    "reasoning": "fact1: Mae faces criticism.\nrule: If Mae faces criticism, then she gets nervous and feels sensitive.\nconclusion: Mae gets nervous.\n\nfact1: Mae speaks in front of a crowd.\nfact2: Mae gets nervous.\nrule: If Mae speaks in front of a crowd, then she is either confident or gets nervous, but not both.\nconclusion: Mae is not confident.\n\nfact1: Mae does not sing alone.\nrule: Mae either performs in public or sings alone.\nconclusion: Mae performs in public.\n\nfact1: Mae performs in public.\nfact2: Mae is not confident.\nrule: If Mae performs in public, then she either has stage fright or is confident, but not both.\nconclusion: Mae has stage fright.\n\nfact1: Mae is not ambitious.\nrule: Mae is either ambitious or selfless, but not both.\nconclusion: Mae is selfless.\n\nfact1: Mae has stage fright.\nrule: Mae either has stage fright or is charismatic, but not both.\nconclusion: Mae is not charismatic.\n\nfact1: Mae is selfless.\nrule: For Mae, being passionate and being selfless are mutually exclusive.\nconclusion: Mae is not passionate.\n\nfact1: Mae is not hard-working.\nfact2: Mae is not passionate.\nrule: If Mae is successful, then she is both hard-working and passionate.\nconclusion: Mae is not successful.\n\nfact1: Mae is not charismatic.\nfact2: Mae is not successful.\nrule: If Mae is either charismatic or talented (but not both), then she is successful.\nconclusion: Mae is talented.\n\nTherefore, it is false that Mae is talented. The correct option is: B.",
    "context": "Holly is not hard-working. If Coraline is either charismatic or talented (but not both), then she is successful. Mae is not ambitious. For Mae, being passionate and being selfless are mutually exclusive. Anyone who performs solo either commands attention or has stage fright (or both). Holly either has stage fright or is charismatic, but not both. If Holly is successful, then she is both hard-working and passionate. If Mae faces criticism, then she gets nervous and feels sensitive. If Mae speaks in front of a crowd, then she is either confident or gets nervous, but not both. Mae faces criticism. If Mae follows her heart, then she either puts others first or is selfless (or both). Mae is either ambitious or selfless, but not both. Sexy faces criticism. Holly either performs in public or sings alone. For Sexy, being passionate and being selfless are mutually exclusive. If Mae loves music, then she has charisma and performs in public. If Coraline performs in public, then she either has stage fright or is confident, but not both. If Mae is either charismatic or talented (but not both), then she is successful. If Coraline faces criticism, then she gets nervous and feels sensitive. Holly speaks in front of a crowd. Mae is not hard-working. If Mae is successful, then she is both hard-working and passionate. Mae speaks in front of a crowd. Holly is either ambitious or selfless, but not both. If Mae performs in public, then she either has stage fright or is confident, but not both. Mae does not sing alone. Mae either performs in public or sings alone. Mae either has stage fright or is charismatic, but not both. If Mae fears failure and meets expectations, then she gets nervous.",
    "nl2fol": {
      "Holly is not hard-working.": "¬hard_working(Holly)",
      "If Coraline is either charismatic or talented (but not both), then she is successful.": "(charismatic(Coraline) ⊕ talented(Coraline)) → successful(Coraline)",
      "Mae is not ambitious.": "¬is_ambitious(Mae)",
      "For Mae, being passionate and being selfless are mutually exclusive.": "passionate(Mae) ⊕ selfless(Mae)",
      "Anyone who performs solo either commands attention or has stage fright (or both).": "∀x (performs_solo(x) → (commands_attention(x) ∨ has_stage_fright(x)))",
      "Holly either has stage fright or is charismatic, but not both.": "has_stage_fright(Holly) ⊕ charismatic(Holly)",
      "If Holly is successful, then she is both hard-working and passionate.": "successful(Holly) → (hard_working(Holly) ∧ passionate(Holly))",
      "If Mae faces criticism, then she gets nervous and feels sensitive.": "faces_criticism(Mae) → (gets_nervous(Mae) ∧ feels_sensitive(Mae))",
      "If Mae speaks in front of a crowd, then she is either confident or gets nervous, but not both.": "speaks_in_front(Mae) → (is_confident(Mae) ⊕ gets_nervous(Mae))",
      "Mae faces criticism.": "faces_criticism(Mae)",
      "If Mae follows her heart, then she either puts others first or is selfless (or both).": "follows_heart(Mae) → (puts_others_first(Mae) ∨ selfless(Mae))",
      "Mae is either ambitious or selfless, but not both.": "is_ambitious(Mae) ⊕ selfless(Mae)",
      "Sexy faces criticism.": "faces_criticism(Sexy)",
      "Holly either performs in public or sings alone.": "performs_in_public(Holly) ∨ sings_alone(Holly)",
      "For Sexy, being passionate and being selfless are mutually exclusive.": "passionate(Sexy) ⊕ selfless(Sexy)",
      "If Mae loves music, then she has charisma and performs in public.": "loves_music(Mae) → (has_charisma(Mae) ∧ performs_in_public(Mae))",
      "If Coraline performs in public, then she either has stage fright or is confident, but not both.": "performs_in_public(Coraline) → (has_stage_fright(Coraline) ⊕ is_confident(Coraline))",
      "If Mae is either charismatic or talented (but not both), then she is successful.": "(charismatic(Mae) ⊕ talented(Mae)) → successful(Mae)",
      "If Coraline faces criticism, then she gets nervous and feels sensitive.": "faces_criticism(Coraline) → (gets_nervous(Coraline) ∧ feels_sensitive(Coraline))",
      "Holly speaks in front of a crowd.": "speaks_in_front(Holly)",
      "Mae is not hard-working.": "¬hard_working(Mae)",
      "If Mae is successful, then she is both hard-working and passionate.": "successful(Mae) → (hard_working(Mae) ∧ passionate(Mae))",
      "Mae speaks in front of a crowd.": "speaks_in_front(Mae)",
      "Holly is either ambitious or selfless, but not both.": "is_ambitious(Holly) ⊕ selfless(Holly)",
      "If Mae performs in public, then she either has stage fright or is confident, but not both.": "performs_in_public(Mae) → (has_stage_fright(Mae) ⊕ is_confident(Mae))",
      "Mae does not sing alone.": "¬sings_alone(Mae)",
      "Mae either performs in public or sings alone.": "performs_in_public(Mae) ∨ sings_alone(Mae)",
      "Mae either has stage fright or is charismatic, but not both.": "has_stage_fright(Mae) ⊕ charismatic(Mae)",
      "If Mae fears failure and meets expectations, then she gets nervous.": "(fears_failure(Mae) ∧ meets_expectations(Mae)) → gets_nervous(Mae)"
    },
    "conclusion_fol": "talented(Mae)"
  },
  {
    "id": 439,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Spencer does not create something beautiful.",
    "reasoning": "fact1: Spencer meets new people.\nfact2: Spencer tries new things.\nrule: If Spencer meets new people and tries new things, then he will undergo a life change.\nconclusion: Spencer undergoes a life change.\n\nfact1: Spencer undergoes a life change.\nfact2: Spencer does not find new purpose.\nrule: If Spencer undergoes a life change, then he is either someone who finds new purpose or someone who experiences tragedy, but not both.\nconclusion: Spencer experiences tragedy.\n\nfact1: Spencer remains optimistic.\nrule: Spencer either remains optimistic or finds inner peace, but not both.\nconclusion: Spencer does not find inner peace.\n\nfact1: Spencer experiences tragedy.\nfact2: Spencer overcomes challenges.\nrule: For all people, if they experience tragedy and overcome challenges, then they face adversity.\nconclusion: Spencer faces adversity.\n\nfact1: Spencer faces adversity.\nfact2: Spencer does not find inner peace.\nrule: If Spencer faces adversity, then he either finds inner peace or has a passion for art, but not both.\nconclusion: Spencer has a passion for art.\n\nfact1: Spencer has a passion for art.\nrule: If Spencer has a passion for art, then he creates something beautiful.\nconclusion: Spencer creates something beautiful.\n\nTherefore, it is false that Spencer does not create something beautiful. The correct option is: B.",
    "context": "If Spencer faces adversity, then he either finds inner peace or has a passion for art, but not both. Spencer tries new things. If Spencer undergoes a life change, then he is either someone who finds new purpose or someone who experiences tragedy, but not both. For all people, if they experience tragedy and overcome challenges, then they face adversity. Anyone who experiences loss or meets difficulty faces adversity. Spencer does not find new purpose. If Nora faces adversity, then he either finds inner peace or has a passion for art, but not both. Spencer remains optimistic. If Spencer experiences loss, then he discovers resilience and undergoes a life change. Marcus either remains optimistic or finds inner peace, but not both. If Nora has a passion for art, then he creates something beautiful. Marcus overcomes challenges. Marcus meets new people. Spencer overcomes challenges. Nora does not find new purpose. If Spencer meets new people and tries new things, then he will undergo a life change. If Spencer has a passion for art, then he creates something beautiful. Spencer either remains optimistic or finds inner peace, but not both. Spencer meets new people.",
    "nl2fol": {
      "If Spencer faces adversity, then he either finds inner peace or has a passion for art, but not both.": "faces_adversity(Spencer) → (finds_inner_peace(Spencer) ⊕ has_a_passion_for_art(Spencer))",
      "Spencer tries new things.": "tries_new_things(Spencer)",
      "If Spencer undergoes a life change, then he is either someone who finds new purpose or someone who experiences tragedy, but not both.": "undergoes_life_change(Spencer) → (finds_new_purpose(Spencer) ⊕ experiences_tragedy(Spencer))",
      "For all people, if they experience tragedy and overcome challenges, then they face adversity.": "∀x ((experiences_tragedy(x) ∧ overcomes_challenges(x)) → faces_adversity(x))",
      "Anyone who experiences loss or meets difficulty faces adversity.": "∀x ((experiences_loss(x) ∨ meets_difficulty(x)) → faces_adversity(x))",
      "Spencer does not find new purpose.": "¬finds_new_purpose(Spencer)",
      "If Nora faces adversity, then he either finds inner peace or has a passion for art, but not both.": "faces_adversity(Nora) → (finds_inner_peace(Nora) ⊕ has_a_passion_for_art(Nora))",
      "Spencer remains optimistic.": "remains_optimistic(Spencer)",
      "If Spencer experiences loss, then he discovers resilience and undergoes a life change.": "experiences_loss(Spencer) → (discovers_resilience(Spencer) ∧ undergoes_life_change(Spencer))",
      "Marcus either remains optimistic or finds inner peace, but not both.": "remains_optimistic(Marcus) ⊕ finds_inner_peace(Marcus)",
      "If Nora has a passion for art, then he creates something beautiful.": "has_a_passion_for_art(Nora) → creates_something_beautiful(Nora)",
      "Marcus overcomes challenges.": "overcome_challenges(Marcus)",
      "Marcus meets new people.": "meet_new_people(Marcus)",
      "Spencer overcomes challenges.": "overcomes_challenges(Spencer)",
      "Nora does not find new purpose.": "¬finds_new_purpose(Nora)",
      "If Spencer meets new people and tries new things, then he will undergo a life change.": "(meets_new_people(Spencer) ∧ tries_new_things(Spencer)) → undergoes_life_change(Spencer)",
      "If Spencer has a passion for art, then he creates something beautiful.": "has_a_passion_for_art(Spencer) → creates_something_beautiful(Spencer)",
      "Spencer either remains optimistic or finds inner peace, but not both.": "remains_optimistic(Spencer) ⊕ finds_inner_peace(Spencer)",
      "Spencer meets new people.": "meets_new_people(Spencer)"
    },
    "conclusion_fol": "¬creates_something_beautiful(Spencer)"
  },
  {
    "id": 440,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Pudding is charismatic.",
    "reasoning": "fact1: Pudding does not stay healthy.\nrule: If Pudding plays outside, then she stays healthy.\nconclusion: Pudding does not play outside.\n\nfact1: Pudding purrs frequently.\nrule: All cats that purr frequently are affectionate.\nconclusion: Pudding is affectionate.\n\nfact1: Pudding does not play outside.\nrule: Pudding either plays outside or gets into mischief.\nconclusion: Pudding gets into mischief.\n\nfact1: Pudding is affectionate.\nfact2: Pudding gets into mischief.\nrule: If Pudding is affectionate, then she is either a charming companion or gets into mischief, but not both.\nconclusion: Pudding is not a charming companion.\n\nfact1: Pudding has many hobbies.\nfact2: Pudding does not enjoy learning.\nrule: If Pudding has many hobbies, then she either has a curious nature or enjoys learning (or both).\nconclusion: Pudding has a curious nature.\n\nfact1: Pudding has a curious nature.\nrule: If Pudding has a curious nature, then she explores various interests.\nconclusion: Pudding explores various interests.\n\nfact1: Pudding explores various interests.\nfact2: Pudding is not a charming companion.\nrule: If Pudding is charismatic, then she explores various interests and is a charming companion.\nconclusion: Pudding is charismatic.\n\nTherefore, it is false that Pudding is charismatic. The correct option is: B.",
    "context": "Pudding does not enjoy learning. Every cat that lives in luxury is either a charming companion or has a playful side (or both). If Pudding has many hobbies, then she either has a curious nature or enjoys learning (or both). All cats that purr frequently are affectionate. If Pudding is affectionate, then she is either a charming companion or gets into mischief, but not both. Pudding either plays outside or gets into mischief. If Pudding is charismatic, then she explores various interests and is a charming companion. Pudding has many hobbies. If Pudding has a curious nature, then she explores various interests. Pudding does not stay healthy. Pudding purrs frequently. If Pudding plays outside, then she stays healthy.",
    "nl2fol": {
      "Pudding does not enjoy learning.": "¬enjoys_learning(Pudding)",
      "Every cat that lives in luxury is either a charming companion or has a playful side (or both).": "∀x (lives_in_luxury(x) → (be_a_charming_companion(x) ∨ has_playful_side(x)))",
      "If Pudding has many hobbies, then she either has a curious nature or enjoys learning (or both).": "has_many_hobbies(Pudding) → (curious_nature(Pudding) ∨ enjoys_learning(Pudding))",
      "All cats that purr frequently are affectionate.": "∀x (purrs_frequently(x) → is_affectionate(x))",
      "If Pudding is affectionate, then she is either a charming companion or gets into mischief, but not both.": "is_affectionate(Pudding) → (be_a_charming_companion(Pudding) ⊕ gets_into_mischief(Pudding))",
      "Pudding either plays outside or gets into mischief.": "plays_outside(Pudding) ∨ gets_into_mischief(Pudding)",
      "If Pudding is charismatic, then she explores various interests and is a charming companion.": "charismatic(Pudding) → (explore_various_interests(Pudding) ∧ be_a_charming_companion(Pudding))",
      "Pudding has many hobbies.": "has_many_hobbies(Pudding)",
      "If Pudding has a curious nature, then she explores various interests.": "curious_nature(Pudding) → explore_various_interests(Pudding)",
      "Pudding does not stay healthy.": "¬stays_healthy(Pudding)",
      "Pudding purrs frequently.": "purrs_frequently(Pudding)",
      "If Pudding plays outside, then she stays healthy.": "plays_outside(Pudding) → stays_healthy(Pudding)"
    },
    "conclusion_fol": "charismatic(Pudding)"
  },
  {
    "id": 441,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kohen serves as a carriage horse.",
    "reasoning": "fact1: Kohen runs frequently.\nfact2: Kohen does not have a muscular body.\nrule: If Kohen either runs frequently or exercises regularly (but not both), then he has a muscular body.\nconclusion: Kohen exercises regularly.\n\nfact1: Kohen eats nutritious food.\nfact2: Kohen exercises regularly.\nrule: If Kohen eats nutritious food and exercises regularly, then he has a large build.\nconclusion: Kohen has a large build.\n\nfact1: Kohen does not have endurance.\nfact2: Kohen does not perform well.\nrule: Every horse that is either athletic or has endurance performs well.\nconclusion: Kohen is not athletic.\n\nfact1: Kohen has a large build.\nrule: Kohen has an intimidating appearance if he has a large build.\nconclusion: Kohen has an intimidating appearance.\n\nfact1: Kohen does not have speed.\nfact2: Kohen is not athletic.\nrule: For all horses, if they are either agile or have speed, then they are athletic.\nconclusion: Kohen is not agile.\n\nfact1: Kohen has an intimidating appearance.\nrule: Kohen either has an intimidating appearance or has a gentle nature, but not both.\nconclusion: Kohen does not have a gentle nature.\n\nfact1: Kohen is not agile.\nrule: Kohen is either agile or strong, but he cannot be both.\nconclusion: Kohen is strong.\n\nfact1: Kohen does not have a gentle nature.\nrule: Kohen either has a gentle nature or becomes a symbol of elegance, but not both.\nconclusion: Kohen becomes a symbol of elegance.\n\nfact1: Kohen is strong.\nfact2: Kohen becomes a symbol of elegance.\nrule: If Kohen is strong, then he can either serve as a carriage horse or become a symbol of elegance, but not both.\nconclusion: Kohen serves as a carriage horse.\n\nTherefore, it is false that Kohen serves as a carriage horse. The correct option is: B.",
    "context": "Kohen eats nutritious food. If Kohen either runs frequently or exercises regularly (but not both), then he has a muscular body. Kohen does not perform well. Snookums either has a gentle nature or becomes a symbol of elegance, but not both. For all horses, if they are either agile or have speed, then they are athletic. If Kohen eats nutritious food and exercises regularly, then he has a large build. Every horse that is either athletic or has endurance performs well. Kohen will become a symbol of elegance if he is prized by Mr. Jenkins. Kohen either has an intimidating appearance or has a gentle nature, but not both. If Kohen either practices obedience or engages in play (but not both), then he exercises regularly. If Snookums eats nutritious food and exercises regularly, then he has a large build. Kohen runs frequently. Kohen either has a gentle nature or becomes a symbol of elegance, but not both. Madisyn either has an intimidating appearance or has a gentle nature, but not both. Every well-cared-for horse is either strong or has good posture (or both). Kannon does not perform well. All horses with tall height and well-proportioned body have a large build. Madisyn does not have endurance. Kohen has an intimidating appearance if he has a large build. If Kohen is strong, then he can either serve as a carriage horse or become a symbol of elegance, but not both. Snookums is either agile or strong, but he cannot be both. Kohen does not have endurance. Kohen does not have speed. If Kannon is strong, then he can either serve as a carriage horse or become a symbol of elegance, but not both. Kohen is either agile or strong, but he cannot be both. If Kannon either runs frequently or exercises regularly (but not both), then he has a muscular body. Kohen does not have a muscular body.",
    "nl2fol": {
      "Kohen eats nutritious food.": "eats_nutritious_food(Kohen)",
      "If Kohen either runs frequently or exercises regularly (but not both), then he has a muscular body.": "(runs_frequently(Kohen) ⊕ exercises_regularly(Kohen)) → has_muscular_body(Kohen)",
      "Kohen does not perform well.": "¬performs_well(Kohen)",
      "Snookums either has a gentle nature or becomes a symbol of elegance, but not both.": "has_gentle_nature(Snookums) ⊕ become_a_symbol_of_elegance(Snookums)",
      "For all horses, if they are either agile or have speed, then they are athletic.": "∀x ((is_agile(x) ⊕ has_speed(x)) → is_athletic(x))",
      "If Kohen eats nutritious food and exercises regularly, then he has a large build.": "(eats_nutritious_food(Kohen) ∧ exercises_regularly(Kohen)) → large_build(Kohen)",
      "Every horse that is either athletic or has endurance performs well.": "∀x ((is_athletic(x) ⊕ has_endurance(x)) → performs_well(x))",
      "Kohen will become a symbol of elegance if he is prized by Mr. Jenkins.": "prized_by_owner(Kohen) → become_a_symbol_of_elegance(Kohen)",
      "Kohen either has an intimidating appearance or has a gentle nature, but not both.": "has_intimidating_appearance(Kohen) ⊕ has_gentle_nature(Kohen)",
      "If Kohen either practices obedience or engages in play (but not both), then he exercises regularly.": "(practices_obedience(Kohen) ⊕ engages_in_play(Kohen)) → exercises_regularly(Kohen)",
      "If Snookums eats nutritious food and exercises regularly, then he has a large build.": "(eats_nutritious_food(Snookums) ∧ exercises_regularly(Snookums)) → large_build(Snookums)",
      "Kohen runs frequently.": "runs_frequently(Kohen)",
      "Kohen either has a gentle nature or becomes a symbol of elegance, but not both.": "has_gentle_nature(Kohen) ⊕ become_a_symbol_of_elegance(Kohen)",
      "Madisyn either has an intimidating appearance or has a gentle nature, but not both.": "has_intimidating_appearance(Madisyn) ⊕ has_gentle_nature(Madisyn)",
      "Every well-cared-for horse is either strong or has good posture (or both).": "∀x (well_cared_for(x) → (strong(x) ∨ has_good_posture(x)))",
      "Kannon does not perform well.": "¬performs_well(Kannon)",
      "All horses with tall height and well-proportioned body have a large build.": "∀x ((has_tall_height(x) ∧ is_well_proportioned(x)) → large_build(x))",
      "Madisyn does not have endurance.": "¬has_endurance(Madisyn)",
      "Kohen has an intimidating appearance if he has a large build.": "large_build(Kohen) → has_intimidating_appearance(Kohen)",
      "If Kohen is strong, then he can either serve as a carriage horse or become a symbol of elegance, but not both.": "strong(Kohen) → (serve_as_carriage_horse(Kohen) ⊕ become_a_symbol_of_elegance(Kohen))",
      "Snookums is either agile or strong, but he cannot be both.": "is_agile(Snookums) ⊕ strong(Snookums)",
      "Kohen does not have endurance.": "¬has_endurance(Kohen)",
      "Kohen does not have speed.": "¬has_speed(Kohen)",
      "If Kannon is strong, then he can either serve as a carriage horse or become a symbol of elegance, but not both.": "strong(Kannon) → (serve_as_carriage_horse(Kannon) ⊕ become_a_symbol_of_elegance(Kannon))",
      "Kohen is either agile or strong, but he cannot be both.": "is_agile(Kohen) ⊕ strong(Kohen)",
      "If Kannon either runs frequently or exercises regularly (but not both), then he has a muscular body.": "(runs_frequently(Kannon) ⊕ exercises_regularly(Kannon)) → has_muscular_body(Kannon)",
      "Kohen does not have a muscular body.": "¬has_muscular_body(Kohen)"
    },
    "conclusion_fol": "serve_as_carriage_horse(Kohen)"
  },
  {
    "id": 442,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cayson expresses himself artistically.",
    "reasoning": "fact1: Cayson appreciates history.\nfact2: Cayson does not preserve his culture.\nrule: If Cayson either values his heritage or appreciates history (but not both), then he preserves his culture.\nconclusion: Cayson values his heritage.\n\nfact1: Cayson challenges authority.\nfact2: Cayson does not speak his mind.\nrule: Anyone who challenges authority either speaks their mind or takes risks (or both).\nconclusion: Cayson takes risks.\n\nfact1: Cayson values his heritage.\nrule: Anyone who values their heritage or follows customs respects tradition.\nconclusion: Cayson respects tradition.\n\nfact1: Cayson respects tradition.\nrule: Cayson either blends innovation with tradition or respects tradition, but not both.\nconclusion: Cayson does not blend innovation with tradition.\n\nfact1: Cayson takes risks.\nfact2: Cayson does not blend innovation with tradition.\nrule: If Cayson takes risks and becomes influential, then he will blend innovation with tradition.\nconclusion: Cayson does not become influential.\n\nfact1: Cayson faces adversity.\nrule: If Cayson faces adversity or seeks recognition, then he will pursue his passion.\nconclusion: Cayson pursues his passion.\n\nfact1: Cayson pursues his passion.\nfact2: Cayson does not become influential.\nrule: If someone pursues their passion and leaves a lasting impact, then they become influential.\nconclusion: Cayson does not leave a lasting impact.\n\nfact1: Cayson does not leave a lasting impact.\nrule: If Cayson expresses himself artistically, then he leaves a lasting impact.\nconclusion: Cayson expresses himself artistically.\n\nTherefore, it is false that Cayson expresses himself artistically. The correct option is: B.",
    "context": "If Cayson expresses himself artistically, then he leaves a lasting impact. If someone pursues their passion and leaves a lasting impact, then they become influential. Anyone who values their heritage or follows customs respects tradition. Cayson does not preserve his culture. Cayson appreciates history. Anyone who has creative ideas and puts in effort can pursue their passion. Cayson either blends innovation with tradition or respects tradition, but not both. If Cayson either values his heritage or appreciates history (but not both), then he preserves his culture. Cayson faces adversity. Cayson does not speak his mind. If Cayson takes risks and becomes influential, then he will blend innovation with tradition. Anyone who challenges authority either speaks their mind or takes risks (or both). If Cayson faces adversity or seeks recognition, then he will pursue his passion. Cayson challenges authority.",
    "nl2fol": {
      "If Cayson expresses himself artistically, then he leaves a lasting impact.": "express_themselves_artistically(Cayson) → leave_a_lasting_impact(Cayson)",
      "If someone pursues their passion and leaves a lasting impact, then they become influential.": "∀x ((pursue_passion(x) ∧ leave_a_lasting_impact(x)) → become_influential(x))",
      "Anyone who values their heritage or follows customs respects tradition.": "∀x ((values_heritage(x) ∨ follows_customs(x)) → respects_tradition(x))",
      "Cayson does not preserve his culture.": "¬preserves_culture(Cayson)",
      "Cayson appreciates history.": "appreciates_history(Cayson)",
      "Anyone who has creative ideas and puts in effort can pursue their passion.": "∀x ((has_creative_ideas(x) ∧ puts_in_effort(x)) → pursue_passion(x))",
      "Cayson either blends innovation with tradition or respects tradition, but not both.": "respects_tradition(Cayson) ⊕ blends_innovation(Cayson)",
      "If Cayson either values his heritage or appreciates history (but not both), then he preserves his culture.": "(values_heritage(Cayson) ⊕ appreciates_history(Cayson)) → preserves_culture(Cayson)",
      "Cayson faces adversity.": "face_adversity(Cayson)",
      "Cayson does not speak his mind.": "¬speaks_his_mind(Cayson)",
      "If Cayson takes risks and becomes influential, then he will blend innovation with tradition.": "(takes_risks(Cayson) ∧ become_influential(Cayson)) → blends_innovation(Cayson)",
      "Anyone who challenges authority either speaks their mind or takes risks (or both).": "∀x (challenges_authority(x) → (speaks_his_mind(x) ∨ takes_risks(x)))",
      "If Cayson faces adversity or seeks recognition, then he will pursue his passion.": "(face_adversity(Cayson) ∨ seek_recognition(Cayson)) → pursue_passion(Cayson)",
      "Cayson challenges authority.": "challenges_authority(Cayson)"
    },
    "conclusion_fol": "express_themselves_artistically(Cayson)"
  },
  {
    "id": 443,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lucy has slow reflexes.",
    "reasoning": "fact1: Lucy does not earn recognition.\nrule: If Lucy strives for excellence, then she will earn recognition.\nconclusion: Lucy does not strive for excellence.\n\nfact1: Lucy has good instincts.\nfact2: Lucy is visionary.\nrule: If Lucy has good instincts, then she is either visionary or has artistic vision (but not both).\nconclusion: Lucy does not have artistic vision.\n\nfact1: Lucy does not achieve success.\nrule: If Lucy takes risks, then she will achieve success.\nconclusion: Lucy does not take risks.\n\nfact1: Lucy values quality.\nfact2: Lucy does not strive for excellence.\nrule: If Lucy either seeks perfection or values quality (but not both), then she strives for excellence.\nconclusion: Lucy seeks perfection.\n\nfact1: Lucy seeks perfection.\nfact2: Lucy does not take risks.\nrule: If Lucy seeks perfection, then she either thinks creatively or takes risks (or both).\nconclusion: Lucy thinks creatively.\n\nfact1: Lucy captures life's moments.\nfact2: Lucy does not have artistic vision.\nrule: Everyone who captures life's moments is either a photographer or has artistic vision (or both).\nconclusion: Lucy is a photographer.\n\nfact1: Lucy is a photographer.\nfact2: Lucy thinks creatively.\nrule: If Lucy is a photographer, then she either reacts quickly or thinks creatively.\nconclusion: Lucy does not react quickly.\n\nfact1: Lucy does not react quickly.\nrule: Lucy either reacts quickly or has good reflexes.\nconclusion: Lucy has good reflexes.\n\nfact1: Lucy has good reflexes.\nrule: Lucy is either a human with good reflexes or slow reflexes, but not both.\nconclusion: Lucy has slow reflexes.\n\nTherefore, it is false that Lucy has slow reflexes. The correct option is: B.",
    "context": "Anyone who has imagination or views things differently can think creatively. Lucy captures life's moments. If Lucy has good instincts, then she is either visionary or has artistic vision (but not both). Lucy does not earn recognition. If Lucy takes risks, then she will achieve success. Cadence is visionary. Lucy has good instincts. Lucy either reacts quickly or has good reflexes. Lucy values quality. Lucy is either a human with good reflexes or slow reflexes, but not both. Lambkin has good instincts. If Cadence has good instincts, then she is either visionary or has artistic vision (but not both). If Lambkin seeks perfection, then she either thinks creatively or takes risks (or both). Cadence is either a human with good reflexes or slow reflexes, but not both. Cadence captures life's moments. If Lucy is a photographer, then she either reacts quickly or thinks creatively. If Lucy seeks perfection, then she either thinks creatively or takes risks (or both). If Lucy strives for excellence, then she will earn recognition. Lucy does not achieve success. Lambkin values quality. If Lucy either seeks perfection or values quality (but not both), then she strives for excellence. If Lucy uses a camera and loves nature, then she can be a photographer. Lucy pursues her passion or takes risks. Lucy is visionary. Everyone who captures life's moments is either a photographer or has artistic vision (or both).",
    "nl2fol": {
      "Anyone who has imagination or views things differently can think creatively.": "∀x ((has_imagination(x) ∨ views_differently(x)) → thinks_creatively(x))",
      "Lucy captures life's moments.": "captures_life_moments(Lucy)",
      "If Lucy has good instincts, then she is either visionary or has artistic vision (but not both).": "has_good_instincts(Lucy) → (is_visionary(Lucy) ⊕ has_artistic_vision(Lucy))",
      "Lucy does not earn recognition.": "¬earns_recognition(Lucy)",
      "If Lucy takes risks, then she will achieve success.": "takes_risks(Lucy) → achieves_success(Lucy)",
      "Cadence is visionary.": "is_visionary(Cadence)",
      "Lucy has good instincts.": "has_good_instincts(Lucy)",
      "Lucy either reacts quickly or has good reflexes.": "reacts_quickly(Lucy) ∨ has_good_reflexes(Lucy)",
      "Lucy values quality.": "values_quality(Lucy)",
      "Lucy is either a human with good reflexes or slow reflexes, but not both.": "has_good_reflexes(Lucy) ⊕ has_slow_reflexes(Lucy)",
      "Lambkin has good instincts.": "has_good_instincts(Lambkin)",
      "If Cadence has good instincts, then she is either visionary or has artistic vision (but not both).": "has_good_instincts(Cadence) → (is_visionary(Cadence) ⊕ has_artistic_vision(Cadence))",
      "If Lambkin seeks perfection, then she either thinks creatively or takes risks (or both).": "seeks_perfection(Lambkin) → (thinks_creatively(Lambkin) ∨ takes_risks(Lambkin))",
      "Cadence is either a human with good reflexes or slow reflexes, but not both.": "has_good_reflexes(Cadence) ⊕ has_slow_reflexes(Cadence)",
      "Cadence captures life's moments.": "captures_life_moments(Cadence)",
      "If Lucy is a photographer, then she either reacts quickly or thinks creatively.": "is_photographer(Lucy) → (reacts_quickly(Lucy) ⊕ thinks_creatively(Lucy))",
      "If Lucy seeks perfection, then she either thinks creatively or takes risks (or both).": "seeks_perfection(Lucy) → (thinks_creatively(Lucy) ∨ takes_risks(Lucy))",
      "If Lucy strives for excellence, then she will earn recognition.": "strives_for_excellence(Lucy) → earns_recognition(Lucy)",
      "Lucy does not achieve success.": "¬achieves_success(Lucy)",
      "Lambkin values quality.": "values_quality(Lambkin)",
      "If Lucy either seeks perfection or values quality (but not both), then she strives for excellence.": "(seeks_perfection(Lucy) ⊕ values_quality(Lucy)) → strives_for_excellence(Lucy)",
      "If Lucy uses a camera and loves nature, then she can be a photographer.": "(uses_camera(Lucy) ∧ loves_nature(Lucy)) → is_photographer(Lucy)",
      "Lucy pursues her passion or takes risks.": "pursues_passion(Lucy) ∨ takes_risks(Lucy)",
      "Lucy is visionary.": "is_visionary(Lucy)",
      "Everyone who captures life's moments is either a photographer or has artistic vision (or both).": "∀x (captures_life_moments(x) → (is_photographer(x) ∨ has_artistic_vision(x)))"
    },
    "conclusion_fol": "has_slow_reflexes(Lucy)"
  },
  {
    "id": 444,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mohammad is a master blacksmith and either forges adamantine steel or creates indestructible armor (or both).",
    "reasoning": "fact1: Mohammad attends art school.\nrule: If Mohammad attends art school, then he is a skilled artist.\nconclusion: Mohammad is a skilled artist.\n\nfact1: Mohammad is a skilled artist.\nfact2: Mohammad creates functional items.\nrule: If Mohammad is a skilled artist, then he is either a designer of elegant art or a creator of functional items, but not both.\nconclusion: Mohammad does not design elegant art.\n\nfact1: Mohammad is dedicated to his craft.\nfact2: Mohammad has unique skills.\nrule: If Mohammad is dedicated to his craft, then he is either a renowned craftsman or has unique skills, but not both.\nconclusion: Mohammad is not a renowned craftsman.\n\nfact1: Mohammad is not a renowned craftsman.\nrule: If Mohammad works with metal or builds strong structures, then he is a renowned craftsman.\nconclusion: Mohammad does not build strong structures.\n\nfact1: Mohammad does not build strong structures.\nrule: Mohammad creates durable items or builds strong structures.\nconclusion: Mohammad can create durable items.\n\nfact1: Mohammad does not design elegant art.\nrule: Mohammad either designs elegant art or creates indestructible armor, but not both.\nconclusion: Mohammad creates indestructible armor.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Mohammad is a master blacksmith and either forges adamantine steel or creates indestructible armor (or both). The correct option is: C.",
    "context": "If Calvin is dedicated to his craft, then he is either a renowned craftsman or has unique skills, but not both. Mohammad develops new techniques or is a skilled artist. If Mohammad is a skilled blacksmith, then he either makes exquisite swords or forges adamantine steel, but not both. Mohammad is dedicated to his craft. Mohammad has unique skills. If Mohammad produces unique items, then he either employs innovative techniques or is a renowned craftsman (or both). If Arthur works with metal or builds strong structures, then he is a renowned craftsman. Any person who has expertise or uses quality materials can create durable items. Mohammad either designs elegant art or creates indestructible armor, but not both. If Mohammad attends art school, then he is a skilled artist. Mohammad attends art school. If Lucy is a skilled artist, then he is either a designer of elegant art or a creator of functional items, but not both. Lucy has spent years training. If Mohammad is a skilled artist, then he is either a designer of elegant art or a creator of functional items, but not both. If Mohammad works with metal or builds strong structures, then he is a renowned craftsman. Lucy crafts tools or forges adamantine steel. Mohammad creates durable items or builds strong structures. If Mohammad is dedicated to his craft, then he is either a renowned craftsman or has unique skills, but not both. If Mohammad has expertise or uses high-quality steel, then he can create indestructible armor. Mohammad creates functional items.",
    "nl2fol": {
      "If Calvin is dedicated to his craft, then he is either a renowned craftsman or has unique skills, but not both.": "dedicated_to_craft(Calvin) → (has_unique_skills(Calvin) ⊕ is_renowned_craftsman(Calvin))",
      "Mohammad develops new techniques or is a skilled artist.": "develops_new_techniques(Mohammad) ∨ is_skilled_artist(Mohammad)",
      "If Mohammad is a skilled blacksmith, then he either makes exquisite swords or forges adamantine steel, but not both.": "skilled_blacksmith(Mohammad) → (makes_exquisite_swords(Mohammad) ⊕ forge_adamantine_steel(Mohammad))",
      "Mohammad is dedicated to his craft.": "dedicated_to_craft(Mohammad)",
      "Mohammad has unique skills.": "has_unique_skills(Mohammad)",
      "If Mohammad produces unique items, then he either employs innovative techniques or is a renowned craftsman (or both).": "produces_unique_items(Mohammad) → (employs_innovative_techniques(Mohammad) ∨ is_renowned_craftsman(Mohammad))",
      "If Arthur works with metal or builds strong structures, then he is a renowned craftsman.": "(works_with_metal(Arthur) ∨ builds_strong_structures(Arthur)) → is_renowned_craftsman(Arthur)",
      "Any person who has expertise or uses quality materials can create durable items.": "∀x ((has_expertise(x) ∨ uses_quality_materials(x)) → create_durable_items(x))",
      "Mohammad either designs elegant art or creates indestructible armor, but not both.": "designs_elegant_art(Mohammad) ⊕ create_indestructible_armor(Mohammad)",
      "If Mohammad attends art school, then he is a skilled artist.": "attends_art_school(Mohammad) → is_skilled_artist(Mohammad)",
      "Mohammad attends art school.": "attends_art_school(Mohammad)",
      "If Lucy is a skilled artist, then he is either a designer of elegant art or a creator of functional items, but not both.": "is_skilled_artist(Lucy) → (creates_functional_items(Lucy) ⊕ designs_elegant_art(Lucy))",
      "Lucy has spent years training.": "spent_years_training(Lucy)",
      "If Mohammad is a skilled artist, then he is either a designer of elegant art or a creator of functional items, but not both.": "is_skilled_artist(Mohammad) → (creates_functional_items(Mohammad) ⊕ designs_elegant_art(Mohammad))",
      "If Mohammad works with metal or builds strong structures, then he is a renowned craftsman.": "(works_with_metal(Mohammad) ∨ builds_strong_structures(Mohammad)) → is_renowned_craftsman(Mohammad)",
      "Lucy crafts tools or forges adamantine steel.": "crafts_tools(Lucy) ∨ forge_adamantine_steel(Lucy)",
      "Mohammad creates durable items or builds strong structures.": "create_durable_items(Mohammad) ∨ builds_strong_structures(Mohammad)",
      "If Mohammad is dedicated to his craft, then he is either a renowned craftsman or has unique skills, but not both.": "dedicated_to_craft(Mohammad) → (has_unique_skills(Mohammad) ⊕ is_renowned_craftsman(Mohammad))",
      "If Mohammad has expertise or uses high-quality steel, then he can create indestructible armor.": "(has_expertise(Mohammad) ∨ uses_high_quality_steel(Mohammad)) → create_indestructible_armor(Mohammad)",
      "Mohammad creates functional items.": "creates_functional_items(Mohammad)"
    },
    "conclusion_fol": "master_blacksmith(Mohammad) ∧ (forge_adamantine_steel(Mohammad) ∨ create_indestructible_armor(Mohammad))"
  },
  {
    "id": 445,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grant is not a brilliant artist.",
    "reasoning": "fact1: Grant acts spontaneously.\nrule: Grant is either someone who thinks freely or someone who acts spontaneously, but not both.\nconclusion: Grant does not think freely.\n\nfact1: Grant does not solve problems differently.\nfact2: Grant cannot generate innovative ideas.\nrule: Anyone who thinks out of the box or solves problems differently can generate innovative ideas.\nconclusion: Grant does not think out of the box.\n\nfact1: Grant does not think freely.\nrule: Grant either follows rules or thinks freely.\nconclusion: Grant follows rules.\n\nfact1: Grant follows rules.\nrule: Grant either creates masterpieces or follows rules, but not both.\nconclusion: Grant cannot create masterpieces.\n\nfact1: Grant has creativity.\nfact2: Grant cannot create masterpieces.\nrule: If someone observes details closely and has creativity, then they can create masterpieces.\nconclusion: Grant does not observe details closely.\n\nfact1: Grant does not observe details closely.\nfact2: Grant does not think out of the box.\nrule: For all humans, if someone is a brilliant artist, then they either observe details closely or think out of the box (or both).\nconclusion: Grant is not a brilliant artist.\n\nTherefore, it is true that Grant is not a brilliant artist. The correct option is: A.",
    "context": "For all humans, if someone is a brilliant artist, then they either observe details closely or think out of the box (or both). Lakelyn acts spontaneously. Grant cannot generate innovative ideas. Grant acts spontaneously. Grant does not solve problems differently. Grant follows intuition or thinks out of the box. Lakelyn either creates masterpieces or follows rules, but not both. Grant has creativity. Everyone who is perceptive observes details closely. Anyone who thinks out of the box or solves problems differently can generate innovative ideas. Everyone who expresses their thoughts openly either thinks freely or embraces their individuality. Grant is either someone who thinks freely or someone who acts spontaneously, but not both. If someone observes details closely and has creativity, then they can create masterpieces. Azriel is either someone who thinks freely or someone who acts spontaneously, but not both. Lakelyn either follows rules or thinks freely. Azriel cannot generate innovative ideas. Grant either creates masterpieces or follows rules, but not both. Grant either follows rules or thinks freely.",
    "nl2fol": {
      "For all humans, if someone is a brilliant artist, then they either observe details closely or think out of the box (or both).": "∀x (brilliant_artist(x) → (observe_details_closely(x) ∨ think_out_of_the_box(x)))",
      "Lakelyn acts spontaneously.": "act_spontaneously(Lakelyn)",
      "Grant cannot generate innovative ideas.": "¬generate_innovative_ideas(Grant)",
      "Grant acts spontaneously.": "acts_spontaneously(Grant)",
      "Grant does not solve problems differently.": "¬solve_problems_differently(Grant)",
      "Grant follows intuition or thinks out of the box.": "follows_intuition(Grant) ∨ think_out_of_the_box(Grant)",
      "Lakelyn either creates masterpieces or follows rules, but not both.": "creates_masterpieces(Lakelyn) ⊕ follows_rules(Lakelyn)",
      "Grant has creativity.": "has_creativity(Grant)",
      "Everyone who is perceptive observes details closely.": "∀x (is_perceptive(x) → observe_details_closely(x))",
      "Anyone who thinks out of the box or solves problems differently can generate innovative ideas.": "∀x ((think_out_of_the_box(x) ∨ solve_problems_differently(x)) → generate_innovative_ideas(x))",
      "Everyone who expresses their thoughts openly either thinks freely or embraces their individuality.": "∀x (expresses_thoughts_openly(x) → (thinks_freely(x) ∨ embraces_individuality(x)))",
      "Grant is either someone who thinks freely or someone who acts spontaneously, but not both.": "thinks_freely(Grant) ⊕ acts_spontaneously(Grant)",
      "If someone observes details closely and has creativity, then they can create masterpieces.": "∀x ((observe_details_closely(x) ∧ has_creativity(x)) → creates_masterpieces(x))",
      "Azriel is either someone who thinks freely or someone who acts spontaneously, but not both.": "thinks_freely(Azriel) ⊕ acts_spontaneously(Azriel)",
      "Lakelyn either follows rules or thinks freely.": "follows_rules(Lakelyn) ∨ thinks_freely(Lakelyn)",
      "Azriel cannot generate innovative ideas.": "¬generate_innovative_ideas(Azriel)",
      "Grant either creates masterpieces or follows rules, but not both.": "creates_masterpieces(Grant) ⊕ follows_rules(Grant)",
      "Grant either follows rules or thinks freely.": "follows_rules(Grant) ∨ thinks_freely(Grant)"
    },
    "conclusion_fol": "¬brilliant_artist(Grant)"
  },
  {
    "id": 446,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nevaeh does not show loyalty.",
    "reasoning": "fact1: Nevaeh does not act with integrity.\nrule: If someone follows their conscience, then they will act with integrity.\nconclusion: Nevaeh does not follow her conscience.\n\nfact1: Nevaeh does not have resilience.\nrule: If someone perseveres under pressure, then they have resilience and remain disciplined.\nconclusion: Nevaeh does not persevere under pressure.\n\nfact1: Nevaeh does not follow her conscience.\nfact2: Nevaeh does not persevere under pressure.\nrule: If Nevaeh demonstrates bravery, then she either follows her conscience or perseveres under pressure (but not both).\nconclusion: Nevaeh does not demonstrate bravery.\n\nfact1: Nevaeh does not take risks.\nfact2: Nevaeh does not demonstrate bravery.\nrule: If Nevaeh either makes sacrifices or takes risks (but not both), then she demonstrates bravery.\nconclusion: Nevaeh does not make sacrifices.\n\nfact1: Nevaeh does not make sacrifices.\nrule: Everyone makes sacrifices or faces adversity.\nconclusion: Nevaeh faces adversity.\n\nfact1: Nevaeh faces adversity.\nrule: If Nevaeh faces adversity, then she displays compassion and acts selflessly.\nconclusion: Nevaeh displays compassion.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Nevaeh does not show loyalty. The correct option is: C.",
    "context": "Everyone makes sacrifices or faces adversity. Nevaeh does not act with integrity. If someone perseveres under pressure, then they have resilience and remain disciplined. If Nevaeh demonstrates bravery, then she either follows her conscience or perseveres under pressure (but not both). If someone follows their conscience, then they will act with integrity. If Nevaeh faces adversity, then she displays compassion and acts selflessly. Nevaeh does not have resilience. Gael does not have resilience. All humans who have empathy display compassion and understand others. If Nevaeh either makes sacrifices or takes risks (but not both), then she demonstrates bravery. Nevaeh does not take risks. If Gael faces adversity, then she displays compassion and acts selflessly.",
    "nl2fol": {
      "Everyone makes sacrifices or faces adversity.": "∀x (makes_sacrifices(x) ∨ face_adversity(x))",
      "Nevaeh does not act with integrity.": "¬acts_with_integrity(Nevaeh)",
      "If someone perseveres under pressure, then they have resilience and remain disciplined.": "∀x (perseveres_under_pressure(x) → (has_resilience(x) ∧ remains_disciplined(x)))",
      "If Nevaeh demonstrates bravery, then she either follows her conscience or perseveres under pressure (but not both).": "demonstrates_bravery(Nevaeh) → (follows_conscience(Nevaeh) ⊕ perseveres_under_pressure(Nevaeh))",
      "If someone follows their conscience, then they will act with integrity.": "∀x (follows_conscience(x) → acts_with_integrity(x))",
      "If Nevaeh faces adversity, then she displays compassion and acts selflessly.": "face_adversity(Nevaeh) → (display_compassion(Nevaeh) ∧ act_selflessly(Nevaeh))",
      "Nevaeh does not have resilience.": "¬has_resilience(Nevaeh)",
      "Gael does not have resilience.": "¬has_resilience(Gael)",
      "All humans who have empathy display compassion and understand others.": "∀x (has_empathy(x) → (display_compassion(x) ∧ understand_others(x)))",
      "If Nevaeh either makes sacrifices or takes risks (but not both), then she demonstrates bravery.": "(makes_sacrifices(Nevaeh) ⊕ takes_risks(Nevaeh)) → demonstrates_bravery(Nevaeh)",
      "Nevaeh does not take risks.": "¬takes_risks(Nevaeh)",
      "If Gael faces adversity, then she displays compassion and acts selflessly.": "face_adversity(Gael) → (display_compassion(Gael) ∧ act_selflessly(Gael))"
    },
    "conclusion_fol": "¬show_loyalty(Nevaeh)"
  },
  {
    "id": 447,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Damir cannot become a botany expert.",
    "reasoning": "fact1: Damir does not value conservation.\nrule: Damir values conservation or enjoys outdoor activities.\nconclusion: Damir enjoys outdoor activities.\n\nfact1: Damir enjoys outdoor activities.\nrule: Anyone who enjoys outdoor activities or captures landscapes is likely to pursue nature photography.\nconclusion: Damir pursues nature photography.\n\nfact1: Damir preserves habitats.\nrule: Damir either preserves habitats or explores ecosystems, but not both.\nconclusion: Damir does not explore ecosystems.\n\nfact1: Damir does not appreciate nature.\nrule: If someone collects plant samples, then they appreciate nature.\nconclusion: Damir does not collect plant samples.\n\nfact1: Damir pursues nature photography.\nfact2: Damir does not collect plant samples.\nrule: If Damir pursues nature photography, then he either ventures into the wilderness or collects plant samples (or both).\nconclusion: Damir ventures into the wilderness.\n\nfact1: Damir ventures into the wilderness.\nrule: If Damir ventures into the wilderness, then he will discover new species.\nconclusion: Damir discovers a new species.\n\nfact1: Damir discovers a new species.\nfact2: Damir does not explore ecosystems.\nrule: If Damir discovers a new species, then he either explores ecosystems or pursues biological research, but not both.\nconclusion: Damir pursues biological research.\n\nfact1: Damir pursues biological research.\nfact2: Damir does not contribute to environmental science.\nrule: If Damir pursues biological research, then he either studies plant species or contributes to environmental science.\nconclusion: Damir studies plant species.\n\nfact1: Damir studies plant species.\nrule: If Damir studies plant species, then he can become a botany expert.\nconclusion: Damir cannot become a botany expert.\n\nTherefore, it is false that Damir cannot become a botany expert. The correct option is: B.",
    "context": "Anyone who enjoys outdoor activities or captures landscapes is likely to pursue nature photography. If Damir has curiosity or seeks adventure, then he will venture into the wilderness. Damir does not value conservation. Damir either preserves habitats or explores ecosystems, but not both. Damir does not contribute to environmental science. If Damir pursues nature photography, then he either ventures into the wilderness or collects plant samples (or both). If Damir ventures into the wilderness, then he will discover new species. Damir values conservation or enjoys outdoor activities. Damir preserves habitats. If Damir pursues biological research, then he either studies plant species or contributes to environmental science. If someone collects plant samples, then they appreciate nature. If Damir studies plant species, then he can become a botany expert. Damir does not appreciate nature. If Damir conducts field work, then he either collects plant samples or documents wildlife, but not both. If Damir discovers a new species, then he either explores ecosystems or pursues biological research, but not both.",
    "nl2fol": {
      "Anyone who enjoys outdoor activities or captures landscapes is likely to pursue nature photography.": "∀x ((enjoy_outdoor_activities(x) ∨ capture_landscapes(x)) → pursue_nature_photography(x))",
      "If Damir has curiosity or seeks adventure, then he will venture into the wilderness.": "(has_curiosity(Damir) ∨ seeks_adventure(Damir)) → venture_into_wilderness(Damir)",
      "Damir does not value conservation.": "¬values_conservation(Damir)",
      "Damir either preserves habitats or explores ecosystems, but not both.": "preserves_habitats(Damir) ⊕ explore_ecosystems(Damir)",
      "Damir does not contribute to environmental science.": "¬contribute_to_environmental_science(Damir)",
      "If Damir pursues nature photography, then he either ventures into the wilderness or collects plant samples (or both).": "pursue_nature_photography(Damir) → (venture_into_wilderness(Damir) ∨ collect_plant_samples(Damir))",
      "If Damir ventures into the wilderness, then he will discover new species.": "venture_into_wilderness(Damir) → discover_new_species(Damir)",
      "Damir values conservation or enjoys outdoor activities.": "values_conservation(Damir) ∨ enjoy_outdoor_activities(Damir)",
      "Damir preserves habitats.": "preserves_habitats(Damir)",
      "If Damir pursues biological research, then he either studies plant species or contributes to environmental science.": "pursue_biological_research(Damir) → (study_plant_species(Damir) ∨ contribute_to_environmental_science(Damir))",
      "If someone collects plant samples, then they appreciate nature.": "∀x (collect_plant_samples(x) → appreciate_nature(x))",
      "If Damir studies plant species, then he can become a botany expert.": "study_plant_species(Damir) → become_a_botany_expert(Damir)",
      "Damir does not appreciate nature.": "¬appreciate_nature(Damir)",
      "If Damir conducts field work, then he either collects plant samples or documents wildlife, but not both.": "conduct_field_work(Damir) → (collect_plant_samples(Damir) ⊕ document_wildlife(Damir))",
      "If Damir discovers a new species, then he either explores ecosystems or pursues biological research, but not both.": "discover_new_species(Damir) → (explore_ecosystems(Damir) ⊕ pursue_biological_research(Damir))"
    },
    "conclusion_fol": "¬become_a_botany_expert(Damir)"
  },
  {
    "id": 448,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Astrid is cowardly.",
    "reasoning": "fact1: Astrid does not avoid risks.\nrule: Astrid is either a risk-taker and avoids being strategic, or she is strategic and avoids taking risks.\nconclusion: Astrid is strategic.\n\nfact1: Astrid does not hold authority.\nrule: Astrid is either experienced or holds authority.\nconclusion: Astrid is experienced.\n\nfact1: Astrid is experienced.\nfact2: Astrid is strategic.\nrule: If Astrid is experienced, then she is either strategic or has combat skills, but not both.\nconclusion: Astrid does not have combat skills.\n\nfact1: Astrid does not have combat skills.\nfact2: Astrid does not gain victory.\nrule: If Astrid is well-trained or has combat skills (but not both), then she will gain victory.\nconclusion: Astrid is not well-trained.\n\nfact1: Astrid does not pursue peace.\nrule: Astrid either pursues peace or engages in battles, but these two paths do not often intersect.\nconclusion: Astrid engages in battles.\n\nfact1: Astrid is not well-trained.\nfact2: Astrid will not win battles.\nrule: If Astrid is well-trained or shows bravery, then she will win battles.\nconclusion: Astrid does not show bravery.\n\nfact1: Astrid engages in battles.\nfact2: Astrid does not show bravery.\nrule: If Astrid engages in battles, then she either shows bravery or is fearless (or both).\nconclusion: Astrid is fearless.\n\nfact1: Astrid is fearless.\nrule: Astrid is either fearless or cowardly, but not both.\nconclusion: Astrid is cowardly.\n\nTherefore, it is false that Astrid is cowardly. The correct option is: B.",
    "context": "If Astrid is respected by others, then she makes quick decisions and is strategic. If Astrid is well-trained or shows bravery, then she will win battles. Astrid either pursues peace or engages in battles, but these two paths do not often intersect. Astrid is either a risk-taker and avoids being strategic, or she is strategic and avoids taking risks. If Astrid faces dangers, then she either shows bravery or leads warriors (or both). Jeremiah does not pursue peace. If Jeremiah is well-trained or shows bravery, then she will win battles. Tinsley does not gain victory. If Astrid leads triumphantly, then she has a strong will and engages in battles. Astrid does not gain victory. If Astrid is experienced, then she is either strategic or has combat skills, but not both. Astrid does not avoid risks. Tinsley will not win battles. If Tinsley is well-trained or has combat skills (but not both), then she will gain victory. If someone either wields swords or throws axes (but not both), then they have combat skills. If Astrid is well-trained or has combat skills (but not both), then she will gain victory. Astrid is either fearless or cowardly, but not both. Astrid is either experienced or holds authority. Astrid does not pursue peace. Ana is either fearless or cowardly, but not both. Tinsley does not avoid risks. If Astrid engages in battles, then she either shows bravery or is fearless (or both). Astrid will not win battles. Ana is either experienced or holds authority. Ana either pursues peace or engages in battles, but these two paths do not often intersect. Astrid does not hold authority.",
    "nl2fol": {
      "If Astrid is respected by others, then she makes quick decisions and is strategic.": "respected_by_others(Astrid) → (makes_quick_decisions(Astrid) ∧ is_strategic(Astrid))",
      "If Astrid is well-trained or shows bravery, then she will win battles.": "(is_well_trained(Astrid) ∨ show_bravery(Astrid)) → win_battles(Astrid)",
      "Astrid either pursues peace or engages in battles, but these two paths do not often intersect.": "pursue_peace(Astrid) ⊕ engage_battles(Astrid)",
      "Astrid is either a risk-taker and avoids being strategic, or she is strategic and avoids taking risks.": "avoids_risks(Astrid) ⊕ is_strategic(Astrid)",
      "If Astrid faces dangers, then she either shows bravery or leads warriors (or both).": "face_dangers(Astrid) → (show_bravery(Astrid) ∨ lead_warriors(Astrid))",
      "Jeremiah does not pursue peace.": "¬pursue_peace(Jeremiah)",
      "If Jeremiah is well-trained or shows bravery, then she will win battles.": "(is_well_trained(Jeremiah) ∨ show_bravery(Jeremiah)) → win_battles(Jeremiah)",
      "Tinsley does not gain victory.": "¬gain_victory(Tinsley)",
      "If Astrid leads triumphantly, then she has a strong will and engages in battles.": "leads_triumphantly(Astrid) → (has_strong_will(Astrid) ∧ engage_battles(Astrid))",
      "Astrid does not gain victory.": "¬gain_victory(Astrid)",
      "If Astrid is experienced, then she is either strategic or has combat skills, but not both.": "is_experienced(Astrid) → (is_strategic(Astrid) ⊕ has_combat_skills(Astrid))",
      "Astrid does not avoid risks.": "¬avoids_risks(Astrid)",
      "Tinsley will not win battles.": "¬win_battles(Tinsley)",
      "If Tinsley is well-trained or has combat skills (but not both), then she will gain victory.": "(is_well_trained(Tinsley) ⊕ has_combat_skills(Tinsley)) → gain_victory(Tinsley)",
      "If someone either wields swords or throws axes (but not both), then they have combat skills.": "∀x ((wields_swords(x) ⊕ throws_axes(x)) → has_combat_skills(x))",
      "If Astrid is well-trained or has combat skills (but not both), then she will gain victory.": "(is_well_trained(Astrid) ⊕ has_combat_skills(Astrid)) → gain_victory(Astrid)",
      "Astrid is either fearless or cowardly, but not both.": "fearless(Astrid) ⊕ cowardly(Astrid)",
      "Astrid is either experienced or holds authority.": "is_experienced(Astrid) ∨ hold_authority(Astrid)",
      "Astrid does not pursue peace.": "¬pursue_peace(Astrid)",
      "Ana is either fearless or cowardly, but not both.": "fearless(Ana) ⊕ cowardly(Ana)",
      "Tinsley does not avoid risks.": "¬avoids_risks(Tinsley)",
      "If Astrid engages in battles, then she either shows bravery or is fearless (or both).": "engage_battles(Astrid) → (show_bravery(Astrid) ∨ fearless(Astrid))",
      "Astrid will not win battles.": "¬win_battles(Astrid)",
      "Ana is either experienced or holds authority.": "is_experienced(Ana) ∨ hold_authority(Ana)",
      "Ana either pursues peace or engages in battles, but these two paths do not often intersect.": "pursue_peace(Ana) ⊕ engage_battles(Ana)",
      "Astrid does not hold authority.": "¬hold_authority(Astrid)"
    },
    "conclusion_fol": "cowardly(Astrid)"
  },
  {
    "id": 449,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kevin cares about conservation.",
    "reasoning": "fact1: Kevin has a PhD.\nfact2: Kevin writes books.\nrule: If Kevin has a PhD, then he either collects data alongside rivers or writes books (but not both).\nconclusion: Kevin does not collect data alongside rivers.\n\nfact1: Kevin conducts field research.\nfact2: Kevin does not collect data alongside rivers.\nrule: If someone either conducts field research or collects data alongside rivers (but not both), then they work outdoors.\nconclusion: Kevin works outdoors.\n\nfact1: Kevin pursues artistic passions.\nrule: Kevin either pursues artistic passions or has scientific interests, but not both.\nconclusion: Kevin does not have scientific interests.\n\nfact1: Kevin works outdoors.\nfact2: Kevin does not have scientific interests.\nrule: If Kevin works outdoors, then he either studies marine life or has scientific interests (or both).\nconclusion: Kevin studies marine life.\n\nfact1: Kevin studies marine life.\nrule: For all humans, if they study marine life or love birds (or both), then they care about conservation.\nconclusion: Kevin cares about conservation.\n\nTherefore, it is true that Kevin cares about conservation. The correct option is: A.",
    "context": "If Kevin has a PhD, then he either collects data alongside rivers or writes books (but not both). For all humans, if they study marine life or love birds (or both), then they care about conservation. Kevin writes books. If someone either conducts field research or collects data alongside rivers (but not both), then they work outdoors. Kevin conducts field research. If Kevin works outdoors, then he either studies marine life or has scientific interests (or both). Kevin either pursues artistic passions or has scientific interests, but not both. Kevin pursues artistic passions. Kevin has a PhD.",
    "nl2fol": {
      "If Kevin has a PhD, then he either collects data alongside rivers or writes books (but not both).": "has_phd(Kevin) → (collect_data_alongside_rivers(Kevin) ⊕ write_books(Kevin))",
      "For all humans, if they study marine life or love birds (or both), then they care about conservation.": "∀x ((study_marine_life(x) ∨ love_birds(x)) → care_about_conservation(x))",
      "Kevin writes books.": "write_books(Kevin)",
      "If someone either conducts field research or collects data alongside rivers (but not both), then they work outdoors.": "∀x ((conduct_field_research(x) ⊕ collect_data_alongside_rivers(x)) → work_outdoors(x))",
      "Kevin conducts field research.": "conduct_field_research(Kevin)",
      "If Kevin works outdoors, then he either studies marine life or has scientific interests (or both).": "work_outdoors(Kevin) → (study_marine_life(Kevin) ∨ have_scientific_interests(Kevin))",
      "Kevin either pursues artistic passions or has scientific interests, but not both.": "pursue_artistic_passions(Kevin) ⊕ have_scientific_interests(Kevin)",
      "Kevin pursues artistic passions.": "pursue_artistic_passions(Kevin)",
      "Kevin has a PhD.": "has_phd(Kevin)"
    },
    "conclusion_fol": "care_about_conservation(Kevin)"
  },
  {
    "id": 450,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Vance is innovative.",
    "reasoning": "fact1: Vance makes sound judgments.\nfact2: Vance does not think carefully.\nrule: Everyone who makes sound judgments either plans ahead or thinks carefully (or both).\nconclusion: Vance plans ahead.\n\nfact1: Vance plans ahead.\nrule: Anyone who plans ahead values stability.\nconclusion: Vance values stability.\n\nfact1: Vance values stability.\nrule: Vance is either a thrill seeker or values stability, but not both.\nconclusion: Vance is not a thrill seeker.\n\nfact1: Vance is not open to new experiences.\nfact2: Vance does not take risks.\nrule: If Vance is a forward thinker or open to new experiences, then he will take risks.\nconclusion: Vance is not a forward thinker.\n\nfact1: Vance is not a thrill seeker.\nfact2: Vance is not a forward thinker.\nrule: If Vance is either impulsive or a thrill seeker (but not both), then he is a forward thinker.\nconclusion: Vance is not impulsive.\n\nfact1: Vance is not impulsive.\nfact2: Vance is cautious.\nrule: If Vance is either impulsive or cautious (but not both), then he is innovative.\nconclusion: Vance is innovative.\n\nTherefore, it is true that Vance is innovative. The correct option is: A.",
    "context": "Vance makes sound judgments. Vance is either a thrill seeker or values stability, but not both. If Vance is either impulsive or a thrill seeker (but not both), then he is a forward thinker. Anyone who plans ahead values stability. If Vance is spontaneous, then he is either adaptable or a forward thinker (but not both). Vance is not open to new experiences. Vance does not take risks. Everyone who makes sound judgments either plans ahead or thinks carefully (or both). Vance does not think carefully. If Vance is a forward thinker or open to new experiences, then he will take risks. If Vance is either impulsive or cautious (but not both), then he is innovative. If Vance travels widely or tries new things, then he is a thrill seeker. Vance is cautious.",
    "nl2fol": {
      "Vance makes sound judgments.": "makes_sound_judgments(Vance)",
      "Vance is either a thrill seeker or values stability, but not both.": "thrill_seeker(Vance) ⊕ values_stability(Vance)",
      "If Vance is either impulsive or a thrill seeker (but not both), then he is a forward thinker.": "(impulsive(Vance) ⊕ thrill_seeker(Vance)) → forward_thinker(Vance)",
      "Anyone who plans ahead values stability.": "∀x (plans_ahead(x) → values_stability(x))",
      "If Vance is spontaneous, then he is either adaptable or a forward thinker (but not both).": "spontaneous(Vance) → (adaptable(Vance) ⊕ forward_thinker(Vance))",
      "Vance is not open to new experiences.": "¬open_to_experience(Vance)",
      "Vance does not take risks.": "¬takes_risks(Vance)",
      "Everyone who makes sound judgments either plans ahead or thinks carefully (or both).": "∀x (makes_sound_judgments(x) → (plans_ahead(x) ∨ thinks_carefully(x)))",
      "Vance does not think carefully.": "¬thinks_carefully(Vance)",
      "If Vance is a forward thinker or open to new experiences, then he will take risks.": "(forward_thinker(Vance) ∨ open_to_experience(Vance)) → takes_risks(Vance)",
      "If Vance is either impulsive or cautious (but not both), then he is innovative.": "(impulsive(Vance) ⊕ cautious(Vance)) → innovative(Vance)",
      "If Vance travels widely or tries new things, then he is a thrill seeker.": "(travels_widely(Vance) ∨ tries_new_things(Vance)) → thrill_seeker(Vance)",
      "Vance is cautious.": "cautious(Vance)"
    },
    "conclusion_fol": "innovative(Vance)"
  },
  {
    "id": 451,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lane is loyal.",
    "reasoning": "fact1: Lane values privacy.\nrule: For anyone, valuing privacy and seeking fame are mutually exclusive.\nconclusion: Lane does not seek fame.\n\nfact1: Lane does not seek fame.\nrule: For everyone, being humble and seeking fame are mutually exclusive.\nconclusion: Lane is humble.\n\nfact1: Lane is humble.\nfact2: Lane is charismatic.\nrule: If Lane is humble, then he is either well-reputed or charismatic, but not both.\nconclusion: Lane does not have a good reputation.\n\nfact1: Lane does not achieve success.\nrule: If Lane is admired by his peers, then he achieves success.\nconclusion: Lane is not admired by his peers.\n\nfact1: Lane is dedicated.\nfact2: Lane is not admired by his peers.\nrule: Everyone who is dedicated is either respected or admired by their peers (or both).\nconclusion: Lane is respected.\n\nfact1: Lane does not have a good reputation.\nrule: If Lane is either dishonorable or has integrity, then he will have a good reputation.\nconclusion: Lane is not dishonorable.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Lane is loyal. The correct option is: C.",
    "context": "Lane values privacy. For anyone, valuing privacy and seeking fame are mutually exclusive. If Lane works hard, then he either gains recognition or is admired by his peers (or both). Lane is charismatic. Lane is dedicated. Lane does not achieve success. If Lane is humble, then he is either well-reputed or charismatic, but not both. If Lane is either dishonorable or has integrity, then he will have a good reputation. Lane either acts with honor or is dishonorable. For everyone, being humble and seeking fame are mutually exclusive. If Lane is admired by his peers, then he achieves success. Everyone who is dedicated is either respected or admired by their peers (or both).",
    "nl2fol": {
      "Lane values privacy.": "values_privacy(Lane)",
      "For anyone, valuing privacy and seeking fame are mutually exclusive.": "∀x (values_privacy(x) ⊕ seeks_fame(x))",
      "If Lane works hard, then he either gains recognition or is admired by his peers (or both).": "works_hard(Lane) → (gains_recognition(Lane) ∨ admired_by_peers(Lane))",
      "Lane is charismatic.": "is_charismatic(Lane)",
      "Lane is dedicated.": "dedicated(Lane)",
      "Lane does not achieve success.": "¬achieves_success(Lane)",
      "If Lane is humble, then he is either well-reputed or charismatic, but not both.": "is_humble(Lane) → (has_good_reputation(Lane) ⊕ is_charismatic(Lane))",
      "If Lane is either dishonorable or has integrity, then he will have a good reputation.": "(dishonorable(Lane) ∨ has_integrity(Lane)) → has_good_reputation(Lane)",
      "Lane either acts with honor or is dishonorable.": "acts_with_honor(Lane) ∨ dishonorable(Lane)",
      "For everyone, being humble and seeking fame are mutually exclusive.": "∀x (is_humble(x) ⊕ seeks_fame(x))",
      "If Lane is admired by his peers, then he achieves success.": "admired_by_peers(Lane) → achieves_success(Lane)",
      "Everyone who is dedicated is either respected or admired by their peers (or both).": "∀x (dedicated(x) → (respected(x) ∨ admired_by_peers(x)))"
    },
    "conclusion_fol": "loyal(Lane)"
  },
  {
    "id": 452,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Evelyn is not inspirational.",
    "reasoning": "fact1: Evelyn has raised a family.\nrule: Anyone who has traveled widely or raised a family has life experience.\nconclusion: Evelyn has life experience.\n\nfact1: Evelyn does not set goals.\nrule: Evelyn sets goals or is determined.\nconclusion: Evelyn is determined.\n\nfact1: Evelyn is determined.\nrule: If Evelyn is determined, then she has found success and earned recognition.\nconclusion: Evelyn has found success.\n\nfact1: Evelyn has overcome adversity.\nfact2: Evelyn has found success.\nrule: If Evelyn has overcome adversity, then she has either lived through hardship or found success (but not both).\nconclusion: Evelyn did not live through hardship.\n\nfact1: Evelyn has life experience.\nfact2: Evelyn is a public figure.\nrule: If Evelyn has life experience, then she is either a public figure or an author (but not both).\nconclusion: Evelyn has not written a book.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Evelyn is not inspirational. The correct option is: C.",
    "context": "If Luis is determined, then she has found success and earned recognition. Anyone who has traveled widely or raised a family has life experience. Everyone who leads by example either makes a positive impact or is determined (or both). Davian sets goals or is determined. Anyone who achieves their goals or makes a positive impact can find success. Evelyn is a public figure. For any person, if they have faced challenges and learned from mistakes, then they have life experience. If Evelyn is determined, then she has found success and earned recognition. Evelyn does not set goals. Evelyn has raised a family. If Evelyn has overcome adversity, then she has either lived through hardship or found success (but not both). Evelyn sets goals or is determined. Davian does not set goals. Davian is a public figure. If Evelyn has life experience, then she is either a public figure or an author (but not both). Davian has raised a family. Evelyn has overcome adversity.",
    "nl2fol": {
      "If Luis is determined, then she has found success and earned recognition.": "determined(Luis) → (has_found_success(Luis) ∧ earned_recognition(Luis))",
      "Anyone who has traveled widely or raised a family has life experience.": "∀x ((traveled_widely(x) ∨ raised_family(x)) → has_life_experience(x))",
      "Everyone who leads by example either makes a positive impact or is determined (or both).": "∀x (leads_by_example(x) → (makes_positive_impact(x) ∨ determined(x)))",
      "Davian sets goals or is determined.": "sets_goals(Davian) ∨ determined(Davian)",
      "Anyone who achieves their goals or makes a positive impact can find success.": "∀x ((achieved_goals(x) ∨ made_impact(x)) → has_found_success(x))",
      "Evelyn is a public figure.": "is_public_figure(Evelyn)",
      "For any person, if they have faced challenges and learned from mistakes, then they have life experience.": "∀x ((faced_challenges(x) ∧ learned_from_mistakes(x)) → has_life_experience(x))",
      "If Evelyn is determined, then she has found success and earned recognition.": "determined(Evelyn) → (has_found_success(Evelyn) ∧ earned_recognition(Evelyn))",
      "Evelyn does not set goals.": "¬sets_goals(Evelyn)",
      "Evelyn has raised a family.": "raised_family(Evelyn)",
      "If Evelyn has overcome adversity, then she has either lived through hardship or found success (but not both).": "has_overcome_adversity(Evelyn) → (lived_through_hardship(Evelyn) ⊕ has_found_success(Evelyn))",
      "Evelyn sets goals or is determined.": "sets_goals(Evelyn) ∨ determined(Evelyn)",
      "Davian does not set goals.": "¬set_goals(Davian)",
      "Davian is a public figure.": "public_figure(Davian)",
      "If Evelyn has life experience, then she is either a public figure or an author (but not both).": "has_life_experience(Evelyn) → (is_public_figure(Evelyn) ⊕ written_a_book(Evelyn))",
      "Davian has raised a family.": "raised_family(Davian)",
      "Evelyn has overcome adversity.": "has_overcome_adversity(Evelyn)"
    },
    "conclusion_fol": "¬inspirational(Evelyn)"
  },
  {
    "id": 453,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Puppy is highly adaptable.",
    "reasoning": "fact1: Puppy requires nurturing.\nrule: If Puppy requires nurturing, then it is rarely found and needs special care.\nconclusion: Puppy is rarely found.\n\nfact1: Puppy is rarely found.\nfact2: Puppy blossoms slowly.\nrule: If Puppy is rarely found or blossoms slowly, then it has delicate petals.\nconclusion: Puppy has delicate petals.\n\nfact1: Puppy grows in meadows.\nfact2: Puppy has delicate petals.\nrule: If Puppy grows in meadows, then it either forms a unique shape or has delicate petals, but not both.\nconclusion: Puppy does not form a unique shape.\n\nfact1: Puppy sways gently.\nfact2: Puppy does not form a unique shape.\nrule: If Puppy sways gently, then it either has vibrant colors or forms a unique shape (or both).\nconclusion: Puppy has vibrant colors.\n\nfact1: Puppy does not produce nectar.\nfact2: Puppy emits fragrance.\nrule: If Puppy either produces nectar or emits fragrance (but not both), then it attracts pollinators.\nconclusion: Puppy attracts pollinators.\n\nfact1: Puppy has vibrant colors.\nfact2: Puppy attracts pollinators.\nrule: If Puppy has vibrant colors, then it attracts pollinators and has deep roots.\nconclusion: Puppy has deep roots.\n\nfact1: Puppy has deep roots.\nfact2: Puppy thrives in harsh conditions.\nrule: If Puppy has deep roots, then it either thrives in harsh conditions or is highly adaptable, but not both.\nconclusion: Puppy is not highly adaptable.\n\nTherefore, it is false that Puppy is highly adaptable. The correct option is: B.",
    "context": "Puppy requires nurturing. Puppy does not produce nectar. If Puppy either produces nectar or emits fragrance (but not both), then it attracts pollinators. If Puppy sways gently, then it either has vibrant colors or forms a unique shape (or both). Puppy sways gently. Puppy blossoms slowly. Puppy emits fragrance. If Puppy is rarely found or blossoms slowly, then it has delicate petals. Any plant that blossoms in spring or is soft to touch has delicate petals. Puppy thrives in harsh conditions. If Puppy has vibrant colors, then it attracts pollinators and has deep roots. If Puppy requires nurturing, then it is rarely found and needs special care. If Puppy blooms seasonally, then it either grows in clusters or has vibrant colors (or both). Puppy grows in meadows. If Puppy grows in meadows, then it either forms a unique shape or has delicate petals, but not both. All plants with nectar attract pollinators. If Puppy has deep roots, then it either thrives in harsh conditions or is highly adaptable, but not both.",
    "nl2fol": {
      "Puppy requires nurturing.": "requires_nurturing(Puppy)",
      "Puppy does not produce nectar.": "¬produces_nectar(Puppy)",
      "If Puppy either produces nectar or emits fragrance (but not both), then it attracts pollinators.": "(produces_nectar(Puppy) ⊕ emits_fragrance(Puppy)) → attracts_pollinators(Puppy)",
      "If Puppy sways gently, then it either has vibrant colors or forms a unique shape (or both).": "sways_gently(Puppy) → (has_vibrant_colors(Puppy) ∨ forms_unique_shape(Puppy))",
      "Puppy sways gently.": "sways_gently(Puppy)",
      "Puppy blossoms slowly.": "blossoms_slowly(Puppy)",
      "Puppy emits fragrance.": "emits_fragrance(Puppy)",
      "If Puppy is rarely found or blossoms slowly, then it has delicate petals.": "(is_rarely_found(Puppy) ∨ blossoms_slowly(Puppy)) → has_delicate_petals(Puppy)",
      "Any plant that blossoms in spring or is soft to touch has delicate petals.": "∀x ((blossoms_in_spring(x) ∨ is_soft_to_touch(x)) → has_delicate_petals(x))",
      "Puppy thrives in harsh conditions.": "thrives_in_harsh_conditions(Puppy)",
      "If Puppy has vibrant colors, then it attracts pollinators and has deep roots.": "has_vibrant_colors(Puppy) → (attracts_pollinators(Puppy) ∧ has_deep_roots(Puppy))",
      "If Puppy requires nurturing, then it is rarely found and needs special care.": "requires_nurturing(Puppy) → (is_rarely_found(Puppy) ∧ needs_special_care(Puppy))",
      "If Puppy blooms seasonally, then it either grows in clusters or has vibrant colors (or both).": "bloom_seasonally(Puppy) → (grow_in_clusters(Puppy) ∨ has_vibrant_colors(Puppy))",
      "Puppy grows in meadows.": "grows_in_meadows(Puppy)",
      "If Puppy grows in meadows, then it either forms a unique shape or has delicate petals, but not both.": "grows_in_meadows(Puppy) → (forms_unique_shape(Puppy) ⊕ has_delicate_petals(Puppy))",
      "All plants with nectar attract pollinators.": "∀x (has_nectar(x) → attracts_pollinators(x))",
      "If Puppy has deep roots, then it either thrives in harsh conditions or is highly adaptable, but not both.": "has_deep_roots(Puppy) → (thrives_in_harsh_conditions(Puppy) ⊕ is_highly_adaptable(Puppy))"
    },
    "conclusion_fol": "is_highly_adaptable(Puppy)"
  },
  {
    "id": 454,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mira does not achieve professional success.",
    "reasoning": "fact1: Mira makes informed decisions.\nfact2: Mira does not drive business growth.\nrule: If Mira either makes informed decisions or is an entrepreneur, then she drives business growth.\nconclusion: Mira is an entrepreneur.\n\nfact1: Mira does not value her privacy.\nrule: Mira either values her privacy or connects with others, but no one does both to the fullest extent.\nconclusion: Mira connects with others.\n\nfact1: Mira is an entrepreneur.\nfact2: Mira does not have an adaptive nature.\nrule: If Mira is an entrepreneur, then she either takes calculated risks or has an adaptive nature, but not both.\nconclusion: Mira takes calculated risks.\n\nfact1: Mira takes calculated risks.\nrule: Everyone either takes calculated risks or has a strong vision, but these traits are not necessarily correlated.\nconclusion: Mira does not have a strong vision.\n\nfact1: Mira holds a leadership position.\nfact2: Mira makes a positive impact.\nrule: If Mira holds a leadership position, then she either inspires others or makes a positive impact (but not both).\nconclusion: Mira does not inspire others.\n\nfact1: Mira does not have a strong vision.\nfact2: Mira connects with others.\nrule: Anyone who has a strong vision or connects with others can be charismatic.\nconclusion: Mira is charismatic.\n\nfact1: Mira is charismatic.\nfact2: Mira is innovative.\nrule: If Mira is charismatic, then she is either a pioneering business leader or innovative (but not both).\nconclusion: Mira is not a pioneering business leader.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Mira does not achieve professional success. The correct option is: C.",
    "context": "Everyone either takes calculated risks or has a strong vision, but these traits are not necessarily correlated. Mira makes informed decisions. Mira does not drive business growth. If Mira holds a leadership position, then she either inspires others or makes a positive impact (but not both). Mira does not value her privacy. Mira does not have an adaptive nature. If Mira is an entrepreneur, then she either takes calculated risks or has an adaptive nature, but not both. Mira holds a leadership position. If Mira is charismatic, then she is either a pioneering business leader or innovative (but not both). Mira is innovative. If Lala is an entrepreneur, then she either takes calculated risks or has an adaptive nature, but not both. Mira either values her privacy or connects with others, but no one does both to the fullest extent. Anyone who has a strong vision or connects with others can be charismatic. If Mira pursues goals, then she either motivates teams or has a strong vision. Everyone who has confidence either is charismatic or builds strong teams. Mira makes a positive impact. If Mira either makes informed decisions or is an entrepreneur, then she drives business growth.",
    "nl2fol": {
      "Everyone either takes calculated risks or has a strong vision, but these traits are not necessarily correlated.": "∀x (takes_calculated_risks(x) ⊕ has_strong_vision(x))",
      "Mira makes informed decisions.": "makes_informed_decisions(Mira)",
      "Mira does not drive business growth.": "¬drives_business_growth(Mira)",
      "If Mira holds a leadership position, then she either inspires others or makes a positive impact (but not both).": "holds_leadership_position(Mira) → (inspire_others(Mira) ⊕ makes_positive_impact(Mira))",
      "Mira does not value her privacy.": "¬values_privacy(Mira)",
      "Mira does not have an adaptive nature.": "¬has_adaptive_nature(Mira)",
      "If Mira is an entrepreneur, then she either takes calculated risks or has an adaptive nature, but not both.": "entrepreneur(Mira) → (takes_calculated_risks(Mira) ⊕ has_adaptive_nature(Mira))",
      "Mira holds a leadership position.": "holds_leadership_position(Mira)",
      "If Mira is charismatic, then she is either a pioneering business leader or innovative (but not both).": "is_charismatic(Mira) → (pioneering_business_leader(Mira) ⊕ is_innovative(Mira))",
      "Mira is innovative.": "is_innovative(Mira)",
      "If Lala is an entrepreneur, then she either takes calculated risks or has an adaptive nature, but not both.": "entrepreneur(Lala) → (takes_calculated_risks(Lala) ⊕ has_adaptive_nature(Lala))",
      "Mira either values her privacy or connects with others, but no one does both to the fullest extent.": "values_privacy(Mira) ⊕ connects_with_others(Mira)",
      "Anyone who has a strong vision or connects with others can be charismatic.": "∀x ((has_strong_vision(x) ∨ connects_with_others(x)) → is_charismatic(x))",
      "If Mira pursues goals, then she either motivates teams or has a strong vision.": "pursues_goals(Mira) → (motivates_teams(Mira) ∨ has_strong_vision(Mira))",
      "Everyone who has confidence either is charismatic or builds strong teams.": "∀x (has_confidence(x) → (is_charismatic(x) ∨ builds_strong_teams(x)))",
      "Mira makes a positive impact.": "makes_positive_impact(Mira)",
      "If Mira either makes informed decisions or is an entrepreneur, then she drives business growth.": "(makes_informed_decisions(Mira) ⊕ entrepreneur(Mira)) → drives_business_growth(Mira)"
    },
    "conclusion_fol": "¬achieve_professional_success(Mira)"
  },
  {
    "id": 455,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amelie is educated or open to learning (or both).",
    "reasoning": "fact1: Amelie pursues personal growth.\nrule: If Amelie pursues personal growth, then she will attend workshops.\nconclusion: Amelie attends workshops.\n\nfact1: Amelie recognizes her own ignorance.\nfact2: Amelie embraces criticism.\nrule: If someone recognizes their own ignorance, then they either value knowledge or embrace criticism.\nconclusion: Amelie does not value knowledge.\n\nfact1: Amelie does not value knowledge.\nrule: Amelie values knowledge or listens critically.\nconclusion: Amelie listens critically.\n\nfact1: Amelie listens critically.\nfact2: Amelie asks questions.\nrule: If Amelie listens critically, then she either reads regularly or asks questions, but not both.\nconclusion: Amelie does not read regularly.\n\nfact1: Amelie travels frequently.\nfact2: Amelie attends workshops.\nrule: If Amelie travels frequently, then she either attends workshops or seeks new experiences (but not both).\nconclusion: Amelie does not seek new experiences.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Amelie is educated or open to learning (or both). The correct option is: C.",
    "context": "Amelie recognizes her own ignorance. If Amelie listens critically, then she either reads regularly or asks questions, but not both. If Amelie pursues personal growth, then she will attend workshops. Roselyn does not engage in self-reflection. If Amelie either tries new hobbies or meets new people (but not both), then she seeks new experiences. Amelie asks questions. If Demi travels frequently, then she either attends workshops or seeks new experiences (but not both). Amelie pursues personal growth. If Smiles pursues personal growth, then she will attend workshops. If someone recognizes their own ignorance, then they either value knowledge or embrace criticism. Amelie is educated if she values intellect. Demi recognizes her own ignorance. Anyone who accepts feedback or explores new ideas is open to learning. Smiles pursues personal growth. Smiles embraces criticism. Amelie travels frequently. If Amelie travels frequently, then she either attends workshops or seeks new experiences (but not both). If someone has curiosity, then they read regularly and explore new ideas. Smiles travels frequently. Amelie values knowledge or listens critically. Anyone who wants to improve themselves either seeks feedback or attends workshops (or both). Roselyn does not create art. Amelie embraces criticism.",
    "nl2fol": {
      "Amelie recognizes her own ignorance.": "recognizes_ignorance(Amelie)",
      "If Amelie listens critically, then she either reads regularly or asks questions, but not both.": "listens_critically(Amelie) → (reads_regularly(Amelie) ⊕ asks_questions(Amelie))",
      "If Amelie pursues personal growth, then she will attend workshops.": "pursues_personal_growth(Amelie) → attends_workshops(Amelie)",
      "Roselyn does not engage in self-reflection.": "¬engages_in_self_reflection(Roselyn)",
      "If Amelie either tries new hobbies or meets new people (but not both), then she seeks new experiences.": "(tries_new_hobbies(Amelie) ⊕ meets_new_people(Amelie)) → seeks_new_experiences(Amelie)",
      "Amelie asks questions.": "asks_questions(Amelie)",
      "If Demi travels frequently, then she either attends workshops or seeks new experiences (but not both).": "travels_frequently(Demi) → (attends_workshops(Demi) ⊕ seeks_new_experiences(Demi))",
      "Amelie pursues personal growth.": "pursues_personal_growth(Amelie)",
      "If Smiles pursues personal growth, then she will attend workshops.": "pursues_personal_growth(Smiles) → attends_workshops(Smiles)",
      "If someone recognizes their own ignorance, then they either value knowledge or embrace criticism.": "∀x (recognizes_ignorance(x) → (values_knowledge(x) ⊕ embraces_criticism(x)))",
      "Amelie is educated if she values intellect.": "values_intellect(Amelie) → educated(Amelie)",
      "Demi recognizes her own ignorance.": "recognizes_ignorance(Demi)",
      "Anyone who accepts feedback or explores new ideas is open to learning.": "∀x ((accepts_feedback(x) ∨ explores_new_ideas(x)) → open_to_learning(x))",
      "Smiles pursues personal growth.": "pursues_personal_growth(Smiles)",
      "Smiles embraces criticism.": "embraces_criticism(Smiles)",
      "Amelie travels frequently.": "travels_frequently(Amelie)",
      "If Amelie travels frequently, then she either attends workshops or seeks new experiences (but not both).": "travels_frequently(Amelie) → (attends_workshops(Amelie) ⊕ seeks_new_experiences(Amelie))",
      "If someone has curiosity, then they read regularly and explore new ideas.": "∀x (has_curiosity(x) → (reads_regularly(x) ∧ explores_new_ideas(x)))",
      "Smiles travels frequently.": "travel_frequently(Smiles)",
      "Amelie values knowledge or listens critically.": "values_knowledge(Amelie) ∨ listens_critically(Amelie)",
      "Anyone who wants to improve themselves either seeks feedback or attends workshops (or both).": "∀x (wants_to_improve(x) → (seeks_feedback(x) ∨ attends_workshops(x)))",
      "Roselyn does not create art.": "¬creates_art(Roselyn)",
      "Amelie embraces criticism.": "embraces_criticism(Amelie)"
    },
    "conclusion_fol": "educated(Amelie) ∨ open_to_learning(Amelie)"
  },
  {
    "id": 456,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Axel joins the Bolshevik party.",
    "reasoning": "fact1: Axel has charisma.\nfact2: Axel seeks influence.\nrule: If someone has charisma and seeks influence, then they can pursue political power.\nconclusion: Axel pursues political power.\n\nfact1: Axel pursues political power.\nrule: Axel either pursues political power or endorses capitalism, but not both.\nconclusion: Axel does not endorse capitalism.\n\nfact1: Axel works in a factory.\nfact2: Axel lives in poverty.\nrule: Anyone who works in a factory or lives in poverty can sympathize with workers.\nconclusion: Axel sympathizes with workers.\n\nfact1: Axel promotes justice.\nfact2: Axel values human rights.\nrule: For all humans, if they promote justice and value human rights, then they advocate for equality.\nconclusion: Axel advocates for equality.\n\nfact1: Axel sympathizes with workers.\nfact2: Axel advocates for equality.\nrule: Anyone who sympathizes with workers and advocates for equality supports the proletariat.\nconclusion: Axel supports the proletariat.\n\nfact1: Axel does not endorse capitalism.\nrule: Axel either endorses capitalism or believes in socialism, but not both.\nconclusion: Axel believes in socialism.\n\nfact1: Axel believes in socialism.\nfact2: Axel supports the proletariat.\nrule: If Axel believes in socialism and supports the proletariat, then he joins the Bolshevik party.\nconclusion: Axel joins the Bolshevik party.\n\nTherefore, it is true that Axel joins the Bolshevik party. The correct option is: A.",
    "context": "If someone has charisma and seeks influence, then they can pursue political power. Axel has charisma. Axel promotes justice. Axel either pursues political power or endorses capitalism, but not both. Oaklee promotes justice. For all humans, if they promote justice and value human rights, then they advocate for equality. If Axel hates injustice, then he sympathizes with workers and fights for freedom. If Axel fights injustice or seeks equality, then he supports the proletariat. Axel works in a factory. Axel either endorses capitalism or believes in socialism, but not both. Anyone who works in a factory or lives in poverty can sympathize with workers. Axel seeks influence. Axel lives in poverty. If Axel believes in socialism and supports the proletariat, then he joins the Bolshevik party. Axel values human rights. Anyone who sympathizes with workers and advocates for equality supports the proletariat.",
    "nl2fol": {
      "If someone has charisma and seeks influence, then they can pursue political power.": "∀x ((has_charisma(x) ∧ seeks_influence(x)) → pursue_political_power(x))",
      "Axel has charisma.": "has_charisma(Axel)",
      "Axel promotes justice.": "promotes_justice(Axel)",
      "Axel either pursues political power or endorses capitalism, but not both.": "pursue_political_power(Axel) ⊕ endorse_capitalism(Axel)",
      "Oaklee promotes justice.": "promotes_justice(Oaklee)",
      "For all humans, if they promote justice and value human rights, then they advocate for equality.": "∀x ((promotes_justice(x) ∧ values_human_rights(x)) → advocate_for_equality(x))",
      "If Axel hates injustice, then he sympathizes with workers and fights for freedom.": "hate_injustice(Axel) → (sympathize_with_workers(Axel) ∧ fight_for_freedom(Axel))",
      "If Axel fights injustice or seeks equality, then he supports the proletariat.": "(fight_injustice(Axel) ∨ seek_equality(Axel)) → support_the_proletariat(Axel)",
      "Axel works in a factory.": "works_in_factory(Axel)",
      "Axel either endorses capitalism or believes in socialism, but not both.": "endorse_capitalism(Axel) ⊕ believe_in_socialism(Axel)",
      "Anyone who works in a factory or lives in poverty can sympathize with workers.": "∀x ((works_in_factory(x) ∨ lives_in_poverty(x)) → sympathize_with_workers(x))",
      "Axel seeks influence.": "seeks_influence(Axel)",
      "Axel lives in poverty.": "lives_in_poverty(Axel)",
      "If Axel believes in socialism and supports the proletariat, then he joins the Bolshevik party.": "(believe_in_socialism(Axel) ∧ support_the_proletariat(Axel)) → join_the_Bolshevik_party(Axel)",
      "Axel values human rights.": "values_human_rights(Axel)",
      "Anyone who sympathizes with workers and advocates for equality supports the proletariat.": "∀x ((sympathize_with_workers(x) ∧ advocate_for_equality(x)) → support_the_proletariat(x))"
    },
    "conclusion_fol": "join_the_Bolshevik_party(Axel)"
  },
  {
    "id": 457,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mallory is dedicated.",
    "reasoning": "fact1: Mallory does not have hobbies.\nfact2: Mallory is not well-rounded.\nrule: If Mallory either balances her life or has hobbies (but not both), then she is well-rounded.\nconclusion: Mallory does not balance her life.\n\nfact1: Mallory does not balance her life.\nrule: Mallory either balances her life or is hard-working, but not both.\nconclusion: Mallory is hard-working.\n\nfact1: Mallory values knowledge.\nfact2: Mallory does not inspire others.\nrule: For anyone who values knowledge and is passionate about their work, they can inspire others.\nconclusion: Mallory is not passionate about her work.\n\nfact1: Mallory does not work independently.\nrule: Mallory is either respected by her peers or works independently, but not both.\nconclusion: Mallory is respected by her peers.\n\nfact1: Mallory is hard-working.\nfact2: Mallory makes new discoveries.\nrule: If Mallory is hard-working, then she publishes extensively and makes new discoveries.\nconclusion: Mallory has published extensively.\n\nfact1: Mallory is not passionate about her work.\nfact2: Mallory is respected by her peers.\nrule: All highly accomplished individuals are passionate about their work and respected by their peers.\nconclusion: Mallory is not highly accomplished.\n\nfact1: Mallory has published extensively.\nfact2: Mallory is not highly accomplished.\nrule: If Mallory has published extensively, then she is either famous or highly accomplished, but not both.\nconclusion: Mallory is famous.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Mallory is dedicated. The correct option is: C.",
    "context": "Mallory does not work independently. Kennedy does not inspire others. Mallory either balances her life or is hard-working, but not both. If Kennedy has published extensively, then she is either famous or highly accomplished, but not both. Kennedy does not work independently. Anyone who has expertise is either highly accomplished or receives awards (or both). Arlet values knowledge. All highly accomplished individuals are passionate about their work and respected by their peers. If Mallory has published extensively, then she is either famous or highly accomplished, but not both. Anyone who expands knowledge is either passionate about their work or contributes to society (or both). Mallory values knowledge. Mallory does not have hobbies. Mallory makes new discoveries. Mallory does not inspire others. Mallory contributes to her field or publishes extensively. For anyone who values knowledge and is passionate about their work, they can inspire others. If Mallory sets high goals, then she is either hard-working or seeks recognition (or both). Ocean is not well-rounded. If Mallory is hard-working, then she publishes extensively and makes new discoveries. If Mallory either balances her life or has hobbies (but not both), then she is well-rounded. Mallory is not well-rounded. Mallory is either respected by her peers or works independently, but not both. If Ocean is hard-working, then she publishes extensively and makes new discoveries.",
    "nl2fol": {
      "Mallory does not work independently.": "¬works_independently(Mallory)",
      "Kennedy does not inspire others.": "¬inspires_others(Kennedy)",
      "Mallory either balances her life or is hard-working, but not both.": "balances_life(Mallory) ⊕ hard_working(Mallory)",
      "If Kennedy has published extensively, then she is either famous or highly accomplished, but not both.": "published_extensively(Kennedy) → (famous(Kennedy) ⊕ highly_accomplished(Kennedy))",
      "Kennedy does not work independently.": "¬works_independently(Kennedy)",
      "Anyone who has expertise is either highly accomplished or receives awards (or both).": "∀x (has_expertise(x) → (highly_accomplished(x) ∨ receives_awards(x)))",
      "Arlet values knowledge.": "values_knowledge(Arlet)",
      "All highly accomplished individuals are passionate about their work and respected by their peers.": "∀x (highly_accomplished(x) → (passionate_about_work(x) ∧ respected_by_peers(x)))",
      "If Mallory has published extensively, then she is either famous or highly accomplished, but not both.": "published_extensively(Mallory) → (famous(Mallory) ⊕ highly_accomplished(Mallory))",
      "Anyone who expands knowledge is either passionate about their work or contributes to society (or both).": "∀x (expands_knowledge(x) → (passionate_about_work(x) ∨ contributes_society(x)))",
      "Mallory values knowledge.": "values_knowledge(Mallory)",
      "Mallory does not have hobbies.": "¬has_hobbies(Mallory)",
      "Mallory makes new discoveries.": "makes_new_discoveries(Mallory)",
      "Mallory does not inspire others.": "¬inspires_others(Mallory)",
      "Mallory contributes to her field or publishes extensively.": "contributes_to_field(Mallory) ∨ published_extensively(Mallory)",
      "For anyone who values knowledge and is passionate about their work, they can inspire others.": "∀x ((values_knowledge(x) ∧ passionate_about_work(x)) → inspires_others(x))",
      "If Mallory sets high goals, then she is either hard-working or seeks recognition (or both).": "sets_high_goals(Mallory) → (hard_working(Mallory) ∨ seeks_recognition(Mallory))",
      "Ocean is not well-rounded.": "¬is_well_rounded(Ocean)",
      "If Mallory is hard-working, then she publishes extensively and makes new discoveries.": "hard_working(Mallory) → (published_extensively(Mallory) ∧ makes_new_discoveries(Mallory))",
      "If Mallory either balances her life or has hobbies (but not both), then she is well-rounded.": "(balances_life(Mallory) ⊕ has_hobbies(Mallory)) → is_well_rounded(Mallory)",
      "Mallory is not well-rounded.": "¬is_well_rounded(Mallory)",
      "Mallory is either respected by her peers or works independently, but not both.": "respected_by_peers(Mallory) ⊕ works_independently(Mallory)",
      "If Ocean is hard-working, then she publishes extensively and makes new discoveries.": "hard_working(Ocean) → (published_extensively(Ocean) ∧ makes_new_discoveries(Ocean))"
    },
    "conclusion_fol": "dedicated(Mallory)"
  },
  {
    "id": 458,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Braden specializes in entomology.",
    "reasoning": "fact1: Braden does not pursue personal interests.\nrule: Braden either pursues personal interests or diligently contributes to his field, but not both.\nconclusion: Braden diligently contributes to his field.\n\nfact1: Braden diligently contributes to his field.\nrule: If Braden diligently contributes to his field, then he will build a lasting legacy.\nconclusion: Braden builds a lasting legacy.\n\nfact1: Braden builds a lasting legacy.\nrule: Braden either builds a lasting legacy or makes new discoveries, but these are not mutually exclusive.\nconclusion: Braden does not make new discoveries.\n\nfact1: Braden does not make new discoveries.\nrule: Braden gains recognition or makes new discoveries.\nconclusion: Braden gains recognition.\n\nfact1: Braden pursues research.\nfact2: Braden gains recognition.\nrule: If Braden pursues research, then he has an academic degree and gains recognition.\nconclusion: Braden has an academic degree.\n\nfact1: Braden has an academic degree.\nrule: Braden either studies other fields or has an academic degree, but not both.\nconclusion: Braden does not study other fields.\n\nfact1: Braden does not study other fields.\nrule: Either Braden specializes in entomology or he studies other fields, but not both.\nconclusion: Braden specializes in entomology.\n\nTherefore, it is true that Braden specializes in entomology. The correct option is: A.",
    "context": "Braden either builds a lasting legacy or makes new discoveries, but these are not mutually exclusive. Braden gains recognition or makes new discoveries. Braden either pursues personal interests or diligently contributes to his field, but not both. Either Lilly specializes in entomology or he studies other fields, but not both. Braden pursues research. Either Braden specializes in entomology or he studies other fields, but not both. Lilly pursues research. If Braden diligently contributes to his field, then he will build a lasting legacy. Braden either studies other fields or has an academic degree, but not both. Braden does not pursue personal interests. Lenora either builds a lasting legacy or makes new discoveries, but these are not mutually exclusive. If Braden pursues research, then he has an academic degree and gains recognition. Rio either pursues personal interests or diligently contributes to his field, but not both.",
    "nl2fol": {
      "Braden either builds a lasting legacy or makes new discoveries, but these are not mutually exclusive.": "build_lasting_legacy(Braden) ⊕ make_new_discoveries(Braden)",
      "Braden gains recognition or makes new discoveries.": "gain_recognition(Braden) ∨ make_new_discoveries(Braden)",
      "Braden either pursues personal interests or diligently contributes to his field, but not both.": "pursue_personal_interests(Braden) ⊕ diligently_contribute(Braden)",
      "Either Lilly specializes in entomology or he studies other fields, but not both.": "specialize_in_entomology(Lilly) ⊕ study_other_fields(Lilly)",
      "Braden pursues research.": "pursue_research(Braden)",
      "Either Braden specializes in entomology or he studies other fields, but not both.": "specialize_in_entomology(Braden) ⊕ study_other_fields(Braden)",
      "Lilly pursues research.": "pursue_research(Lilly)",
      "If Braden diligently contributes to his field, then he will build a lasting legacy.": "diligently_contribute(Braden) → build_lasting_legacy(Braden)",
      "Braden either studies other fields or has an academic degree, but not both.": "study_other_fields(Braden) ⊕ have_an_academic_degree(Braden)",
      "Braden does not pursue personal interests.": "¬pursue_personal_interests(Braden)",
      "Lenora either builds a lasting legacy or makes new discoveries, but these are not mutually exclusive.": "build_lasting_legacy(Lenora) ⊕ make_new_discoveries(Lenora)",
      "If Braden pursues research, then he has an academic degree and gains recognition.": "pursue_research(Braden) → (have_an_academic_degree(Braden) ∧ gain_recognition(Braden))",
      "Rio either pursues personal interests or diligently contributes to his field, but not both.": "pursue_personal_interests(Rio) ⊕ diligently_contribute(Rio)"
    },
    "conclusion_fol": "specialize_in_entomology(Braden)"
  },
  {
    "id": 459,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Delilah does not create unbreakable passwords.",
    "reasoning": "fact1: Delilah has strong problem-solving skills.\nfact2: Delilah has a proven track record.\nrule: If Delilah has strong problem-solving skills, then she works on high-profile projects and has a proven track record.\nconclusion: Delilah works on high-profile projects.\n\nfact1: Delilah cannot communicate complex ideas.\nrule: For Delilah, either she has deep knowledge of computer systems or she can communicate complex ideas, but not necessarily both.\nconclusion: Delilah has deep knowledge of computer systems.\n\nfact1: Delilah understands encryption.\nfact2: Delilah studies code patterns.\nrule: If someone understands encryption and studies code patterns, then they can excel in cryptography.\nconclusion: Delilah excels in cryptography.\n\nfact1: Delilah works on high-profile projects.\nfact2: Delilah has deep knowledge of computer systems.\nrule: If Delilah works on high-profile projects, then she either has deep knowledge of computer systems or master algorithms (but not both).\nconclusion: Delilah does not master algorithms.\n\nfact1: Delilah protects sensitive data.\nfact2: Delilah does not master algorithms.\nrule: If Delilah protects sensitive data, then she is either a skilled cybersecurity expert or masters algorithms (or both).\nconclusion: Delilah is a skilled cybersecurity expert.\n\nfact1: Delilah excels in cryptography.\nfact2: Delilah does not develop secure protocols.\nrule: Anyone who excels in cryptography either identifies system vulnerabilities or develops secure protocols (or both).\nconclusion: Delilah identifies system vulnerabilities.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Delilah does not create unbreakable passwords. The correct option is: C.",
    "context": "Delilah cannot communicate complex ideas. Delilah masters algorithms if she can crack complex codes. For Delilah, either she has deep knowledge of computer systems or she can communicate complex ideas, but not necessarily both. Delilah protects sensitive data. Delilah does not develop secure protocols. If someone understands encryption and studies code patterns, then they can excel in cryptography. If Delilah works on high-profile projects, then she either has deep knowledge of computer systems or master algorithms (but not both). Anyone who excels in cryptography either identifies system vulnerabilities or develops secure protocols (or both). If Delilah passes a hacking competition, then she either wins national awards or excels in cryptography (or both). Delilah understands encryption. Delilah studies code patterns. Delilah has a proven track record. Delilah has strong problem-solving skills. If Delilah protects sensitive data, then she is either a skilled cybersecurity expert or masters algorithms (or both). If Delilah has strong problem-solving skills, then she works on high-profile projects and has a proven track record.",
    "nl2fol": {
      "Delilah cannot communicate complex ideas.": "¬communicate_complex_ideas(Delilah)",
      "Delilah masters algorithms if she can crack complex codes.": "crack_complex_codes(Delilah) → master_algorithms(Delilah)",
      "For Delilah, either she has deep knowledge of computer systems or she can communicate complex ideas, but not necessarily both.": "communicate_complex_ideas(Delilah) ⊕ has_deep_knowledge_of_computer_systems(Delilah)",
      "Delilah protects sensitive data.": "protect_sensitive_data(Delilah)",
      "Delilah does not develop secure protocols.": "¬develop_secure_protocols(Delilah)",
      "If someone understands encryption and studies code patterns, then they can excel in cryptography.": "∀x ((understands_encryption(x) ∧ studies_code_patterns(x)) → excel_in_cryptography(x))",
      "If Delilah works on high-profile projects, then she either has deep knowledge of computer systems or master algorithms (but not both).": "work_on_high_profile_projects(Delilah) → (has_deep_knowledge_of_computer_systems(Delilah) ⊕ master_algorithms(Delilah))",
      "Anyone who excels in cryptography either identifies system vulnerabilities or develops secure protocols (or both).": "∀x (excel_in_cryptography(x) → (identify_system_vulnerabilities(x) ∨ develop_secure_protocols(x)))",
      "If Delilah passes a hacking competition, then she either wins national awards or excels in cryptography (or both).": "pass_hacking_competition(Delilah) → (win_national_awards(Delilah) ∨ excel_in_cryptography(Delilah))",
      "Delilah understands encryption.": "understands_encryption(Delilah)",
      "Delilah studies code patterns.": "studies_code_patterns(Delilah)",
      "Delilah has a proven track record.": "proven_track_record(Delilah)",
      "Delilah has strong problem-solving skills.": "strong_problem_solving_skills(Delilah)",
      "If Delilah protects sensitive data, then she is either a skilled cybersecurity expert or masters algorithms (or both).": "protect_sensitive_data(Delilah) → (master_algorithms(Delilah) ∨ skilled_cybersecurity_expert(Delilah))",
      "If Delilah has strong problem-solving skills, then she works on high-profile projects and has a proven track record.": "strong_problem_solving_skills(Delilah) → (work_on_high_profile_projects(Delilah) ∧ proven_track_record(Delilah))"
    },
    "conclusion_fol": "¬create_unbreakable_passwords(Delilah)"
  },
  {
    "id": 460,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mohammad contributes to science and improves human lives.",
    "reasoning": "fact1: Mohammad develops practical skills.\nrule: For Mohammad, either he develops practical skills or pursues knowledge, but not both.\nconclusion: Mohammad does not pursue knowledge.\n\nfact1: Mohammad does not explore nature.\nrule: Mohammad explores nature or studies diseases.\nconclusion: Mohammad studies diseases.\n\nfact1: Mohammad studies diseases.\nrule: If Mohammad studies diseases, then he will work on cures.\nconclusion: Mohammad works on cures.\n\nfact1: Mohammad works on cures.\nrule: If someone works on cures, then they improve human lives.\nconclusion: Mohammad improves human lives.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Mohammad contributes to science and improves human lives. The correct option is: C.",
    "context": "If Mohammad studies diseases, then he will work on cures. Mohammad works on cures if he has medical training. Mohammad develops practical skills. If Mohammad either reduces suffering or enhances wellbeing (but not both), then he improves human lives. If someone works on cures, then they improve human lives. Mohammad explores nature or studies diseases. Hallie does not explore nature. For Mohammad, either he develops practical skills or pursues knowledge, but not both. Mohammad does not explore nature. If Mohammad has passion, then he either pursues knowledge or makes discoveries.",
    "nl2fol": {
      "If Mohammad studies diseases, then he will work on cures.": "study_diseases(Mohammad) → work_on_cures(Mohammad)",
      "Mohammad works on cures if he has medical training.": "has_medical_training(Mohammad) → work_on_cures(Mohammad)",
      "Mohammad develops practical skills.": "develop_practical_skills(Mohammad)",
      "If Mohammad either reduces suffering or enhances wellbeing (but not both), then he improves human lives.": "(reduce_suffering(Mohammad) ⊕ enhance_wellbeing(Mohammad)) → improve_human_lives(Mohammad)",
      "If someone works on cures, then they improve human lives.": "∀x (work_on_cures(x) → improve_human_lives(x))",
      "Mohammad explores nature or studies diseases.": "explore_nature(Mohammad) ∨ study_diseases(Mohammad)",
      "Hallie does not explore nature.": "¬explore_nature(Hallie)",
      "For Mohammad, either he develops practical skills or pursues knowledge, but not both.": "develop_practical_skills(Mohammad) ⊕ pursue_knowledge(Mohammad)",
      "Mohammad does not explore nature.": "¬explore_nature(Mohammad)",
      "If Mohammad has passion, then he either pursues knowledge or makes discoveries.": "has_passion(Mohammad) → (pursue_knowledge(Mohammad) ∨ make_discoveries(Mohammad))"
    },
    "conclusion_fol": "contribute_to_science(Mohammad) ∧ improve_human_lives(Mohammad)"
  },
  {
    "id": 461,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Goofy is not determined.",
    "reasoning": "fact1: Goofy's personality is meticulous.\nrule: Goofy's personality is either spontaneous or meticulous, but not both.\nconclusion: Goofy is not spontaneous.\n\nfact1: Goofy is a perfectionist.\nfact2: Goofy is not spontaneous.\nrule: If Goofy is a perfectionist, then he is either creative or spontaneous, but not both.\nconclusion: Goofy is creative.\n\nfact1: Goofy is not reserved.\nrule: For Goofy's personality, it is either optimistic or reserved, but not both.\nconclusion: Goofy's personality is optimistic.\n\nfact1: Goofy's personality is optimistic.\nfact2: Goofy is not inspirational.\nrule: For all personality, if it is optimistic and has charisma, then it is inspirational.\nconclusion: Goofy does not have charisma.\n\nfact1: Goofy does not have charisma.\nfact2: Goofy does not stand out.\nrule: For every personality, if they are either successful or have charisma, then they stand out.\nconclusion: Goofy is not successful.\n\nfact1: Goofy is creative.\nfact2: Goofy is not successful.\nrule: If Goofy is creative and determined, then he is successful.\nconclusion: Goofy is not determined.\n\nTherefore, it is true that Goofy is not determined. The correct option is: A.",
    "context": "For all personality, if it is optimistic and has charisma, then it is inspirational. If Goofy is creative and determined, then he is successful. Goofy's personality is either spontaneous or meticulous, but not both. Goofy is a perfectionist. Goofy does not stand out. Goofy's personality is meticulous. Goofy is not reserved. For every personality, if they are either successful or have charisma, then they stand out. Goofy is not inspirational. For Goofy's personality, it is either optimistic or reserved, but not both. If Goofy is a perfectionist, then he is either creative or spontaneous, but not both.",
    "nl2fol": {
      "For all personality, if it is optimistic and has charisma, then it is inspirational.": "∀x ((is_optimistic(x) ∧ has_charisma(x)) → is_inspirational(x))",
      "If Goofy is creative and determined, then he is successful.": "(creative(Goofy) ∧ determined(Goofy)) → successful(Goofy)",
      "Goofy's personality is either spontaneous or meticulous, but not both.": "spontaneous(Goofy) ⊕ meticulous(Goofy)",
      "Goofy is a perfectionist.": "perfectionist(Goofy)",
      "Goofy does not stand out.": "¬stands_out(Goofy)",
      "Goofy's personality is meticulous.": "meticulous(Goofy)",
      "Goofy is not reserved.": "¬is_reserved(Goofy)",
      "For every personality, if they are either successful or have charisma, then they stand out.": "∀x ((successful(x) ⊕ has_charisma(x)) → stands_out(x))",
      "Goofy is not inspirational.": "¬is_inspirational(Goofy)",
      "For Goofy's personality, it is either optimistic or reserved, but not both.": "is_optimistic(Goofy) ⊕ is_reserved(Goofy)",
      "If Goofy is a perfectionist, then he is either creative or spontaneous, but not both.": "perfectionist(Goofy) → (creative(Goofy) ⊕ spontaneous(Goofy))"
    },
    "conclusion_fol": "¬determined(Goofy)"
  },
  {
    "id": 462,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lilly is reckless.",
    "reasoning": "fact1: Lilly does not stay safe.\nrule: If Lilly is discreet or avoids publicity, then she will stay safe.\nconclusion: Lilly does not avoid publicity.\n\nfact1: Lilly keeps secrets.\nfact2: Lilly does not avoid publicity.\nrule: Everyone who keeps secrets either lives a private life or avoids publicity (or both).\nconclusion: Lilly lives a private life.\n\nfact1: Lilly does not enjoy socializing.\nrule: Everyone values their privacy or enjoys socializing.\nconclusion: Lilly values her privacy.\n\nfact1: Lilly values her privacy.\nrule: Lilly either values her privacy or dresses well, but not both.\nconclusion: Lilly does not dress well.\n\nfact1: Lilly is confident.\nfact2: Lilly does not dress well.\nrule: If Lilly is confident, then she either has flair or dresses well, but not both.\nconclusion: Lilly has flair.\n\nfact1: Lilly lives a private life.\nrule: Lilly is either legendary or lives a private life, but not both.\nconclusion: Lilly is not legendary.\n\nfact1: Lilly is adventurous.\nfact2: Lilly has flair.\nrule: If Lilly is adventurous, then she is either charismatic or has flair, but not both.\nconclusion: Lilly is not charismatic.\n\nfact1: Lilly is not charismatic.\nfact2: Lilly is not legendary.\nrule: If Lilly is either reckless or charismatic (but not both), then she is legendary.\nconclusion: Lilly is reckless.\n\nTherefore, it is false that Lilly is reckless. The correct option is: B.",
    "context": "If Gabriela is either reckless or charismatic (but not both), then she is legendary. Lilly is confident. If Lilly is discreet or avoids publicity, then she will stay safe. Gabriela keeps secrets. Gabriela has intuition. Gabriela does not trust others. Everyone values their privacy or enjoys socializing. Lilly handles risk or is discreet. Guy either values her privacy or dresses well, but not both. Lilly is adventurous. If Lilly is either reckless or charismatic (but not both), then she is legendary. Lilly does not stay safe. If Lilly is confident, then she either has flair or dresses well, but not both. Lilly either values her privacy or dresses well, but not both. Everyone who keeps secrets either lives a private life or avoids publicity (or both). If Guy is discreet, then she either trusts others or has intuition (but not both). Lilly keeps secrets. Lilly is either legendary or lives a private life, but not both. Guy does not stay safe. Lilly does not enjoy socializing. If Lilly is adventurous, then she is either charismatic or has flair, but not both.",
    "nl2fol": {
      "If Gabriela is either reckless or charismatic (but not both), then she is legendary.": "(reckless(Gabriela) ⊕ charismatic(Gabriela)) → legendary(Gabriela)",
      "Lilly is confident.": "is_confident(Lilly)",
      "If Lilly is discreet or avoids publicity, then she will stay safe.": "(is_discreet(Lilly) ∨ avoids_publicity(Lilly)) → stays_safe(Lilly)",
      "Gabriela keeps secrets.": "keeps_secrets(Gabriela)",
      "Gabriela has intuition.": "has_intuition(Gabriela)",
      "Gabriela does not trust others.": "¬trusts_others(Gabriela)",
      "Everyone values their privacy or enjoys socializing.": "∀x (values_privacy(x) ∨ enjoys_socializing(x))",
      "Lilly handles risk or is discreet.": "handles_risk(Lilly) ∨ is_discreet(Lilly)",
      "Guy either values her privacy or dresses well, but not both.": "values_privacy(Guy) ⊕ dresses_well(Guy)",
      "Lilly is adventurous.": "is_adventurous(Lilly)",
      "If Lilly is either reckless or charismatic (but not both), then she is legendary.": "(reckless(Lilly) ⊕ charismatic(Lilly)) → legendary(Lilly)",
      "Lilly does not stay safe.": "¬stays_safe(Lilly)",
      "If Lilly is confident, then she either has flair or dresses well, but not both.": "is_confident(Lilly) → (has_flair(Lilly) ⊕ dresses_well(Lilly))",
      "Lilly either values her privacy or dresses well, but not both.": "values_privacy(Lilly) ⊕ dresses_well(Lilly)",
      "Everyone who keeps secrets either lives a private life or avoids publicity (or both).": "∀x (keeps_secrets(x) → (lives_privately(x) ∨ avoids_publicity(x)))",
      "If Guy is discreet, then she either trusts others or has intuition (but not both).": "is_discreet(Guy) → (trusts_others(Guy) ⊕ has_intuition(Guy))",
      "Lilly keeps secrets.": "keeps_secrets(Lilly)",
      "Lilly is either legendary or lives a private life, but not both.": "lives_privately(Lilly) ⊕ legendary(Lilly)",
      "Guy does not stay safe.": "¬stays_safe(Guy)",
      "Lilly does not enjoy socializing.": "¬enjoys_socializing(Lilly)",
      "If Lilly is adventurous, then she is either charismatic or has flair, but not both.": "is_adventurous(Lilly) → (has_flair(Lilly) ⊕ charismatic(Lilly))"
    },
    "conclusion_fol": "reckless(Lilly)"
  },
  {
    "id": 463,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Davis inspires a new generation.",
    "reasoning": "fact1: Davis thinks creatively.\nfact2: Davis embraces challenges.\nrule: Anyone who thinks creatively and embraces challenges can drive innovation.\nconclusion: Davis drives innovation.\n\nfact1: Davis does not pursue his passion.\nrule: Davis either dedicates his lifework or pursues his passion.\nconclusion: Davis dedicates his lifework to botany.\n\nfact1: Davis faces harsh criticism.\nrule: Davis either earns acclaim or faces harsh criticism, but not both.\nconclusion: Davis does not earn acclaim.\n\nfact1: Davis dedicates his lifework to botany.\nrule: If Davis dedicates his lifework to botany, then he collaborates with others and makes groundbreaking discoveries.\nconclusion: Davis makes groundbreaking discoveries.\n\nfact1: Davis does not earn acclaim.\nfact2: Davis does not gain recognition.\nrule: If Davis becomes an expert, then he either earns acclaim or gains recognition, but not both.\nconclusion: Davis did not become an expert.\n\nfact1: Davis did not become an expert.\nrule: If Davis studies extensively, then he will become an expert.\nconclusion: Davis does not study extensively.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Davis inspires a new generation. The correct option is: C.",
    "context": "Anyone who thinks creatively and embraces challenges can drive innovation. Davis either earns acclaim or faces harsh criticism, but not both. Nadia thinks creatively. Davis faces harsh criticism. Zoey either earns acclaim or faces harsh criticism, but not both. If Davis either reads widely or collects data (but not both), then he studies extensively. Zoey does not mentor students. If Davis focuses intensely, then he will become an expert. Nadia does not pursue his passion. For anyone, exploring nature and sharing knowledge can lead to driving innovation. Nadia embraces challenges. Davis thinks creatively. Davis does not gain recognition. Emilia either dedicates his lifework or pursues his passion. If Zoey becomes an expert, then he either earns acclaim or gains recognition, but not both. Davis either dedicates his lifework or pursues his passion. If Emilia studies extensively, then he can either make groundbreaking discoveries or inspire a new generation, but not both. If Davis dedicates his lifework to botany, then he collaborates with others and makes groundbreaking discoveries. Davis embraces challenges. Davis does not pursue his passion. If Emilia studies extensively, then he will become an expert. If Davis studies extensively, then he will become an expert. Anyone who explores rare species either makes groundbreaking discoveries or contributes to science (or both). If Davis becomes an expert, then he either earns acclaim or gains recognition, but not both.",
    "nl2fol": {
      "Anyone who thinks creatively and embraces challenges can drive innovation.": "∀x ((think_creatively(x) ∧ embrace_challenges(x)) → drive_innovation(x))",
      "Davis either earns acclaim or faces harsh criticism, but not both.": "earn_acclaim(Davis) ⊕ face_harsh_criticism(Davis)",
      "Nadia thinks creatively.": "thinks_creatively(Nadia)",
      "Davis faces harsh criticism.": "face_harsh_criticism(Davis)",
      "Zoey either earns acclaim or faces harsh criticism, but not both.": "earn_acclaim(Zoey) ⊕ face_harsh_criticism(Zoey)",
      "If Davis either reads widely or collects data (but not both), then he studies extensively.": "(read_widely(Davis) ⊕ collect_data(Davis)) → study_extensively(Davis)",
      "Zoey does not mentor students.": "¬mentors_students(Zoey)",
      "If Davis focuses intensely, then he will become an expert.": "focus_intensely(Davis) → become_expert(Davis)",
      "Nadia does not pursue his passion.": "¬pursue_passion(Nadia)",
      "For anyone, exploring nature and sharing knowledge can lead to driving innovation.": "∀x ((explore_nature(x) ∧ share_knowledge(x)) → drive_innovation(x))",
      "Nadia embraces challenges.": "embraces_challenges(Nadia)",
      "Davis thinks creatively.": "think_creatively(Davis)",
      "Davis does not gain recognition.": "¬gain_recognition(Davis)",
      "Emilia either dedicates his lifework or pursues his passion.": "pursue_passion(Emilia) ∨ dedicate_lifework(Emilia)",
      "If Zoey becomes an expert, then he either earns acclaim or gains recognition, but not both.": "become_expert(Zoey) → (earn_acclaim(Zoey) ⊕ gain_recognition(Zoey))",
      "Davis either dedicates his lifework or pursues his passion.": "pursue_passion(Davis) ∨ dedicate_lifework(Davis)",
      "If Emilia studies extensively, then he can either make groundbreaking discoveries or inspire a new generation, but not both.": "study_extensively(Emilia) → (make_groundbreaking_discoveries(Emilia) ⊕ inspire_new_generation(Emilia))",
      "If Davis dedicates his lifework to botany, then he collaborates with others and makes groundbreaking discoveries.": "dedicate_lifework(Davis) → (collaborate_with_others(Davis) ∧ make_groundbreaking_discoveries(Davis))",
      "Davis embraces challenges.": "embrace_challenges(Davis)",
      "Davis does not pursue his passion.": "¬pursue_passion(Davis)",
      "If Emilia studies extensively, then he will become an expert.": "study_extensively(Emilia) → become_expert(Emilia)",
      "If Davis studies extensively, then he will become an expert.": "study_extensively(Davis) → become_expert(Davis)",
      "Anyone who explores rare species either makes groundbreaking discoveries or contributes to science (or both).": "∀x (explore_rare_species(x) → (make_groundbreaking_discoveries(x) ∨ contribute_to_science(x)))",
      "If Davis becomes an expert, then he either earns acclaim or gains recognition, but not both.": "become_expert(Davis) → (earn_acclaim(Davis) ⊕ gain_recognition(Davis))"
    },
    "conclusion_fol": "inspire_new_generation(Davis)"
  },
  {
    "id": 464,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Abraham is a treasure looter.",
    "reasoning": "fact1: Abraham ignores rules.\nrule: If Abraham ignores rules, then he will desecrate landmarks.\nconclusion: Abraham desecrates landmarks.\n\nfact1: Abraham conducts research.\nfact2: Abraham does not become an expert.\nrule: If Abraham conducts research and learns from curators, then he becomes an expert.\nconclusion: Abraham does not learn from curators.\n\nfact1: Abraham does not learn from curators.\nfact2: Abraham does not appreciate artifacts.\nrule: Everyone who attends museum exhibits either learns from curators or appreciates artifacts (or both).\nconclusion: Abraham does not attend museum exhibits.\n\nfact1: Abraham reads history books.\nfact2: Abraham does not attend museum exhibits.\nrule: If Abraham either reads history books or attends museum exhibits (but not both), then he visits historical sites.\nconclusion: Abraham visits historical sites.\n\nfact1: Abraham visits historical sites.\nfact2: Abraham desecrates landmarks.\nrule: If Abraham visits historical sites, then he either protects heritage or desecrates landmarks, but not both.\nconclusion: Abraham does not protect heritage.\n\nfact1: Abraham preserves artifacts.\nfact2: Abraham does not respect cultural sites.\nrule: If Abraham preserves artifacts, then he either exploits historical sites or respects cultural sites, but not both.\nconclusion: Abraham exploits historical sites.\n\nfact1: Abraham exploits historical sites.\nfact2: Abraham does not protect heritage.\nrule: If Abraham exploits historical sites, then he is either a cultural vandal or protects heritage (or both).\nconclusion: Abraham is a cultural vandal.\n\nfact1: Abraham is an archaeologist.\nfact2: Abraham is a cultural vandal.\nrule: If Abraham is an archaeologist, then he is either a cultural vandal or a treasure preserver, but not both.\nconclusion: Abraham is not a treasure preserver.\n\nfact1: Abraham is not a treasure preserver.\nrule: Either Abraham is a treasure preserver or a treasure looter, but not both.\nconclusion: Abraham is a treasure looter.\n\nTherefore, it is true that Abraham is a treasure looter. The correct option is: A.",
    "context": "If Abraham visits historical sites, then he either protects heritage or desecrates landmarks, but not both. Tommy conducts research. Abraham preserves artifacts. If Abraham conducts research and learns from curators, then he becomes an expert. If Abraham exploits historical sites, then he is either a cultural vandal or protects heritage (or both). Abraham is an archaeologist. If Goofy visits historical sites, then he either protects heritage or desecrates landmarks, but not both. If Abraham either reads history books or attends museum exhibits (but not both), then he visits historical sites. If Abraham ignores rules, then he will desecrate landmarks. Either Abraham is a treasure preserver or a treasure looter, but not both. If Abraham is an archaeologist, then he is either a cultural vandal or a treasure preserver, but not both. Abraham does not appreciate artifacts. If Abraham values history or respects culture, then he can protect heritage. If Abraham preserves artifacts, then he either exploits historical sites or respects cultural sites, but not both. If Tommy exploits historical sites, then he is either a cultural vandal or protects heritage (or both). Everyone who attends museum exhibits either learns from curators or appreciates artifacts (or both). Abraham does not respect cultural sites. Abraham conducts research. Abraham reads history books. Abraham ignores rules. Abraham does not become an expert. If Abraham is a historian, then he is either a treasure preserver or a grave robber, but not both. If Abraham disregards rules, then he either exploits historical sites or faces consequences (or both). Abraham either explores ruins or visits historical sites.",
    "nl2fol": {
      "If Abraham visits historical sites, then he either protects heritage or desecrates landmarks, but not both.": "visits_historical_sites(Abraham) → (protect_heritage(Abraham) ⊕ desecrate_landmarks(Abraham))",
      "Tommy conducts research.": "conducts_research(Tommy)",
      "Abraham preserves artifacts.": "preserve_artifacts(Abraham)",
      "If Abraham conducts research and learns from curators, then he becomes an expert.": "(conducts_research(Abraham) ∧ learns_from_curators(Abraham)) → becomes_expert(Abraham)",
      "If Abraham exploits historical sites, then he is either a cultural vandal or protects heritage (or both).": "exploit_historical_sites(Abraham) → (cultural_vandal(Abraham) ∨ protect_heritage(Abraham))",
      "Abraham is an archaeologist.": "archaeologist(Abraham)",
      "If Goofy visits historical sites, then he either protects heritage or desecrates landmarks, but not both.": "visits_historical_sites(Goofy) → (protect_heritage(Goofy) ⊕ desecrate_landmarks(Goofy))",
      "If Abraham either reads history books or attends museum exhibits (but not both), then he visits historical sites.": "(reads_history_books(Abraham) ⊕ attends_museum_exhibits(Abraham)) → visits_historical_sites(Abraham)",
      "If Abraham ignores rules, then he will desecrate landmarks.": "ignores_rules(Abraham) → desecrate_landmarks(Abraham)",
      "Either Abraham is a treasure preserver or a treasure looter, but not both.": "treasure_preserver(Abraham) ⊕ treasure_looter(Abraham)",
      "If Abraham is an archaeologist, then he is either a cultural vandal or a treasure preserver, but not both.": "archaeologist(Abraham) → (cultural_vandal(Abraham) ⊕ treasure_preserver(Abraham))",
      "Abraham does not appreciate artifacts.": "¬appreciates_artifacts(Abraham)",
      "If Abraham values history or respects culture, then he can protect heritage.": "(values_history(Abraham) ∨ respects_culture(Abraham)) → protect_heritage(Abraham)",
      "If Abraham preserves artifacts, then he either exploits historical sites or respects cultural sites, but not both.": "preserve_artifacts(Abraham) → (exploit_historical_sites(Abraham) ⊕ respect_cultural_sites(Abraham))",
      "If Tommy exploits historical sites, then he is either a cultural vandal or protects heritage (or both).": "exploit_historical_sites(Tommy) → (cultural_vandal(Tommy) ∨ protect_heritage(Tommy))",
      "Everyone who attends museum exhibits either learns from curators or appreciates artifacts (or both).": "∀x (attends_museum_exhibits(x) → (learns_from_curators(x) ∨ appreciates_artifacts(x)))",
      "Abraham does not respect cultural sites.": "¬respect_cultural_sites(Abraham)",
      "Abraham conducts research.": "conducts_research(Abraham)",
      "Abraham reads history books.": "reads_history_books(Abraham)",
      "Abraham ignores rules.": "ignores_rules(Abraham)",
      "Abraham does not become an expert.": "¬becomes_expert(Abraham)",
      "If Abraham is a historian, then he is either a treasure preserver or a grave robber, but not both.": "historian(Abraham) → (treasure_preserver(Abraham) ⊕ grave_robber(Abraham))",
      "If Abraham disregards rules, then he either exploits historical sites or faces consequences (or both).": "disregard_rules(Abraham) → (exploit_historical_sites(Abraham) ∨ face_consequences(Abraham))",
      "Abraham either explores ruins or visits historical sites.": "explores_ruins(Abraham) ∨ visits_historical_sites(Abraham)"
    },
    "conclusion_fol": "treasure_looter(Abraham)"
  },
  {
    "id": 465,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Finding honey is not difficult for Pooh.",
    "reasoning": "fact1: Pooh has curiosity.\nfact2: Pooh does not try new routes.\nrule: If a bear enjoys adventure and has curiosity, then they try new routes.\nconclusion: Pooh does not enjoy adventure.\n\nfact1: Pooh does not have good balance.\nfact2: Pooh moves slowly.\nrule: All bears that enjoy walking have good balance and move slowly.\nconclusion: Pooh does not enjoy walking.\n\nfact1: Pooh does not enjoy walking.\nrule: Every bear enjoys walking or loves nature.\nconclusion: Pooh loves nature.\n\nfact1: Pooh roams freely.\nfact2: Pooh does not enjoy adventure.\nrule: If Pooh either roams freely or meets friends (but not both), then he enjoys adventure.\nconclusion: Pooh meets friends.\n\nfact1: Pooh does not love honey.\nfact2: Pooh meets friends.\nrule: If Pooh gets lost, then he loves honey and meets friends.\nconclusion: Pooh does not get lost.\n\nfact1: Pooh explores the forest.\nfact2: Pooh has a good memory.\nrule: If Pooh explores the forest, then he either finds honey quickly or has a good memory, but not both.\nconclusion: Pooh does not find honey quickly.\n\nfact1: Pooh loves nature.\nfact2: Pooh does not find honey quickly.\nrule: If Pooh loves nature, then he either finds honey quickly or finds it easy to find honey, but not both.\nconclusion: Finding honey is easy for Pooh.\n\nfact1: Pooh does not get lost.\nrule: Pooh either enjoys the journey or gets lost, but not both.\nconclusion: Pooh enjoys the journey.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Finding honey is not difficult for Pooh. The correct option is: C.",
    "context": "If finding honey is either easy or difficult (but not both) for Damon, then he enjoys the journey. For Pooh, if he knows the terrain and sniffs around, then he finds honey easily. If Pooh gets lost, then he loves honey and meets friends. If a bear enjoys adventure and has curiosity, then they try new routes. Every bear enjoys walking or loves nature. Pooh moves slowly. Pooh explores the forest. Haisley does not try new routes. If Pooh explores the forest, then he either finds honey quickly or has a good memory, but not both. If Pooh either roams freely or meets friends (but not both), then he enjoys adventure. Pooh has a good memory. Haisley has curiosity. Pooh does not have good balance. Pooh has curiosity. Pooh either enjoys the journey or gets lost, but not both. Haisley does not love honey. All bears that enjoy walking have good balance and move slowly. Pooh does not love honey. Damon roams freely. Damon does not have good balance. Pooh does not try new routes. If Pooh lives outdoors, then he enjoys walking. If Pooh lives in the forest, then he either enjoys the journey or has good direction, but not both. Pooh roams freely. If Pooh loves nature, then he either finds honey quickly or finds it easy to find honey, but not both. If Pooh either follows streams or climbs trees (but not both), then he meets friends.",
    "nl2fol": {
      "If finding honey is either easy or difficult (but not both) for Damon, then he enjoys the journey.": "(easy_to_find_honey(Damon) ⊕ difficult_to_find_honey(Damon)) → enjoy_the_journey(Damon)",
      "For Pooh, if he knows the terrain and sniffs around, then he finds honey easily.": "(knows_terrain(Pooh) ∧ sniffs_around(Pooh)) → easy_to_find_honey(Pooh)",
      "If Pooh gets lost, then he loves honey and meets friends.": "gets_lost(Pooh) → (loves_honey(Pooh) ∧ meets_friends(Pooh))",
      "If a bear enjoys adventure and has curiosity, then they try new routes.": "∀x ((enjoys_adventure(x) ∧ has_curiosity(x)) → tries_new_routes(x))",
      "Every bear enjoys walking or loves nature.": "∀x (enjoys_walking(x) ∨ loves_nature(x))",
      "Pooh moves slowly.": "moves_slowly(Pooh)",
      "Pooh explores the forest.": "explores_forest(Pooh)",
      "Haisley does not try new routes.": "¬tries_new_routes(Haisley)",
      "If Pooh explores the forest, then he either finds honey quickly or has a good memory, but not both.": "explores_forest(Pooh) → (has_good_memory(Pooh) ⊕ finds_honey_quickly(Pooh))",
      "If Pooh either roams freely or meets friends (but not both), then he enjoys adventure.": "(roams_freely(Pooh) ⊕ meets_friends(Pooh)) → enjoys_adventure(Pooh)",
      "Pooh has a good memory.": "has_good_memory(Pooh)",
      "Haisley has curiosity.": "has_curiosity(Haisley)",
      "Pooh does not have good balance.": "¬has_good_balance(Pooh)",
      "Pooh has curiosity.": "has_curiosity(Pooh)",
      "Pooh either enjoys the journey or gets lost, but not both.": "gets_lost(Pooh) ⊕ enjoy_the_journey(Pooh)",
      "Haisley does not love honey.": "¬loves_honey(Haisley)",
      "All bears that enjoy walking have good balance and move slowly.": "∀x (enjoys_walking(x) → (has_good_balance(x) ∧ moves_slowly(x)))",
      "Pooh does not love honey.": "¬loves_honey(Pooh)",
      "Damon roams freely.": "roams_freely(Damon)",
      "Damon does not have good balance.": "¬has_good_balance(Damon)",
      "Pooh does not try new routes.": "¬tries_new_routes(Pooh)",
      "If Pooh lives outdoors, then he enjoys walking.": "lives_outdoors(Pooh) → enjoys_walking(Pooh)",
      "If Pooh lives in the forest, then he either enjoys the journey or has good direction, but not both.": "lives_in_forest(Pooh) → (enjoy_the_journey(Pooh) ⊕ has_good_direction(Pooh))",
      "Pooh roams freely.": "roams_freely(Pooh)",
      "If Pooh loves nature, then he either finds honey quickly or finds it easy to find honey, but not both.": "loves_nature(Pooh) → (finds_honey_quickly(Pooh) ⊕ easy_to_find_honey(Pooh))",
      "If Pooh either follows streams or climbs trees (but not both), then he meets friends.": "(follows_streams(Pooh) ⊕ climbs_trees(Pooh)) → meets_friends(Pooh)"
    },
    "conclusion_fol": "¬difficult_to_find_honey(Pooh)"
  },
  {
    "id": 466,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Salvador is passionate about cars, then he will develop expertise and gain recognition.",
    "reasoning": "fact1: Salvador does not eat a balanced diet.\nrule: Everyone either eats a balanced diet or has good health, but not necessarily both.\nconclusion: Salvador has good health.\n\nfact1: Salvador cannot handle stress.\nrule: Anyone who practices mindfulness or has inner peace can handle stress.\nconclusion: Salvador does not have inner peace.\n\nfact1: Salvador is talented.\nfact2: Salvador dedicates effort.\nrule: If Salvador has talent, then he either works hard or dedicates effort, but not both.\nconclusion: Salvador does not work hard.\n\nfact1: Salvador is productive.\nrule: Salvador is either productive or has free time, but not both.\nconclusion: Salvador does not have free time.\n\nfact1: Salvador does not have a loving family.\nfact2: Salvador does not have inner peace.\nrule: For all humans, if they either live happily or have a loving family, then they have inner peace.\nconclusion: Salvador does not live happily.\n\nfact1: Salvador has good health.\nfact2: Salvador does not live happily.\nrule: Anyone who feels fulfilled and has good health can live happily.\nconclusion: Salvador does not feel fulfilled.\n\nfact1: Salvador does not have free time.\nfact2: Salvador does not feel fulfilled.\nrule: Anyone who pursues hobbies or has free time can feel fulfilled.\nconclusion: Salvador does not pursue hobbies.\n\nfact1: Salvador does not pursue hobbies.\nrule: For Salvador, developing expertise in a field and pursuing hobbies are mutually exclusive, in that they do not typically happen at the same time.\nconclusion: Salvador develops expertise.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Salvador is passionate about cars, then he will develop expertise and gain recognition. The correct option is: C.",
    "context": "If Salvador has talent, then he either works hard or dedicates effort, but not both. Alessandra does not have a loving family. Salvador is productive. For Alivia, developing expertise in a field and pursuing hobbies are mutually exclusive, in that they do not typically happen at the same time. Anyone who feels fulfilled and has good health can live happily. Everyone either eats a balanced diet or has good health, but not necessarily both. Alessandra is productive. Anyone who practices mindfulness or has inner peace can handle stress. Anyone who pursues hobbies or has free time can feel fulfilled. Salvador does not have a loving family. For Salvador, developing expertise in a field and pursuing hobbies are mutually exclusive, in that they do not typically happen at the same time. Ariya does not achieve success. If Salvador either reads manuals or takes courses (but not both), then he develops expertise. Salvador is talented. For all humans, if they either live happily or have a loving family, then they have inner peace. Salvador cannot handle stress. If Salvador sets goals, then he finds motivation and pursues hobbies. Salvador is either productive or has free time, but not both. Ariya is talented. Salvador does not eat a balanced diet. Salvador dedicates effort. Ariya cannot handle stress. If Alessandra has talent, then he either works hard or dedicates effort, but not both. If Salvador exercises regularly, then he either has good health or sleeps soundly (but not both).",
    "nl2fol": {
      "If Salvador has talent, then he either works hard or dedicates effort, but not both.": "has_talent(Salvador) → (works_hard(Salvador) ⊕ dedicates_effort(Salvador))",
      "Alessandra does not have a loving family.": "¬has_loving_family(Alessandra)",
      "Salvador is productive.": "is_productive(Salvador)",
      "For Alivia, developing expertise in a field and pursuing hobbies are mutually exclusive, in that they do not typically happen at the same time.": "develop_expertise(Alivia) ⊕ pursue_hobbies(Alivia)",
      "Anyone who feels fulfilled and has good health can live happily.": "∀x ((feels_fulfilled(x) ∧ has_good_health(x)) → lives_happily(x))",
      "Everyone either eats a balanced diet or has good health, but not necessarily both.": "∀x (eats_balanced_diet(x) ⊕ has_good_health(x))",
      "Alessandra is productive.": "is_productive(Alessandra)",
      "Anyone who practices mindfulness or has inner peace can handle stress.": "∀x ((practices_mindfulness(x) ∨ has_Inner_Peace(x)) → handles_stress(x))",
      "Anyone who pursues hobbies or has free time can feel fulfilled.": "∀x ((pursue_hobbies(x) ∨ has_free_time(x)) → feels_fulfilled(x))",
      "Salvador does not have a loving family.": "¬has_loving_family(Salvador)",
      "For Salvador, developing expertise in a field and pursuing hobbies are mutually exclusive, in that they do not typically happen at the same time.": "develop_expertise(Salvador) ⊕ pursue_hobbies(Salvador)",
      "Ariya does not achieve success.": "¬achieves_success(Ariya)",
      "If Salvador either reads manuals or takes courses (but not both), then he develops expertise.": "(reads_manuals(Salvador) ⊕ takes_courses(Salvador)) → develop_expertise(Salvador)",
      "Salvador is talented.": "has_talent(Salvador)",
      "For all humans, if they either live happily or have a loving family, then they have inner peace.": "∀x ((lives_happily(x) ⊕ has_loving_family(x)) → has_Inner_Peace(x))",
      "Salvador cannot handle stress.": "¬handles_stress(Salvador)",
      "If Salvador sets goals, then he finds motivation and pursues hobbies.": "set_goals(Salvador) → (find_motivation(Salvador) ∧ pursue_hobbies(Salvador))",
      "Salvador is either productive or has free time, but not both.": "is_productive(Salvador) ⊕ has_free_time(Salvador)",
      "Ariya is talented.": "is_talented(Ariya)",
      "Salvador does not eat a balanced diet.": "¬eats_balanced_diet(Salvador)",
      "Salvador dedicates effort.": "dedicates_effort(Salvador)",
      "Ariya cannot handle stress.": "¬handles_stress(Ariya)",
      "If Alessandra has talent, then he either works hard or dedicates effort, but not both.": "has_talent(Alessandra) → (works_hard(Alessandra) ⊕ dedicates_effort(Alessandra))",
      "If Salvador exercises regularly, then he either has good health or sleeps soundly (but not both).": "exercises_regularly(Salvador) → (has_good_health(Salvador) ⊕ sleeps_soundly(Salvador))"
    },
    "conclusion_fol": "passionate_about_cars(Salvador) → (develop_expertise(Salvador) ∧ gain_recognition(Salvador))"
  },
  {
    "id": 467,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dr. Lubber is not meticulous.",
    "reasoning": "fact1: Dr. Lubber teaches students.\nrule: For every researcher, they either publish papers or teach students, but not both is not necessarily true.\nconclusion: Dr. Lubber does not publish papers.\n\nfact1: Dr. Lubber does not analyze his findings.\nfact2: Dr. Lubber does not publish papers.\nrule: Everyone who collects data either analyzes their findings or publishes papers (or both).\nconclusion: Dr. Lubber does not collect data.\n\nfact1: Dr. Lubber does not design experiments.\nfact2: Dr. Lubber does not make new discoveries.\nrule: If Dr. Lubber either designs experiments or develops innovative methods (but not both), then he makes new discoveries.\nconclusion: Dr. Lubber does not develop innovative methods.\n\nfact1: Dr. Lubber does not collect data.\nrule: Every researcher collects data or conducts thorough research.\nconclusion: Dr. Lubber conducts thorough research.\n\nfact1: Dr. Lubber conducts thorough research.\nfact2: Dr. Lubber does not develop innovative methods.\nrule: For any researcher who gains international recognition, they must conduct thorough research and develop innovative methods.\nconclusion: Dr. Lubber does not gain international recognition.\n\nfact1: Dr. Lubber produces accurate results.\nfact2: Dr. Lubber does not gain international recognition.\nrule: If Dr. Lubber is meticulous, then he produces accurate results and gains international recognition.\nconclusion: Dr. Lubber is not meticulous.\n\nTherefore, it is true that Dr. Lubber is not meticulous. The correct option is: A.",
    "context": "If a researcher uses qualitative methods, then they either collect data or identify patterns. Everyone who collects data either analyzes their findings or publishes papers (or both). If Dr. Lubber is meticulous, then he produces accurate results and gains international recognition. Dr. Lubber does not design experiments. Dr. Lubber does not make new discoveries. If Dr. Lubber achieves a breakthrough, then he either collaborates with others or develops innovative methods, but not both. Every researcher collects data or conducts thorough research. If Dr. Eren either designs experiments or develops innovative methods (but not both), then he makes new discoveries. For every researcher, they either publish papers or teach students, but not both is not necessarily true. Dr. Lubber teaches students. If Dr. Lubber either designs experiments or develops innovative methods (but not both), then he makes new discoveries. For any researcher who gains international recognition, they must conduct thorough research and develop innovative methods. Dr. Lubber does not analyze his findings. Dr. Lubber produces accurate results. Any researcher who publishes breakthroughs or leads collaborative projects can gain international recognition.",
    "nl2fol": {
      "If a researcher uses qualitative methods, then they either collect data or identify patterns.": "∀x (uses_qualitative_methods(x) → (collects_data(x) ⊕ identifies_patterns(x)))",
      "Everyone who collects data either analyzes their findings or publishes papers (or both).": "∀x (collects_data(x) → (analyze_findings(x) ∨ publish_papers(x)))",
      "If Dr. Lubber is meticulous, then he produces accurate results and gains international recognition.": "meticulous(Lubber) → (produce_accurate_results(Lubber) ∧ gain_international_recognition(Lubber))",
      "Dr. Lubber does not design experiments.": "¬design_experiments(Lubber)",
      "Dr. Lubber does not make new discoveries.": "¬make_new_discoveries(Lubber)",
      "If Dr. Lubber achieves a breakthrough, then he either collaborates with others or develops innovative methods, but not both.": "achieve_breakthrough(Lubber) → (collaborate_with_others(Lubber) ⊕ develop_innovative_methods(Lubber))",
      "Every researcher collects data or conducts thorough research.": "∀x (collects_data(x) ∨ conduct_thorough_research(x))",
      "If Dr. Eren either designs experiments or develops innovative methods (but not both), then he makes new discoveries.": "(design_experiments(Eren) ⊕ develop_innovative_methods(Eren)) → make_new_discoveries(Eren)",
      "For every researcher, they either publish papers or teach students, but not both is not necessarily true.": "∀x (publish_papers(x) ⊕ teach_students(x))",
      "Dr. Lubber teaches students.": "teach_students(Lubber)",
      "If Dr. Lubber either designs experiments or develops innovative methods (but not both), then he makes new discoveries.": "(design_experiments(Lubber) ⊕ develop_innovative_methods(Lubber)) → make_new_discoveries(Lubber)",
      "For any researcher who gains international recognition, they must conduct thorough research and develop innovative methods.": "∀x (gain_international_recognition(x) → (conduct_thorough_research(x) ∧ develop_innovative_methods(x)))",
      "Dr. Lubber does not analyze his findings.": "¬analyze_findings(Lubber)",
      "Dr. Lubber produces accurate results.": "produce_accurate_results(Lubber)",
      "Any researcher who publishes breakthroughs or leads collaborative projects can gain international recognition.": "∀x ((publish_breakthroughs(x) ∨ lead_collaborative_projects(x)) → gain_international_recognition(x))"
    },
    "conclusion_fol": "¬meticulous(Lubber)"
  },
  {
    "id": 468,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aries fosters open dialogue.",
    "reasoning": "fact1: Aries does not specialize in simple topics.\nrule: Aries either specializes in simple topics or analyzes complex ideas, but not both.\nconclusion: Aries analyzes complex ideas.\n\nfact1: Aries analyzes complex ideas.\nrule: If Aries analyzes complex ideas, then he does not develop cohesive narratives, and if he develops cohesive narratives, then he does not analyze complex ideas.\nconclusion: Aries does not develop cohesive narratives.\n\nfact1: Aries participates in discussions.\nfact2: Aries does not develop cohesive narratives.\nrule: Everyone who participates in discussions either develops cohesive narratives or presents arguments (or both).\nconclusion: Aries presents arguments.\n\nfact1: Aries presents arguments.\nfact2: Aries listens actively.\nrule: Anyone who presents arguments or listens actively can engage in debates.\nconclusion: Aries engages in debates.\n\nfact1: Aries values critical thinking.\nrule: If Aries values critical thinking, then he thinks discursively and encourages collaboration.\nconclusion: Aries can think discursively.\n\nfact1: Aries can think discursively.\nfact2: Aries challenges established narratives.\nrule: If Aries can think discursively, then he can either challenge established narratives or foster open dialogue, but not both.\nconclusion: Aries does not foster open dialogue.\n\nTherefore, it is false that Aries fosters open dialogue. The correct option is: B.",
    "context": "If Aries can think discursively, then he can either challenge established narratives or foster open dialogue, but not both. If Aries either reads widely or synthesizes information (but not both), then he analyzes complex ideas. Aspen listens actively. Aries values critical thinking. If Aspen can think discursively, then he can either challenge established narratives or foster open dialogue, but not both. Anyone who exposes new ideas either develops cohesive narratives or examines multiple views (or both). Cyrus participates in discussions. If Aries is a professor, then he either presents arguments or writes academic papers, but not both. Aries listens actively. Aries does not specialize in simple topics. If Aries analyzes complex ideas, then he does not develop cohesive narratives, and if he develops cohesive narratives, then he does not analyze complex ideas. Everyone who participates in discussions either develops cohesive narratives or presents arguments (or both). Aspen either specializes in simple topics or analyzes complex ideas, but not both. If Aspen values critical thinking, then he thinks discursively and encourages collaboration. Aries participates in discussions. Aries challenges established narratives. If Aries values critical thinking, then he thinks discursively and encourages collaboration. Aries either specializes in simple topics or analyzes complex ideas, but not both. Anyone who presents arguments or listens actively can engage in debates.",
    "nl2fol": {
      "If Aries can think discursively, then he can either challenge established narratives or foster open dialogue, but not both.": "think_discursively(Aries) → (challenge_established_narratives(Aries) ⊕ foster_open_dialogue(Aries))",
      "If Aries either reads widely or synthesizes information (but not both), then he analyzes complex ideas.": "(reads_widely(Aries) ⊕ synthesizes_information(Aries)) → analyzes_complex_ideas(Aries)",
      "Aspen listens actively.": "listens_actively(Aspen)",
      "Aries values critical thinking.": "values_critical_thinking(Aries)",
      "If Aspen can think discursively, then he can either challenge established narratives or foster open dialogue, but not both.": "think_discursively(Aspen) → (challenge_established_narratives(Aspen) ⊕ foster_open_dialogue(Aspen))",
      "Anyone who exposes new ideas either develops cohesive narratives or examines multiple views (or both).": "∀x (exposes_new_ideas(x) → (develop_cohesive_narratives(x) ∨ examines_multiple_views(x)))",
      "Cyrus participates in discussions.": "participate_in_discussions(Cyrus)",
      "If Aries is a professor, then he either presents arguments or writes academic papers, but not both.": "is_professor(Aries) → (presents_arguments(Aries) ⊕ writes_academic_papers(Aries))",
      "Aries listens actively.": "listens_actively(Aries)",
      "Aries does not specialize in simple topics.": "¬specializes_in_simple_topics(Aries)",
      "If Aries analyzes complex ideas, then he does not develop cohesive narratives, and if he develops cohesive narratives, then he does not analyze complex ideas.": "analyzes_complex_ideas(Aries) ⊕ develop_cohesive_narratives(Aries)",
      "Everyone who participates in discussions either develops cohesive narratives or presents arguments (or both).": "∀x (participate_in_discussions(x) → (develop_cohesive_narratives(x) ∨ presents_arguments(x)))",
      "Aspen either specializes in simple topics or analyzes complex ideas, but not both.": "specializes_in_simple_topics(Aspen) ⊕ analyzes_complex_ideas(Aspen)",
      "If Aspen values critical thinking, then he thinks discursively and encourages collaboration.": "values_critical_thinking(Aspen) → (think_discursively(Aspen) ∧ encourage_collaboration(Aspen))",
      "Aries participates in discussions.": "participate_in_discussions(Aries)",
      "Aries challenges established narratives.": "challenge_established_narratives(Aries)",
      "If Aries values critical thinking, then he thinks discursively and encourages collaboration.": "values_critical_thinking(Aries) → (think_discursively(Aries) ∧ encourage_collaboration(Aries))",
      "Aries either specializes in simple topics or analyzes complex ideas, but not both.": "specializes_in_simple_topics(Aries) ⊕ analyzes_complex_ideas(Aries)",
      "Anyone who presents arguments or listens actively can engage in debates.": "∀x ((presents_arguments(x) ∨ listens_actively(x)) → engage_in_debates(x))"
    },
    "conclusion_fol": "foster_open_dialogue(Aries)"
  },
  {
    "id": 469,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jaxx does not possess special powers.",
    "reasoning": "fact1: Jaxx does not gain worldwide recognition.\nfact2: Jaxx is not revered by his peers.\nrule: Anyone who either achieves legendary status or gains worldwide recognition is revered by their peers.\nconclusion: Jaxx does not achieve legendary status.\n\nfact1: Jaxx appreciates detail.\nrule: All characters who appreciate detail have a good imagination and think outside the box.\nconclusion: Jaxx has a good imagination.\n\nfact1: Jaxx has a good imagination.\nrule: Any character who is skilled with their hands or has a good imagination can create beautiful art.\nconclusion: Jaxx can create beautiful art.\n\nfact1: Jaxx has visionary ideas.\nfact2: Jaxx does not achieve legendary status.\nrule: If Jaxx inspires others and has visionary ideas, then he achieves legendary status.\nconclusion: Jaxx does not inspire others.\n\nfact1: Jaxx lives in a fantasy world.\nfact2: Jaxx does not inspire others.\nrule: If Jaxx lives in a fantasy world and has a unique ability, then he inspires others.\nconclusion: Jaxx does not have a unique ability.\n\nfact1: Jaxx is not enchanted.\nfact2: Jaxx does not have a unique ability.\nrule: For all fictional characters, if they have a magical gift or are enchanted, then they have a unique ability.\nconclusion: Jaxx does not have a magical gift.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Jaxx does not possess special powers. The correct option is: C.",
    "context": "If Jaxx inspires others and has visionary ideas, then he achieves legendary status. Jaxx does not gain worldwide recognition. Jaxx lives in a fantasy world. Jaxx is not enchanted. If Jaxx transforms objects, then he either inspires others or possesses a subtle charm. If Jaxx is inspirational, then he either brings joy or creates beautiful art. Anyone who either achieves legendary status or gains worldwide recognition is revered by their peers. If Jaxx lives in a fantasy world and has a unique ability, then he inspires others. Jaxx appreciates detail. If Jaxx is artistic, then he either thinks creatively or has good imagination, but not both. All characters who appreciate detail have a good imagination and think outside the box. Jaxx is not revered by his peers. For all fictional characters, if they have a magical gift or are enchanted, then they have a unique ability. Jaxx has visionary ideas. Any character who is skilled with their hands or has a good imagination can create beautiful art.",
    "nl2fol": {
      "If Jaxx inspires others and has visionary ideas, then he achieves legendary status.": "(inspires_others(Jaxx) ∧ has_visionary_ideas(Jaxx)) → achieves_legendary_status(Jaxx)",
      "Jaxx does not gain worldwide recognition.": "¬gains_worldwide_recognition(Jaxx)",
      "Jaxx lives in a fantasy world.": "lives_in_fantasy_world(Jaxx)",
      "Jaxx is not enchanted.": "¬is_enchanted(Jaxx)",
      "If Jaxx transforms objects, then he either inspires others or possesses a subtle charm.": "transforms_objects(Jaxx) → (inspires_others(Jaxx) ∨ possesses_subtle_charm(Jaxx))",
      "If Jaxx is inspirational, then he either brings joy or creates beautiful art.": "is_inspirational(Jaxx) → (bring_joy(Jaxx) ∨ create_beautiful_art(Jaxx))",
      "Anyone who either achieves legendary status or gains worldwide recognition is revered by their peers.": "∀x ((achieves_legendary_status(x) ⊕ gains_worldwide_recognition(x)) → is_revered_by_peers(x))",
      "If Jaxx lives in a fantasy world and has a unique ability, then he inspires others.": "(lives_in_fantasy_world(Jaxx) ∧ has_unique_ability(Jaxx)) → inspires_others(Jaxx)",
      "Jaxx appreciates detail.": "appreciate_detail(Jaxx)",
      "If Jaxx is artistic, then he either thinks creatively or has good imagination, but not both.": "is_artistic(Jaxx) → (thinks_creatively(Jaxx) ⊕ has_good_imagination(Jaxx))",
      "All characters who appreciate detail have a good imagination and think outside the box.": "∀x (appreciate_detail(x) → (has_good_imagination(x) ∧ think_outside_box(x)))",
      "Jaxx is not revered by his peers.": "¬is_revered_by_peers(Jaxx)",
      "For all fictional characters, if they have a magical gift or are enchanted, then they have a unique ability.": "∀x ((has_magical_gift(x) ⊕ is_enchanted(x)) → has_unique_ability(x))",
      "Jaxx has visionary ideas.": "has_visionary_ideas(Jaxx)",
      "Any character who is skilled with their hands or has a good imagination can create beautiful art.": "∀x ((skilled_with_hands(x) ∨ has_good_imagination(x)) → create_beautiful_art(x))"
    },
    "conclusion_fol": "¬possess_special_powers(Jaxx)"
  },
  {
    "id": 470,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Colin is not careless.",
    "reasoning": "fact1: Colin follows his intuition.\nrule: Colin either follows his intuition or assesses situations, but not both.\nconclusion: Colin does not assess situations.\n\nfact1: Colin does not assess situations.\nrule: Everyone assesses situations or evaluates risks.\nconclusion: Colin evaluates the risks.\n\nfact1: Colin does not consider his options.\nfact2: Colin evaluates the risks.\nrule: If someone either considers their options or evaluates the risks, then they think cautiously.\nconclusion: Colin thinks cautiously.\n\nfact1: Colin thinks cautiously.\nrule: Colin either thinks cautiously or acts impulsively, but not both.\nconclusion: Colin is not impulsive.\n\nfact1: Colin is not impulsive.\nrule: Colin is either impulsive or rash, but not both.\nconclusion: Colin is rash.\n\nfact1: Colin is rash.\nrule: Colin is either rash or meticulous, but not both.\nconclusion: Colin is not meticulous.\n\nfact1: Colin is not meticulous.\nrule: Either Colin is meticulous or careless, but not both.\nconclusion: Colin is careless.\n\nTherefore, it is false that Colin is not careless. The correct option is: B.",
    "context": "Either Colin is meticulous or careless, but not both. Colin is either rash or meticulous, but not both. Anyone who considers details and weighs consequences is likely to think cautiously. Colin either thinks cautiously or acts impulsively, but not both. Anyone who plans ahead or weighs outcomes evaluates risks. Everyone assesses situations or evaluates risks. Colin either follows his intuition or assesses situations, but not both. Colin does not consider his options. Colin is either impulsive or rash, but not both. If someone either considers their options or evaluates the risks, then they think cautiously. Colin follows his intuition. If Colin achieves success, then he is meticulous and pays attention.",
    "nl2fol": {
      "Either Colin is meticulous or careless, but not both.": "meticulous(Colin) ⊕ careless(Colin)",
      "Colin is either rash or meticulous, but not both.": "rash(Colin) ⊕ meticulous(Colin)",
      "Anyone who considers details and weighs consequences is likely to think cautiously.": "∀x ((considers_details(x) ∧ weighs_consequences(x)) → thinks_cautiously(x))",
      "Colin either thinks cautiously or acts impulsively, but not both.": "thinks_cautiously(Colin) ⊕ acts_impulsively(Colin)",
      "Anyone who plans ahead or weighs outcomes evaluates risks.": "∀x ((plans_ahead(x) ∨ weighs_outcomes(x)) → evaluates_risks(x))",
      "Everyone assesses situations or evaluates risks.": "∀x (assesses_situations(x) ∨ evaluates_risks(x))",
      "Colin either follows his intuition or assesses situations, but not both.": "follows_intuition(Colin) ⊕ assesses_situations(Colin)",
      "Colin does not consider his options.": "¬considers_options(Colin)",
      "Colin is either impulsive or rash, but not both.": "acts_impulsively(Colin) ⊕ rash(Colin)",
      "If someone either considers their options or evaluates the risks, then they think cautiously.": "∀x ((considers_options(x) ⊕ evaluates_risks(x)) → thinks_cautiously(x))",
      "Colin follows his intuition.": "follows_intuition(Colin)",
      "If Colin achieves success, then he is meticulous and pays attention.": "achieves_success(Colin) → (meticulous(Colin) ∧ pays_attention(Colin))"
    },
    "conclusion_fol": "¬careless(Colin)"
  },
  {
    "id": 471,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cohen is not dedicated.",
    "reasoning": "fact1: Cohen does not speak out against injustice.\nfact2: Cohen does not advocate for human rights.\nrule: Everyone who seeks justice either speaks out against injustice or advocates for human rights (or both).\nconclusion: Cohen does not seek justice.\n\nfact1: Cohen does not seek justice.\nfact2: Cohen does not report fairly.\nrule: Anyone who pursues truth seeks justice or reports fairly (or both).\nconclusion: Cohen does not pursue truth.\n\nfact1: Cohen does not pursue truth.\nrule: Cohen either pursues truth or values integrity (or both).\nconclusion: Cohen values integrity.\n\nfact1: Cohen values integrity.\nrule: Cohen is either driven to succeed or values integrity, but not both.\nconclusion: Cohen is not driven to succeed.\n\nfact1: Cohen is not driven to succeed.\nfact2: Cohen is not highly motivated.\nrule: If Cohen is either ambitious or driven to succeed (but not both), then he is highly motivated.\nconclusion: Cohen is not ambitious.\n\nfact1: Cohen is not ambitious.\nrule: Cohen is ambitious or dedicated.\nconclusion: Cohen is not dedicated.\n\nTherefore, it is false that Cohen is not dedicated. The correct option is: B.",
    "context": "Cohen is not highly motivated. Isaac does not report fairly. Cohen does not advocate for human rights. Everyone who seeks justice either speaks out against injustice or advocates for human rights (or both). Isaac does not advocate for human rights. Ronan is ambitious or dedicated. Cohen either pursues truth or values integrity (or both). Cohen does not speak out against injustice. Anyone who pursues truth seeks justice or reports fairly (or both). If Cohen has curiosity, then he seeks justice and asks questions. Cohen does not report fairly. If Cohen either follows ethics or respects others (but not both), then he values integrity. Kylie is not highly motivated. Kylie is either driven to succeed or values integrity, but not both. Ronan does not speak out against injustice. Cohen is ambitious or dedicated. Isaac either pursues truth or values integrity (or both). If Cohen is either ambitious or driven to succeed (but not both), then he is highly motivated. Cohen is either driven to succeed or values integrity, but not both.",
    "nl2fol": {
      "Cohen is not highly motivated.": "¬highly_motivated(Cohen)",
      "Isaac does not report fairly.": "¬reports_fairly(Isaac)",
      "Cohen does not advocate for human rights.": "¬advocates_for_human_rights(Cohen)",
      "Everyone who seeks justice either speaks out against injustice or advocates for human rights (or both).": "∀x (seeks_justice(x) → (speaks_out_against_injustice(x) ∨ advocates_for_human_rights(x)))",
      "Isaac does not advocate for human rights.": "¬advocates_for_human_rights(Isaac)",
      "Ronan is ambitious or dedicated.": "ambitious(Ronan) ∨ dedicated(Ronan)",
      "Cohen either pursues truth or values integrity (or both).": "pursues_truth(Cohen) ∨ values_integrity(Cohen)",
      "Cohen does not speak out against injustice.": "¬speaks_out_against_injustice(Cohen)",
      "Anyone who pursues truth seeks justice or reports fairly (or both).": "∀x (pursues_truth(x) → (seeks_justice(x) ∨ reports_fairly(x)))",
      "If Cohen has curiosity, then he seeks justice and asks questions.": "has_curiosity(Cohen) → (seeks_justice(Cohen) ∧ asks_questions(Cohen))",
      "Cohen does not report fairly.": "¬reports_fairly(Cohen)",
      "If Cohen either follows ethics or respects others (but not both), then he values integrity.": "(follows_ethics(Cohen) ⊕ respects_others(Cohen)) → values_integrity(Cohen)",
      "Kylie is not highly motivated.": "¬highly_motivated(Kylie)",
      "Kylie is either driven to succeed or values integrity, but not both.": "driven_to_succeed(Kylie) ⊕ values_integrity(Kylie)",
      "Ronan does not speak out against injustice.": "¬speaks_out_against_injustice(Ronan)",
      "Cohen is ambitious or dedicated.": "ambitious(Cohen) ∨ dedicated(Cohen)",
      "Isaac either pursues truth or values integrity (or both).": "pursues_truth(Isaac) ∨ values_integrity(Isaac)",
      "If Cohen is either ambitious or driven to succeed (but not both), then he is highly motivated.": "(ambitious(Cohen) ⊕ driven_to_succeed(Cohen)) → highly_motivated(Cohen)",
      "Cohen is either driven to succeed or values integrity, but not both.": "driven_to_succeed(Cohen) ⊕ values_integrity(Cohen)"
    },
    "conclusion_fol": "¬dedicated(Cohen)"
  },
  {
    "id": 472,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sky is not trained in ballet.",
    "reasoning": "fact1: Sky is an artist.\nfact2: Sky evokes emotion.\nrule: If Sky is an artist, then she either tells a story or evokes emotion, but not both.\nconclusion: Sky does not tell a story.\n\nfact1: Sky does not achieve success.\nrule: If Sky inspires others, then she will achieve success.\nconclusion: Sky does not inspire others.\n\nfact1: Sky does not tell a story.\nfact2: Sky cannot touch the hearts of others.\nrule: Anyone who either tells a story or builds a connection can touch the hearts of others.\nconclusion: Sky does not build a connection.\n\nfact1: Sky expresses emotion.\nfact2: Sky does not build a connection.\nrule: If Sky either expresses emotion or connects with the audience (but not both), then she builds a connection.\nconclusion: Sky connects with the audience.\n\nfact1: Sky connects with the audience.\nfact2: Sky does not inspire others.\nrule: If someone performs with elegance and connects with the audience, then they inspire others.\nconclusion: Sky does not perform with elegance.\n\nfact1: Sky does not have natural talent.\nfact2: Sky does not perform with elegance.\nrule: For all humans, if they are trained in ballet or have natural talent, then they perform with elegance.\nconclusion: Sky is not trained in ballet.\n\nTherefore, it is true that Sky is not trained in ballet. The correct option is: A.",
    "context": "Sky does not have natural talent. If Sky is an artist, then she either tells a story or evokes emotion, but not both. Sky evokes emotion. If Sky either expresses emotion or connects with the audience (but not both), then she builds a connection. Sky does not achieve success. If someone performs with elegance and connects with the audience, then they inspire others. If Sky has passion, then she tells a story and speaks from her heart. If Sky inspires others, then she will achieve success. Sky cannot touch the hearts of others. For all humans, if they are trained in ballet or have natural talent, then they perform with elegance. Sky is an artist. Anyone who either tells a story or builds a connection can touch the hearts of others. Sky expresses emotion.",
    "nl2fol": {
      "Sky does not have natural talent.": "¬has_natural_talent(Sky)",
      "If Sky is an artist, then she either tells a story or evokes emotion, but not both.": "is_artist(Sky) → (tells_a_story(Sky) ⊕ evokes_emotion(Sky))",
      "Sky evokes emotion.": "evokes_emotion(Sky)",
      "If Sky either expresses emotion or connects with the audience (but not both), then she builds a connection.": "(expresses_emotion(Sky) ⊕ connects_with_audience(Sky)) → builds_connection(Sky)",
      "Sky does not achieve success.": "¬achieves_success(Sky)",
      "If someone performs with elegance and connects with the audience, then they inspire others.": "∀x ((performs_with_elegance(x) ∧ connects_with_audience(x)) → inspires_others(x))",
      "If Sky has passion, then she tells a story and speaks from her heart.": "has_passion(Sky) → (tells_a_story(Sky) ∧ speaks_from_heart(Sky))",
      "If Sky inspires others, then she will achieve success.": "inspires_others(Sky) → achieves_success(Sky)",
      "Sky cannot touch the hearts of others.": "¬touches_hearts(Sky)",
      "For all humans, if they are trained in ballet or have natural talent, then they perform with elegance.": "∀x ((trained_in_ballet(x) ∨ has_natural_talent(x)) → performs_with_elegance(x))",
      "Sky is an artist.": "is_artist(Sky)",
      "Anyone who either tells a story or builds a connection can touch the hearts of others.": "∀x ((tells_a_story(x) ∨ builds_connection(x)) → touches_hearts(x))",
      "Sky expresses emotion.": "expresses_emotion(Sky)"
    },
    "conclusion_fol": "¬trained_in_ballet(Sky)"
  },
  {
    "id": 473,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Meredith does not make a positive impact.",
    "reasoning": "fact1: Meredith pays attention to details.\nrule: Anyone who pays attention to details is meticulous.\nconclusion: Meredith is meticulous.\n\nfact1: Meredith is meticulous.\nrule: Anyone who is meticulous values precision.\nconclusion: Meredith values precision.\n\nfact1: Meredith does not desire success.\nrule: Everyone desires success or seeks recognition.\nconclusion: Meredith is driven by a desire for recognition.\n\nfact1: Meredith is driven by a desire for recognition.\nrule: Meredith is either driven by a desire for recognition or has curiosity, but not both.\nconclusion: Meredith does not have curiosity.\n\nfact1: Meredith values precision.\nrule: Meredith is either passionate about discovery or values precision, but not both.\nconclusion: Meredith is not passionate about discovery.\n\nfact1: Meredith does not have curiosity.\nfact2: Meredith pursues knowledge.\nrule: If Meredith has curiosity or pursues knowledge, then she is dedicated to research.\nconclusion: Meredith is dedicated to research.\n\nfact1: Meredith is dedicated to research.\nfact2: Meredith is not passionate about discovery.\nrule: If Meredith is either dedicated to research or passionate about discovery (but not both), then she makes a positive impact.\nconclusion: Meredith makes a positive impact.\n\nTherefore, it is false that Meredith does not make a positive impact. The correct option is: B.",
    "context": "If Meredith has curiosity or pursues knowledge, then she is dedicated to research. Meredith does not desire success. If Meredith is either dedicated to research or passionate about discovery (but not both), then she makes a positive impact. Anyone who is meticulous values precision. Lewis pays attention to details. Meredith pays attention to details. Anyone who is invested in their findings is either passionate about discovery or driven by a cause (or both). Meredith is either passionate about discovery or values precision, but not both. If Meredith is ambitious, then she seeks recognition and enjoys learning. Meredith is either driven by a desire for recognition or has curiosity, but not both. Colt does not desire success. Everyone desires success or seeks recognition. Anyone who pays attention to details is meticulous. Anyone who sets high standards and strives for perfection is meticulous. Cal is either passionate about discovery or values precision, but not both. Meredith pursues knowledge. If Colt has curiosity or pursues knowledge, then she is dedicated to research.",
    "nl2fol": {
      "If Meredith has curiosity or pursues knowledge, then she is dedicated to research.": "(has_curiosity(Meredith) ∨ pursues_knowledge(Meredith)) → dedicated_to_research(Meredith)",
      "Meredith does not desire success.": "¬desires_success(Meredith)",
      "If Meredith is either dedicated to research or passionate about discovery (but not both), then she makes a positive impact.": "(dedicated_to_research(Meredith) ⊕ passionate_about_discovery(Meredith)) → makes_a_positive_impact(Meredith)",
      "Anyone who is meticulous values precision.": "∀x (meticulous(x) → values_precision(x))",
      "Lewis pays attention to details.": "pays_attention_details(Lewis)",
      "Meredith pays attention to details.": "pays_attention_to_details(Meredith)",
      "Anyone who is invested in their findings is either passionate about discovery or driven by a cause (or both).": "∀x (invested_in_findings(x) → (passionate_about_discovery(x) ∨ driven_by_cause(x)))",
      "Meredith is either passionate about discovery or values precision, but not both.": "values_precision(Meredith) ⊕ passionate_about_discovery(Meredith)",
      "If Meredith is ambitious, then she seeks recognition and enjoys learning.": "is_ambitious(Meredith) → (seeks_recognition(Meredith) ∧ enjoys_learning(Meredith))",
      "Meredith is either driven by a desire for recognition or has curiosity, but not both.": "seeks_recognition(Meredith) ⊕ has_curiosity(Meredith)",
      "Colt does not desire success.": "¬desires_success(Colt)",
      "Everyone desires success or seeks recognition.": "∀x (desires_success(x) ∨ seeks_recognition(x))",
      "Anyone who pays attention to details is meticulous.": "∀x (pays_attention(x) → meticulous(x))",
      "Anyone who sets high standards and strives for perfection is meticulous.": "∀x ((sets_high_standards(x) ∧ strives_for_perfection(x)) → meticulous(x))",
      "Cal is either passionate about discovery or values precision, but not both.": "values_precision(Cal) ⊕ passionate_about_discovery(Cal)",
      "Meredith pursues knowledge.": "pursues_knowledge(Meredith)",
      "If Colt has curiosity or pursues knowledge, then she is dedicated to research.": "(has_curiosity(Colt) ∨ pursues_knowledge(Colt)) → dedicated_to_research(Colt)"
    },
    "conclusion_fol": "¬makes_a_positive_impact(Meredith)"
  },
  {
    "id": 474,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Archer can save lives.",
    "reasoning": "fact1: Archer anticipates risks.\nfact2: Archer does not act responsibly.\nrule: For all humans, if they either anticipate risks or operate safely, then they act responsibly.\nconclusion: Archer operates safely.\n\nfact1: Archer has high responsibility.\nrule: If someone has high responsibility, then they perform critical tasks.\nconclusion: Archer performs critical tasks.\n\nfact1: Archer operates safely.\nfact2: Archer handles emergencies.\nrule: If Archer operates safely, then he either remains focused or handles emergencies (but not both).\nconclusion: Archer does not remain focused.\n\nfact1: Archer performs critical tasks.\nfact2: Archer does not remain focused.\nrule: If Archer performs critical tasks, then he either works under pressure or remains focused (but not both).\nconclusion: Archer works under pressure.\n\nfact1: Archer works under pressure.\nfact2: Archer stays calm.\nrule: If Archer works under pressure, then he is either vigilant or calm (but not both).\nconclusion: Archer is not vigilant.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Archer can save lives. The correct option is: C.",
    "context": "Archer handles emergencies. Gracelyn does not act responsibly. Archer anticipates risks. Remi stays calm. Gracelyn does not act quickly. Archer follows procedures or is vigilant. Archer does not act responsibly. If Archer works under pressure, then he is either vigilant or calm (but not both). If someone has high responsibility, then they perform critical tasks. Remi anticipates risks. For all humans, if they either anticipate risks or operate safely, then they act responsibly. If Archer operates safely, then he either remains focused or handles emergencies (but not both). Archer follows procedures or performs critical tasks. If Archer performs critical tasks, then he either works under pressure or remains focused (but not both). If Remi performs critical tasks, then he either works under pressure or remains focused (but not both). Archer has high responsibility. Gracelyn has high responsibility. Archer stays calm. If Gracelyn operates safely, then he either remains focused or handles emergencies (but not both). If Archer has experience, then he follows procedures and remains focused.",
    "nl2fol": {
      "Archer handles emergencies.": "handles_emergencies(Archer)",
      "Gracelyn does not act responsibly.": "¬acts_responsibly(Gracelyn)",
      "Archer anticipates risks.": "anticipates_risks(Archer)",
      "Remi stays calm.": "stays_calm(Remi)",
      "Gracelyn does not act quickly.": "¬acts_quickly(Gracelyn)",
      "Archer follows procedures or is vigilant.": "follows_procedures(Archer) ∨ is_vigilant(Archer)",
      "Archer does not act responsibly.": "¬acts_responsibly(Archer)",
      "If Archer works under pressure, then he is either vigilant or calm (but not both).": "works_under_pressure(Archer) → (stays_calm(Archer) ⊕ is_vigilant(Archer))",
      "If someone has high responsibility, then they perform critical tasks.": "∀x (has_high_responsibility(x) → performs_critical_tasks(x))",
      "Remi anticipates risks.": "anticipates_risks(Remi)",
      "For all humans, if they either anticipate risks or operate safely, then they act responsibly.": "∀x ((anticipates_risks(x) ⊕ operates_safely(x)) → acts_responsibly(x))",
      "If Archer operates safely, then he either remains focused or handles emergencies (but not both).": "operates_safely(Archer) → (remains_focused(Archer) ⊕ handles_emergencies(Archer))",
      "Archer follows procedures or performs critical tasks.": "follows_procedures(Archer) ∨ performs_critical_tasks(Archer)",
      "If Archer performs critical tasks, then he either works under pressure or remains focused (but not both).": "performs_critical_tasks(Archer) → (works_under_pressure(Archer) ⊕ remains_focused(Archer))",
      "If Remi performs critical tasks, then he either works under pressure or remains focused (but not both).": "performs_critical_tasks(Remi) → (works_under_pressure(Remi) ⊕ remains_focused(Remi))",
      "Archer has high responsibility.": "has_high_responsibility(Archer)",
      "Gracelyn has high responsibility.": "has_high_responsibility(Gracelyn)",
      "Archer stays calm.": "stays_calm(Archer)",
      "If Gracelyn operates safely, then he either remains focused or handles emergencies (but not both).": "operates_safely(Gracelyn) → (remains_focused(Gracelyn) ⊕ handles_emergencies(Gracelyn))",
      "If Archer has experience, then he follows procedures and remains focused.": "has_experience(Archer) → (follows_procedures(Archer) ∧ remains_focused(Archer))"
    },
    "conclusion_fol": "saves_lives(Archer)"
  },
  {
    "id": 475,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Scott is unborn.",
    "reasoning": "fact1: Scott develops a brain.\nrule: All humans who develop a brain will react to stimuli and form senses.\nconclusion: Scott forms senses.\n\nfact1: Scott is not vulnerable.\nrule: If someone depends on others, then they are vulnerable.\nconclusion: Scott does not depend on others.\n\nfact1: Scott does not achieve independence.\nrule: If Scott can walk, then he achieves independence.\nconclusion: Scott cannot walk.\n\nfact1: Scott forms senses.\nfact2: Scott does not require care.\nrule: Everyone who either forms senses or develops organs requires care.\nconclusion: Scott develops organs.\n\nfact1: Scott develops organs.\nfact2: Scott does not depend on others.\nrule: For all humans, if they either develop organs or grow inside their mother, then they depend on others.\nconclusion: Scott grows inside his mother.\n\nfact1: Scott cannot walk.\nrule: For Scott, he either needs nourishment or can walk, but the ability to walk implies he no longer needs nourishment in the same way as before.\nconclusion: Scott needs nourishment.\n\nfact1: Scott grows inside his mother.\nfact2: Scott needs nourishment.\nrule: All humans who grow inside their mother need nourishment and are born.\nconclusion: Scott is born.\n\nfact1: Scott is born.\nrule: For every human, they are either born or unborn, but not both.\nconclusion: Scott is unborn.\n\nTherefore, it is false that Scott is unborn. The correct option is: B.",
    "context": "If Scott is vulnerable, then he either needs protection or forms senses (but not both). Scott is not vulnerable. Everyone who either forms senses or develops organs requires care. If Scott either receives oxygen or gains weight (but not both), then he develops organs. For every human, they are either born or unborn, but not both. All humans who grow inside their mother need nourishment and are born. If Scott can walk, then he achieves independence. For all humans, if they either develop organs or grow inside their mother, then they depend on others. If Scott is a child, then he either needs protection or can walk, but not both. Scott does not require care. If someone depends on others, then they are vulnerable. If Nola can walk, then he achieves independence. Scott develops a brain. For Scott, he either needs nourishment or can walk, but the ability to walk implies he no longer needs nourishment in the same way as before. Scott does not achieve independence. Anyone who develops blood either grows inside the womb or breathes air (or both). All humans who develop a brain will react to stimuli and form senses.",
    "nl2fol": {
      "If Scott is vulnerable, then he either needs protection or forms senses (but not both).": "is_vulnerable(Scott) → (needs_protection(Scott) ⊕ form_senses(Scott))",
      "Scott is not vulnerable.": "¬are_vulnerable(Scott)",
      "Everyone who either forms senses or develops organs requires care.": "∀x ((form_senses(x) ⊕ develop_organs(x)) → require_care(x))",
      "If Scott either receives oxygen or gains weight (but not both), then he develops organs.": "(receive_oxygen(Scott) ⊕ gain_weight(Scott)) → develop_organs(Scott)",
      "For every human, they are either born or unborn, but not both.": "∀x (born(x) ⊕ unborn(x))",
      "All humans who grow inside their mother need nourishment and are born.": "∀x (grow_inside(x) → (need_nourishment(x) ∧ born(x)))",
      "If Scott can walk, then he achieves independence.": "can_walk(Scott) → achieve_independence(Scott)",
      "For all humans, if they either develop organs or grow inside their mother, then they depend on others.": "∀x ((develop_organs(x) ⊕ grow_inside(x)) → depend_on_others(x))",
      "If Scott is a child, then he either needs protection or can walk, but not both.": "is_child(Scott) → (need_protection(Scott) ⊕ can_walk(Scott))",
      "Scott does not require care.": "¬require_care(Scott)",
      "If someone depends on others, then they are vulnerable.": "∀x (depend_on_others(x) → are_vulnerable(x))",
      "If Nola can walk, then he achieves independence.": "can_walk(Nola) → achieve_independence(Nola)",
      "Scott develops a brain.": "develop_brain(Scott)",
      "For Scott, he either needs nourishment or can walk, but the ability to walk implies he no longer needs nourishment in the same way as before.": "can_walk(Scott) ⊕ need_nourishment(Scott)",
      "Scott does not achieve independence.": "¬achieve_independence(Scott)",
      "Anyone who develops blood either grows inside the womb or breathes air (or both).": "∀x (develop_blood(x) → (grow_inside(x) ∨ breathe_air(x)))",
      "All humans who develop a brain will react to stimuli and form senses.": "∀x (develop_brain(x) → (react_to_stimuli(x) ∧ form_senses(x)))"
    },
    "conclusion_fol": "unborn(Scott)"
  },
  {
    "id": 476,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elian has bad taste.",
    "reasoning": "fact1: Elian appreciates culture.\nrule: If Elian appreciates culture, then he travels extensively and collects rare items.\nconclusion: Elian travels extensively.\n\nfact1: Elian has formal education.\nrule: Everyone either has formal education or learns from others, but not both is not necessarily true.\nconclusion: Elian does not learn from others.\n\nfact1: Elian travels extensively.\nfact2: Elian does not learn from others.\nrule: Anyone who travels extensively or learns from others can become experienced.\nconclusion: Elian is experienced.\n\nfact1: Elian is experienced.\nfact2: Elian is sophisticated.\nrule: If Elian is experienced, then he either lacks refinement or is sophisticated, but not both.\nconclusion: Elian does not lack refinement.\n\nfact1: Elian does not lack refinement.\nrule: Elian either lacks refinement or has good taste, but not both.\nconclusion: Elian has good taste.\n\nfact1: Elian has good taste.\nrule: Either Elian has good taste or he has bad taste, but not both.\nconclusion: Elian does not have bad taste.\n\nTherefore, it is false that Elian has bad taste. The correct option is: B.",
    "context": "Either Callahan has good taste or he has bad taste, but not both. Callahan appreciates culture. Elian either lacks refinement or has good taste, but not both. Everyone either has formal education or learns from others, but not both is not necessarily true. Anyone who travels extensively or learns from others can become experienced. If Alfonso is experienced, then he either lacks refinement or is sophisticated, but not both. If Elian understands color or values texture, then he has good taste. Elian has formal education. Either Elian has good taste or he has bad taste, but not both. If Elian appreciates culture, then he travels extensively and collects rare items. If Elian understands aesthetics, then he either creates masterpieces or lacks refinement (or both). If Alfonso appreciates culture, then he travels extensively and collects rare items. Alfonso either lacks refinement or has good taste, but not both. Callahan is sophisticated. Elian is sophisticated. If Elian is experienced, then he either lacks refinement or is sophisticated, but not both. Elian appreciates culture.",
    "nl2fol": {
      "Either Callahan has good taste or he has bad taste, but not both.": "has_good_taste(Callahan) ⊕ has_bad_taste(Callahan)",
      "Callahan appreciates culture.": "appreciates_culture(Callahan)",
      "Elian either lacks refinement or has good taste, but not both.": "lacks_refinement(Elian) ⊕ has_good_taste(Elian)",
      "Everyone either has formal education or learns from others, but not both is not necessarily true.": "∀x (has_formal_education(x) ⊕ learns_from_others(x))",
      "Anyone who travels extensively or learns from others can become experienced.": "∀x ((travels_extensively(x) ∨ learns_from_others(x)) → is_experienced(x))",
      "If Alfonso is experienced, then he either lacks refinement or is sophisticated, but not both.": "is_experienced(Alfonso) → (lacks_refinement(Alfonso) ⊕ is_sophisticated(Alfonso))",
      "If Elian understands color or values texture, then he has good taste.": "(understands_color(Elian) ∨ values_texture(Elian)) → has_good_taste(Elian)",
      "Elian has formal education.": "has_formal_education(Elian)",
      "Either Elian has good taste or he has bad taste, but not both.": "has_good_taste(Elian) ⊕ has_bad_taste(Elian)",
      "If Elian appreciates culture, then he travels extensively and collects rare items.": "appreciates_culture(Elian) → (travels_extensively(Elian) ∧ collects_rare_items(Elian))",
      "If Elian understands aesthetics, then he either creates masterpieces or lacks refinement (or both).": "understands_aesthetics(Elian) → (creates_masterpieces(Elian) ∨ lacks_refinement(Elian))",
      "If Alfonso appreciates culture, then he travels extensively and collects rare items.": "appreciates_culture(Alfonso) → (travels_extensively(Alfonso) ∧ collects_rare_items(Alfonso))",
      "Alfonso either lacks refinement or has good taste, but not both.": "lacks_refinement(Alfonso) ⊕ has_good_taste(Alfonso)",
      "Callahan is sophisticated.": "is_sophisticated(Callahan)",
      "Elian is sophisticated.": "is_sophisticated(Elian)",
      "If Elian is experienced, then he either lacks refinement or is sophisticated, but not both.": "is_experienced(Elian) → (lacks_refinement(Elian) ⊕ is_sophisticated(Elian))",
      "Elian appreciates culture.": "appreciates_culture(Elian)"
    },
    "conclusion_fol": "has_bad_taste(Elian)"
  },
  {
    "id": 477,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kairi is free-spirited.",
    "reasoning": "fact1: Kairi does not pursue creativity.\nrule: Everyone adapts to change or pursues creativity (or both).\nconclusion: Kairi adapts to change.\n\nfact1: Kairi is an artist.\nfact2: Kairi explores uncertainty.\nrule: If Kairi is an artist, then she either embraces chaos or explores uncertainty, but not both.\nconclusion: Kairi does not embrace chaos.\n\nfact1: Kairi does not take risks.\nrule: Kairi either seeks stability or takes risks.\nconclusion: Kairi seeks stability.\n\nfact1: Kairi seeks stability.\nrule: Kairi either thinks outside the box or seeks stability, but not both.\nconclusion: Kairi does not think outside the box.\n\nfact1: Kairi does not embrace chaos.\nfact2: Kairi does not think outside the box.\nrule: If Kairi either embraces chaos or limits her innovation, then she will think outside the box.\nconclusion: Kairi does not limit innovation.\n\nfact1: Kairi does not limit innovation.\nrule: If Kairi is conventional or follows tradition, then she will limit innovation.\nconclusion: Kairi is not conventional.\n\nfact1: Kairi is not conventional.\nrule: Either Kairi is free-spirited or she is conventional, but not both.\nconclusion: Kairi is free-spirited.\n\nTherefore, it is true that Kairi is free-spirited. The correct option is: A.",
    "context": "Kairi does not take risks. Kairi either thinks outside the box or seeks stability, but not both. If Kairi respects authority, then she will follow tradition. Jenesis does not take risks. If Jenesis values order, then she either follows tradition or adapts to change (or both). Hunter explores uncertainty. Either Kairi is free-spirited or she is conventional, but not both. Hunter does not pursue creativity. Everyone adapts to change or pursues creativity (or both). Either Bode is free-spirited or she is conventional, but not both. Jenesis is an artist. Hunter either seeks stability or takes risks. Jenesis does not value order. If Kairi either embraces chaos or limits her innovation, then she will think outside the box. If Kairi is conventional or follows tradition, then she will limit innovation. Kairi either seeks stability or takes risks. Kairi is an artist. Kairi does not pursue creativity. Everyone seeks balance or adapts to change. If Kairi is an artist, then she either embraces chaos or explores uncertainty, but not both. Kairi explores uncertainty.",
    "nl2fol": {
      "Kairi does not take risks.": "¬takes_risks(Kairi)",
      "Kairi either thinks outside the box or seeks stability, but not both.": "thinks_outside_box(Kairi) ⊕ seeks_stability(Kairi)",
      "If Kairi respects authority, then she will follow tradition.": "respects_authority(Kairi) → follows_tradition(Kairi)",
      "Jenesis does not take risks.": "¬takes_risks(Jenesis)",
      "If Jenesis values order, then she either follows tradition or adapts to change (or both).": "values_order(Jenesis) → (follows_tradition(Jenesis) ∨ adapts_to_change(Jenesis))",
      "Hunter explores uncertainty.": "explores_uncertainty(Hunter)",
      "Either Kairi is free-spirited or she is conventional, but not both.": "free_spirited(Kairi) ⊕ conventional(Kairi)",
      "Hunter does not pursue creativity.": "¬pursues_creativity(Hunter)",
      "Everyone adapts to change or pursues creativity (or both).": "∀x (adapts_to_change(x) ∨ pursues_creativity(x))",
      "Either Bode is free-spirited or she is conventional, but not both.": "free_spirited(Bode) ⊕ conventional(Bode)",
      "Jenesis is an artist.": "artist(Jenesis)",
      "Hunter either seeks stability or takes risks.": "seeks_stability(Hunter) ∨ takes_risks(Hunter)",
      "Jenesis does not value order.": "¬values_order(Jenesis)",
      "If Kairi either embraces chaos or limits her innovation, then she will think outside the box.": "(embraces_chaos(Kairi) ∨ limits_innovation(Kairi)) → thinks_outside_box(Kairi)",
      "If Kairi is conventional or follows tradition, then she will limit innovation.": "(conventional(Kairi) ∨ follows_tradition(Kairi)) → limits_innovation(Kairi)",
      "Kairi either seeks stability or takes risks.": "seeks_stability(Kairi) ∨ takes_risks(Kairi)",
      "Kairi is an artist.": "is_artist(Kairi)",
      "Kairi does not pursue creativity.": "¬pursues_creativity(Kairi)",
      "Everyone seeks balance or adapts to change.": "∀x (seeks_balance(x) ∨ adapts_to_change(x))",
      "If Kairi is an artist, then she either embraces chaos or explores uncertainty, but not both.": "is_artist(Kairi) → (embraces_chaos(Kairi) ⊕ explores_uncertainty(Kairi))",
      "Kairi explores uncertainty.": "explores_uncertainty(Kairi)"
    },
    "conclusion_fol": "free_spirited(Kairi)"
  },
  {
    "id": 478,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Silent Patient, Dayana, is insane.",
    "reasoning": "fact1: Dayana has critical thinking.\nfact2: Dayana solves complex problems.\nrule: If someone has critical thinking, then they understand others and solve complex problems.\nconclusion: Dayana understands others.\n\nfact1: Dayana has good listening skills.\nfact2: Dayana can read body language.\nrule: If Dayana has good listening skills, then she either analyzes behavior or can read body language, but not both.\nconclusion: Dayana does not analyze their behavior.\n\nfact1: Dayana understands others.\nfact2: Dayana does not analyze their behavior.\nrule: Everyone who understands others either analyzes their behavior or is empathetic (or both).\nconclusion: Dayana is empathetic.\n\nfact1: Dayana is empathetic.\nfact2: Dayana is not intuitive.\nrule: If Dayana is empathetic, then she is either intuitive or has rational thoughts, but not both.\nconclusion: Dayana has rational thoughts in her interactions with her patients.\n\nfact1: Dayana has rational thoughts in her interactions with her patients.\nrule: Dayana either has rational thoughts or is sane, but not both, in her interactions with her patients.\nconclusion: The Silent Patient, Dayana, is not sane.\n\nfact1: The Silent Patient, Dayana, is not sane.\nrule: For every human, they are either sane or insane, but not both.\nconclusion: The Silent Patient, Dayana, is insane.\n\nTherefore, it is true that The Silent Patient, Dayana, is insane. The correct option is: A.",
    "context": "If Dayana has good listening skills, then she either analyzes behavior or can read body language, but not both. Azriel can read body language. For every human, they are either sane or insane, but not both. Dayana has good listening skills. Dayana solves complex problems. Dayana can read body language. If Dayana either trusts her instinct or values objectivity (but not both), then she is empathetic. If Dayana is empathetic, then she is either intuitive or has rational thoughts, but not both. If someone has critical thinking, then they understand others and solve complex problems. Dayana has critical thinking. Azriel has good listening skills. Dayana either has rational thoughts or is sane, but not both, in her interactions with her patients. Flame has critical thinking. Dayana is not intuitive. Azriel either has rational thoughts or is sane, but not both, in her interactions with her patients. Everyone who understands others either analyzes their behavior or is empathetic (or both). Rylan is not intuitive.",
    "nl2fol": {
      "If Dayana has good listening skills, then she either analyzes behavior or can read body language, but not both.": "has_good_listening_skills(Dayana) → (analyze_behavior(Dayana) ⊕ can_read_body_language(Dayana))",
      "Azriel can read body language.": "can_read_body_language(Azriel)",
      "For every human, they are either sane or insane, but not both.": "∀x (sane(x) ⊕ insane(x))",
      "Dayana has good listening skills.": "has_good_listening_skills(Dayana)",
      "Dayana solves complex problems.": "solve_complex_problems(Dayana)",
      "Dayana can read body language.": "can_read_body_language(Dayana)",
      "If Dayana either trusts her instinct or values objectivity (but not both), then she is empathetic.": "(trusts_instinct(Dayana) ⊕ values_objectivity(Dayana)) → is_empathetic(Dayana)",
      "If Dayana is empathetic, then she is either intuitive or has rational thoughts, but not both.": "is_empathetic(Dayana) → (is_intuitive(Dayana) ⊕ has_rational_thoughts(Dayana))",
      "If someone has critical thinking, then they understand others and solve complex problems.": "∀x (has_critical_thinking(x) → (understand_others(x) ∧ solve_complex_problems(x)))",
      "Dayana has critical thinking.": "has_critical_thinking(Dayana)",
      "Azriel has good listening skills.": "has_good_listening_skills(Azriel)",
      "Dayana either has rational thoughts or is sane, but not both, in her interactions with her patients.": "has_rational_thoughts(Dayana) ⊕ sane(Dayana)",
      "Flame has critical thinking.": "has_critical_thinking(Flame)",
      "Dayana is not intuitive.": "¬is_intuitive(Dayana)",
      "Azriel either has rational thoughts or is sane, but not both, in her interactions with her patients.": "has_rational_thoughts(Azriel) ⊕ sane(Azriel)",
      "Everyone who understands others either analyzes their behavior or is empathetic (or both).": "∀x (understand_others(x) → (analyze_behavior(x) ∨ is_empathetic(x)))",
      "Rylan is not intuitive.": "¬is_intuitive(Rylan)"
    },
    "conclusion_fol": "insane(Dayana)"
  },
  {
    "id": 479,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam fosters economic growth.",
    "reasoning": "fact1: Sam has engineering skills.\nrule: Sam either has engineering skills or designs infrastructure, but not both.\nconclusion: Sam does not design infrastructure.\n\nfact1: Sam cares about others.\nfact2: Sam strives for innovation.\nrule: If Sam cares about others, then he connects isolated areas and strives for innovation.\nconclusion: Sam connects isolated areas.\n\nfact1: Sam succeeds in projects.\nfact2: Sam empowers local residents.\nrule: If Sam succeeds in projects, then he either strengthens social bonds or empowers local residents, but not both.\nconclusion: Sam does not strengthen social bonds.\n\nfact1: Sam overcomes obstacles.\nfact2: Sam does not strengthen social bonds.\nrule: If Sam overcomes obstacles, then he either unites communities or strengthens social bonds (or both).\nconclusion: Sam unites communities.\n\nfact1: Sam does not design infrastructure.\nfact2: Sam connects isolated areas.\nrule: If Sam either designs infrastructure or connects isolated areas (but not both), then he builds bridges.\nconclusion: Sam builds bridges.\n\nfact1: Sam builds bridges.\nfact2: Sam unites communities.\nrule: If Sam builds bridges, then he can either foster economic growth or unite communities, but not both.\nconclusion: Sam does not foster economic growth.\n\nTherefore, it is false that Sam fosters economic growth. The correct option is: B.",
    "context": "If Santiago either designs infrastructure or connects isolated areas (but not both), then he builds bridges. If someone volunteers, then they strengthen social bonds. Sam empowers local residents. If Sam improves lives, then he either enhances public services or unites communities (or both). If Sam builds bridges, then he can either foster economic growth or unite communities, but not both. Sam has engineering skills. If Sam cares about others, then he connects isolated areas and strives for innovation. Sam strives for innovation. Sam cares about others. If Sam values his community, then he will connect isolated areas. If Sam overcomes obstacles, then he either unites communities or strengthens social bonds (or both). Sam either has engineering skills or designs infrastructure, but not both. Shmoopie succeeds in projects. Gracie has engineering skills. If Sam either designs infrastructure or connects isolated areas (but not both), then he builds bridges. Santiago empowers local residents. If Gracie builds bridges, then he can either foster economic growth or unite communities, but not both. If Sam succeeds in projects, then he either strengthens social bonds or empowers local residents, but not both. If Gracie cares about others, then he connects isolated areas and strives for innovation. Sam overcomes obstacles. Santiago cares about others. Sam succeeds in projects.",
    "nl2fol": {
      "If Santiago either designs infrastructure or connects isolated areas (but not both), then he builds bridges.": "(design_infrastructure(Santiago) ⊕ connect_isolated_areas(Santiago)) → build_bridges(Santiago)",
      "If someone volunteers, then they strengthen social bonds.": "∀x (volunteer(x) → strengthen_social_bonds(x))",
      "Sam empowers local residents.": "empower_local_residents(Sam)",
      "If Sam improves lives, then he either enhances public services or unites communities (or both).": "improve_lives(Sam) → (enhance_public_services(Sam) ∨ unite_communities(Sam))",
      "If Sam builds bridges, then he can either foster economic growth or unite communities, but not both.": "build_bridges(Sam) → (foster_economic_growth(Sam) ⊕ unite_communities(Sam))",
      "Sam has engineering skills.": "has_engineering_skills(Sam)",
      "If Sam cares about others, then he connects isolated areas and strives for innovation.": "care_about_others(Sam) → (connect_isolated_areas(Sam) ∧ strive_for_innovation(Sam))",
      "Sam strives for innovation.": "strive_for_innovation(Sam)",
      "Sam cares about others.": "care_about_others(Sam)",
      "If Sam values his community, then he will connect isolated areas.": "value_community(Sam) → connect_isolated_areas(Sam)",
      "If Sam overcomes obstacles, then he either unites communities or strengthens social bonds (or both).": "overcome_obstacles(Sam) → (unite_communities(Sam) ∨ strengthen_social_bonds(Sam))",
      "Sam either has engineering skills or designs infrastructure, but not both.": "has_engineering_skills(Sam) ⊕ design_infrastructure(Sam)",
      "Shmoopie succeeds in projects.": "succeed_in_projects(Shmoopie)",
      "Gracie has engineering skills.": "has_engineering_skills(Gracie)",
      "If Sam either designs infrastructure or connects isolated areas (but not both), then he builds bridges.": "(design_infrastructure(Sam) ⊕ connect_isolated_areas(Sam)) → build_bridges(Sam)",
      "Santiago empowers local residents.": "empower_local_residents(Santiago)",
      "If Gracie builds bridges, then he can either foster economic growth or unite communities, but not both.": "build_bridges(Gracie) → (foster_economic_growth(Gracie) ⊕ unite_communities(Gracie))",
      "If Sam succeeds in projects, then he either strengthens social bonds or empowers local residents, but not both.": "succeed_in_projects(Sam) → (strengthen_social_bonds(Sam) ⊕ empower_local_residents(Sam))",
      "If Gracie cares about others, then he connects isolated areas and strives for innovation.": "care_about_others(Gracie) → (connect_isolated_areas(Gracie) ∧ strive_for_innovation(Gracie))",
      "Sam overcomes obstacles.": "overcome_obstacles(Sam)",
      "Santiago cares about others.": "cares_about_others(Santiago)",
      "Sam succeeds in projects.": "succeed_in_projects(Sam)"
    },
    "conclusion_fol": "foster_economic_growth(Sam)"
  },
  {
    "id": 480,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Either Kinsley is culturally open-minded or culturally close-minded, but not both.",
    "reasoning": "fact1: Kinsley does not have a mentor.\nfact2: Kinsley does not teach others.\nrule: If Kinsley is passionate, then she either has a mentor or teaches others.\nconclusion: Kinsley is not passionate.\n\nfact1: Kinsley is not passionate.\nrule: If someone inspires others, then they are passionate.\nconclusion: Kinsley does not inspire others.\n\nfact1: Kinsley does not inspire others.\nrule: If Kinsley explores new topics, then she shares knowledge and inspires others.\nconclusion: Kinsley does not explore new topics.\n\nfact1: Kinsley does not explore new topics.\nfact2: Kinsley investigates deeper.\nrule: If Kinsley either explores new topics or investigates deeper (but not both), then she is curious.\nconclusion: Kinsley is curious.\n\nfact1: Kinsley is curious.\nfact2: Kinsley is expansive.\nrule: If Kinsley has a narrow focus, then she is either curious or expansive, but not both.\nconclusion: Kinsley does not have a narrow focus.\n\nfact1: Kinsley does not have a narrow focus.\nrule: Kinsley either appreciates diversity or has a narrow focus, but not both.\nconclusion: Kinsley appreciates diversity.\n\nfact1: Kinsley embraces global perspectives.\nrule: Kinsley is either culturally close-minded or embraces global perspectives, but not both.\nconclusion: Kinsley is not culturally close-minded.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Either Kinsley is culturally open-minded or culturally close-minded, but not both. The correct option is: C.",
    "context": "Kiddo does not have a mentor. If Sage has a narrow focus, then she is either curious or expansive, but not both. Kinsley does not have a mentor. Kinsley does not teach others. If Kinsley is passionate, then she either has a mentor or teaches others. If someone asks questions, then they are curious. Kinsley embraces global perspectives. If someone studies a single field and masters one skill, then they have a narrow focus. If Kinsley either explores new topics or investigates deeper (but not both), then she is curious. Kinsley either appreciates diversity or has a narrow focus, but not both. Sage investigates deeper. If Kinsley has a narrow focus, then she is either curious or expansive, but not both. Stone is either culturally close-minded or embraces global perspectives, but not both. Kinsley is expansive. If someone either speaks many languages or values foreign customs (but not both), then they appreciate diversity. Kinsley investigates deeper. If Kinsley explores new topics, then she shares knowledge and inspires others. If someone inspires others, then they are passionate. Kinsley is either culturally close-minded or embraces global perspectives, but not both. If Kinsley either reads widely or asks questions (but not both), then she explores new topics.",
    "nl2fol": {
      "Kiddo does not have a mentor.": "¬has_a_mentor(Kiddo)",
      "If Sage has a narrow focus, then she is either curious or expansive, but not both.": "has_narrow_focus(Sage) → (is_curious(Sage) ⊕ is_expansive(Sage))",
      "Kinsley does not have a mentor.": "¬has_a_mentor(Kinsley)",
      "Kinsley does not teach others.": "¬teaches_others(Kinsley)",
      "If Kinsley is passionate, then she either has a mentor or teaches others.": "is_passionate(Kinsley) → (has_a_mentor(Kinsley) ∨ teaches_others(Kinsley))",
      "If someone asks questions, then they are curious.": "∀x (asks_questions(x) → is_curious(x))",
      "Kinsley embraces global perspectives.": "embraces_global_perspectives(Kinsley)",
      "If someone studies a single field and masters one skill, then they have a narrow focus.": "∀x ((studies_single_field(x) ∧ masters_one_skill(x)) → has_narrow_focus(x))",
      "If Kinsley either explores new topics or investigates deeper (but not both), then she is curious.": "(explores_new_topics(Kinsley) ⊕ investigates_deeper(Kinsley)) → is_curious(Kinsley)",
      "Kinsley either appreciates diversity or has a narrow focus, but not both.": "appreciates_diversity(Kinsley) ⊕ has_narrow_focus(Kinsley)",
      "Sage investigates deeper.": "investigates_deeper(Sage)",
      "If Kinsley has a narrow focus, then she is either curious or expansive, but not both.": "has_narrow_focus(Kinsley) → (is_curious(Kinsley) ⊕ is_expansive(Kinsley))",
      "Stone is either culturally close-minded or embraces global perspectives, but not both.": "embraces_global_perspectives(Stone) ⊕ culturally_close_minde(Stone)",
      "Kinsley is expansive.": "is_expansive(Kinsley)",
      "If someone either speaks many languages or values foreign customs (but not both), then they appreciate diversity.": "∀x ((speaks_many_languages(x) ⊕ values_foreign_customs(x)) → appreciates_diversity(x))",
      "Kinsley investigates deeper.": "investigates_deeper(Kinsley)",
      "If Kinsley explores new topics, then she shares knowledge and inspires others.": "explores_new_topics(Kinsley) → (shares_knowledge(Kinsley) ∧ inspires_others(Kinsley))",
      "If someone inspires others, then they are passionate.": "∀x (inspires_others(x) → is_passionate(x))",
      "Kinsley is either culturally close-minded or embraces global perspectives, but not both.": "embraces_global_perspectives(Kinsley) ⊕ culturally_close_minde(Kinsley)",
      "If Kinsley either reads widely or asks questions (but not both), then she explores new topics.": "(reads_widely(Kinsley) ⊕ asks_questions(Kinsley)) → explores_new_topics(Kinsley)"
    },
    "conclusion_fol": "culturally_open_minde(Kinsley) ⊕ culturally_close_minde(Kinsley)"
  },
  {
    "id": 481,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dash loses agility.",
    "reasoning": "fact1: Dash lives in groups.\nfact2: Dash does not rely on his intelligence.\nrule: If Dash is defensive, then he lives in groups and relies on his intelligence.\nconclusion: Dash does not become defensive.\n\nfact1: Dash does not develop spikes.\nfact2: Dash does not become defensive.\nrule: If Dash either develops spikes or grows sharp claws (but not both), then he will become defensive.\nconclusion: Dash does not grow sharp claws.\n\nfact1: Dash grows in size.\nfact2: Dash did not strengthen his body.\nrule: If Dash grows in size, then he either strengthens his body or develops horns (or both).\nconclusion: Dash develops horns.\n\nfact1: Dash develops horns.\nfact2: Dash does not grow sharp claws.\nrule: If Dash develops horns, then he will either grow sharp claws or thicken his scales, but not both.\nconclusion: Dash thickens his scales.\n\nfact1: Dash thickens his scales.\nfact2: Dash does not become formidable.\nrule: Every dinosaur that either thickens its scales or gains protection will become formidable.\nconclusion: Dash gains protection.\n\nfact1: Dash's body parts ossify.\nfact2: Dash gains protection.\nrule: If Dash's body parts ossify, then he either gains protection or loses agility, but not both.\nconclusion: Dash loses agility.\n\nTherefore, it is false that Dash loses agility. The correct option is: B.",
    "context": "Dash does not develop spikes. If Dash grows in size, then he either strengthens his body or develops horns (or both). Dash grows in size. Dash did not strengthen his body. If Dash's body parts ossify, then he either gains protection or loses agility, but not both. If Dash matures, then he will grow sharp claws. If Dash either raises his scales or bares his teeth (but not both), then he will become defensive. Dash's body parts ossify. If Dash is defensive, then he lives in groups and relies on his intelligence. Dash does not become formidable. If Dash develops horns, then he will either grow sharp claws or thicken his scales, but not both. If Dash either develops spikes or grows sharp claws (but not both), then he will become defensive. Every dinosaur that either thickens its scales or gains protection will become formidable. Dash does not rely on his intelligence. Dash lives in groups.",
    "nl2fol": {
      "Dash does not develop spikes.": "¬develop_spikes(Dash)",
      "If Dash grows in size, then he either strengthens his body or develops horns (or both).": "grow_in_size(Dash) → (strengthen_body(Dash) ∨ develop_horns(Dash))",
      "Dash grows in size.": "grow_in_size(Dash)",
      "Dash did not strengthen his body.": "¬strengthen_body(Dash)",
      "If Dash's body parts ossify, then he either gains protection or loses agility, but not both.": "ossify(Dash) → (gain_protection(Dash) ⊕ lose_agility(Dash))",
      "If Dash matures, then he will grow sharp claws.": "mature(Dash) → grow_sharp_claws(Dash)",
      "If Dash either raises his scales or bares his teeth (but not both), then he will become defensive.": "(raise_scales(Dash) ⊕ bare_teeth(Dash)) → become_defensive(Dash)",
      "Dash's body parts ossify.": "ossify(Dash)",
      "If Dash is defensive, then he lives in groups and relies on his intelligence.": "become_defensive(Dash) → (live_in_groups(Dash) ∧ rely_on_intelligence(Dash))",
      "Dash does not become formidable.": "¬become_formidable(Dash)",
      "If Dash develops horns, then he will either grow sharp claws or thicken his scales, but not both.": "develop_horns(Dash) → (grow_sharp_claws(Dash) ⊕ thicken_scales(Dash))",
      "If Dash either develops spikes or grows sharp claws (but not both), then he will become defensive.": "(develop_spikes(Dash) ⊕ grow_sharp_claws(Dash)) → become_defensive(Dash)",
      "Every dinosaur that either thickens its scales or gains protection will become formidable.": "∀x ((thicken_scales(x) ⊕ gain_protection(x)) → become_formidable(x))",
      "Dash does not rely on his intelligence.": "¬rely_on_intelligence(Dash)",
      "Dash lives in groups.": "live_in_groups(Dash)"
    },
    "conclusion_fol": "lose_agility(Dash)"
  },
  {
    "id": 482,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Devin is adventurous, or an expert in Inca history, or an archaeologist.",
    "reasoning": "fact1: Devin has curiosity.\nfact2: Devin loves challenges.\nrule: If Devin has curiosity or loves challenges, then he is an explorer.\nconclusion: Devin is an explorer.\n\nfact1: Devin reads ancient texts.\nfact2: Devin does not unearth fossils.\nrule: If Devin either reads ancient texts or unearths fossils (but not both), then he collects relics.\nconclusion: Devin collects relics.\n\nfact1: Devin is an explorer.\nfact2: Devin seeks security.\nrule: If Devin is an explorer, then he either takes risks or seeks security, but not both.\nconclusion: Devin does not take risks.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Devin is adventurous, or an expert in Inca history, or an archaeologist. The correct option is: C.",
    "context": "If Devin enjoys travelling, then he is either an explorer or has patience, but not both. If Devin either reads ancient texts or unearths fossils (but not both), then he collects relics. If Devin likes history, then he is either an archaeologist or enjoys museums, but not both. Devin has curiosity. If Brooks studies ancient cultures, then he is either an expert in Inca history or makes groundbreaking discoveries (or both). Devin seeks security. If Devin has curiosity or loves challenges, then he is an explorer. Oaklyn does not unearth fossils. Devin does not unearth fossils. If Stephanie has curiosity or loves challenges, then he is an explorer. If Devin is an explorer, then he either takes risks or seeks security, but not both. Stephanie makes groundbreaking discoveries. Brooks seeks security. Stephanie does not study ancient cultures. Stephanie has curiosity. Devin loves challenges. Devin reads ancient texts. Oaklyn reads ancient texts. Devin either knows many languages or is an expert in Inca history. Anyone who embraces challenges or has a passion for history is adventurous.",
    "nl2fol": {
      "If Devin enjoys travelling, then he is either an explorer or has patience, but not both.": "enjoys_travelling(Devin) → (is_explorer(Devin) ⊕ has_patience(Devin))",
      "If Devin either reads ancient texts or unearths fossils (but not both), then he collects relics.": "(reads_ancient_texts(Devin) ⊕ unearths_fossils(Devin)) → collects_relics(Devin)",
      "If Devin likes history, then he is either an archaeologist or enjoys museums, but not both.": "likes_history(Devin) → (archaeologist(Devin) ⊕ enjoys_museums(Devin))",
      "Devin has curiosity.": "has_curiosity(Devin)",
      "If Brooks studies ancient cultures, then he is either an expert in Inca history or makes groundbreaking discoveries (or both).": "study_ancient_cultures(Brooks) → (expert_in_Inca_history(Brooks) ∨ make_groundbreaking_discoveries(Brooks))",
      "Devin seeks security.": "seeks_security(Devin)",
      "If Devin has curiosity or loves challenges, then he is an explorer.": "(has_curiosity(Devin) ∨ loves_challenges(Devin)) → is_explorer(Devin)",
      "Oaklyn does not unearth fossils.": "¬unearths_fossils(Oaklyn)",
      "Devin does not unearth fossils.": "¬unearths_fossils(Devin)",
      "If Stephanie has curiosity or loves challenges, then he is an explorer.": "(has_curiosity(Stephanie) ∨ loves_challenges(Stephanie)) → is_explorer(Stephanie)",
      "If Devin is an explorer, then he either takes risks or seeks security, but not both.": "is_explorer(Devin) → (takes_risks(Devin) ⊕ seeks_security(Devin))",
      "Stephanie makes groundbreaking discoveries.": "make_groundbreaking_discoveries(Stephanie)",
      "Brooks seeks security.": "seeks_security(Brooks)",
      "Stephanie does not study ancient cultures.": "¬study_ancient_cultures(Stephanie)",
      "Stephanie has curiosity.": "has_curiosity(Stephanie)",
      "Devin loves challenges.": "loves_challenges(Devin)",
      "Devin reads ancient texts.": "reads_ancient_texts(Devin)",
      "Oaklyn reads ancient texts.": "reads_ancient_texts(Oaklyn)",
      "Devin either knows many languages or is an expert in Inca history.": "knows_many_languages(Devin) ∨ expert_in_Inca_history(Devin)",
      "Anyone who embraces challenges or has a passion for history is adventurous.": "∀x ((embraces_challenges(x) ∨ has_passion_for_history(x)) → adventurous(x))"
    },
    "conclusion_fol": "adventurous(Devin) ∨ (expert_in_Inca_history(Devin) ∨ archaeologist(Devin))"
  },
  {
    "id": 483,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hailey does not conserve wildlife.",
    "reasoning": "fact1: Hailey ignores rules.\nrule: If Hailey ignores rules or acts recklessly, then she will disregard waste.\nconclusion: Hailey disregards waste.\n\nfact1: Hailey disregards waste.\nrule: If Hailey disregards waste, then she will litter publicly.\nconclusion: Hailey litters publicly.\n\nfact1: Hailey does not exploit resources.\nfact2: Hailey does not damage the planet.\nrule: If a person either exploits resources or harms the ecosystem, then they damage the planet.\nconclusion: Hailey does not harm the ecosystem.\n\nfact1: Hailey litters publicly.\nfact2: Hailey does not harm the ecosystem.\nrule: For any person, if they either pollute the environment or litter publicly, then they harm the ecosystem.\nconclusion: Hailey pollutes the environment.\n\nfact1: Hailey pollutes the environment.\nrule: If someone pollutes the environment, then they destroy habitats.\nconclusion: Hailey destroys habitat.\n\nfact1: Hailey studies ecology.\nfact2: Hailey destroys habitat.\nrule: If Hailey studies ecology, then she either protects nature or destroys habitat, but not both.\nconclusion: Hailey does not protect nature.\n\nfact1: Hailey does not protect nature.\nrule: Hailey either harms wildlife or protects nature.\nconclusion: Hailey harms wildlife.\n\nfact1: Hailey harms wildlife.\nrule: Hailey either conserves wildlife or harms wildlife, but not both.\nconclusion: Hailey does not conserve wildlife.\n\nTherefore, it is true that Hailey does not conserve wildlife. The correct option is: A.",
    "context": "Kelly ignores rules. Hailey either harms wildlife or protects nature. Hailey studies ecology. Hailey either fosters animals or harms wildlife. If a person either exploits resources or harms the ecosystem, then they damage the planet. Hailey does not exploit resources. If Hailey studies ecology, then she either protects nature or destroys habitat, but not both. Hailey follows regulations or harms the ecosystem. Hailey either conserves wildlife or harms wildlife, but not both. If Kelly ignores rules or acts recklessly, then she will disregard waste. If Hailey disregards laws, then she either faces fines imposed upon her or litters publicly. If someone pollutes the environment, then they destroy habitats. If Kelly disregards waste, then she will litter publicly. If Hailey disregards waste, then she will litter publicly. For any person, if they either pollute the environment or litter publicly, then they harm the ecosystem. Kelly does not exploit resources. If Hailey either wastes water or emits toxins (but not both), then she pollutes the environment. If Hailey ignores rules or acts recklessly, then she will disregard waste. Kelly does not damage the planet. Alia either conserves wildlife or harms wildlife, but not both. Hailey does not damage the planet. Hailey ignores rules.",
    "nl2fol": {
      "Kelly ignores rules.": "ignores_rules(Kelly)",
      "Hailey either harms wildlife or protects nature.": "harm_wildlife(Hailey) ∨ protects_nature(Hailey)",
      "Hailey studies ecology.": "studies_ecology(Hailey)",
      "Hailey either fosters animals or harms wildlife.": "fosters_animals(Hailey) ∨ harm_wildlife(Hailey)",
      "If a person either exploits resources or harms the ecosystem, then they damage the planet.": "∀x ((exploits_resources(x) ⊕ harms_ecosystem(x)) → damages_planet(x))",
      "Hailey does not exploit resources.": "¬exploits_resources(Hailey)",
      "If Hailey studies ecology, then she either protects nature or destroys habitat, but not both.": "studies_ecology(Hailey) → (protects_nature(Hailey) ⊕ destroys_habitat(Hailey))",
      "Hailey follows regulations or harms the ecosystem.": "follows_regulations(Hailey) ∨ harms_ecosystem(Hailey)",
      "Hailey either conserves wildlife or harms wildlife, but not both.": "conserve_wildlife(Hailey) ⊕ harm_wildlife(Hailey)",
      "If Kelly ignores rules or acts recklessly, then she will disregard waste.": "(ignores_rules(Kelly) ∨ acts_recklessly(Kelly)) → disregards_waste(Kelly)",
      "If Hailey disregards laws, then she either faces fines imposed upon her or litters publicly.": "disregards_laws(Hailey) → (fines_imposed(Hailey) ∨ litters_publicly(Hailey))",
      "If someone pollutes the environment, then they destroy habitats.": "∀x (pollutes_environment(x) → destroys_habitat(x))",
      "If Kelly disregards waste, then she will litter publicly.": "disregards_waste(Kelly) → litters_publicly(Kelly)",
      "If Hailey disregards waste, then she will litter publicly.": "disregards_waste(Hailey) → litters_publicly(Hailey)",
      "For any person, if they either pollute the environment or litter publicly, then they harm the ecosystem.": "∀x ((pollutes_environment(x) ⊕ litters_publicly(x)) → harms_ecosystem(x))",
      "Kelly does not exploit resources.": "¬exploits_resources(Kelly)",
      "If Hailey either wastes water or emits toxins (but not both), then she pollutes the environment.": "(wastes_water(Hailey) ⊕ emits_toxins(Hailey)) → pollutes_environment(Hailey)",
      "If Hailey ignores rules or acts recklessly, then she will disregard waste.": "(ignores_rules(Hailey) ∨ acts_recklessly(Hailey)) → disregards_waste(Hailey)",
      "Kelly does not damage the planet.": "¬damages_planet(Kelly)",
      "Alia either conserves wildlife or harms wildlife, but not both.": "conserve_wildlife(Alia) ⊕ harm_wildlife(Alia)",
      "Hailey does not damage the planet.": "¬damages_planet(Hailey)",
      "Hailey ignores rules.": "ignores_rules(Hailey)"
    },
    "conclusion_fol": "¬conserve_wildlife(Hailey)"
  },
  {
    "id": 484,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kelly is successful.",
    "reasoning": "fact1: Kelly loses arguments.\nrule: Kelly either wins cases or loses arguments, but not both.\nconclusion: Kelly does not win her cases.\n\nfact1: Kelly argues logically.\nfact2: Kelly does not secure freedom for her clients.\nrule: If Kelly either argues logically or speaks confidently (but not both), then she secures freedom for her clients.\nconclusion: Kelly speaks confidently.\n\nfact1: Kelly is confident.\nfact2: Kelly does not have strong convictions.\nrule: If someone achieves their goals, then they are confident and have strong convictions.\nconclusion: Kelly does not achieve her goals.\n\nfact1: Kelly works hard.\nfact2: Kelly does not achieve her goals.\nrule: If Kelly is dedicated and works hard, then she achieves her goals.\nconclusion: Kelly is not dedicated.\n\nfact1: Kelly speaks confidently.\nfact2: Kelly does not win her cases.\nrule: If Kelly is either confident in her speech or passionate, then she wins her cases.\nconclusion: Kelly is passionate.\n\nfact1: Kelly is not dedicated.\nfact2: Kelly is passionate.\nrule: If Kelly is either dedicated or passionate (but not both), then she is successful.\nconclusion: Kelly is successful.\n\nTherefore, it is true that Kelly is successful. The correct option is: A.",
    "context": "If Kamiyah is either dedicated or passionate (but not both), then she is successful. If Kamiyah either argues logically or speaks confidently (but not both), then she secures freedom for her clients. Kelly loses arguments. Kelly does not secure freedom for her clients. If someone achieves their goals, then they are confident and have strong convictions. All people who have integrity are dedicated and value justice. If Kelly is either dedicated or passionate (but not both), then she is successful. Cuddlebug does not secure freedom for her clients. If Kelly is either confident in her speech or passionate, then she wins her cases. If Kelly either argues logically or speaks confidently (but not both), then she secures freedom for her clients. If Cuddlebug is either confident in her speech or passionate, then she wins her cases. Kelly works hard. Cuddlebug is confident. If Kelly builds a strong defense, then she will win her cases. Cuddlebug does not have strong convictions. Kelly is confident. If Finley is dedicated and works hard, then she achieves her goals. If Kelly is dedicated and works hard, then she achieves her goals. Kelly does not have strong convictions. Kelly either wins cases or loses arguments, but not both. If Kelly presents arguments, then she either speaks confidently or has authority (or both). If Kelly is persistent, then she either achieves her goals or makes progress, but not both. Kelly argues logically.",
    "nl2fol": {
      "If Kamiyah is either dedicated or passionate (but not both), then she is successful.": "(dedicated(Kamiyah) ⊕ passionate(Kamiyah)) → successful(Kamiyah)",
      "If Kamiyah either argues logically or speaks confidently (but not both), then she secures freedom for her clients.": "(argues_logically(Kamiyah) ⊕ speaks_confidently(Kamiyah)) → secures_freedom(Kamiyah)",
      "Kelly loses arguments.": "loses_arguments(Kelly)",
      "Kelly does not secure freedom for her clients.": "¬secures_freedom(Kelly)",
      "If someone achieves their goals, then they are confident and have strong convictions.": "∀x (achieves_goals(x) → (is_confident(x) ∧ has_strong_convictions(x)))",
      "All people who have integrity are dedicated and value justice.": "∀x (has_integrity(x) → (dedicated(x) ∧ values_justice(x)))",
      "If Kelly is either dedicated or passionate (but not both), then she is successful.": "(dedicated(Kelly) ⊕ passionate(Kelly)) → successful(Kelly)",
      "Cuddlebug does not secure freedom for her clients.": "¬secures_freedom(Cuddlebug)",
      "If Kelly is either confident in her speech or passionate, then she wins her cases.": "(speaks_confidently(Kelly) ⊕ passionate(Kelly)) → wins_cases(Kelly)",
      "If Kelly either argues logically or speaks confidently (but not both), then she secures freedom for her clients.": "(argues_logically(Kelly) ⊕ speaks_confidently(Kelly)) → secures_freedom(Kelly)",
      "If Cuddlebug is either confident in her speech or passionate, then she wins her cases.": "(speaks_confidently(Cuddlebug) ⊕ passionate(Cuddlebug)) → wins_cases(Cuddlebug)",
      "Kelly works hard.": "works_hard(Kelly)",
      "Cuddlebug is confident.": "is_confident(Cuddlebug)",
      "If Kelly builds a strong defense, then she will win her cases.": "builds_strong_defense(Kelly) → wins_cases(Kelly)",
      "Cuddlebug does not have strong convictions.": "¬has_strong_convictions(Cuddlebug)",
      "Kelly is confident.": "is_confident(Kelly)",
      "If Finley is dedicated and works hard, then she achieves her goals.": "(dedicated(Finley) ∧ works_hard(Finley)) → achieves_goals(Finley)",
      "If Kelly is dedicated and works hard, then she achieves her goals.": "(dedicated(Kelly) ∧ works_hard(Kelly)) → achieves_goals(Kelly)",
      "Kelly does not have strong convictions.": "¬has_strong_convictions(Kelly)",
      "Kelly either wins cases or loses arguments, but not both.": "wins_cases(Kelly) ⊕ loses_arguments(Kelly)",
      "If Kelly presents arguments, then she either speaks confidently or has authority (or both).": "presents_arguments(Kelly) → (speaks_confidently(Kelly) ∨ has_authority(Kelly))",
      "If Kelly is persistent, then she either achieves her goals or makes progress, but not both.": "persistent(Kelly) → (achieves_goals(Kelly) ⊕ makes_progress(Kelly))",
      "Kelly argues logically.": "argues_logically(Kelly)"
    },
    "conclusion_fol": "successful(Kelly)"
  },
  {
    "id": 485,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Anastasia cannot communicate with creatures.",
    "reasoning": "fact1: Anastasia understands ecology.\nfact2: Anastasia values sustainability.\nrule: For all beings, if they understand ecology and value sustainability, then they respect balance.\nconclusion: Anastasia respects balance.\n\nfact1: Anastasia does not live harmoniously.\nfact2: Anastasia respects balance.\nrule: Any being that lives harmoniously or respects balance serves nature.\nconclusion: Anastasia serves nature.\n\nfact1: Anastasia serves nature.\nfact2: Anastasia protects wildlife.\nrule: If Anastasia serves nature, then she is either a guardian or protects wildlife, but not both.\nconclusion: Anastasia is not a guardian.\n\nfact1: Anastasia heals nature.\nfact2: Anastasia is not a guardian.\nrule: If Anastasia heals nature, then she either has mystical powers or is a guardian.\nconclusion: Anastasia has mystical powers.\n\nfact1: Anastasia has mystical powers.\nfact2: Anastasia is a nature spirit.\nrule: If Anastasia has mystical powers, then she is either a nature spirit or possesses magical amulets, but not both.\nconclusion: Anastasia does not possess a magical amulet.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Anastasia cannot communicate with creatures. The correct option is: C.",
    "context": "Anastasia understands ecology. If Anastasia serves nature, then she is either a guardian or protects wildlife, but not both. Anyone who defends lakes and preserves wildlife habitats can be a guardian. For all mythical/fantasy beings, if they honor creatures and preserve habitats, then they respect balance. Anastasia is a nature spirit. If Anastasia heals nature, then she either has mystical powers or is a guardian. Anastasia protects wildlife. Anastasia heals nature. For all beings, if they understand ecology and value sustainability, then they respect balance. If Anastasia loves wildlife and senses harmony, then she possesses a magical amulet. Anastasia values sustainability. If Anastasia has mystical powers, then she is either a nature spirit or possesses magical amulets, but not both. Any being that lives harmoniously or respects balance serves nature. Anastasia does not live harmoniously.",
    "nl2fol": {
      "Anastasia understands ecology.": "understands_ecology(Anastasia)",
      "If Anastasia serves nature, then she is either a guardian or protects wildlife, but not both.": "serves_nature(Anastasia) → (is_guardian(Anastasia) ⊕ protects_wildlife(Anastasia))",
      "Anyone who defends lakes and preserves wildlife habitats can be a guardian.": "∀x ((defends_lakes(x) ∧ preserves_wildlife_habitats(x)) → is_guardian(x))",
      "For all mythical/fantasy beings, if they honor creatures and preserve habitats, then they respect balance.": "∀x ((honors_creatures(x) ∧ preserves_habitats(x)) → respects_balance(x))",
      "Anastasia is a nature spirit.": "is_nature_spirit(Anastasia)",
      "If Anastasia heals nature, then she either has mystical powers or is a guardian.": "heals_nature(Anastasia) → (has_mystical_powers(Anastasia) ∨ is_guardian(Anastasia))",
      "Anastasia protects wildlife.": "protects_wildlife(Anastasia)",
      "Anastasia heals nature.": "heals_nature(Anastasia)",
      "For all beings, if they understand ecology and value sustainability, then they respect balance.": "∀x ((understands_ecology(x) ∧ values_sustainability(x)) → respects_balance(x))",
      "If Anastasia loves wildlife and senses harmony, then she possesses a magical amulet.": "love_wildlife(Anastasia) → (sense_harmony(Anastasia) ∧ possess_magical_amulet(Anastasia))",
      "Anastasia values sustainability.": "values_sustainability(Anastasia)",
      "If Anastasia has mystical powers, then she is either a nature spirit or possesses magical amulets, but not both.": "has_mystical_powers(Anastasia) → (is_nature_spirit(Anastasia) ⊕ possess_magical_amulet(Anastasia))",
      "Any being that lives harmoniously or respects balance serves nature.": "∀x ((lives_harmoniously(x) ∨ respects_balance(x)) → serves_nature(x))",
      "Anastasia does not live harmoniously.": "¬lives_harmoniously(Anastasia)"
    },
    "conclusion_fol": "¬communicate_with_creatures(Anastasia)"
  },
  {
    "id": 486,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jade leads expeditions.",
    "reasoning": "fact1: Jade craves challenge.\nfact2: Jade does not desire change.\nrule: Anyone who craves challenge or desires change will seek new experiences.\nconclusion: Jade seeks new experiences.\n\nfact1: Jade seeks new experiences.\nfact2: Jade is not free-spirited.\nrule: For Jade, either enjoying spontaneity or seeking new experiences (but not both) implies being free-spirited.\nconclusion: Jade enjoys spontaneity.\n\nfact1: Jade enjoys spontaneity.\nrule: For Jade, she either enjoys spontaneity or prefers order, but not both.\nconclusion: Jade does not prefer order in her life.\n\nfact1: Jade does not prefer order in her life.\nrule: If someone values routine, then they prefer order in their life.\nconclusion: Jade does not value routine.\n\nfact1: Jade does not value routine.\nrule: Jade either values routine or is adventurous, but not both.\nconclusion: Jade is adventurous.\n\nfact1: Jade is adventurous.\nrule: If Jade is adventurous, then she has secrets knowledge and charts new paths.\nconclusion: Jade charts new paths.\n\nfact1: Jade loves the ocean.\nfact2: Jade has experience.\nrule: If Jade loves the ocean, then she is a seasoned sailor and has experience.\nconclusion: Jade is a seasoned sailor.\n\nfact1: Jade is a seasoned sailor.\nfact2: Jade is not a master cartographer.\nrule: If Jade is a seasoned sailor, then she is either an excellent navigator or a master cartographer, but not both.\nconclusion: Jade is an excellent navigator.\n\nfact1: Jade is an excellent navigator.\nfact2: Jade charts new paths.\nrule: If Jade is an excellent navigator, then she can either lead expeditions or chart new paths, but not both.\nconclusion: Jade leads expeditions.\n\nTherefore, it is false that Jade leads expeditions. The correct option is: B.",
    "context": "Anyone who takes risks and embraces uncertainty is adventurous. Jade is not free-spirited. For Jade, she either enjoys spontaneity or prefers order, but not both. Jade loves the ocean. For Jade, either enjoying spontaneity or seeking new experiences (but not both) implies being free-spirited. Anyone who is a skilled cartographer either charts new paths or explores unseen areas (or both). Jade craves challenge. If someone appreciates precision, then they value routine and take care of details. If Jade is a seasoned sailor, then she is either an excellent navigator or a master cartographer, but not both. If someone values routine, then they prefer order in their life. If Jade loves the ocean, then she is a seasoned sailor and has experience. Jade is not a master cartographer. Anyone who craves challenge or desires change will seek new experiences. If Jade is an excellent navigator, then she can either lead expeditions or chart new paths, but not both. If Jade either follows schedules or plans ahead (but not both), then she prefers order in her life. Jade does not desire change. Jade has experience. If Jade is adventurous, then she has secrets knowledge and charts new paths. Jade either values routine or is adventurous, but not both.",
    "nl2fol": {
      "Anyone who takes risks and embraces uncertainty is adventurous.": "∀x ((takes_risks(x) ∧ embraces_uncertainty(x)) → adventurous(x))",
      "Jade is not free-spirited.": "¬are_free_spirited(Jade)",
      "For Jade, she either enjoys spontaneity or prefers order, but not both.": "enjoy_spontaneity(Jade) ⊕ prefer_order(Jade)",
      "Jade loves the ocean.": "love_ocean(Jade)",
      "For Jade, either enjoying spontaneity or seeking new experiences (but not both) implies being free-spirited.": "(enjoy_spontaneity(Jade) ⊕ seek_new_experiences(Jade)) → are_free_spirited(Jade)",
      "Anyone who is a skilled cartographer either charts new paths or explores unseen areas (or both).": "∀x (skilled_cartographer(x) → (chart_new_paths(x) ∨ explore_unseen_areas(x)))",
      "Jade craves challenge.": "crave_challenge(Jade)",
      "If someone appreciates precision, then they value routine and take care of details.": "∀x (appreciate_precision(x) → (value_routine(x) ∧ take_care_details(x)))",
      "If Jade is a seasoned sailor, then she is either an excellent navigator or a master cartographer, but not both.": "seasoned_sailor(Jade) → (excellent_navigator(Jade) ⊕ master_cartographer(Jade))",
      "If someone values routine, then they prefer order in their life.": "∀x (value_routine(x) → prefer_order(x))",
      "If Jade loves the ocean, then she is a seasoned sailor and has experience.": "love_ocean(Jade) → (seasoned_sailor(Jade) ∧ have_experience(Jade))",
      "Jade is not a master cartographer.": "¬master_cartographer(Jade)",
      "Anyone who craves challenge or desires change will seek new experiences.": "∀x ((crave_challenge(x) ∨ desire_change(x)) → seek_new_experiences(x))",
      "If Jade is an excellent navigator, then she can either lead expeditions or chart new paths, but not both.": "excellent_navigator(Jade) → (lead_expeditions(Jade) ⊕ chart_new_paths(Jade))",
      "If Jade either follows schedules or plans ahead (but not both), then she prefers order in her life.": "(follow_schedules(Jade) ⊕ plan_ahead(Jade)) → prefer_order(Jade)",
      "Jade does not desire change.": "¬desire_change(Jade)",
      "Jade has experience.": "have_experience(Jade)",
      "If Jade is adventurous, then she has secrets knowledge and charts new paths.": "adventurous(Jade) → (know_secrets(Jade) ∧ chart_new_paths(Jade))",
      "Jade either values routine or is adventurous, but not both.": "value_routine(Jade) ⊕ adventurous(Jade)"
    },
    "conclusion_fol": "lead_expeditions(Jade)"
  },
  {
    "id": 487,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kenna is not innovative.",
    "reasoning": "fact1: Kenna learns programming.\nfact2: Kenna enjoys problem solving.\nrule: If someone learns programming and enjoys problem solving, then they write code.\nconclusion: Kenna writes code.\n\nfact1: Kenna has a real-world impact.\nrule: Kenna is either theoretically sound or has a real-world impact, but not both.\nconclusion: Kenna is not theoretically sound.\n\nfact1: Kenna writes code.\nrule: If Kenna writes code, then she is a software engineer.\nconclusion: Kenna is a software engineer.\n\nfact1: Kenna is a software engineer.\nfact2: Kenna is not theoretically sound.\nrule: If Kenna is a software engineer, then she is either theoretically sound or has practical experience, but not both.\nconclusion: Kenna has practical experience.\n\nfact1: Kenna has practical experience.\nrule: Everyone is either intelligent or has practical experience, but the two are not necessarily mutually exclusive.\nconclusion: Kenna is not intelligent.\n\nfact1: Kenna is not intelligent.\nrule: Kenna is intelligent or innovative.\nconclusion: Kenna is innovative.\n\nTherefore, it is false that Kenna is not innovative. The correct option is: B.",
    "context": "Joaquin has a real-world impact. Kenna is intelligent or innovative. If Caroline is a software engineer, then she is either theoretically sound or has practical experience, but not both. Kenna learns programming. Joaquin is either theoretically sound or has a real-world impact, but not both. Everyone is either intelligent or has practical experience, but the two are not necessarily mutually exclusive. If Kenna has specialized knowledge, then she is both theoretically sound and passionate. Anyone who works on projects has practical experience. If someone learns programming and enjoys problem solving, then they write code. If Kenna writes code, then she is a software engineer. If Kenna is a software engineer, then she is either theoretically sound or has practical experience, but not both. Kenna is either theoretically sound or has a real-world impact, but not both. Kenna enjoys problem solving. Caroline enjoys problem solving. If Caroline writes code, then she is a software engineer. If someone reads widely and thinks critically, then they are intelligent. Joaquin learns programming. Kenna has a real-world impact.",
    "nl2fol": {
      "Joaquin has a real-world impact.": "has_real_world_impact(Joaquin)",
      "Kenna is intelligent or innovative.": "intelligent(Kenna) ∨ innovative(Kenna)",
      "If Caroline is a software engineer, then she is either theoretically sound or has practical experience, but not both.": "software_engineer(Caroline) → (has_practical_experience(Caroline) ⊕ theoretically_sound(Caroline))",
      "Kenna learns programming.": "learns_programming(Kenna)",
      "Joaquin is either theoretically sound or has a real-world impact, but not both.": "has_real_world_impact(Joaquin) ⊕ theoretically_sound(Joaquin)",
      "Everyone is either intelligent or has practical experience, but the two are not necessarily mutually exclusive.": "∀x (has_practical_experience(x) ⊕ intelligent(x))",
      "If Kenna has specialized knowledge, then she is both theoretically sound and passionate.": "specialized_knowledge(Kenna) → (passionate(Kenna) ∧ theoretically_sound(Kenna))",
      "Anyone who works on projects has practical experience.": "∀x (works_on_projects(x) → has_practical_experience(x))",
      "If someone learns programming and enjoys problem solving, then they write code.": "∀x ((learns_programming(x) ∧ enjoys_problem_solving(x)) → writes_code(x))",
      "If Kenna writes code, then she is a software engineer.": "writes_code(Kenna) → software_engineer(Kenna)",
      "If Kenna is a software engineer, then she is either theoretically sound or has practical experience, but not both.": "software_engineer(Kenna) → (has_practical_experience(Kenna) ⊕ theoretically_sound(Kenna))",
      "Kenna is either theoretically sound or has a real-world impact, but not both.": "has_real_world_impact(Kenna) ⊕ theoretically_sound(Kenna)",
      "Kenna enjoys problem solving.": "enjoys_problem_solving(Kenna)",
      "Caroline enjoys problem solving.": "enjoys_problem_solving(Caroline)",
      "If Caroline writes code, then she is a software engineer.": "writes_code(Caroline) → software_engineer(Caroline)",
      "If someone reads widely and thinks critically, then they are intelligent.": "∀x ((reads_widely(x) ∧ thinks_critically(x)) → intelligent(x))",
      "Joaquin learns programming.": "learn_programming(Joaquin)",
      "Kenna has a real-world impact.": "has_real_world_impact(Kenna)"
    },
    "conclusion_fol": "¬innovative(Kenna)"
  },
  {
    "id": 488,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Anahi is not culturally curious.",
    "reasoning": "fact1: Anahi speaks multiple languages.\nfact2: Anahi does not foster global understanding.\nrule: If someone has empathy and speaks multiple languages, then they can foster global understanding.\nconclusion: Anahi does not have empathy.\n\nfact1: Anahi does not try new food.\nfact2: Anahi does not love adventure.\nrule: If Anahi explores cities or tries new food, then she loves adventure.\nconclusion: Anahi does not explore cities.\n\nfact1: Anahi does not have empathy.\nfact2: Anahi cannot build bridges between people.\nrule: Anyone who is sociable or has empathy can build bridges between people.\nconclusion: Anahi is not sociable.\n\nfact1: Anahi enjoys solitude.\nfact2: Anahi is not sociable.\nrule: If Anahi either prioritizes community or enjoys solitude (but not both), then she is sociable.\nconclusion: Anahi prioritizes community.\n\nfact1: Anahi prioritizes community.\nrule: Anahi either values independence or prioritizes community, but not both.\nconclusion: Anahi does not value independence.\n\nfact1: Anahi does not explore cities.\nfact2: Anahi does not value independence.\nrule: If Anahi either travels alone or explores cities (but not both), then she values independence.\nconclusion: Anahi does not travel alone.\n\nfact1: Anahi is open-minded.\nfact2: Anahi does not share personal stories.\nrule: If Anahi is open-minded, then she either shares personal stories or forges meaningful connections (but not both).\nconclusion: Anahi forges meaningful connections.\n\nfact1: Anahi does not travel alone.\nrule: Anahi either receives warm hospitality or travels alone, but not both.\nconclusion: Anahi receives warm hospitality.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Anahi is not culturally curious. The correct option is: C.",
    "context": "Anyone who listens actively or shares stories can forge meaningful connections. Santana does not try new food. Anahi speaks multiple languages. Everyone values kindness or has empathy. If Davina is open-minded, then she either shares personal stories or forges meaningful connections (but not both). Anahi either receives warm hospitality or travels alone, but not both. Anahi does not foster global understanding. Anyone who is sociable or has empathy can build bridges between people. Anahi enjoys solitude. If Anahi either prioritizes community or enjoys solitude (but not both), then she is sociable. Anahi does not love adventure. If someone has empathy and speaks multiple languages, then they can foster global understanding. Anahi cannot build bridges between people. If Anahi either travels alone or explores cities (but not both), then she values independence. Anahi does not try new food. If Anahi has travel stories and documents experiences, then she can explore cities. If Anahi either has no fixed address or keeps to herself (but not both), then she tends to travel alone. If Anahi explores cities or tries new food, then she loves adventure. Anahi either values independence or prioritizes community, but not both. If Anahi is open-minded, then she either shares personal stories or forges meaningful connections (but not both). Santana does not love adventure. Anahi is open-minded. Anahi does not share personal stories.",
    "nl2fol": {
      "Anyone who listens actively or shares stories can forge meaningful connections.": "∀x ((listens_actively(x) ∨ shares_stories(x)) → forge_meaningful_connections(x))",
      "Santana does not try new food.": "¬tries_new_food(Santana)",
      "Anahi speaks multiple languages.": "speaks_multiple_languages(Anahi)",
      "Everyone values kindness or has empathy.": "∀x (values_kindness(x) ∨ has_empathy(x))",
      "If Davina is open-minded, then she either shares personal stories or forges meaningful connections (but not both).": "is_open_minded(Davina) → (shares_personally(Davina) ⊕ forge_meaningful_connections(Davina))",
      "Anahi either receives warm hospitality or travels alone, but not both.": "receive_warm_hospitality(Anahi) ⊕ travels_alone(Anahi)",
      "Anahi does not foster global understanding.": "¬fosters_global_understanding(Anahi)",
      "Anyone who is sociable or has empathy can build bridges between people.": "∀x ((is_sociable(x) ∨ has_empathy(x)) → builds_bridges(x))",
      "Anahi enjoys solitude.": "enjoys_solitude(Anahi)",
      "If Anahi either prioritizes community or enjoys solitude (but not both), then she is sociable.": "(prioritizes_community(Anahi) ⊕ enjoys_solitude(Anahi)) → is_sociable(Anahi)",
      "Anahi does not love adventure.": "¬loves_adventure(Anahi)",
      "If someone has empathy and speaks multiple languages, then they can foster global understanding.": "∀x ((has_empathy(x) ∧ speaks_multiple_languages(x)) → fosters_global_understanding(x))",
      "Anahi cannot build bridges between people.": "¬builds_bridges(Anahi)",
      "If Anahi either travels alone or explores cities (but not both), then she values independence.": "(travels_alone(Anahi) ⊕ explores_cities(Anahi)) → values_independence(Anahi)",
      "Anahi does not try new food.": "¬tries_new_food(Anahi)",
      "If Anahi has travel stories and documents experiences, then she can explore cities.": "(has_travel_stories(Anahi) ∧ documents_experiences(Anahi)) → explores_cities(Anahi)",
      "If Anahi either has no fixed address or keeps to herself (but not both), then she tends to travel alone.": "(has_no_fixed_address(Anahi) ⊕ keeps_to_herself(Anahi)) → travels_alone(Anahi)",
      "If Anahi explores cities or tries new food, then she loves adventure.": "(explores_cities(Anahi) ∨ tries_new_food(Anahi)) → loves_adventure(Anahi)",
      "Anahi either values independence or prioritizes community, but not both.": "values_independence(Anahi) ⊕ prioritizes_community(Anahi)",
      "If Anahi is open-minded, then she either shares personal stories or forges meaningful connections (but not both).": "is_open_minded(Anahi) → (shares_personally(Anahi) ⊕ forge_meaningful_connections(Anahi))",
      "Santana does not love adventure.": "¬loves_adventure(Santana)",
      "Anahi is open-minded.": "is_open_minded(Anahi)",
      "Anahi does not share personal stories.": "¬shares_personally(Anahi)"
    },
    "conclusion_fol": "¬culturally_curious(Anahi)"
  },
  {
    "id": 489,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Simba will not face danger.",
    "reasoning": "fact1: Simba feels invincible.\nfact2: Simba does not assert dominance.\nrule: Every lion who feels invincible either asserts dominance or has confidence (or both).\nconclusion: Simba has confidence.\n\nfact1: Simba has confidence.\nfact2: Simba seeks adventure.\nrule: For all lions, if they have confidence and seek adventure, then they take risks.\nconclusion: Simba takes risks.\n\nfact1: Simba takes risks.\nfact2: Simba does not develop caution.\nrule: Every lion who takes risks either develops caution or learns from mistakes (or both).\nconclusion: Simba learns from mistakes.\n\nfact1: Simba learns from mistakes.\nfact2: Simba does not listen to others.\nrule: If Simba either learns from mistakes or listens to others (but not both), then he values wisdom.\nconclusion: Simba values wisdom.\n\nfact1: Simba values wisdom.\nfact2: Simba respects experience.\nrule: If Simba values wisdom and respects experience, then he follows the advice of his elders.\nconclusion: Simba follows the advice of his elders.\n\nfact1: Simba follows the advice of his elders.\nrule: Simba either follows the advice of his elders or exhibits impulsive behavior, but not both.\nconclusion: Simba does not exhibit impulsive behavior.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Simba will not face danger. The correct option is: C.",
    "context": "Simba feels invincible. If Simba either learns from mistakes or listens to others (but not both), then he values wisdom. Yummers feels invincible. Simba does not develop caution. Simba either follows the advice of his elders or exhibits impulsive behavior, but not both. Simba seeks adventure. Simba respects experience. If Simba avoids reckless behavior, then he values wisdom. Rhys respects experience. Every lion who feels invincible either asserts dominance or has confidence (or both). Every lion who takes risks either develops caution or learns from mistakes (or both). For all lions, if they have confidence and seek adventure, then they take risks. If Simba values wisdom and respects experience, then he follows the advice of his elders. Any lion that respects tradition or values prudence follows the advice of their elders. Simba does not listen to others. Simba does not assert dominance.",
    "nl2fol": {
      "Simba feels invincible.": "feels_invincible(Simba)",
      "If Simba either learns from mistakes or listens to others (but not both), then he values wisdom.": "(learns_from_mistakes(Simba) ⊕ listens_to_others(Simba)) → values_wisdom(Simba)",
      "Yummers feels invincible.": "feels_invincible(Yummers)",
      "Simba does not develop caution.": "¬develops_caution(Simba)",
      "Simba either follows the advice of his elders or exhibits impulsive behavior, but not both.": "follow_elders_advice(Simba) ⊕ exhibit_impulsive_behavior(Simba)",
      "Simba seeks adventure.": "seeks_adventure(Simba)",
      "Simba respects experience.": "respects_experience(Simba)",
      "If Simba avoids reckless behavior, then he values wisdom.": "avoids_reckless_behavior(Simba) → values_wisdom(Simba)",
      "Rhys respects experience.": "respects_experience(Rhys)",
      "Every lion who feels invincible either asserts dominance or has confidence (or both).": "∀x (feels_invincible(x) → (asserts_dominance(x) ∨ has_confidence(x)))",
      "Every lion who takes risks either develops caution or learns from mistakes (or both).": "∀x (takes_risks(x) → (develops_caution(x) ∨ learns_from_mistakes(x)))",
      "For all lions, if they have confidence and seek adventure, then they take risks.": "∀x ((has_confidence(x) ∧ seeks_adventure(x)) → takes_risks(x))",
      "If Simba values wisdom and respects experience, then he follows the advice of his elders.": "(values_wisdom(Simba) ∧ respects_experience(Simba)) → follow_elders_advice(Simba)",
      "Any lion that respects tradition or values prudence follows the advice of their elders.": "∀x ((respects_tradition(x) ∨ values_prudence(x)) → follow_elders_advice(x))",
      "Simba does not listen to others.": "¬listens_to_others(Simba)",
      "Simba does not assert dominance.": "¬asserts_dominance(Simba)"
    },
    "conclusion_fol": "¬face_danger(Simba)"
  },
  {
    "id": 490,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Meredith does not leave a lasting legacy.",
    "reasoning": "fact1: Meredith has a generous spirit.\nfact2: Meredith values collaboration.\nrule: All people with a generous spirit share credit and value collaboration.\nconclusion: Meredith shares credit.\n\nfact1: Meredith shares credit.\nfact2: Meredith does not attribute success.\nrule: If Meredith either shares credit or attributes success (but not both), then she remains humble.\nconclusion: Meredith remains humble.\n\nfact1: Meredith remains humble.\nrule: Meredith either remains humble or receives awards, but not necessarily both.\nconclusion: Meredith does not receive awards.\n\nfact1: Meredith makes breakthroughs.\nfact2: Meredith does not receive awards.\nrule: If Meredith makes breakthroughs, then she either receives awards or craves fame (or both).\nconclusion: Meredith craves fame.\n\nfact1: Meredith craves fame.\nrule: Anyone who craves fame will hunt for recognition.\nconclusion: Meredith hunts for recognition.\n\nfact1: Meredith hunts for recognition.\nrule: Meredith either has selfless dedication or hunts for recognition, but not both.\nconclusion: Meredith does not have selfless dedication.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Meredith does not leave a lasting legacy. The correct option is: C.",
    "context": "Anyone who puts others first or works tirelessly has selfless dedication. All people with a generous spirit share credit and value collaboration. Faye has a generous spirit. Girlfriend values collaboration. Faye is not a renowned expert. Meredith either has selfless dedication or hunts for recognition, but not both. Girlfriend makes breakthroughs. Anyone who craves fame will hunt for recognition. Meredith makes breakthroughs. Lewis does not attribute success. Meredith has a generous spirit. If Lewis either shares credit or attributes success (but not both), then she remains humble. Meredith does not attribute success. Lewis either remains humble or receives awards, but not necessarily both. Anyone who seeks validation will hunt for recognition. If Lewis is either a renowned expert or has selfless dedication (but not both), then she leaves a lasting legacy. If Meredith is modest, then she either shares credit or deflects accolades, but not both. Meredith values collaboration. If Meredith makes breakthroughs, then she either receives awards or craves fame (or both). Meredith either remains humble or receives awards, but not necessarily both. Faye either has selfless dedication or hunts for recognition, but not both. If Meredith either shares credit or attributes success (but not both), then she remains humble.",
    "nl2fol": {
      "Anyone who puts others first or works tirelessly has selfless dedication.": "∀x ((puts_others_first(x) ∨ works_tirelessly(x)) → selfless_dedication(x))",
      "All people with a generous spirit share credit and value collaboration.": "∀x (generous_spirit(x) → (shares_credit(x) ∧ values_collaboration(x)))",
      "Faye has a generous spirit.": "generous_spirit(Faye)",
      "Girlfriend values collaboration.": "values_collaboration(Girlfriend)",
      "Faye is not a renowned expert.": "¬renowned_expert(Faye)",
      "Meredith either has selfless dedication or hunts for recognition, but not both.": "hunts_for_recognition(Meredith) ⊕ selfless_dedication(Meredith)",
      "Girlfriend makes breakthroughs.": "makes_breakthroughs(Girlfriend)",
      "Anyone who craves fame will hunt for recognition.": "∀x (craves_fame(x) → hunts_for_recognition(x))",
      "Meredith makes breakthroughs.": "makes_breakthroughs(Meredith)",
      "Lewis does not attribute success.": "¬attributes_success(Lewis)",
      "Meredith has a generous spirit.": "generous_spirit(Meredith)",
      "If Lewis either shares credit or attributes success (but not both), then she remains humble.": "(shares_credit(Lewis) ⊕ attributes_success(Lewis)) → remains_humble(Lewis)",
      "Meredith does not attribute success.": "¬attributes_success(Meredith)",
      "Lewis either remains humble or receives awards, but not necessarily both.": "remains_humble(Lewis) ⊕ receives_awards(Lewis)",
      "Anyone who seeks validation will hunt for recognition.": "∀x (seeks_validation(x) → hunts_for_recognition(x))",
      "If Lewis is either a renowned expert or has selfless dedication (but not both), then she leaves a lasting legacy.": "(renowned_expert(Lewis) ⊕ selfless_dedication(Lewis)) → lasting_legacy(Lewis)",
      "If Meredith is modest, then she either shares credit or deflects accolades, but not both.": "is_modest(Meredith) → (shares_credit(Meredith) ⊕ deflects_accolades(Meredith))",
      "Meredith values collaboration.": "values_collaboration(Meredith)",
      "If Meredith makes breakthroughs, then she either receives awards or craves fame (or both).": "makes_breakthroughs(Meredith) → (receives_awards(Meredith) ∨ craves_fame(Meredith))",
      "Meredith either remains humble or receives awards, but not necessarily both.": "remains_humble(Meredith) ⊕ receives_awards(Meredith)",
      "Faye either has selfless dedication or hunts for recognition, but not both.": "hunts_for_recognition(Faye) ⊕ selfless_dedication(Faye)",
      "If Meredith either shares credit or attributes success (but not both), then she remains humble.": "(shares_credit(Meredith) ⊕ attributes_success(Meredith)) → remains_humble(Meredith)"
    },
    "conclusion_fol": "¬lasting_legacy(Meredith)"
  },
  {
    "id": 491,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cason is not resilient.",
    "reasoning": "fact1: Cason is an endangered plant.\nfact2: Cason grows rapidly.\nrule: If Cason is an endangered plant, then it either grows rapidly or survives extremes, but not both.\nconclusion: Cason cannot survive extremes.\n\nfact1: Cason does not develop roots.\nfact2: Cason cannot survive extremes.\nrule: If Cason either develops roots or blooms in water (but not both), then it can survive extremes.\nconclusion: Cason does not bloom in water.\n\nfact1: Cason needs sunlight.\nfact2: Cason tolerates shade.\nrule: If Cason needs sunlight, then it either requires constant watering or tolerates shade, but not both.\nconclusion: Cason does not require constant watering.\n\nfact1: Cason does not bloom in water.\nrule: Cason either exudes gel or blooms in water, but not both.\nconclusion: Cason exudes gel.\n\nfact1: Cason does not require constant watering.\nrule: For Cason, either it requires constant watering or produces soothing gel, but not both.\nconclusion: Cason produces soothing gel.\n\nfact1: Cason exudes gel.\nfact2: Cason does not prosper in harsh environments.\nrule: Any plant that exudes gel either prospers in harsh environments or thrives in arid conditions (or both).\nconclusion: Cason thrives in arid conditions.\n\nfact1: Cason thrives in arid conditions.\nrule: Cason either has healing properties or thrives in arid conditions, but not both.\nconclusion: Cason does not have healing properties.\n\nfact1: Cason does not have healing properties.\nfact2: Cason produces soothing gel.\nrule: If Cason either has healing properties or produces soothing gel (but not both), then it is medicinal.\nconclusion: Cason is medicinal.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Cason is not resilient. The correct option is: C.",
    "context": "Cason does not prosper in harsh environments. If a plant has a waxy coating and stores water, then it thrives in arid conditions. Cason tolerates shade. Any plant that exudes gel either prospers in harsh environments or thrives in arid conditions (or both). If Cason either develops roots or blooms in water (but not both), then it can survive extremes. If Cason is an endangered plant, then it either grows rapidly or survives extremes, but not both. For Cason, either it requires constant watering or produces soothing gel, but not both. Cason either exudes gel or blooms in water, but not both. Cason either has healing properties or thrives in arid conditions, but not both. If Cason has adaptive leaves, then it can survive extremes. If Cason either has healing properties or produces soothing gel (but not both), then it is medicinal. Cason needs sunlight. If Cason needs sunlight, then it either requires constant watering or tolerates shade, but not both. Cason grows rapidly. Cason is an endangered plant. Cason does not develop roots.",
    "nl2fol": {
      "Cason does not prosper in harsh environments.": "¬prosper_in_harsh_env(Cason)",
      "If a plant has a waxy coating and stores water, then it thrives in arid conditions.": "∀x ((has_waxy_coating(x) ∧ stores_water(x)) → thrives_in_arid_conditions(x))",
      "Cason tolerates shade.": "tolerates_shade(Cason)",
      "Any plant that exudes gel either prospers in harsh environments or thrives in arid conditions (or both).": "∀x (exudes_gel(x) → (prosper_in_harsh_env(x) ∨ thrives_in_arid_conditions(x)))",
      "If Cason either develops roots or blooms in water (but not both), then it can survive extremes.": "(develops_roots(Cason) ⊕ bloom_in_water(Cason)) → survives_extremes(Cason)",
      "If Cason is an endangered plant, then it either grows rapidly or survives extremes, but not both.": "is_endangered(Cason) → (grows_rapidly(Cason) ⊕ survives_extremes(Cason))",
      "For Cason, either it requires constant watering or produces soothing gel, but not both.": "requires_constant_watering(Cason) ⊕ produces_soothing_gel(Cason)",
      "Cason either exudes gel or blooms in water, but not both.": "exudes_gel(Cason) ⊕ bloom_in_water(Cason)",
      "Cason either has healing properties or thrives in arid conditions, but not both.": "has_healing_properties(Cason) ⊕ thrives_in_arid_conditions(Cason)",
      "If Cason has adaptive leaves, then it can survive extremes.": "has_adaptive_leaves(Cason) → survives_extremes(Cason)",
      "If Cason either has healing properties or produces soothing gel (but not both), then it is medicinal.": "(has_healing_properties(Cason) ⊕ produces_soothing_gel(Cason)) → medicinal(Cason)",
      "Cason needs sunlight.": "needs_sunlight(Cason)",
      "If Cason needs sunlight, then it either requires constant watering or tolerates shade, but not both.": "needs_sunlight(Cason) → (tolerates_shade(Cason) ⊕ requires_constant_watering(Cason))",
      "Cason grows rapidly.": "grows_rapidly(Cason)",
      "Cason is an endangered plant.": "is_endangered(Cason)",
      "Cason does not develop roots.": "¬develops_roots(Cason)"
    },
    "conclusion_fol": "¬resilient(Cason)"
  },
  {
    "id": 492,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Natalie does not understand ecological balance.",
    "reasoning": "fact1: Natalie listens intently.\nfact2: Natalie does not sense her environment.\nrule: Everyone who listens intently either notices details or senses their environment (or both).\nconclusion: Natalie notices details.\n\nfact1: Natalie values serenity.\nfact2: Natalie notices details.\nrule: Anyone who values serenity and notices details can appreciate scenery.\nconclusion: Natalie appreciates scenery.\n\nfact1: Natalie enjoys hiking.\nfact2: Natalie appreciates scenery.\nrule: Anyone who enjoys hiking or appreciates scenery loves the outdoors.\nconclusion: Natalie loves the outdoors.\n\nfact1: Natalie loves the outdoors.\nfact2: Natalie is not an animal lover.\nrule: If Natalie loves the outdoors, then she is either an animal lover or a conservationist (but not both).\nconclusion: Natalie works as a conservationist.\n\nfact1: Natalie works as a conservationist.\nfact2: Natalie has a green thumb.\nrule: If Natalie works as a conservationist, then she either has a green thumb or lives near nature, but not both.\nconclusion: Natalie does not live near nature.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Natalie does not understand ecological balance. The correct option is: C.",
    "context": "Natalie listens intently. Anyone who enjoys hiking or appreciates scenery loves the outdoors. Jaxton values serenity. If Jaxton works as a conservationist, then she either has a green thumb or lives near nature, but not both. Jaxton listens intently. Natalie does not sense her environment. If Natalie either reads books or examines data (but not both), then she tends to notice details. If Lorenzo loves the outdoors, then she is either an animal lover or a conservationist (but not both). Natalie values serenity. If Natalie works as a conservationist, then she either has a green thumb or lives near nature, but not both. If Natalie loves the outdoors, then she is either an animal lover or a conservationist (but not both). If Natalie respects nature, then she communicates effectively and works as a conservationist. Natalie has a green thumb. Natalie is not an animal lover. Everyone who spends time outdoors either connects with nature or appreciates scenery (or both). Everyone who listens intently either notices details or senses their environment (or both). Natalie enjoys hiking. Anyone who values serenity and notices details can appreciate scenery.",
    "nl2fol": {
      "Natalie listens intently.": "listen_intently(Natalie)",
      "Anyone who enjoys hiking or appreciates scenery loves the outdoors.": "∀x ((enjoy_hiking(x) ∨ appreciate_scenery(x)) → love_outdoors(x))",
      "Jaxton values serenity.": "values_serenity(Jaxton)",
      "If Jaxton works as a conservationist, then she either has a green thumb or lives near nature, but not both.": "work_as_conservationist(Jaxton) → (have_green_thumb(Jaxton) ⊕ live_near_nature(Jaxton))",
      "Jaxton listens intently.": "listen_intently(Jaxton)",
      "Natalie does not sense her environment.": "¬sense_environment(Natalie)",
      "If Natalie either reads books or examines data (but not both), then she tends to notice details.": "(reads_books(Natalie) ⊕ examines_data(Natalie)) → notice_details(Natalie)",
      "If Lorenzo loves the outdoors, then she is either an animal lover or a conservationist (but not both).": "love_outdoors(Lorenzo) → (be_animal_lover(Lorenzo) ⊕ work_as_conservationist(Lorenzo))",
      "Natalie values serenity.": "value_serenity(Natalie)",
      "If Natalie works as a conservationist, then she either has a green thumb or lives near nature, but not both.": "work_as_conservationist(Natalie) → (have_green_thumb(Natalie) ⊕ live_near_nature(Natalie))",
      "If Natalie loves the outdoors, then she is either an animal lover or a conservationist (but not both).": "love_outdoors(Natalie) → (be_animal_lover(Natalie) ⊕ work_as_conservationist(Natalie))",
      "If Natalie respects nature, then she communicates effectively and works as a conservationist.": "respect_nature(Natalie) → (communicate_effectively(Natalie) ∧ work_as_conservationist(Natalie))",
      "Natalie has a green thumb.": "have_green_thumb(Natalie)",
      "Natalie is not an animal lover.": "¬be_animal_lover(Natalie)",
      "Everyone who spends time outdoors either connects with nature or appreciates scenery (or both).": "∀x (spend_time_outdoors(x) → (connect_with_nature(x) ∨ appreciate_scenery(x)))",
      "Everyone who listens intently either notices details or senses their environment (or both).": "∀x (listen_intently(x) → (notice_details(x) ∨ sense_environment(x)))",
      "Natalie enjoys hiking.": "enjoy_hiking(Natalie)",
      "Anyone who values serenity and notices details can appreciate scenery.": "∀x ((value_serenity(x) ∧ notice_details(x)) → appreciate_scenery(x))"
    },
    "conclusion_fol": "¬understand_ecological_balance(Natalie)"
  },
  {
    "id": 493,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "A",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Huxley is dedicated to his work.",
    "reasoning": "fact1: Huxley is self-motivated.\nrule: If Huxley is self-motivated, then he is perfectionistic and strives for excellence.\nconclusion: Huxley is perfectionistic.\n\nfact1: Huxley does not work hard.\nrule: Huxley works hard or focuses intensely.\nconclusion: Huxley focuses intensely.\n\nfact1: Huxley is perfectionistic.\nfact2: Huxley avoids the spotlight.\nrule: If Huxley is perfectionistic, then he avoids the spotlight and values his privacy.\nconclusion: Huxley values privacy.\n\nfact1: Huxley values privacy.\nfact2: Huxley focuses intensely.\nrule: Anyone who values privacy and focuses intensely tends to prefer solitude.\nconclusion: Huxley prefers solitude.\n\nfact1: Huxley prefers solitude.\nrule: Huxley is either renowned or prefers solitude, but not necessarily both.\nconclusion: Huxley is not renowned.\n\nfact1: Huxley is not renowned.\nrule: Huxley is either renowned or dedicated to his work (or both).\nconclusion: Huxley is dedicated to his work.\n\nTherefore, it is true that Huxley is dedicated to his work. The correct option is: A.",
    "context": "If Melissa is perfectionistic, then he avoids the spotlight and values his privacy. Huxley is either renowned or dedicated to his work (or both). If Huxley is self-motivated, then he is perfectionistic and strives for excellence. Huxley does not work hard. If Huxley is perfectionistic, then he avoids the spotlight and values his privacy. Huxley enjoys nature or prefers solitude. If someone sets high standards and pursues quality, then they are perfectionistic. If Huxley is pursuing a PhD, then he is either renowned or receiving grants (but not both). Iris works hard or focuses intensely. Anyone who values privacy and focuses intensely tends to prefer solitude. Huxley avoids the spotlight. Huxley is either renowned or prefers solitude, but not necessarily both. Huxley is self-motivated. Huxley works hard or focuses intensely. If Tate is self-motivated, then he is perfectionistic and strives for excellence.",
    "nl2fol": {
      "If Melissa is perfectionistic, then he avoids the spotlight and values his privacy.": "perfectionistic(Melissa) → (avoids_spotlight(Melissa) ∧ values_privacy(Melissa))",
      "Huxley is either renowned or dedicated to his work (or both).": "renowned(Huxley) ∨ dedicated(Huxley)",
      "If Huxley is self-motivated, then he is perfectionistic and strives for excellence.": "self_motivated(Huxley) → (perfectionistic(Huxley) ∧ strives_excellence(Huxley))",
      "Huxley does not work hard.": "¬works_hard(Huxley)",
      "If Huxley is perfectionistic, then he avoids the spotlight and values his privacy.": "perfectionistic(Huxley) → (avoids_spotlight(Huxley) ∧ values_privacy(Huxley))",
      "Huxley enjoys nature or prefers solitude.": "enjoys_nature(Huxley) ∨ prefers_solitude(Huxley)",
      "If someone sets high standards and pursues quality, then they are perfectionistic.": "∀x ((sets_high_standards(x) ∧ pursues_quality(x)) → perfectionistic(x))",
      "If Huxley is pursuing a PhD, then he is either renowned or receiving grants (but not both).": "pursues_phd(Huxley) → (renowned(Huxley) ⊕ receives_grants(Huxley))",
      "Iris works hard or focuses intensely.": "works_hard(Iris) ∨ focuses_intensely(Iris)",
      "Anyone who values privacy and focuses intensely tends to prefer solitude.": "∀x ((values_privacy(x) ∧ focuses_intensely(x)) → prefers_solitude(x))",
      "Huxley avoids the spotlight.": "avoids_spotlight(Huxley)",
      "Huxley is either renowned or prefers solitude, but not necessarily both.": "prefers_solitude(Huxley) ⊕ renowned(Huxley)",
      "Huxley is self-motivated.": "self_motivated(Huxley)",
      "Huxley works hard or focuses intensely.": "works_hard(Huxley) ∨ focuses_intensely(Huxley)",
      "If Tate is self-motivated, then he is perfectionistic and strives for excellence.": "self_motivated(Tate) → (perfectionistic(Tate) ∧ strives_excellence(Tate))"
    },
    "conclusion_fol": "dedicated(Huxley)"
  },
  {
    "id": 494,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Raul can improve the community.",
    "reasoning": "fact1: Raul owns a big plot of land.\nfact2: Raul needs extra help.\nrule: If Raul owns a big plot of land and needs extra help, then he will employ workers.\nconclusion: Raul employs workers.\n\nfact1: Raul employs workers.\nfact2: Raul does not mechanize tasks.\nrule: If Raul either employs workers or mechanizes tasks (but not both), then he manages a large plantation.\nconclusion: Raul manages a large plantation.\n\nfact1: Raul manages a large plantation.\nfact2: Raul uses sustainable practices.\nrule: If Raul manages a large plantation, then he either harvests efficiently or uses sustainable practices, but not both.\nconclusion: Raul does not harvest efficiently.\n\nfact1: Raul works independently.\nrule: Raul either works independently or shares knowledge with others, but not both.\nconclusion: Raul does not share knowledge with others.\n\nfact1: Raul is an experienced farmer.\nfact2: Raul does not harvest efficiently.\nrule: If Raul is an experienced farmer, then he either grows high-quality beans or harvests efficiently, but not both.\nconclusion: Raul grows high-quality beans.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that Raul can improve the community. The correct option is: C.",
    "context": "If Elisabeth owns a big plot of land and needs extra help, then he will employ workers. Raul is an experienced farmer. If Raul manages a large plantation, then he either harvests efficiently or uses sustainable practices, but not both. Raul works independently. If Raul dedicates time to his farm, then he either grows high-quality beans or supports local projects. Elisabeth needs extra help. If Asher either employs workers or mechanizes tasks (but not both), then he manages a large plantation. If Raul is a successful farmer, then he either employs many workers or manages large plantations, but not both. If Raul owns a big plot of land and needs extra help, then he will employ workers. If Asher manages a large plantation, then he either harvests efficiently or uses sustainable practices, but not both. Kieran owns a big plot of land. If Raul is an experienced farmer, then he either grows high-quality beans or harvests efficiently, but not both. If Raul either employs workers or mechanizes tasks (but not both), then he manages a large plantation. Raul needs extra help. Raul either works independently or shares knowledge with others, but not both. Raul owns a big plot of land. Raul uses sustainable practices. Raul does not mechanize tasks. Asher uses sustainable practices.",
    "nl2fol": {
      "If Elisabeth owns a big plot of land and needs extra help, then he will employ workers.": "(owns_big_land(Elisabeth) ∧ needs_extra_help(Elisabeth)) → employs_workers(Elisabeth)",
      "Raul is an experienced farmer.": "is_experienced_farmer(Raul)",
      "If Raul manages a large plantation, then he either harvests efficiently or uses sustainable practices, but not both.": "manage_large_plantation(Raul) → (harvest_efficiently(Raul) ⊕ use_sustainable_practices(Raul))",
      "Raul works independently.": "work_independently(Raul)",
      "If Raul dedicates time to his farm, then he either grows high-quality beans or supports local projects.": "dedicate_time_to_farm(Raul) → (grow_high_quality_beans(Raul) ∨ support_local_projects(Raul))",
      "Elisabeth needs extra help.": "needs_extra_help(Elisabeth)",
      "If Asher either employs workers or mechanizes tasks (but not both), then he manages a large plantation.": "(employs_workers(Asher) ⊕ mechanize_tasks(Asher)) → manage_large_plantation(Asher)",
      "If Raul is a successful farmer, then he either employs many workers or manages large plantations, but not both.": "is_successful_farmer(Raul) → (employs_many_workers(Raul) ⊕ manage_large_plantation(Raul))",
      "If Raul owns a big plot of land and needs extra help, then he will employ workers.": "(owns_big_land(Raul) ∧ needs_extra_help(Raul)) → employs_workers(Raul)",
      "If Asher manages a large plantation, then he either harvests efficiently or uses sustainable practices, but not both.": "manage_large_plantation(Asher) → (harvest_efficiently(Asher) ⊕ use_sustainable_practices(Asher))",
      "Kieran owns a big plot of land.": "owns_big_land(Kieran)",
      "If Raul is an experienced farmer, then he either grows high-quality beans or harvests efficiently, but not both.": "is_experienced_farmer(Raul) → (grow_high_quality_beans(Raul) ⊕ harvest_efficiently(Raul))",
      "If Raul either employs workers or mechanizes tasks (but not both), then he manages a large plantation.": "(employs_workers(Raul) ⊕ mechanize_tasks(Raul)) → manage_large_plantation(Raul)",
      "Raul needs extra help.": "needs_extra_help(Raul)",
      "Raul either works independently or shares knowledge with others, but not both.": "work_independently(Raul) ⊕ share_knowledge_with_others(Raul)",
      "Raul owns a big plot of land.": "owns_big_land(Raul)",
      "Raul uses sustainable practices.": "use_sustainable_practices(Raul)",
      "Raul does not mechanize tasks.": "¬mechanize_tasks(Raul)",
      "Asher uses sustainable practices.": "use_sustainable_practices(Asher)"
    },
    "conclusion_fol": "improve_the_community(Raul)"
  },
  {
    "id": 495,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Pancake is not loving.",
    "reasoning": "fact1: Pancake keeps vigilant.\nfact2: Pancake does not safeguard his territory.\nrule: All penguins who either guard their nest or keep vigilant will safeguard their territory.\nconclusion: Pancake guards his nest.\n\nfact1: Pancake dives deep.\nfact2: Pancake hunts efficiently.\nrule: If Pancake dives deep, then he either finds food or hunts efficiently, but not both.\nconclusion: Pancake cannot find food.\n\nfact1: Pancake migrates seasonally.\nrule: Pancake either raises his young or migrates seasonally, but not at the same time.\nconclusion: Pancake does not raise his young.\n\nfact1: Pancake builds a nest.\nfact2: Pancake does not raise his young.\nrule: Any penguin that builds a nest or raises its young can care for its chicks.\nconclusion: Pancake cares for his chicks.\n\nfact1: Pancake cares for his chicks.\nfact2: Pancake cannot find food.\nrule: If Pancake cares for his chicks and defends his family, then he can find food.\nconclusion: Pancake does not defend his family.\n\nfact1: Pancake guards his nest.\nfact2: Pancake does not defend his family.\nrule: All penguins who either guard their nest or are protective are defending their family.\nconclusion: Pancake is protective.\n\nfact1: Pancake has a mate.\nfact2: Pancake is protective.\nrule: If Pancake has a mate, then he is either loyal or protective, but not both.\nconclusion: Pancake is not loyal.\n\nfact1: Pancake is devoted.\nfact2: Pancake is not loyal.\nrule: If Pancake is either loving or devoted (but not both), then he is loyal.\nconclusion: Pancake is not loving.\n\nTherefore, it is false that Pancake is not loving. The correct option is: B.",
    "context": "All penguins who either guard their nest or are protective are defending their family. If Pancake has a mate, then he is either loyal or protective, but not both. If Pancake dives deep, then he either finds food or hunts efficiently, but not both. Any penguin that builds a nest or raises its young can care for its chicks. Pancake keeps vigilant. All penguins who either guard their nest or keep vigilant will safeguard their territory. Pancake hunts efficiently. Pancake either raises his young or migrates seasonally, but not at the same time. Pancake migrates seasonally. Pancake is devoted. Pancake has a mate. Pancake builds a nest. If Pancake cares for his chicks and defends his family, then he can find food. If Pancake is either loving or devoted (but not both), then he is loyal. Pancake dives deep. Pancake does not safeguard his territory.",
    "nl2fol": {
      "All penguins who either guard their nest or are protective are defending their family.": "∀x ((guards_nest(x) ⊕ protective(x)) → defends_family(x))",
      "If Pancake has a mate, then he is either loyal or protective, but not both.": "has_mate(Pancake) → (loyal(Pancake) ⊕ protective(Pancake))",
      "If Pancake dives deep, then he either finds food or hunts efficiently, but not both.": "dives_deep(Pancake) → (finds_food(Pancake) ⊕ hunts_efficiently(Pancake))",
      "Any penguin that builds a nest or raises its young can care for its chicks.": "∀x ((builds_nest(x) ∨ raises_young(x)) → cares_chicks(x))",
      "Pancake keeps vigilant.": "keeps_vigilant(Pancake)",
      "All penguins who either guard their nest or keep vigilant will safeguard their territory.": "∀x ((guards_nest(x) ⊕ keeps_vigilant(x)) → safeguards_territory(x))",
      "Pancake hunts efficiently.": "hunts_efficiently(Pancake)",
      "Pancake either raises his young or migrates seasonally, but not at the same time.": "migrates_seasonally(Pancake) ⊕ raises_young(Pancake)",
      "Pancake migrates seasonally.": "migrates_seasonally(Pancake)",
      "Pancake is devoted.": "devoted(Pancake)",
      "Pancake has a mate.": "has_mate(Pancake)",
      "Pancake builds a nest.": "builds_nest(Pancake)",
      "If Pancake cares for his chicks and defends his family, then he can find food.": "(cares_chicks(Pancake) ∧ defends_family(Pancake)) → finds_food(Pancake)",
      "If Pancake is either loving or devoted (but not both), then he is loyal.": "(loving(Pancake) ⊕ devoted(Pancake)) → loyal(Pancake)",
      "Pancake dives deep.": "dives_deep(Pancake)",
      "Pancake does not safeguard his territory.": "¬safeguards_territory(Pancake)"
    },
    "conclusion_fol": "¬loving(Pancake)"
  },
  {
    "id": 496,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "C",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Cullen is a skilled baker, then he can either own a successful bakery or earn a reputable title, but not both.",
    "reasoning": "fact1: Cullen works in the culinary industry.\nfact2: Cullen does not understand customer tastes.\nrule: If Cullen works in the culinary industry, then he is either a successful chef or understands customer tastes (or both).\nconclusion: Cullen is a successful chef.\n\nfact1: Cullen is a successful chef.\nfact2: Cullen does not focus on presentation.\nrule: If Cullen is a successful chef, then he either values quality ingredients or focuses on presentation, but not both.\nconclusion: Cullen values quality ingredients.\n\nfact1: Cullen has creativity.\nfact2: Cullen cannot make delicious desserts.\nrule: If Cullen enjoys experimenting and has creativity, then he can make delicious desserts.\nconclusion: Cullen does not enjoy experimenting.\n\nfact1: Cullen values quality ingredients.\nfact2: Cullen does not pay attention to details.\nrule: Everyone who values quality ingredients is either passionate about cooking or pays attention to details (or both).\nconclusion: Cullen is passionate about cooking.\n\nfact1: Cullen does not enjoy experimenting.\nrule: Cullen either enjoys experimenting or creates unique recipes.\nconclusion: Cullen can create unique recipes.\n\nfact1: Cullen wins cooking awards.\nfact2: Cullen is not highly acclaimed.\nrule: For all humans, if they either win cooking awards or earn a reputable title, then they are highly acclaimed.\nconclusion: Cullen earns a reputable title.\n\nAccording to the context and the conclusions that have already been drawn, we can deduce that it is uncertain that If Cullen is a skilled baker, then he can either own a successful bakery or earn a reputable title, but not both. The correct option is: C.",
    "context": "Cullen is not highly acclaimed. If Cullen is a successful chef, then he either values quality ingredients or focuses on presentation, but not both. Cullen either enjoys experimenting or creates unique recipes. For all humans, if they either win cooking awards or earn a reputable title, then they are highly acclaimed. Cullen does not focus on presentation. Cullen does not understand customer tastes. Everyone who values quality ingredients is either passionate about cooking or pays attention to details (or both). Cullen wins cooking awards. If Cullen works in the culinary industry, then he is either a successful chef or understands customer tastes (or both). Cullen works in the culinary industry. Cullen cannot make delicious desserts. Cullen has creativity. If Cullen loves food, then he is passionate about cooking and has good taste. If someone either mentors others or authors cookbooks (but not both), then they earn a reputable title. Cullen does not pay attention to details. If Cullen enjoys experimenting and has creativity, then he can make delicious desserts.",
    "nl2fol": {
      "Cullen is not highly acclaimed.": "¬is_highly_acclaimed(Cullen)",
      "If Cullen is a successful chef, then he either values quality ingredients or focuses on presentation, but not both.": "successful_chef(Cullen) → (values_quality_ingredients(Cullen) ⊕ focus_on_presentation(Cullen))",
      "Cullen either enjoys experimenting or creates unique recipes.": "enjoys_experimenting(Cullen) ∨ create_unique_recipes(Cullen)",
      "For all humans, if they either win cooking awards or earn a reputable title, then they are highly acclaimed.": "∀x ((win_cooking_awards(x) ⊕ earn_a_reputable_title(x)) → is_highly_acclaimed(x))",
      "Cullen does not focus on presentation.": "¬focus_on_presentation(Cullen)",
      "Cullen does not understand customer tastes.": "¬understand_customer_tastes(Cullen)",
      "Everyone who values quality ingredients is either passionate about cooking or pays attention to details (or both).": "∀x (values_quality_ingredients(x) → (pay_attention_to_details(x) ∨ passionate_about_cooking(x)))",
      "Cullen wins cooking awards.": "win_cooking_awards(Cullen)",
      "If Cullen works in the culinary industry, then he is either a successful chef or understands customer tastes (or both).": "work_in_culinary_industry(Cullen) → (successful_chef(Cullen) ∨ understand_customer_tastes(Cullen))",
      "Cullen works in the culinary industry.": "work_in_culinary_industry(Cullen)",
      "Cullen cannot make delicious desserts.": "¬make_delicious_desserts(Cullen)",
      "Cullen has creativity.": "has_creativity(Cullen)",
      "If Cullen loves food, then he is passionate about cooking and has good taste.": "love_food(Cullen) → (passionate_about_cooking(Cullen) ∧ have_good_taste(Cullen))",
      "If someone either mentors others or authors cookbooks (but not both), then they earn a reputable title.": "∀x ((mentor_others(x) ⊕ author_cookbooks(x)) → earn_a_reputable_title(x))",
      "Cullen does not pay attention to details.": "¬pay_attention_to_details(Cullen)",
      "If Cullen enjoys experimenting and has creativity, then he can make delicious desserts.": "(enjoys_experimenting(Cullen) ∧ has_creativity(Cullen)) → make_delicious_desserts(Cullen)"
    },
    "conclusion_fol": "skilled_baker(Cullen) → (own_a_successful_bakery(Cullen) ⊕ earn_a_reputable_title(Cullen))"
  },
  {
    "id": 497,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lexie gets inspiration from nature.",
    "reasoning": "fact1: Lexie practices gratitude.\nrule: If someone practices gratitude, then they will stay positive.\nconclusion: Lexie stays positive.\n\nfact1: Lexie learns from failure.\nfact2: Lexie stays positive.\nrule: If Lexie faces challenges, then she either learns from failure or stays positive (but not both).\nconclusion: Lexie does not face challenges.\n\nfact1: Lexie does not have talent.\nfact2: Lexie does not become iconic.\nrule: If Lexie has talent or gains recognition, then she will become iconic.\nconclusion: Lexie does not gain recognition.\n\nfact1: Lexie does not face challenges.\nfact2: Lexie is not motivated.\nrule: Everyone who either achieves success or faces challenges is motivated.\nconclusion: Lexie does not achieve success.\n\nfact1: Lexie develops skills.\nfact2: Lexie does not achieve success.\nrule: For anyone who is creative and develops skills, they can achieve success.\nconclusion: Lexie is not creative.\n\nfact1: Lexie does not gain recognition.\nrule: If Lexie produces unique art or expresses herself freely, then she will gain recognition.\nconclusion: Lexie does not produce unique art.\n\nfact1: Lexie is not creative.\nfact2: Lexie does not produce unique art.\nrule: For all humans, if someone gets inspiration from nature, then they are either creative or produce unique art (or both).\nconclusion: Lexie gets inspiration from nature.\n\nTherefore, it is false that Lexie gets inspiration from nature. The correct option is: B.",
    "context": "Lexie develops skills. For anyone who is creative and develops skills, they can achieve success. If someone practices gratitude, then they will stay positive. For all humans, if someone gets inspiration from nature, then they are either creative or produce unique art (or both). All people with imagination are creative and appreciate beauty. Lexie tells her story or expresses herself freely. Lexie is not motivated. Davian practices gratitude. Lexie builds a portfolio or gains recognition. Lexie practices gratitude. Anyone who has good friends or focuses on their strengths can stay positive. If Lexie has talent or gains recognition, then she will become iconic. Lexie learns from failure. Everyone who either achieves success or faces challenges is motivated. Lexie does not have talent. Lexie does not become iconic. If Lexie produces unique art or expresses herself freely, then she will gain recognition. Giovanni does not pursue her passion. If Lexie faces challenges, then she either learns from failure or stays positive (but not both). If Giovanni faces challenges, then she either learns from failure or stays positive (but not both).",
    "nl2fol": {
      "Lexie develops skills.": "develops_skills(Lexie)",
      "For anyone who is creative and develops skills, they can achieve success.": "∀x ((be_creative(x) ∧ develops_skills(x)) → achieves_success(x))",
      "If someone practices gratitude, then they will stay positive.": "∀x (practices_gratitude(x) → stays_positive(x))",
      "For all humans, if someone gets inspiration from nature, then they are either creative or produce unique art (or both).": "∀x (get_inspiration_from_nature(x) → (be_creative(x) ∨ produce_unique_art(x)))",
      "All people with imagination are creative and appreciate beauty.": "∀x (have_imagination(x) → (be_creative(x) ∧ appreciate_beauty(x)))",
      "Lexie tells her story or expresses herself freely.": "tell_her_story(Lexie) ∨ express_herself_freely(Lexie)",
      "Lexie is not motivated.": "¬is_motivated(Lexie)",
      "Davian practices gratitude.": "practices_gratitude(Davian)",
      "Lexie builds a portfolio or gains recognition.": "builds_portfolio(Lexie) ∨ gain_recognition(Lexie)",
      "Lexie practices gratitude.": "practices_gratitude(Lexie)",
      "Anyone who has good friends or focuses on their strengths can stay positive.": "∀x ((has_good_friends(x) ∨ focuses_on_strengths(x)) → stays_positive(x))",
      "If Lexie has talent or gains recognition, then she will become iconic.": "(have_talent(Lexie) ∨ gain_recognition(Lexie)) → become_iconic(Lexie)",
      "Lexie learns from failure.": "learns_from_failure(Lexie)",
      "Everyone who either achieves success or faces challenges is motivated.": "∀x ((achieves_success(x) ⊕ faces_challenges(x)) → is_motivated(x))",
      "Lexie does not have talent.": "¬have_talent(Lexie)",
      "Lexie does not become iconic.": "¬become_iconic(Lexie)",
      "If Lexie produces unique art or expresses herself freely, then she will gain recognition.": "(produce_unique_art(Lexie) ∨ express_herself_freely(Lexie)) → gain_recognition(Lexie)",
      "Giovanni does not pursue her passion.": "¬pursue_passion(Giovanni)",
      "If Lexie faces challenges, then she either learns from failure or stays positive (but not both).": "faces_challenges(Lexie) → (learns_from_failure(Lexie) ⊕ stays_positive(Lexie))",
      "If Giovanni faces challenges, then she either learns from failure or stays positive (but not both).": "faces_challenges(Giovanni) → (learns_from_failure(Giovanni) ⊕ stays_positive(Giovanni))"
    },
    "conclusion_fol": "get_inspiration_from_nature(Lexie)"
  },
  {
    "id": 498,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Saul does not lose motivation.",
    "reasoning": "fact1: Saul has a strong will.\nfact2: Saul does not achieve his goals.\nrule: If someone requires medical attention and has a strong will, then they can achieve goals.\nconclusion: Saul does not require medical attention.\n\nfact1: Saul does not set realistic goals.\nrule: Saul either builds self-esteem or sets realistic goals, but not both.\nconclusion: Saul builds self-esteem.\n\nfact1: Saul uses assistive devices.\nfact2: Saul does not require medical attention.\nrule: If Saul either uses assistive devices or requires medical attention (but not both), then he is disabled.\nconclusion: Saul is disabled.\n\nfact1: Saul builds self-esteem.\nfact2: Saul does not overcome adversity.\nrule: If Saul either regains confidence or builds self-esteem (but not both), then he overcomes adversity.\nconclusion: Saul regains confidence.\n\nfact1: Saul is disabled.\nfact2: Saul is not receiving support.\nrule: If Saul is disabled, then he is either receiving support or suffering injuries (but not both).\nconclusion: Saul suffers injuries.\n\nfact1: Saul regains confidence.\nfact2: Saul rediscovers his purpose.\nrule: If Saul finds new strength, then he either regains confidence or rediscovers purpose, but not both.\nconclusion: Saul does not find new strength.\n\nfact1: Saul suffers injuries.\nrule: If someone suffers injuries, then they face obstacles and develop resilience.\nconclusion: Saul faces obstacles.\n\nfact1: Saul faces obstacles.\nfact2: Saul does not find new strength.\nrule: If Saul faces obstacles, then he either loses motivation or finds new strength, but not both.\nconclusion: Saul does not lose motivation.\n\nTherefore, it is false that Saul does not lose motivation. The correct option is: B.",
    "context": "Saul does not achieve his goals. Saul is not receiving support. Saul does not set realistic goals. If Saul either regains confidence or builds self-esteem (but not both), then he overcomes adversity. If Saul meets challenges, then he either becomes discouraged or finds new strength, but not both. If Saul either uses assistive devices or requires medical attention (but not both), then he is disabled. If someone requires medical attention and has a strong will, then they can achieve goals. Anyone who achieves success will build their self-esteem. If Saul faces obstacles, then he either loses motivation or finds new strength, but not both. Saul uses assistive devices. Saul does not overcome adversity. If someone suffers injuries, then they face obstacles and develop resilience. Saul has a strong will. Saul either builds self-esteem or sets realistic goals, but not both. If Saul finds new strength, then he either regains confidence or rediscovers purpose, but not both. Saul rediscovers his purpose. If someone recognizes their ability and makes progress, then they can regain confidence. If Saul is disabled, then he is either receiving support or suffering injuries (but not both).",
    "nl2fol": {
      "Saul does not achieve his goals.": "¬achieves_goals(Saul)",
      "Saul is not receiving support.": "¬receive_support(Saul)",
      "Saul does not set realistic goals.": "¬set_realistic_goals(Saul)",
      "If Saul either regains confidence or builds self-esteem (but not both), then he overcomes adversity.": "(regain_confidence(Saul) ⊕ build_self_esteem(Saul)) → overcome_adversity(Saul)",
      "If Saul meets challenges, then he either becomes discouraged or finds new strength, but not both.": "meets_challenges(Saul) → (become_discouraged(Saul) ⊕ find_new_strength(Saul))",
      "If Saul either uses assistive devices or requires medical attention (but not both), then he is disabled.": "(use_assistive_devices(Saul) ⊕ require_medical_attention(Saul)) → is_disabled(Saul)",
      "If someone requires medical attention and has a strong will, then they can achieve goals.": "∀x ((require_medical_attention(x) ∧ has_strong_will(x)) → achieves_goals(x))",
      "Anyone who achieves success will build their self-esteem.": "∀x (achieve_success(x) → build_self_esteem(x))",
      "If Saul faces obstacles, then he either loses motivation or finds new strength, but not both.": "face_obstacles(Saul) → (lose_motivation(Saul) ⊕ find_new_strength(Saul))",
      "Saul uses assistive devices.": "use_assistive_devices(Saul)",
      "Saul does not overcome adversity.": "¬overcome_adversity(Saul)",
      "If someone suffers injuries, then they face obstacles and develop resilience.": "∀x (suffer_injuries(x) → (face_obstacles(x) ∧ develop_resilience(x)))",
      "Saul has a strong will.": "has_strong_will(Saul)",
      "Saul either builds self-esteem or sets realistic goals, but not both.": "build_self_esteem(Saul) ⊕ set_realistic_goals(Saul)",
      "If Saul finds new strength, then he either regains confidence or rediscovers purpose, but not both.": "find_new_strength(Saul) → (regain_confidence(Saul) ⊕ rediscover_purpose(Saul))",
      "Saul rediscovers his purpose.": "rediscover_purpose(Saul)",
      "If someone recognizes their ability and makes progress, then they can regain confidence.": "∀x ((recognizes_ability(x) ∧ makes_progress(x)) → regain_confidence(x))",
      "If Saul is disabled, then he is either receiving support or suffering injuries (but not both).": "is_disabled(Saul) → (receive_support(Saul) ⊕ suffer_injuries(Saul))"
    },
    "conclusion_fol": "¬lose_motivation(Saul)"
  },
  {
    "id": 499,
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "answer": "B",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ashlynn does not become independent.",
    "reasoning": "fact1: Ashlynn does not achieve success.\nrule: If Ashlynn develops resilience, then she achieves success.\nconclusion: Ashlynn does not develop resilience.\n\nfact1: Ashlynn does not struggle with decisions.\nrule: Ashlynn either lacks motivation or struggles with decisions.\nconclusion: Ashlynn lacks motivation.\n\nfact1: Ashlynn avoids risks.\nrule: Ashlynn either learns from mistakes or avoids risks, but not both.\nconclusion: Ashlynn does not learn from mistakes.\n\nfact1: Ashlynn experiences failure.\nfact2: Ashlynn does not learn from mistakes.\nrule: If Ashlynn experiences failure, then she is either someone who learns from mistakes or faces life challenges, but not both.\nconclusion: Ashlynn faces life challenges.\n\nfact1: Ashlynn faces life challenges.\nfact2: Ashlynn does not develop resilience.\nrule: If Ashlynn faces life challenges, then she either develops resilience or has a supportive family (or both).\nconclusion: Ashlynn has a supportive family.\n\nfact1: Ashlynn lacks motivation.\nfact2: Ashlynn has low self-esteem.\nrule: If Ashlynn becomes dependent, then she either lacks motivation or has low self-esteem (but not both).\nconclusion: Ashlynn does not become dependent.\n\nfact1: Ashlynn has a supportive family.\nfact2: Ashlynn does not become dependent.\nrule: If Ashlynn has a supportive family, then she either becomes dependent or becomes independent (or both, as evidenced by her transformation).\nconclusion: Ashlynn does not become independent.\n\nTherefore, it is false that Ashlynn does not become independent. The correct option is: B.",
    "context": "If Ashlynn develops resilience, then she achieves success. Ashlynn does not achieve success. If Ashlynn experiences failure, then she is either someone who learns from mistakes or faces life challenges, but not both. If Ashlynn faces life challenges, then she either develops resilience or has a supportive family (or both). Buster either lacks motivation or struggles with decisions. Ashlynn either lacks motivation or struggles with decisions. Ashlynn does not struggle with decisions. If Ashlynn has a supportive family, then she either becomes dependent or becomes independent (or both, as evidenced by her transformation). If Ashlynn values her loved ones, then she feels secure and has a supportive family. If Ashlynn takes risks, then she either faces life challenges or builds confidence (but not both). Haven experiences failure. Ashlynn either learns from mistakes or avoids risks, but not both. Ashlynn avoids risks. Ashlynn experiences failure. If someone takes calculated risks, then they value feedback and learn from mistakes. Ashlynn has low self-esteem. If Ashlynn becomes dependent, then she either lacks motivation or has low self-esteem (but not both).",
    "nl2fol": {
      "If Ashlynn develops resilience, then she achieves success.": "develops_resilience(Ashlynn) → achieves_success(Ashlynn)",
      "Ashlynn does not achieve success.": "¬achieves_success(Ashlynn)",
      "If Ashlynn experiences failure, then she is either someone who learns from mistakes or faces life challenges, but not both.": "experiences_failure(Ashlynn) → (learns_from_mistakes(Ashlynn) ⊕ faces_life_challenges(Ashlynn))",
      "If Ashlynn faces life challenges, then she either develops resilience or has a supportive family (or both).": "faces_life_challenges(Ashlynn) → (develops_resilience(Ashlynn) ∨ has_supportive_family(Ashlynn))",
      "Buster either lacks motivation or struggles with decisions.": "lacks_motivation(Buster) ∨ struggles_with_decisions(Buster)",
      "Ashlynn either lacks motivation or struggles with decisions.": "lacks_motivation(Ashlynn) ∨ struggles_with_decisions(Ashlynn)",
      "Ashlynn does not struggle with decisions.": "¬struggles_with_decisions(Ashlynn)",
      "If Ashlynn has a supportive family, then she either becomes dependent or becomes independent (or both, as evidenced by her transformation).": "has_supportive_family(Ashlynn) → (becomes_dependent(Ashlynn) ∨ becomes_independent(Ashlynn))",
      "If Ashlynn values her loved ones, then she feels secure and has a supportive family.": "values_loved_ones(Ashlynn) → (feels_secure(Ashlynn) ∧ has_supportive_family(Ashlynn))",
      "If Ashlynn takes risks, then she either faces life challenges or builds confidence (but not both).": "takes_risks(Ashlynn) → (faces_life_challenges(Ashlynn) ⊕ builds_confidence(Ashlynn))",
      "Haven experiences failure.": "experiences_failure(Haven)",
      "Ashlynn either learns from mistakes or avoids risks, but not both.": "avoids_risks(Ashlynn) ⊕ learns_from_mistakes(Ashlynn)",
      "Ashlynn avoids risks.": "avoids_risks(Ashlynn)",
      "Ashlynn experiences failure.": "experiences_failure(Ashlynn)",
      "If someone takes calculated risks, then they value feedback and learn from mistakes.": "∀x (takes_calculated_risks(x) → (values_feedback(x) ∧ learns_from_mistakes(x)))",
      "Ashlynn has low self-esteem.": "has_low_self_esteem(Ashlynn)",
      "If Ashlynn becomes dependent, then she either lacks motivation or has low self-esteem (but not both).": "becomes_dependent(Ashlynn) → (lacks_motivation(Ashlynn) ⊕ has_low_self_esteem(Ashlynn))"
    },
    "conclusion_fol": "¬becomes_independent(Ashlynn)"
  }
]